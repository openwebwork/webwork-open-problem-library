# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# Modeling with a linear equation without solving it.
#
# Last updated: Jordan 7/13/18
# ENDDESCRIPTION
 
## DBCCSS('6.EE.2.a','7.EE.4','A-CED.1','A-REI.3')
## DBsubject(Algebra)
## DBchapter(Basic Algebra)
## DBsection(Algebraic Expressions)
## Institution(PCC)
## Author(Alex Jordan, Carl Yao, Chris Hughes)
## MO(1)
## KEYWORDS('solve','linear','inequality','application','subtract','divide')
 
##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserImplicitEquation.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("ImplicitEquation");
Context()->operators->add(
      '>' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' > ',          #  output string for it
         perl => '>',              #  perl string
      },
      '<' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' < ',          #  output string for it
         perl => '<',              #  perl string
      },
      '>=' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' >= ',          #  output string for it
         TeX => ' \geq ',
         perl => '>=',              #  perl string
      },
      '<=' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' <= ',          #  output string for it
         TeX => ' \leq ',
         perl => '<=',              #  perl string
      },
);
Context()->variables->are(h=>"Real");
Context()->flags->set(reduceConstants=>0);
Context()->flags->set(showExtraParens=>0);

$diameter = random(5,15,1);
$radius = $diameter/2;
$radius2 = $radius**2;
$height = random(1,3,0.1);
$volume = int(pi*$radius2*$height);


$ansString = "$volume<=$radius2*pi*h";
Context()->variables->set(h=>{limits=>[$height-10,$height+10]});
$ans = ImplicitEquation("$ansString");
$evaluator = $ans->cmp(
     checker => sub {
       my ($correct,$student,$ansHash) = @_;
       # check that the corresponding equality is correct
       my $OK = not ImplicitEquation::compare($correct,$student);
       return 0 unless $OK;
       # what sign is used
       my $sign = $student->{tree}->{bop};
       Value::Error('Write an inequality, not an equation.') if ($sign eq '=');
       Value::Error('Your inequality is not using the correct sign.') if ($sign eq '<' or $sign eq '>');
       # distinguish between good/bad uses of >=/<=
       my $left = Formula($student->{tree}->{lop})->eval(h=>0);
       my $right = Formula($student->{tree}->{rop})->eval(h=>0);
       $OK = ($sign eq '>=') ? ($left >= $right) : ($left <= $right);
       Value::Error('Your inequality is not using the correct sign.') unless ($OK);
       return $OK;
     }
   );


##############################################

TEXT(beginproblem());

BEGIN_PGML

An engineer is designing a cylindrical springform pan (the kind of pan a cheesecake is baked in). The pan needs to be able to hold a volume at least [`[$volume]`] cubic inches and have a diameter of [`[$diameter]`] inches. Write an _inequality_ modeling possible height of the pan. There is no need to solve it.

[@KeyboardInstructions('Use [|m|]* for the variable. If you need to enter the inequality signs [`\leq`] or [`\geq`], type [|<=|]* or [|>=|]*. Use *pi* to represent [`\pi`].?)@]**

    [_________________________]{$evaluator}

END_PGML


##############################################

BEGIN_PGML_SOLUTION

Assume the pan's height is [`h`] inches. A cylinder's volume formula has [`r`], representing radius. We first need to calulate the radius from the given diameter:

    [`` r = \frac{d}{2} = \frac{[$diameter]}{2} = [$radius] ``]

Now we can substitute given numbers into a cylinder's volume formula, we have:

    [``
\begin{aligned}
   V &= \pi r^2h \\
   [$volume] &= \pi([$radius])^2h \\
   [$volume] &= [$radius2]\pi h
\end{aligned}
    ``]

Since the volume could be greater than [`[$volume]`], we have the inequality:

    [`` [$volume] \le [$radius2]\pi h ``]

END_PGML_SOLUTION

ENDDOCUMENT();
