# WeBWorK problem written by Alex Jordan 
# Portland Community College
# ENDDESCRIPTION




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",  
  "PGchoicemacros.pl",
  "parserPopUp.pl",
  "contextFraction.pl",
  "PGML.pl",
);


##############################################
TEXT(beginproblem());

Context("Numeric");
Context()->reductions->set('(-x)-y'=>0,'(-x)+y'=>0);

$yes = "is";
$no = "is not";


$a[0] = random(1,9,1);
$b[0] = random(1,9,1);
$var[0] = "x";
$x[0] = random(0,9,1);
$left1[0] = Formula("x")->reduce;
$right1[0] = Formula("$a[0]")->reduce;
$left2[0] = Formula("x")->reduce;
$right2[0] = Formula("$b[0]")->reduce;
$comp1[0] = "$GTS";
$comp2[0] = "$LTE";
$comb[0] = "and";
if (($left1[0]->eval(x=>$x[0]) > $right1[0]->eval(x=>$x[0]))
&& ($left2[0]->eval(x=>$x[0]) <= $right2[0]->eval(x=>$x[0])))
{$ans[0] = $yes;}
else {$ans[0] = $no;};

$a[1] = random(1,9,1);
$b[1] = random(1,9,1);
$var[1] = "x";
$x[1] = random(0,9,1);
$left1[1] = Formula("x")->reduce;
$right1[1] = Formula("$a[1]")->reduce;
$left2[1] = Formula("x")->reduce;
$right2[1] = Formula("$b[1]")->reduce;
$comp1[1] = "$LTS";
$comp2[1] = "$GTE";
$comb[1] = "or";
if (($left1[1]->eval(x=>$x[1]) < $right1[1]->eval(x=>$x[1]))
|| ($left2[1]->eval(x=>$x[1]) >= $right2[1]->eval(x=>$x[1])))
{$ans[1] = $yes;}
else {$ans[1] = $no;};



$a[2] = random(-9,-1,1);
$b[2] = random(1,9,1);
$var[2] = "x";
$x[2] = random(-9,9,1);
$left1[2] = Formula("x")->reduce;
$right1[2] = Formula("$a[2]")->reduce;
$left2[2] = Formula("x")->reduce;
$right2[2] = Formula("$b[2]")->reduce;
$comp1[2] = "$GTE";
$comp2[2] = "$LTE";
$comb[2] = "and";
if (($left1[2]->eval(x=>$x[2]) >= $right1[2]->eval(x=>$x[2]))
&& ($left2[2]->eval(x=>$x[2]) <= $right2[2]->eval(x=>$x[2])))
{$ans[2] = $yes;}
else {$ans[2] = $no;};


$a[3] = random(-4,-1,1);
$b[3] = random(1,4,1);
$var[3] = "x";
$x[3] = random(-9,9,1);
$left1[3] = Formula("$a[3]")->reduce;
$right1[3] = Formula("x")->reduce;
$left2[3] = Formula("x")->reduce;
$right2[3] = Formula("$b[3]")->reduce;
$comp1[3] = "$LTE";
$comp2[3] = "$LTE";
$comb[3] = "and";
if (($left1[3]->eval(x=>$x[3]) <= $right1[3]->eval(x=>$x[3]))
and ($left2[3]->eval(x=>$x[3]) <= $right2[3]->eval(x=>$x[3])))
{$ans[3] = $yes;}
else {$ans[3] = $no;};

Context()->texStrings;

for my $i (0..2) {
$statement[$i] = general_math_ev3("$left1[$i] $comp1[$i] $right1[$i]".'\quad\text{'."$comb[$i]".'}\quad '."$left2[$i] $comp2[$i] $right2[$i] \qquad $var[$i] = $x[$i]");
$popup[$i] = PopUp(['?',$yes,$no],"$ans[$i]");
}

$statement[3] = general_math_ev3("$left1[3] $comp1[3] $right1[3] $comp2[3] $right2[3] \qquad $var[3] = $x[3]");
$popup[3] = PopUp(['?',$yes,$no],"$ans[3]");


##############################################


BEGIN_PGML

Decide whether the given value for the variable is a solution.

a.  [$statement[0]]*  
The given value [__]{$popup[0]} a solution.

a.  [$statement[1]]*  
The given value [__]{$popup[1]} a solution.

a.  [$statement[2]]*  
The given value [__]{$popup[2]} a solution.

a.  [$statement[3]]*  
The given value [__]{$popup[3]} a solution.




END_PGML



##############################################





ENDDOCUMENT();
