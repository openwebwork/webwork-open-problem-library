# WeBWorK problem written by Alex Jordan, 2011
# Portland Community College
#
# Evaluate a function. Function is linear.
#
# Last updated: Jordan 12/22/13;
# ENDDESCRIPTION
 
## DBCCSS('')
## Institution(PCC)
## Author(Alex Jordan)
## MO(1)



##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PCCmacros.pl",
  "PCCgraphMacros.pl",
  "PGML.pl",
  "PGcourse.pl",
  
);



##############################################
TEXT(beginproblem());

$fname = RandomVariableName(type=>function);

Context("Numeric");
$a = random(-1,1,2);
$h = non_zero_random(-4,4,1);
$k = -random(0,2,1)*$a;


$f = Formula("$a (x-$h)^2+$k");

do{
$x1 = $h-random(0,3,1);
$x2 = $h+random(1,3,1);

$y1 = $f->eval(x=>$x1);
$y2 = $f->eval(x=>$x2);
} until ($y1 != $y2);

$xmin = -10;
$xmax = 10;
$ymin = -10;
$ymax = 10;


$gr = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xmax-$xmin,$ymax-$ymin],
size=>[240,240]
);

  $gr->lb('reset');
  for my $j ($xmin+1..$xmax-1) {
    if (abs($j)<10**(-10) or $j%2 == 1) {next;}
    $gr->lb( new Label($j,0, $j,'black','center','top','large'));
  }

  for my $j ($ymin+1..$ymax-1) {
    if (abs($j)<10**(-10) or $j%2 == 1) {next;}
    $gr->lb( new Label(0, $j, $j,'black','right','middle','large'));
  }

  $gr->lb(new Label($xmax,0,'x','black','right','bottom','large'));
  $gr->lb(new Label(0,$ymax,'y','black','left','top','large'));


@xvalues = ($xmin,$xmax);
if ($a > 0) {
  push(@xvalues,sqrt(($ymax-$k)/$a)+$h);
  push(@xvalues,-sqrt(($ymax-$k)/$a)+$h);
}
else {
  push(@xvalues,sqrt(($ymin-$k)/$a)+$h);
  push(@xvalues,-sqrt(($ymin-$k)/$a)+$h);
}
@xvalues = num_sort(@xvalues);
$start = $xvalues[1];
$stop = $xvalues[2];
$pixel = ($xmax-$xmin)/240;

add_functions($gr, "$f for x in <$start,$stop>" . 
  " using color:blue and weight:1");

$gr->moveTo($start+$pixel,$a*($start+$pixel-$h)**2+$k);
$gr->arrowTo($start,$a*($start-$h)**2+$k,'blue',1);
$gr->moveTo($stop-$pixel,$a*($stop-$pixel-$h)**2+$k);
$gr->arrowTo($stop,$a*($stop-$h)**2+$k,'blue',1);

$direction = ($a == 1) ? "upward" : "downward";
$yint = $f->eval(x=>0);

$ALT = "a graph of a parabola opening $direction with vertex at ($h,$k) and passing through (0,$yint)";


##############################################

BEGIN_PGML
Use the graph of [`[$fname]`] below to evaluate the given expressions. (Estimates are OK.)

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($gr), width=>240, height=>240, tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT' title = '$ALT'")@]*<<


a. [`[$fname]([$x1])={}`][_____]{$y1->cmp(tolType=>absolute, tolerance=>0.1)}

a. [`[$fname]([$x2])={}`][_____]{$y2->cmp(tolType=>absolute, tolerance=>0.1)}


END_PGML


##############################################




ENDDOCUMENT();
