## MO(1)
# WeBWorK problem written by Alex Jordan 
# Portland Community College
# Portland Community College
#
# Template:
# Simplify the expression. For this problem you may assume that all variables are positive. 
#
#       sqrt(x)n-th-root(x)
#
#
# Last updated: Spoddeck 11/12/15
# ENDDESCRIPTION


##############################################


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "contextLimitedPowers.pl",
  "contextFraction.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "bizarroArithmetic.pl",
  "PGcourse.pl",
);


##############################################


TEXT(beginproblem());

$n = random(3,10,1);
Context("Fraction");
$m = Fraction("$n+2","$n*2");


Context("Numeric");
Context()->operators->set(
'/' => {class => 'bizarro::BOP::divide', isCommand => 1},
' /' => {class => 'bizarro::BOP::divide', isCommand => 1},
'/ ' => {class => 'bizarro::BOP::divide', isCommand => 1},
'//' => {class => 'bizarro::BOP::divide', isCommand => 1},
);

$var = list_random('x','y','z','t','r','m','n','a','b','c');
Context()->variables->are($var=>'Real');
Context()->variables->set($var=>{limits=>[1,4]});
Context()->flags->set(reduceConstants=>0);


Context()->operators->undefine('*');
Context()->operators->undefine('+');
Context()->functions->undefine('sqrt','abs');
#LimitedPowers::OnlyIntegers();


$ans = Formula("$var^($m)");
$evaluator = $ans->cmp(
     checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      return 0 unless ($correct == $student);
      Context()->flags->set(bizarroDiv=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      Value->Error("Your answer is not in the expected form") unless (($correct == $student) or ($student == $correct));
      Context()->flags->set(bizarroDiv=>0);
      return 1;
  }
);


##############################################


BEGIN_PGML

Simplify the expression, answering with rational exponents and not radicals. [@KeyboardInstructions('To enter [`x^{m/n}`], type [|x^(m/n)|]*.')@]**

[``\sqrt{[$var]}\sqrt[[$n]]{[$var]}=``]    [_________________]{$evaluator}

END_PGML

##############################################


BEGIN_PGML_SOLUTION

We rewrite the expression using rational exponents [` \sqrt[n]{x^m} = x^\frac{m}{n} `]. Then we use exponent properties and add the fractions.

    [``
\begin{aligned}
   \sqrt{[$var]}\sqrt[[$n]]{[$var]}
           &= [$var]^{\frac{1}{2}}[$var]^{\frac{1}{[$n]}} \\
           &= [$var]^{\frac{1}{2}+\frac{1}{[$n]}} \\
           &= [$var]^{\frac{[$n]}{[$n*2]}+\frac{2}{[$n*2]}} \\
           &= [$var]^{\frac{[$n+2]}{[$n*2]}} \\
\end{aligned}
    ``]

If the fraction in the exponent is not fully simplified after the last step, make sure to reduce it to its lowest terms.

END_PGML_SOLUTION


##############################################


ENDDOCUMENT();
