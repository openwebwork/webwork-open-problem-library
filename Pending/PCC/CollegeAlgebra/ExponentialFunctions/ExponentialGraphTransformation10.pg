# WeBWorK problem written by Carl Yao
# Portland Community College
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Exponential)
## Institution(PCC)
## Author(Carl Yao)
## MO(1)



##############################################


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGgraphmacros.pl",
  "PCCgraphMacros.pl",
  "parserPopUp.pl",
  "niceTables.pl",
  "PGcourse.pl",
);

 $refreshCachedImages = 1;


##############################################

TEXT(beginproblem());
Context("Numeric");
Context()->reduction->set('(-x)-y'=>0);    #So that the displayed inequalities
Context()->reduction->set('(-x)+y'=>0);    #will look as intended

$a = random(1.5,3.5,0.5);
$vshift = non_zero_random(-2,2,1);
$vshiftN = -$vshift;
$hshift = non_zero_random(-2,2,1);

$fp = Formula("($a)**x")->reduce;
$func = Formula("($a)**(x+$hshift)+$vshift")->reduce;
$f[0] = $func;
$f[1] = Formula("($a)**(x-$hshift)-$vshift")->reduce;
$f[2] = Formula("(1/$a)**(x+$hshift)+$vshift")->reduce;
$f[3] = Formula("(1/$a)**(x-$hshift)-$vshift")->reduce;
$f[4] = $fp;

@fx = ( );
@fy = ( );
$fx[0][0] = -$hshift;
$fx[0][1] = 1-$hshift;
$fx[1][0] = $hshift;
$fx[1][1] = 1+$hshift;
$fx[2][0] = -$hshift;
$fx[2][1] = -1-$hshift;
$fx[3][0] = $hshift;
$fx[3][1] = -1+$hshift;

$fx[0][2] = 0;
$fx[0][3] = 1;
$fy[0][2] = $fp->eval(x=>$fx[0][2]);
$fy[0][3] = $fp->eval(x=>$fx[0][3]);

for (my $i=0; $i<=3; $i++) {
   for (my $j=0; $j<=1; $j++) {
      $fy[$i][$j] = $f[$i]->eval(x=>$fx[$i][$j]);
   }
}

@alt = ();
$alt[0] = "This is a graph of a smooth curve. The function approaches y=$vshift when x-value approaches negative infinity, and approaches positive infinity when x-value approaches positive infinity. The graph passes the points ($fx[0][0],$fy[0][0]) and ($fx[0][1],$fy[0][1]). There is a horizontal asymptote at y=$vshift.";
$alt[1] = "This is a graph of a smooth curve. The function approaches y=$vshiftN when x-value approaches negative infinity, and approaches positive infinity when x-value approaches positive infinity. The graph passes the points ($fx[1][0],$fy[1][0]) and ($fx[1][1],$fy[1][1]). There is a horizontal asymptote at y=$vshiftN.";
$alt[2] = "This is a graph of a smooth curve. The function approaches y=$vshift when x-value approaches negative infinity, and approaches positive infinity when x-value approaches positive infinity. The graph passes the points ($fx[2][0],$fy[2][0]) and ($fx[2][1],$fy[2][1]). There is a horizontal asymptote at y=$vshift.";
$alt[3] = "This is a graph of a smooth curve. The function approaches y=$vshiftN when x-value approaches negative infinity, and approaches positive infinity when x-value approaches positive infinity. The graph passes the points ($fx[3][0],$fy[3][0]) and ($fx[3][1],$fy[3][1]). There is a horizontal asymptote at y=$vshiftN.";
$alt[4] = "This is a graph of a smooth curve. The function approaches y=0 when x-value approaches negative infinity, and approaches positive infinity when x-value approaches positive infinity. The graph passes the points ($fx[0][2],$fy[0][2]) and ($fx[0][3],$fy[0][3]). There is a horizontal asymptote at y=0.";


$bound = 5;
$xmin = -$bound;         #The viewing window
$xmax = $bound;
$ymin = -$bound;
$ymax = $bound;

@graphs = ();             


#  Start making the graphs

for ( my $i=0; $i<5; $i++ ) {


#  Background

   $graphs[$i] = init_graph($xmin,$ymin,$xmax,$ymax,
          grid=>[$xmax-$xmin,$ymax-$ymin],axes=>[0,0],pixels=>[300,300]);


#  Labels

   $graphs[$i]->lb('reset');
   foreach my $j (1..$bound-1) {
      $graphs[$i]->lb( new Label(-$bound+0.3,  $j, $j,'black','center','middle'));
      $graphs[$i]->lb( new Label(-$bound+0.3, -$j,-$j,'black','center','middle'));
      $graphs[$i]->lb( new Label(  $j,-$bound+0.3, $j,'black','center','middle'));
      $graphs[$i]->lb( new Label( -$j,-$bound+0.3,-$j,'black','center','middle'));
   }
   $graphs[$i]->lb( new Label($bound-0.3,0.4,'x','black','center','middle'));
   $graphs[$i]->lb( new Label(0.4,$bound-0.3,'y','black','center','middle'));


#  Define new graph colors

   $graphs[$i]->new_color("lightblue", 214,230,244); # RGB
   $graphs[$i]->new_color("darkblue",  100,100,255); 
   $graphs[$i]->new_color("lightgreen",156,215,151); # other color options
   $graphs[$i]->new_color("darkgreen",   0, 86, 34); # for future author use 
   $graphs[$i]->new_color("lightred",  245,234,229); # light red-purple
   $graphs[$i]->new_color("darkred",   159, 64, 16); # red-brown

   $graphs[$i]->new_color("white",   255, 255, 255); # needed to seal off
                                                     # areas bordered with 
                                                     # dashed lines

#  Choose colors

   $light[$i] = "lightblue";      # Graphs will all be blue
   $dark[$i] = "darkblue";        # This could be modified to give different
                                  # graphs different colors.
   

   add_functions($graphs[$i], "$f[$i] for x in <-$bound,$bound> " .
    "using color:blue and weight:2");
   if ( ($i==0) || ($i==2) ) {
      $graphs[$i]->moveTo(-$bound,$vshift);
      $graphs[$i]->lineTo($bound,$vshift,'red',2,'dashed');
   } elsif ( ($i==1) || ($i==3) ) {
      $graphs[$i]->moveTo(-$bound,-$vshift);
      $graphs[$i]->lineTo($bound,-$vshift,'red',2,'dashed');
   } else {
      $graphs[$i]->moveTo(-$bound,0);
      $graphs[$i]->lineTo($bound,0,'red',2,'dashed');
   }
}

sub shufflemap {
    my $n = shift();
    my $m = $n - 1;
    my $zeroind;

    my %map = ();
 
    my @vals = (0..$m);
    for ( my $i=0; $i<$m; $i++ ) {
  my $j = random(0,$m-$i,1);
  $map{$i} = $vals[$j];
  $zeroind = $i if ( $map{$i} == 0 );
  splice(@vals, $j, 1);
    }
    $map{$m} = $vals[0];
    $zeroind = $m if ( $map{$m} == 0 );
 
    return( { %map }, $zeroind );
}

($shuffle, $zero) = shufflemap(4);   #A random permutation function.  
                                      #$zero is $shuffle(0), the index
                                      #of the correct graph

$pop = PopUp( [qw(? 1 2 3 4)], $zero+1 );



$size = 180;
$texsize = 100;

##############################################

BEGIN_PGML
Choose the graph of the function [`f(x)=[$f[0]]`].

    The correct graph is graph number [@ $pop->menu() @]*.

[@EnlargeImageStatementPGML()@]**

END_PGML

BEGIN_TEXT
$PAR

\{LayoutTable(
[
['1.'.image(insertGraph( $graphs[ $shuffle->{0} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{0}]" title = "$alt[$shuffle->{0}]"'),
'2.'.image(insertGraph( $graphs[ $shuffle->{1} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{1}]" title = "$alt[$shuffle->{1}]"'),
'3.'.image(insertGraph( $graphs[ $shuffle->{2} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{2}]" title = "$alt[$shuffle->{2}]"'),
'4.'.image(insertGraph( $graphs[ $shuffle->{3} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{3}]" title = "$alt[$shuffle->{3}]"'),]
],
align=>'>{\bfseries}l>{\bfseries}l>{\bfseries}l>{\bfseries}l',
allcellcss=>'padding: 10px;',
);
\}

END_TEXT


##############################################

ANS( $pop->cmp() );

##############################################

$answer = $zero+1;
$uod = ($vshift>0) ? "up" : "down";
$lor = ($hshift>0) ? "left" : "right";
$vshiftA = abs($vshift);
$hshiftA = abs($hshift);

BEGIN_PGML_SOLUTION

Identify that the parent function, before transformation, is [`y=[$fp]`]. This function passes the points [`([$fx[0][2]],[$fy[0][2]])`] and [`([$fx[0][3]],[$fy[0][3]])`]. The function has a horizontal asymptote at [`y=0`].

>>[@image(insertGraph( $graphs[4] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>"alt='$alt[4]' title = '$alt[4]'")@]*<<

To transform from [`y=[$fp]`] to [`f(x)=[$f[0]]`], there is a vertical shift [$uod] by [`[$vshiftA]`] units, and there is a horizontal shift to the [$lor] by [`[$hshiftA]`] units.

This implies the point [`([$fx[0][2]],[$fy[0][2]])`] on [`y=[$fp]`] is transformed to [`([$fx[0][0]],[$fy[0][0]])`] on [`f(x)=[$f[0]]`].

The point [`([$fx[0][3]],[$fy[0][3]])`] on [`y=[$fp]`] is transformed to [`([$fx[0][1]],[$fy[0][1]])`] on [`f(x)=[$f[0]]`].

The horizontal asymptote is transformed to [`y=[$vshift]`].

The correct graph for [`f(x)=[$f[0]]`] is Graph [`[$answer]`].

END_PGML_SOLUTION

ENDDOCUMENT();