# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Sketch the graph of a piecewise function, and find domain and range.
#
# Last update: Carl Yao 09/07/2018
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection('Domain and Range')
## KEYWORDS('function','domain','range','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');

do {
   $m1 = random(-2,2,0.5);
   $b1 = random(-3,3,1);
   $func1 = Compute("$m1*x+$b1")->reduce;
   $x1 = random(-7,-4,1);
   $y1 = $func1->eval(x=>$x1);
   $x2 = random(-3,-1,1);
   $y2 = $func1->eval(x=>$x2);
} until $y1 != $y2;

do {
   $m2 = random(-2,2,0.5);
   $b2 = random(-3,3,1);
   $func2 = Compute("$m2*x+$b2")->reduce;
   $x4 = random(1,3,1);
   $y4 = $func2->eval(x=>$x4);
   $x5 = random(4,7,1);
   $y5 = $func2->eval(x=>$x5);
} until $y4 != $y5;

$x3 = random(0,1,1) ? $x2 : $x4;
if (random(0,1,1) == 0) {
   $y3 = random(min($y1,$y2)+0.1,max($y1,$y2)-0.1,0.1);
} else {
   $y3 = random(min($y4,$y5)+0.1,max($y4,$y5)-0.1,0.1);
}

$x1orc = random(0,1,1) ? "(" : "[";
$x2orc = $x3 == $x2 ? "]" : ")";
$x4orc = $x3 == $x4 ? "[" : "(";
$x5orc = random(0,1,1) ? ")" : "]";

Context("Interval");

$domain1 = Compute("$x1orc $x1,$x2 $x2orc");
if ($m1 > 0) {
   $y1orc = $x1orc eq "(" ? "(" : "[";
   $y2orc = ")";
   $range1 = Compute("$y1orc $y1,$y2 $y2orc");
} else {
   $y2orc = "(";
   $y1orc = $x1orc eq "(" ? ")" : "]";
   $range1 = Compute("$y2orc $y2,$y1 $y1orc");
}

$domain2 = Compute("$x4orc $x4,$x5 $x5orc");
if ($m2 > 0) {
   $y4orc = "(";
   $y5orc = $x5orc eq ")" ? ")" : "]";
   $range2 = Compute("$y4orc $y4,$y5 $y5orc");
} else {
   $y5orc = $x5orc eq ")" ? "(" : "[";
   $y4orc = ")";
   $range2 = Compute("$y5orc $y5,$y4 $y4orc");
}

$domain = $domain1 + $domain2;
$range = Union($range1,$range2);

$x6 = random($x1+0.5,$x2-0.5,0.5);
$y6 = $func1->eval(x=>$x6);
$x7 = random($x4+0.5,$x5-0.5,0.5);
$y7 = $func2->eval(x=>$x7);

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([$x1,$x5],[$y1,$y2,$y4,$y5,0]);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..0) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }


   add_functions($gr[$i], "$func1 for x in $x1orc $x1,$x2) using color:blue and weight:1");
   add_functions($gr[$i], "$func2 for x in ($x4,$x5 $x5orc using color:blue and weight:1");
   $gr[$i]->stamps( closed_circle($x3,$y3,'blue') );

}

$ALT = "This is the graph of a piecewise function. The left piece if part of a line with the domain $x1orc $x1,$x2). There is a dot on the function at ($x3,$y3). The right piece is part of a line with the domain $x4orc $x4,$x5 $x5orc.";

$x1s = $x1orc eq '(' ? '\lt' : '\le';
$x5s = $x5orc eq ')' ? '\lt' : '\le';

##############################################

BEGIN_PGML

A piecewise function's equation is given:

    [``
f(x)=
\begin{cases}
  [$func1] &\text{if }[$x1] [$x1s] x \lt [$x2] \\
  [$y3] &\text{if }x=[$x3] \\
  [$func2] &\text{if }[$x4]\lt x [$x5s] [$x5] \\
\end{cases}
    ``]
    
Sketch the function's graph on scratch paper, and then answer the following questions. 

###Question 1

[`f([$x6])=`] [______________]{$y6}

[`f([$x3])=`] [______________]{$y3}

[`f([$x7])=`] [______________]{$y7}

###Question 2

* Use *inf* to represent [`\infty`].
* Use upper case U to represent "union" in set notation.

The function's domain is [_______________]{$domain}.

The function's range is [______________]{$range}.

END_PGML
##############################################

if ($m1 == 1) {
   $s1 = "$x6";
} elsif ($m1 == -1) {
   $s1 = "-($x6)";
} else {
   $s1 = "$m1($x6)";
}

if ($b1 == 0) {
   $s2 = "";
} elsif ($b1 < 0) {
   $s2 = "$b1";
} else {
   $s2 = "+$b1";
}

if ($m2 == 1) {
   $s3 = "$x7";
} elsif ($m2 == -1) {
   $s3 = "-($x7)";
} else {
   $s3 = "$m2($x7)";
}

if ($b2 == 0) {
   $s4 = "";
} elsif ($b2 < 0) {
   $s4 = "$b2";
} else {
   $s4 = "+$b2";
}

BEGIN_PGML_SOLUTION

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT' title = '$ALT'") @]*<<

###Question 1

Since [`[$x1] [$x1s] [$x6] \lt [$x2]`], we use [`f(x)=[$func1]`] to calculate [`f([$x6])`]:

    [`` f([$x6]) = [$s1][$s2] = [$y6] ``]
    
Since [`f(x)=[$y3]`] when [`x=[$x3]`], [`f([$x3])=[$y3]`].

Since [`x\lt[$x7]`], we use [`f(x)=[$func2]`] to calculate [`f([$x7])`]:

    [`` f([$x7]) = [$s3][$s4] = [$y7] ``]

###Question 2

The segment on the left side starts at [`x=[$x1]`], and we can calculate the corresponding [`y`]-value by [`f([$x1])=[$y1]`]. It ends at [`([$x2],[$y2])`].

Similarly, the segment on the right side starts at [`x=[$x4]`], and we can calculate the corresponding [`y`]-value by [`f([$x4])=[$y4]`]. It ends at [`([$x5],[$y5])`].

By the graph, the function's domain is [`[$domain]`], and its range is [`[$range]`].

END_PGML_SOLUTION

ENDDOCUMENT();
