##DESCRIPTION


## Type: evaluation
##ENDDESCRIPTION

########################################

DOCUMENT();        # This should be the first executable line in the problem.


loadMacros(
"PGstandard.pl",
"PGML.pl",
"MathObjects.pl",
"parserAssignment.pl",
"PGgraphmacros.pl",
"PCCgraphMacros.pl",
"PGcourse.pl",

);

########################################

TEXT(beginproblem());


$a = random(2,10,1);
$b = random(2,10,1);
$c = random(2,10,1);
$d = random(2,5,1);

$co1 = $d-5;
$co2 = $d+1;
$co3 = $d*2;
$co4 = $co3+3;

$h = $co3 + random(7,15);
$e = $c - $h;

$lcb ="\{";

$ans1 = $a*$co1**2+$b; 
$ans2 = $a; 
$ans2 = $a;
$ans3 = $a;
$ans4 = $c-$co4;

$ans5 = $h;

parser::Assignment->Allow;

########################################


BEGIN_PGML

Let  [` f(x)=\begin{cases}
                    [$a] x^2 + [$b] & x<[$d]\\
		    [$a] & [$d] \leq x \leq [$co3]\\
		    [$c] - x &  x > [$co3]
                    \end{cases}
		    `]

a) [`f([$co1])={}`][_________________________]{$ans1}  

a) [`f([$co2])={}`][_________________________]{$ans2}  

a) [`f([$co3])={}`][_________________________]{$ans3}  

a) [`f([$co4])={}`][_________________________]{$ans4}  

a) Solve the equation [`f(x)=[$e]`]. All solutions should be expressed in the form *x=[$US][$US][$US] *. If there is more than one solution, use commas to separate them.  
[_________________________]{Formula("x = $ans5")}  

a) The domain of [`f`] is [_________________________]{Interval("(-infinity, infinity)")}.  


END_PGML

########################################

($xmin, $xmax, $ymin, $ymax, $xticknumber, $yticknumber)  = NiceGraphParameters([0, $d, $co3, $ans5],[0, $a*$d**2+$b,$a, $c-$co3, $e]);

$refreshCachedImages = 1;
$gr = init_graph($xmin,$ymin,$xmax,$ymax,
   axes=>[0,0],
   grid=>[$xticknumber,$yticknumber],
   size=>[xPixels(),yPixels()]
  );

add_functions($gr, "$a*x**2+$b for x in <$xmin,$d>" . 
  " using color:blue and weight:1");
add_functions($gr, "$a for x in <$d,$co3>" . 
  " using color:blue and weight:1");
add_functions($gr, "$c - x for x in <$co3,$xmax>" . 
  " using color:blue and weight:1");
add_functions($gr, "$e for x in <$xmin,$xmax>" . 
  " using color:red and weight:1");
$gr->stamps( open_circle($d,$a*($d**2)+$b,'blue') );
$gr->stamps( open_circle($co3,$c - $co3,'blue') );
$gr->stamps( closed_circle($d,$a,'blue') );
$gr->stamps( closed_circle($co3,$a,'blue') );
$gr->stamps( closed_circle($ans5,$e,'red') );

BEGIN_PGML_SOLUTION

a) Since [`[$co1]<[$d]`], to find [`f([$co1])`], we apply the first rule.  
[`\begin{aligned}
f([$co1])
&= [$a]([$co1])^2 + [$b]\\
&= [$ans1]
\end{aligned}`]  

a) Since [`[$d]\leq[$co2]\leq[$co3]`], to find [`f([$co2])`], we apply the second rule.  
[`\begin{aligned}
f([$co2])
&= [$a]
\end{aligned}`]  

a) Since [`[$d]\leq[$co3]\leq[$co3]`], to find [`f([$co3])`], we apply the second rule.  
[`\begin{aligned}
f([$co3])
&= [$a]
\end{aligned}`]  

a) Since [`[$co4]>[$co3]`], to find [`f([$co4])`], we apply the third rule.  
[`\begin{aligned}
f([$co4])
&= [$c] - [$co4]\\
&= [$ans4]
\end{aligned}`]  

a) To solve the equation [`f(x)=[$e]`], it can help to create a graph of [`f`].  
[@EnlargeImageStatementPGML()@]  
>>[@image( insertGraph($gr), 
width=>400,height=>400,tex_size=>800, extra_html_tags=>"alt = '$altb'" )@]* <<
    We can see that the only solution happens in the part of the domain where the third rule is used. So we set up an equation to solve:  
[`\begin{aligned}
[$c] - x &= [$e]\\
-x &= [$e-$c]\\
x & = [$c-$e]
\end{aligned}`]  

  [|f.|] Every real number meets one of the three conditions from the definition of this piecewise defined function, so the domain is [`(-\infty,\infty)`].

END_PGML_SOLUTION


ENDDOCUMENT();        # This should be the last executable line in the problem.
