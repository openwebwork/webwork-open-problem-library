## MO(1)
 DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PCCgraphMacros.pl",
"PGML.pl",
"extraAnswerEvaluators.pl",
"PGasu.pl"
);

##############################################

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;

#GRAPH
$a1=random(1,3);
$a2=random(1,3);
$b1=random(3,5);
do {$b2=random(-5,-3);} until $b1 != -$b2;
$f1=random(-4,-1,1);
$f2=random(4,6,1);
$g1=$b2-3;
$g2=$b1+3;
$xdom1=9;
$ydom1=int(max(-$f1 + $a1,.05*($g1-$b2)*($g1-$b1)))+1;
$endf1 = $f1 - $a1;
$endf2 = $a2 - $a1;
$endg1 = .05*($g1 - $b2)*($g1 - $b1);
$endg2 = .05*($g2 - $b2)*($g2 - $b1);
$xvert = ($b1 + $b2) / 2;
$yvert = .05*($xvert - $b2)*($xvert - $b1);
$xgrid=2*$xdom1;
$ygrid=2*$ydom1;
$graph = init_graph(-$xdom1,-$ydom1,$xdom1,$ydom1,'axes'=>[0,0],'grid'=>[$xgrid,$ygrid]);
$graph->moveTo($f1,$f1-$a1);
$graph->lineTo($a2, $a2 - $a1, 'blue', 2, 'dashed');
$graph->lineTo($f2, $a2 - $a1, 'blue', 2, 'dashed');
$g = FEQ(".05(x-$b2)*(x-$b1) for x in <$g1,$g2> using color:red and weight:2");
$graph->stamps( closed_circle($g1,$endg1,'red') );
$graph->stamps( closed_circle($g2,$endg2,'red') );
$graph->stamps( closed_circle($f1,$endf1,'blue') );
$graph->stamps( closed_circle($f2,$endf2,'blue') );

($fref) = plot_functions( $graph, $g);
$graph->lb( new Label($a2,$a2 - $a1 - 0.5,'f', 'blue','center','center'));
$graph->lb( new Label($xvert,$yvert + 0.5,'g', 'red','center','center'));

$c = random($f1,$a2,1);
$d=random($a2, $f2,1);
$e = random(-1, $a2 - 1);
$e1 = $e - $a1;


$flefty = $f1-$a1;
$fmidy = $a2-$a1;

$glefty = .05*($g1-$b2)*($g1-$b1);
$gmidx = ($g1 + $g2) / 2;
$gmidy = .05*($gmidx-$b2)*($gmidx-$b1);
$grighty = .05*($g2-$b2)*($g2-$b1);


$alt = "a graph of two functions; the graph of f consists of a line segment from ($f1, $flefty) to ($a2, $fmidy), and another line segment from ($a2, $fmidy) to ($f2, $fmidy); the graph of g is a section of an an upward-opening parabola that starts at ($g1, $glefty), dips to its vertex at ($gmidx, $gmidy), and rises back to ($g2, $grighty)";

Context("Interval");
$ans2 = ($c - $a1) + ($a2 - $a1);
##############################################

BEGIN_TEXT
Use the graphs of \(f\) (in blue and dashed) and \(g\) (in red and solid)
to answer these questions: $PAR

\{EnlargeImageStatement()\}

$BCENTER
\{ image(insertGraph($graph),height=>400,width=>400, extra_html_tags=>"alt = '$alt'") \} $BR
$ECENTER
$PAR

END_TEXT

BEGIN_PGML

a) What is the domain of [`g`]?  Give your answer in interval notation.  
[_______________]{"[$g1,$g2]"}
a) If [`t= [$c]`], then [`f(t)+f([$d])={}`][_______________]{$ans2}
a) Estimate the solution of the equation [`f(x) = [$e1]`].  
[`x={}`][_______________]{$e}
a) On what interval is the function [`f`] increasing? Give your answer in interval notation.  Round your endpoints to the nearest whole number.  
[_______________]{Interval("($f1,$a2)")->cmp(requireParenMatch=>0)}
a) For what values is [`g(x) \leq 0`]?  Write your answer in interval notation.  
[_______________]{"[$b2,$b1]"}    



END_PGML

##############################################

BEGIN_PGML_SOLUTION
a) If we look at the graph of [`g`], the [`x`]-values that are covered by this graph are the ones starting with [`[$g1]`] and ending with [`[$g2]`], so the domain of [`g`] is [`[[$g1],[$g2]]`].  
a) [`\begin{aligned}[t]
f(t)+f([$d]) & = f([$c])+f([$d])\\
&= [$c - $a1] + [$a2 - $a1]\\
&= [$ans2]
\end{aligned}`]  
a) The only place on the graph of [`f`] where the [`y`]-coordinate is [`[$e1]`] is at [`([$e],[$e1])`]. So the solution to [`f(x)=[$e1]`] is [`x=[$e]`].  
a) [`f`] is increasing for [`x`] values between [`[$f1]`] and [`[$a2]`]. Beyond that, [`f`] is constant. So [`f`] is increasing on the interval [`[[$f1],[$a2]]`].  
a) The outputs of [`g`] are equal to [`0`] at [`x=[$b2]`] and [`x=[$b1]`]. For [`x`]-values in between the output of [`g`] is negative. For all other [`x`]-values in the domain of [`g`], the output is positive. So [`g(x) \leq 0`] on the interval [`[[$b2],[$b1]]`].

END_PGML_SOLUTION



ENDDOCUMENT();        # This should be the last executable line in the problem.
