# set of questions for Materials Engineering (Dr. Gabrielle Lam)

##DESCRIPTION
##
## Created by the UBC Department of Mechanical Engineering. Project led by Agnes d'Entremont.
##
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this 
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from BCcampus, the UBC Department of
## Mechanical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people. 
##
##ENDDESCRIPTION

## DBsubject(Materials Engineering)
## Institution(UBC)
## MO(1)
## TitleText('')
## EditionText('')
## AuthorText('')
## Section('')
## Problem('')
##############################################################

DOCUMENT();

$refreshCachedImages = 1; 

#image scale
$imgScale = .2;

#image aspect ratio
$width = $imgScale*3798;
$height = $imgScale*2027;

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl",
	"PGauxiliaryFunctions.pl",
    "compoundProblem5.pl"
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);


Context("Numeric");


$scaffold = Scaffold();
#$isInstructor =  ($envir{effectivePermissionLevel} >= $envir{ALWAYS_SHOW_SOLUTION_PERMISSION_LEVEL});
$isInstructor=0;   # This variable changes what the user can see.
INITIALIZE_SCAFFOLD('$scaffold');

# >>[@ image("UBC-MAT-19-011.png", width=>[$width], height=>[$height]) @]*<<  

TEXT(beginproblem());
$showPartialCorrectAnswers = 1; #normal initialization

##############
#  Section 1
##############
Context("Numeric");

Context()->flags->set(
tolerance=>.05,
tolType => "relative");

$force = random(90, 120, 5);
$depth = random(2.0, 3.2, 0.3);

$stress_intensity = 0.75 * 0.068 * 1.4 * (10**(-6)) * $force * (10**(3)) * (sqrt((pi * 8.5 * (10**-3))))/ (((0.017**2) * (0.01)) * $depth);;

BEGIN_PGML

>>[@ image("UBC-MAT-19-011.png", width=>[$width], height=>[$height]) @]*<<  

A specimen with a single notch is loaded in bending by a force [`[$force]`] kN (see figure). Given that the length of the crack is 8.5 mm, and the dimensions of the specimen are width S 6.8 cm, height W 1.7 cm and depth B [`[$depth]`] cm:   


END_PGML


Context()->texStrings;
DISPLAY_SECTION(  {  name=>"Part (a)", 
             canshow =>1,  #always true
             iscorrect=>$scaffold->requireCorrect(1), 
             section=>1 #designates that this is the first section
} , <<'END_SECTION'); 

Using the stress intesity factor provided in the figure (bending mode) Determine the stress intensity factor \(K_I\)  
$PAR
Answer is: \{SECTION_ANS($stress_intensity->cmp), $stress_intensity->ans_rule(150)\} \(MPa \cdot m^{1/2}\) 

END_SECTION

SECTION_SOLUTION({section=>1},<<'END_SOLUTION');
Instructor can put a solution here

END_SOLUTION


###############
#  Section 2
###############
Context("Numeric");

Context()->flags->set(
tolerance=>.05,
tolType => "relative");

if ($stress_intensity > 150){
    $popup = PopUp(["Yes","No","I don't know"],"Yes");
}
else{
    $popup = PopUp(["Yes","No","I don't know"],"No");
}


Context()->texStrings;
DISPLAY_SECTION( { name=>"Part (b)", 
             canshow =>$scaffold->requireCorrect(1). " or $isInstructor",
             iscorrect=>$scaffold->requireCorrect(2), 
             section=>2
},   <<'END_SECTION'); 
Will the specimen fail in a brittle fashion, given that the fracture toughness of the material is \(150\) \(MPa \cdot m^{1/2}\)  
$PAR
\{ $popup->menu() \}



END_SECTION

SECTION_ANS($popup->cmp);

SECTION_SOLUTION({section=>2},<<'END_SOLUTION');
Instructor can put a solution here
END_SOLUTION




PROCESS_ANSWERS();

$last_correct_section = PROCESS_SECTIONS();

$opensection = $last_correct_section + 1;
$scaffold->openSections($opensection);

TEXT($END_ONE_COLUMN);
ENDDOCUMENT();      
