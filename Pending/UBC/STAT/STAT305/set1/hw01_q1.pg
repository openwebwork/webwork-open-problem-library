## DESCRIPTION
## Statistics 305 Probability Review Questions
## ENDDESCRIPTION

## KEYWORDS('Probability, R; Binomial distribution; finding the probability
## a Binomial variable lies within a given range using the
## pbinom function in R, finding a quantile for a Binomial distribution
## using the qbinom function in R.')

## DBsubject('Probability')
## DBchapter('Discrete distributions')
## DBsection('Binomial')
## level(2)
## Date('2013/09/11')
## Author('Andy Leung')
## Institution('University of British Columbia')
## TitleText1('No Text')
## EditionText1('?')
## AuthorText1('?')
## Section1('?')
## Problem1('?')

########################################################################

DOCUMENT();      

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "unionTables.pl",
  "RserveClient.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());


##############################################################
#  Question and R Setup
##############################################################
Context->("Numeric");

# Do this in R
rserve_start();

# Part (a)
# Randomly generate parameters: n and p
rserve_eval('n <- sample(c(60, 70, 80, 90, 100, 110, 120), 1);
			p <- round(runif(1, min=0.3, max=0.8),2);
			part_a_ans <- pbinom(n/2+10, n, p, lower.tail = TRUE)- pbinom(n/2,n, p, lower.tail = TRUE);1');

# Part (b)
# Randomly generate parameters: q
rserve_eval('q <- round(runif(1, min=0.1, max=0.7),2);
			part_b_ans <- qbinom(q, n, p, lower.tail = TRUE);1');

# Convert the results back to perl
@param_n = rserve_eval('n');
$param_n = join ", ", @param_n;

@param_n1 = rserve_eval('n/2');
$param_n1 = join ", ", @param_n1;
@param_n2 = rserve_eval('n/2+10');
$param_n2 = join ", ", @param_n2;

@param_p = rserve_eval('p');
$param_p = join ", ", @param_p;
@param_q = rserve_eval('q');
$param_q = join ", ", @param_q;
@ans_a = rserve_eval('part_a_ans');
$ans_a = join ", ", @ans_a;
@ans_b = rserve_eval('part_b_ans');
$ans_b = join ", ", @ans_b;

rserve_finish();
##############################################################




##############################################################
#  Question in Text
##############################################################
Context()->texStrings;
BEGIN_TEXT

Let $BITALIC Y $EITALIC be a Binomial variable counting the number of successes in \($param_n\) independent trials where the probability of success at each trial is \($param_p\); that is, \( Y \sim Bin($param_n, $param_p) \). 

$BR
$BR

$BBOLD Part a) $EBOLD
Use the $BITALIC pbinom $EITALIC function in $BITALIC R $EITALIC to find \(P ($param_n1 < Y \le $param_n2)\), giving your answer to three decimal places.
$BR
\{ ans_rule(12) \} 
$BR
$BR

$BBOLD Part b) $EBOLD

Use the $BITALIC qbinom $EITALIC function in $BITALIC  R $EITALIC  to find the smallest value \(y\) such that \(P(Y \le y) \ge $param_q\).
$BR
\{ ans_rule(12) \} 
$BR

END_TEXT
##############################################################



##############################################################
## Show answer
##############################################################
# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

ANS( num_cmp($ans_a, tol=> 0.001) );
ANS( num_cmp($ans_b) );
##############################################################



##############################################################
#  Solution
##############################################################
Context()->texStrings;
Context()->{format}{number} = "%.2f";
BEGIN_SOLUTION

$BBOLD Part a) $EBOLD The required probability is found via
$BITALIC
pbinom($param_n2, $param_n, $param_p, lower.tail = TRUE)- pbinom($param_n1, $param_n, $param_p, lower.tail = TRUE).
$EITALIC
$BR
$BR

$BBOLD Part b) $EBOLD The value is found using
$BITALIC
qbinom($param_q, $param_n, $param_p, lower.tail = TRUE)$EITALIC.

END_SOLUTION
##############################################################



ENDDOCUMENT();