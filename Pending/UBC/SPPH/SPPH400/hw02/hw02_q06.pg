#########################################################
# DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Descriptive Statistics')
## DBsection('Summary statistics')
## level(1)

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
# warn("seed: " . $seed);

rserve_eval("set.seed($seed)");
@data = rserve_eval('
# randomly select the number of obs for the student
NumObs <- round(rnorm(1, 735, 50), 0);

# initalize the matrix to store the data in
dataa <- matrix(0, nrow=NumObs, ncol=6);

# give the matrix column names
colnames(dataa) <- c("Caesarean", "Age", "Gender", "Smoke", "Height", "FEV");

# this will randomly generate caesarean/non-caesarean
# births (0=no, 1=yes, 25% are caesareans)
Cae <- sample(c(0,1), size=NumObs, prob=c(0.75, 0.25), replace=TRUE);

# this will randomly select Gender (0 or 1). Below gives 48%
# prob to 0s (Female) and 52% prob to 1s (Male)
Gende <- sample(c(0,1), size=NumObs, prob=c(0.48, 0.52), replace=TRUE);

# this is to randomly generate smoke (0=no, 1=yes).
# 14% of FEMALES are SMOKERS, 9% of MALES are SMOKERS
Smok <- rep(0, NumObs);
for (j in 1:NumObs){
if (Gende[j]== "0"){Smok[j] <- sample( c(rep(0,86), rep(1,14)),
size=1)} else{ Smok[j] <- sample( c(rep(0,91), rep(1,9)), size=1)}
};

# this is to randomly generate ages; smokers are older than
# non-smokers (to create confounding between Smoke and Age)
# initalize the vector to store ages in
Ag <- rep(0, NumObs);

# run through a loop to select ages (selects from a different
# age distribution, depending on if smoker or non-smoker)
for (k in 1:NumObs){
if (Smok[k]== "0"){Ag[k] <- sample(c(3,4,5,5,6,6,7,7,7,8,8,8,8,9,9,9,9,
10,10,10,10,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,
14,14,14,14,15,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19),
size=1)} else{
Ag[k] <- sample(c(10,10,11,11,11,11,12,12,12,12,13,13,13,13,13, 14,14,14,14,14,15,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19),
size=1)}
};

# This is to generate the heights, as a function of age and
# gender (it will produce a quadratic relationship between Age
# and height...as age increases, curve flattens)
Heigh <- 32 + 4.2*Ag -0.13*(Ag^2) + 2*as.numeric(Gende) + rnorm(NumObs,
0,3.3);

# This is to generate FEV as a function of all other variables
# it will produce a quadratic relationship between Height and FEV
# there will be no relationship between Caes and FEV
FE <- 6.9 + 0.07*Ag - 0.27*Heigh + 0.003*(Heigh^2) + 0.15*as.numeric(Gende) - 0.17*as.numeric(Smok) + 0*as.numeric(Cae) + rnorm(NumObs, 0, 0.4);

# this is to store the data in the data matrix
# Height is rounded to one decimal place and FEV rounded to
# two decimal places, and FEV absolute value taken just in case
# something wonky happens (it shouldnt)

dataa[,1] <- Cae;
dataa[,2] <- Ag;
dataa[,3] <- Gende;
dataa[,4] <- Smok;
dataa[,5] <- round(Heigh, digits=1);
dataa[,6] <- abs(round(FE, digits=2));
x <- c(round(min(dataa[,5]),1),  round(max(dataa[,5]),1)); 
as.numeric(x);    
');

$q1ans = $data[0];
$q2ans = $data[1];


#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT
For the Height variable, what are the numeric values for the following
summaries? (Round your answer to one decimal place.)
$BR
$BR
$BBOLD Part (a) (WebWorkiR) $EBOLD
The minimum height.
\{ ans_rule(5) \}inches
$BR
$BR
$BBOLD Part (b) (WebWorkiR) $EBOLD
The maximum height.
\{ ans_rule(5) \}inches
$BR
END_TEXT

#########################################################
## Answers evaluation (Required)
ANS( num_cmp($q1ans, tol=> 0.15) );
ANS( num_cmp($q2ans, tol=> 0.15) );



#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION
$BBOLD Part (a) $EBOLD
The minimum height is $q1ans inches.
$BR
$BBOLD Part (b) $EBOLD
The maximum height is $q2ans inches.
$BR

END_SOLUTION
ENDDOCUMENT();