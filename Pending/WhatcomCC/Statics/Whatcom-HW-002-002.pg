##DESCRIPTION
##
## Question by Eric Davishahl, Engineering Faculty
## Whatcom Community College, Canada
##
## Contact: edavishahl@whatcom.edu
##
## Coded by UBC Engineering
##
## Coding contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
## 
## We gratefully acknowledge the financial support for this 
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from BCcampus, the UBC Department of
## Mechanical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## The coding of this work was completed on the traditional, 
## ancestral, and unceded territory of the Musqueam people. 
##
##ENDDESCRIPTION

## DBsubject(Statics)
## DBchapter(Particles)
## DBsection(Forces)
## Institution('Whatcom Community College')
## Author(Eric Davishahl)
## Date()
## Level()
## KEYWORDS('')
## RESOURCES()
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
## Beginner



DOCUMENT();

#image scale
$imgScale = .7;

#image aspect ratio
$width = $imgScale*711;
$height = $imgScale*263;

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"PGauxiliaryFunctions.pl",
	"niceTables.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");

#given
$Fweight = random(100000, 155000, 50);
$Fdrag = random(50000, 75000, 20);
$thetadeg = random(5, 15, 0.1);
$theta = pi*$thetadeg/180;
$x = random(4,8,0.2);


#computation 
$Flift = $Fweight*cos($theta);
$Fthrust = $Fdrag + $Fweight * sin($theta);
$thetab = arctan(1/$x);
$thetab_deg = 180*$thetab/pi;
$Fthrustb = $Fdrag + $Fweight * sin($thetab);
$Fliftb = $x*($Fthrustb-$Fdrag);

#set tolerance
Context()->flags->set(
tolerance=>.002);

##############################################################
#
#  Text 
#
#

BEGIN_PGML

The airplane weighs [`[$Fweight]`] [`lb`] and flies at constant speed and trajectory given by [`\theta`] on the figure. The plane experiences a drag force of [`[$Fdrag]`] [`lb`].  

[@ image("Whatcom-HW-002-002.png", width=>[$width], height=>[$height]) @]*

The lift force acts in the [`y'`] direction.  The weight acts in the negative [`y`] direction. The thrust and drag forces act in the positive and negative [`x'`]directions respectively.

*a)* If [`\theta = [$thetadeg] ^{\circ}`], determine the thrust and lift forces required to maintain this speed and trajectory.

[`F_T=`] [_____]{"$Fthrust"} [`lb`]  
[`F_L=`] [_____]{"$Flift"} [`lb`]  

*b)* Next consider the case where [`\theta`] is unknown, but it is known that the lift force is equal to [`[$x]`] times the quantity [`(F_{thrust}-F_{drag})`].  Compute the resulting trajectory angle [`\theta`] and the lift force in this case.  Use the same values for the weight and drag forces as you used for part *a*.

[`\theta=`] [_____]{"$thetab_deg"}[`^{\circ}`]  
[`F_L=`] [_____]{"$Fliftb"} [`lb`]  

END_PGML

##############################################################

ENDDOCUMENT();