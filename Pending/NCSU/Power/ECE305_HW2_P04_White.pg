# DESCRIPTION
# Problem from 'ECE305 Principles of Electromechanical Energy Conversion, NCSU', Joel Trussell, 3rd ed.
# WeBWorK problem written by Joel Trussell, <hjt@ncsu.edu>
# ENDDESCRIPTION

## DBsubject(Electrical engineering)
## DBchapter(None)
## DBsection(None)
## Institution(North Carolina State University)
## Author(H. J. Trussell)
## MO(1)
## TitleText1('ECE305 Principles of Electromechanical Energy Conversion, NCSU')
## AuthorText1('Leonard White')
## EditionText1('FALL 2016')
## Section1('.')
## Problem1('2 4')
## KEYWORDS('AC','single','three','phase','power')


DOCUMENT();

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "extraAnswerEvaluators.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
          "parserPopUp.pl",
           "MathObjects.pl",
           "PGcourse.pl",

           "answerHints.pl",
);

TEXT(beginproblem());


Context("Complex");
Context()->flags->set(
tolerance => 0.01,
tolType => "absolute",
);

Context()->variables->are(t=>'Real');
Context()->{format}{number} = "%.4f#";

#Initialize element values, to be changed for each question
$Van=Real(random(250,300,5));


## Debugging Code Parameters From Textbook
$Van=Real(277);


# Answer calculation
$modVan=$Van;
$argVan=Real(0);
$modVbn=$modVan;
$argVbn=Real(120);
$modVcn=$modVan;
$argVcn=Real(-120);
$modVab=sqrt(3)*$modVan;
$modVbc=$modVab;
$modVca=$modVab;
$argVab=Real(-30);
$argVbc=Real(90);
$argVca=Real(-150);



#Creating the phasor graph for current
$xmax=$modVab;
$ymax=$modVab;
$ULMa=1.25*$ymax;
$LLMa=-$ULMa;
$Tmax=1.25*$xmax;
$Tmin=-$Tmax;

#refresh image in the explorer cache
$refreshCachedImages = 1;
$grapha = init_graph($Tmin,$LLMa,$Tmax,$ULMa,'axes'=>[0,0] );
$grapha->moveTo(-$modVan*cos($argVan/180*pi),-$modVan*sin($argVan/180*pi));
$grapha->arrowTo(0,0,"blue",2);
$grapha->moveTo(-$modVbn*cos($argVbn/180*pi),-$modVbn*sin($argVbn/180*pi));
$grapha->arrowTo(0,0,"blue",2);
$grapha->moveTo(-$modVcn*cos($argVcn/180*pi),-$modVcn*sin($argVcn/180*pi));
$grapha->arrowTo(0,0,"blue",2);

$grapha->moveTo(0,0);
$grapha->arrowTo($modVab*cos($argVab/180*pi), $modVab*sin($argVab/180*pi),"blue",2);
$grapha->moveTo(0,0);
$grapha->arrowTo($modVbc*cos($argVbc/180*pi), $modVbc*sin($argVbc/180*pi),"blue",2);
$grapha->moveTo(0,0);
$grapha->arrowTo($modVca*cos($argVca/180*pi), $modVca*sin($argVca/180*pi),"blue",2);


$grapha->lb('reset');
$grapha->lb(new Label(-$modVan*cos($argVan/180*pi), -$modVan*sin($argVan/180*pi),"Van",'blue','right','bottom'));

$grapha->lb(new Label(-$modVbn*cos($argVbn/180*pi), -$modVbn*sin($argVbn/180*pi),"W",'blue','left','top'));

$grapha->lb(new Label(-$modVcn*cos($argVcn/180*pi), -$modVcn*sin($argVcn/180*pi),"U",'blue','right','bottom'));

$grapha->lb(new Label($modVab*cos($argVab/180*pi), $modVab*sin($argVab/180*pi),"Y",'blue','left','top'));

$grapha->lb(new Label($modVbc*cos($argVbc/180*pi), $modVbc*sin($argVbc/180*pi),"Z",'blue','right','bottom'));

$grapha->lb(new Label($modVca*cos($argVca/180*pi), $modVca*sin($argVca/180*pi),"X",'blue','left','top'));

$figa = image(insertGraph($grapha),width => 400,height => 400,tex_size => 200);

$popupU = PopUp(["?", "Vbn", "Vcn", "Vab","Vbc","Vca","none"], "Vcn");

$popupW = PopUp(["?", "Vbn", "Vcn", "Vab","Vbc","Vca","none"], "Vbn");

$popupX = PopUp(["?", "Vbn", "Vcn", "Vab","Vbc","Vca","none"], "Vca");

$popupY = PopUp(["?", "Vbn", "Vcn", "Vab","Vbc","Vca","none"], "Vab");

$popupZ = PopUp(["?", "Vbn", "Vcn", "Vab","Vbc","Vca","none"], "Vbc");


BEGIN_TEXT
A balanced three-phase, wye-connected load is connected to an acb sequence generator with an output of \( $Van \angle 0^{\circ} V \) .$BR
1. Find the load and line voltages.$BR
\(V_{an}=\) \{ans_rule(10)\}  \( \angle \) \{ans_rule(10)\} \( ^{ \circ } V \) $BR
\(V_{bn}=\) \{ans_rule(10)\}  \( \angle \) \{ans_rule(10)\} \( ^{ \circ } V \) $BR
\(V_{cn}=\) \{ans_rule(10)\}  \( \angle \) \{ans_rule(10)\} \( ^{ \circ } V \) $BR
\(V_{AB}=\) \{ans_rule(10)\}  \( \angle \) \{ans_rule(10)\} \( ^{ \circ } V \) $BR
\(V_{BC}=\) \{ans_rule(10)\}  \( \angle \) \{ans_rule(10)\} \( ^{ \circ } V \) $BR
\(V_{CA}=\) \{ans_rule(10)\}  \( \angle \) \{ans_rule(10)\} \( ^{ \circ } V \) $BR

2. The following is the voltage phasor diagram with \(V_{an}\) as the reference. Answer the questions about the phasor diagram. $BR
$figa $BR
$PAR
Vector \( U \) represents \{ $popupU ->menu() \} $BR
Vector \( W \) represents \{ $popupW ->menu() \} $BR
Vector \( X \) represents \{ $popupX ->menu() \} $BR
Vector \( Y \) represents \{ $popupY ->menu() \} $BR
Vector \( Z \) represents \{ $popupZ ->menu() \} $BR

Note: Make sure you can draw the phasor diagram yourself during the exam.

$PAR
END_TEXT
Context()->normalStrings;




##############################
$showPartialCorrectAnswers = 1;
$modVant=(abs($modVan)>=1?"relative":"absolute");
ANS($modVan->cmp(tolerance => 0.01,tolType => $modVant));
$argVant=(abs($argVan)>=1?"relative":"absolute");
ANS($argVan->cmp(tolerance => 0.01,tolType => $argVant));

$modVbnt=(abs($modVbn)>=1?"relative":"absolute");
ANS($modVbn->cmp(tolerance => 0.01,tolType => $modVbnt));
$argVbnt=(abs($argVbn)>=1?"relative":"absolute");
ANS($argVbn->cmp(tolerance => 0.01,tolType => $argVbnt));

$modVcnt=(abs($modVcn)>=1?"relative":"absolute");
ANS($modVcn->cmp(tolerance => 0.01,tolType => $modVcnt));
$argVcnt=(abs($argVcn)>=1?"relative":"absolute");
ANS($argVcn->cmp(tolerance => 0.01,tolType => $argVcnt));



$modVabt=(abs($modVab)>=1?"relative":"absolute");
ANS($modVab->cmp(tolerance => 0.01,tolType => $modVabt));
$argVabt=(abs($argVab)>=1?"relative":"absolute");
ANS($argVab->cmp(tolerance => 0.01,tolType => $argVabt));

$modVbct=(abs($modVbc)>=1?"relative":"absolute");
ANS($modVbc->cmp(tolerance => 0.01,tolType => $modVbct));
$argVbct=(abs($argVbc)>=1?"relative":"absolute");
ANS($argVbc->cmp(tolerance => 0.01,tolType => $argVbct));

$modVcat=(abs($modVca)>=1?"relative":"absolute");
ANS($modVca->cmp(tolerance => 0.01,tolType => $modVcat));
$argVcnt=(abs($argVcn)>=1?"relative":"absolute");
ANS($argVca->cmp(tolerance => 0.01,tolType => $argVcat));

ANS($popupU->cmp());
ANS($popupW->cmp());
ANS($popupX->cmp());
ANS($popupY->cmp());
ANS($popupZ->cmp());
##############################
# Solution

Context()->texStrings;
BEGIN_SOLUTION;
$PAR
$BBOLD  SOLUTION $EBOLD
$PAR
\(V_{an}=$modVan \angle $argVan ^{\circ} V\) $BR
\(V_{bn}=$modVbn \angle $argVbn ^{\circ} V\) $BR
\(V_{cn}=$modVcn \angle $argVcn ^{\circ} V\) $BR
\(V_{ab}=V_{an}+V_{nb}=V_{an}-V_{bn}=$modVab \angle $argVab ^{\circ} V\) $BR
\(V_{bc}=V_{bn}+V_{nc}=V_{bn}-V_{cn}=$modVbc \angle $argVbc ^{\circ} V\) $BR
\(V_{bc}=V_{bn}+V_{nc}=V_{bn}-V_{cn}=$modVbc \angle $argVbc ^{\circ} V\) $BR
\(V_{ca}=V_{cn}+V_{na}=V_{cn}-V_{an}=$modVca \angle $argVca ^{\circ} V\) $BR

Vector U is \(V_{cn}\)
Vector W is \(V_{bn}\)
Vector X is \(V_{ca}\)
Vector Y is \(V_{ab}\)
Vector Z is \(V_{bc}\)





END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();