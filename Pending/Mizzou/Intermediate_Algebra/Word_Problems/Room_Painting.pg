# DESCRIPTION
# Asks to solve a space-filling problem
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Equations and Inequalities')
## DBsection('Modeling with Equations')
## KEYWORDS('equations')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");

do {
  $width = random(8,20,2);
  $length = random(8,20,2)
} until (abs($width - $length) > 4);
$height = random(8,12,2);
if ($height == 8) {
 $word = "an";
} else {
 $word = "a";
}
$paint = random(50,250,50);
for ($i = 0; $i < random(10,50); $i++) {
  $coats = random(2,3);
}
$ans = ceil($coats*2*($width*$height + $length*$height)/$paint);
$question = "A gallon of paint can cover $paint square feet. Find how many gallon containers of paint should be bought to paint $coats coats on each wall of a rectangular room with dimensions $width feet by $length feet and walls that are $height-feet tall.";


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
$question
$PAR
Answer: \{ans_rule(20)\} gallons
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\) gallons
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();