# DESCRIPTION
# Asks to solve a linear equation, infinitely many or no solutions
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 01: Algebra, Mathematical Models and Problem Solving')
## DBsection('Solving Linear Equations')
## KEYWORDS('solving equations','linear')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals")->texStrings;
Context()->strings->add("no solutions"=>{}, "infinitely many"=>{}, "no solution"=>{alias=>"no solutions"}, "none"=>{alias=>"no solutions"}, "all reals"=>{alias=>"infinitely many"});
@vars = ("x","y","z","p","q","m","n","k","u","v");
$var = $vars[random(0,scalar(@vars)-1,1)];
Context()->variables->are($var=>"Real");
$case = random(0,1,1); # 0 - no solutions, 1 - infinitely many
do {
$n1 = random(5,15);
do {$n2 = random(2,19)} until (abs($n2 - $n1) > 1);
$n3 = $n1 - $n2;
$p1 = $n2*non_zero_random(-5,5,1);
do {$p2 = ($case == 0) ? ($n1*$p1/$n2)+non_zero_random(-9,9) : $n1*$p1/$n2} until ($p2 != 0);
} until (abs($n1) != abs($p2) || abs($n2) != abs($p1));
$ans = ($case == 0) ? "no solutions" : "infinitely many";
$dispeqn = "$n1($var - $p1) = $n2($var-$p2) + $n3 $var";


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Solve the following equation for \($var\):
$PAR
\[
$dispeqn
\]
$PAR
\($var = \) \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(String($ans)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $ans
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Note:${EBOLD} Write ${BBOLD}no solutions${EBOLD} if no solutions exist or ${BBOLD}infinitely many${EBOLD} if there are infinitely many solutions.
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();