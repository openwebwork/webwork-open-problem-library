# DESCRIPTION
# Asks to solve a compound inequality
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 04: Inequalities and Problem Solving')
## DBsection('Compound Inequalities')
## KEYWORDS('inequalities', 'linear')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "AnswerFormatHelp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Interval");
Context()->strings->add("no solutions"=>{}, "no solution"=>{alias=>"no solutions"});
$casea = random(0,3,1);
if ($casea == 0) {
  @ineq1 = ("<","\leq");
  @ineq2 = (">","\geq");
  $a = random(3,15,1);
  $b = random(-5, $a-1,1);
  $case1 = random(0,1,1);
  $case2 = random(0,1,1);
  $ineq1c = $ineq1[$case1];
  $ineq2c = $ineq2[$case2];
  if ($case1 == 0) {
    if ($case2 == 0) {
      $ans1 = Compute("($b,$a)");
    } else {
      $ans1 = Compute("[$b,$a)");
    }
  } else {
    if ($case2 == 0) {
      $ans1 = Compute("($b,$a]");
    } else {
      $ans1 = Compute("[$b,$a]");
    }
  }
  Context()->texStrings;
  $dispa = "\(x $ineq1c $a\) and \(x $ineq2c $b\)";
  $dispansa = "\($ans1\)";
  Context()->normalStrings;
} elsif ($casea == 1) {
  @ineq3 = ("<","\leq");
  @ineq4 = (">","\geq");
  $c = random(3,15,1);
  $d = random(-5,$c-1,1);
  $case3 = random(0,1,1);
  $case4 = random(0,1,1);
  $ineq3c = $ineq3[$case3];
  $ineq4c = $ineq4[$case4];
  $ans1 = String("no solutions");
  $dispa = "\(x $ineq3c $d\) and \(x $ineq4c $c\)";
  $dispansa = "$ans1";
} elsif ($casea == 2) {
  @ineq1 = ("<","\leq");
  @ineq2 = ("<","\leq");
  $a = random(3,15,1);
  $b = random(-5, $a-1,1);
  $case1 = random(0,1,1);
  $case2 = random(0,1,1);
  $ineq1c = $ineq1[$case1];
  $ineq2c = $ineq2[$case2];
  if ($case2 == 0) {
    $ans1 = Compute("(-inf,$b)");
  } else {
    $ans1 = Compute("(-inf,$b]");
  }
  Context()->texStrings;
  $dispa = "\(x $ineq1c $a\) and \(x $ineq2c $b\)";
  $dispansa = "\($ans1\)";
  Context()->normalStrings;
} else {
  @ineq3 = (">","\geq");
  @ineq4 = (">","\geq");
  $c = random(3,15,1);
  $d = random(-5,$c-1,1);
  $case3 = random(0,1,1);
  $case4 = random(0,1,1);
  $ineq3c = $ineq3[$case3];
  $ineq4c = $ineq4[$case4];
  if ($case4 == 0) {
    $ans1 = Compute("($c,inf)");
  } else {
    $ans1 = Compute("[$c,inf)");
  }
  Context()->texStrings;
  $dispa = "\(x $ineq3c $d\) and \(x $ineq4c $c\)";
  $dispansa = "\($ans1\)";
  Context()->normalStrings;
}

$caseb = random(0,3,1);
if ($caseb == 0) {
  @ineq1 = ("<","\leq");
  @ineq2 = (">","\geq");
  $a = random(3,15,1);
  $b = random(-5, $a-1,1);
  $case1 = random(0,1,1);
  $case2 = random(0,1,1);
  $ineq1c = $ineq1[$case1];
  $ineq2c = $ineq2[$case2];
  $ans2 = Compute("(-inf,inf)");
  Context()->texStrings;
  $dispb = "\(x $ineq1c $a\) or \(x $ineq2c $b\)";
  $dispansb = "\($ans2\)";
  Context()->normalStrings;
} elsif ($caseb == 1) {
  @ineq3 = ("<","\leq");
  @ineq4 = (">","\geq");
  $c = random(3,15,1);
  $d = random(-5,$c-1,1);
  $case3 = random(0,1,1);
  $case4 = random(0,1,1);
  $ineq3c = $ineq3[$case3];
  $ineq4c = $ineq4[$case4];
  if ($case3 == 0) {
    if ($case4 == 0) {
      $ans2 = Compute("(-inf,$d)U($c,inf)");
    } else {
      $ans2 = Compute("(-inf,$d)U[$c,inf)");
    }
  } else {
    if ($case4 == 0) {
      $ans2 = Compute("(-inf,$d]U($c,inf)");
    } else {
      $ans2 = Compute("(-inf,$d]U[$c,inf)");
    }
  }
  Context()->texStrings;
  $dispb = "\(x $ineq3c $d\) or \(x $ineq4c $c\)";
  $dispansb = "\($ans2\)";
  Context()->normalStrings;
} elsif ($caseb == 2) {
  @ineq1 = ("<","\leq");
  @ineq2 = ("<","\leq");
  $a = random(3,15,1);
  $b = random(-5, $a-1,1);
  $case1 = random(0,1,1);
  $case2 = random(0,1,1);
  $ineq1c = $ineq1[$case1];
  $ineq2c = $ineq2[$case2];
  if ($case1 == 0) {
    $ans2 = Compute("(-inf,$a)");
  } else {
    $ans2 = Compute("(-inf,$a]");
  }
  Context()->texStrings;
  $dispb = "\(x $ineq1c $a\) or \(x $ineq2c $b\)";
  $dispansb = "\($ans2\)";
  Context()->normalStrings;
} else {
  @ineq3 = (">","\geq");
  @ineq4 = (">","\geq");
  $c = random(3,15,1);
  $d = random(-5,$c-1,1);
  $case3 = random(0,1,1);
  $case4 = random(0,1,1);
  $ineq3c = $ineq3[$case3];
  $ineq4c = $ineq4[$case4];
  if ($case3 == 0) {
    $ans2 = Compute("($d,inf)");
  } else {
    $ans2 = Compute("[$d,inf)");
  }
  Context()->texStrings;
  $swap = random(0,1,1);
  Context()->texStrings;
  $dispb = "\(x $ineq3c $d\) or \(x $ineq4c $c\)";
  $dispansb = "\($ans2\)";
  Context()->normalStrings;
}

$swap = random(0,1,1);
if ($swap == 1) {
  $tmp1 = $dispa;
  $dispa = $dispb;
  $dispb = $tmp1;

  $tmp2 = $ans1;
  $ans1 = $ans2;
  $ans2 = $tmp2;
 
  $tmp3 = $dispansa;
  $dispansa = $dispansb;
  $dispansb = $tmp3;
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Solve each compound inequality. Write your answer in interval notation or if no solutions exist write ${BBOLD}no solutions${EBOLD}.
$PAR
(a) $dispa: \{ans_rule(20)\}
$PAR
(b) $dispb: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans1->cmp());
ANS($ans2->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} (a) $dispansa, $SPACE (b) $dispansb
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} \{AnswerFormatHelp("intervals", "Click here for help entering intervals as answers.") \}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();