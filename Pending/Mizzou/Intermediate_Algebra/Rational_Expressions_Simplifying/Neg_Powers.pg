# DESCRIPTION
# Asks to find the difference of two rational expressions
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 06: Rational Expressions, Functions and Equations')
## DBsection('Rational Expressions and Functions: Adding and Subtracting')
## KEYWORDS('least common denominator')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "parserMultiAnswer.pl",
  "PGunion.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@vars = ("x","y","z","a","b","c");
$ch = random(0,5,1);
$v = $vars[$ch];
Context()->variables->are($v=>"Real");

$a = random(1,5);
do {$b = random(1,5)} until ($b != $a);
$p1 = random(1,2);
$p2 = random(1,2);
$frac = ($a == 1) ? "$v^{-$p1} + " : "($a $v)^{-$p1}+";
if ($b == 1) {
  $frac = $frac."$v^{-$p2}";
} else {
  $frac = $frac."($b $v)^{-$p2}";
}

if ($p1 == $p2) {
  $e1 = $a**$p1 + $b**$p2;
  $e2 = ($a**$p1)*($b**$p2);
  $n = $e1/gcd($e1,$e2);
  $d = $e2/gcd($e1,$e2);
  $num = Formula("$n")->reduce;
  $den = Formula("$d $v^$p1")->reduce;
} elsif ($p1 > $p2) {
  $e1 = $a**$p1;
  $e2 = $b**$p2;
  $e3 = $e1*$e2;
  $num = Formula("$e1 $v + $e2")->reduce;
  $den = Formula("$e3 $v^$p1")->reduce;
} elsif ($p2 > $p1) {
  $e1 = $a**$p1;
  $e2 = $b**$p2;
  $e3 = $e1*$e2;
  $num = Formula("$e2 $v + $e1")->reduce;
  $den = Formula("$e3 $v^$p2")->reduce;
}

$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};
 
      if ( ( $f1==$f1stu &&  $f2==$f2stu) || 
           (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif ( $f1==$f1stu || -$f1==$f1stu) {
          return [1,0];
      } elsif ( $f2==$f2stu || -$f2==$f2stu ) {
          return [0,1];
      } elsif ( ($numbogus==$f1stu || -$numbogus==$f1stu) ||
                ($denbogus==$f2stu || -$denbogus==$f2stu) ) {
          $self->setMessage(1,"Both answer blanks must be filled");
          $self->setMessage(2,"Both answer blanks must be filled");
          return [0,0];
      } elsif ( $f1*$f2stu==$f1stu*$f2 ) {
          $self->setMessage(1,"Simplify your answer further");
          $self->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);

if ($displayMode eq 'TeX') {
  $displayfrac =
  "\[ $frac = ".$multians->ans_rule(10).$multians->ans_rule(10)." \]";
} else {
  $displayfrac =
  ColumnTable(
  "\( \displaystyle $frac = \)",
  $multians->ans_rule(20).$BR.$HR.$multians->ans_rule(20),
  indent => 0, separation => 10, valign => "MIDDLE"
  );
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Perform the indicated operation, and simplify if possible.  Write your answer without using negative exponents.
$BR
$BR
$BCENTER
$displayfrac
$ECENTER
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($multians->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD
    \(\dfrac{$num}{$den} \)
    $PAR
    END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();