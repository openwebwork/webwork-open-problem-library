# DESCRIPTION
# Asks find the width of the border of a picture given restrictions
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Equations and Inequalities')
## DBsection('Other Equations')
## KEYWORDS('grouping','factoring','equations')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");

$p = random(2,6);
@words0 = ("two", "three", "four", "five", "six");
$word0 = $words0[$p-2];
$moreless = random(-1,1,2);
$word1 = ($moreless == -1) ? "less" : "more";
$k = random(2,4);
@words2 = ("twice", "three times", "four times");
$word2 = $words2[$k-2];
$case = random(0,1,1); # switch length and width
if ($case == 0) {
  $lwword1 = "length";
  $lwword2 = "width";
  do {
    $width = random(4,13,1);
    $length = $k*$width + $moreless*$p;
  } until ($length > 0 && $width > 0);
} else {
  $lwword1 = "width";
  $lwword2 = "length";
  do {
    $length = random(4,13,1);
    $width = $k*$length + $moreless*$p;
  } until ($length > 0 && $width > 0);
}
$A = $width*$length;
$ans = 0;


###############1############################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
A rectangle has an area of \($A\) square inches and a $lwword1 which is $word0 inches $word1 than $word2 the $lwword2. Find the length and the width of the rectangle.
$PAR
Length: \{ans_rule(15)\} in
$BR
Width: \{ans_rule(15)\} in
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($length)->cmp());
ANS(Compute($width)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} length: \($length\) in, width: \($width\) in
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();