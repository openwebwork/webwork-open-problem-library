# DESCRIPTION
# Asks find the length of the sides of a triangle given the information
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Equations and Inequalities')
## DBsection('Other Equations')
## KEYWORDS('grouping','factoring','equations')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "parserImplicitEquation.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("ImplicitEquation");
Context()->variables->set(x=>{limits=>[-50,50]});

$p = non_zero_random(-5,5);
$dispp = abs($p);
$h = abs($p) + random(3,7);

if ($p < 0) {
  $word1 = "longer";
  $word2 = "shorter";
  $word3 = "less";
  $ans = ImplicitEquation("x^2 + (x-$dispp)^2 = $h^2")->reduce;
} else {
  $word1 = "shorter";
  $word2 = "longer";
  $word3 = "more";
  $ans = ImplicitEquation("x^2 + (x+$dispp)^2 = $h^2")->reduce;
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Let \(x\) represent the length of the $word1 leg in a right triangle. If the $word2 leg is \($dispp\) $word3 than the $word1 leg and the hypotenuse has length \($h\), ${BBOLD}set up but do not solve${EBOLD} an equation to find the two side lengths.
$PAR
Equation: \{ans_rule(25)\} 
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();