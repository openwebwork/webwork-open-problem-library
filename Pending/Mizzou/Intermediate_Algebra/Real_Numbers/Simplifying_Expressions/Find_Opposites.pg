# DESCRIPTION
# Asks to find the opposites of two numbers
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('algebraic expressions')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals");
$case1 = random(1,2,1); # 1 - positive first, 2 - negative first
$case2 = random(1,2,1); # 1 - fraction first, 2 - fraction second
do {
  $den = random(2,59);
  $num = random(2,59);
} until ($num != $den && gcd($num,$den) != 1);
$a = random(20,99);
if ($case2 == 1) {
  if ($case1 == 1) {
    $firstexpn = "\frac{$num}{$den}";
    $ans1 = Fraction(-$num,$den);
  } else {
    $firstexpn = "-\frac{$num}{$den}";
    $ans1 = Fraction($num,$den);
  }
  
  if ($case1 == 1) {
    $secondexpn = "-$a";
    $ans2 = $a;
  } else {
    $secondexpn = "$a";
    $ans2 = -$a;
  }
} else {
  if ($case1 == 1) {
    $firstexpn = "$a";
    $ans1 = -$a;
  } else {
    $firstexpn = "-$a";
    $ans1 = $a;
  }
  
  if ($case1 == 1) {
    $secondexpn = "-\frac{$num}{$den}";
    $ans2 = Fraction($num,$den);
  } else {
    $secondexpn = "\frac{$num}{$den}";
    $ans2 = Fraction(-$num,$den);
  }
}
Context()->operators->undefine("+","-","*","^");


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Find the opposites of the following numbers and simplify if necessary:
$PAR
(a) $SPACE \($firstexpn\): \{ans_rule(20)\}
$PAR
(b) $SPACE \($secondexpn\): \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans1)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans2)->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} (a) \($ans1\), $SPACE (b) \($ans2\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();