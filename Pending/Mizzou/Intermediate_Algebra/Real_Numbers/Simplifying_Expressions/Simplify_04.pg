# DESCRIPTION
# Gives a number, opposite, or reciprocal and asks to find the others
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 01: Algebra, Mathematical Models, and Problem Solving')
## DBsection('Operations with Real Numbers and Simplifying Algebraic Expressions')
## KEYWORDS('real numbers')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextLimitedPolynomial.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("LimitedPolynomial-Strict");
@vars = ("x","y","z","p","q","m","n","k","u","v");
for ($i = 1; $i < scalar(@vars); $i++) {
  Context()->variables->add($vars[$i]=>"Real")
}

$c11 = random(0,scalar(@vars)-1,1);
do {$c12 = random(0,scalar(@vars)-1,1)} until ($c12 != $c11);
$var11 = $vars[$c11];
$var12 = $vars[$c12];
$den11 = random(2,12,1);
do {$den12 = random(2,12,1)} until ($den12 != $den11);
$num11 = 1;
$m1 = $num11/$den11;
$dispm1 = "\frac{$num11}{$den11}";
$num12 = 1;
$m2 = $num12/$den12;
$dispm2 = "\frac{$num12}{$den12}";
$p1 = $den11*random(2,5);
do {$p2 = $den11*random(2,5)} until ($p2 != $p1);
do {$p3 = $den12*random(2,10)} until ($p3/$den12 != $p1/$den11);
$p4 = random(2,8);
$dispexpn1 = "$dispm1 \left($p1 $var11 - $p2\right) - $dispm2 \left($p3 $var11 - $p4 $var12\right)";

$e11 = $m1*$p1 - $m2*$p3;
$e12 = $m2*$p4;
$e13 = -$m1*$p2;
$ans1 = Formula("$e11 $var11 + $e12 $var12 + $e13")->reduce;

$c21 = random(0,scalar(@vars)-1,1);
do {$c22 = random(0,scalar(@vars)-1,1)} until ($c22 != $c21);
$var21 = $vars[$c21];
$var22 = $vars[$c22];
$den21 = random(2,12,1);
do {$den22 = random(2,12,1)} until ($den22 != $den21);
do {$den23 = random(2,12,1)} until ($den23 != $den21 && $den23 != $den22);
$num21 = 1;
$n1 = $num21/$den21;
$dispn1 = "\frac{$num21}{$den21}";
$num22 = 1;
$n2 = $num22/$den22;
$dispn2 = "\frac{$num22}{$den22}";
$num23 = 1;
$n3 = $num23/$den23;
$dispn3 = "\frac{$num23}{$den23}";
$q1 = $den21*random(2,5);
do {$q2 = $den21*random(2,5)} until ($q2 != $q1);
do {$q3 = $den22*random(2,5)} until ($q3/$den22 != $q1/$den21);
do {$q4 = $den22*random(2,5)} until ($q4/$den22 != $q2/$den21 && $q4 != $q3);
$q5 = random(-1,1,2)*random(1,9);
$dispexpn2 = "$dispn1 \left($q1 $var21 - $q2 $var22\right) - $dispn2\left($q3 $var21 - $q4 $var22 + $q5\right) - $dispn3";

$e21 = $n1*$q1 - $n2*$q3;
$e22 = -$n1*$q2 + $n2*$q4;
$e23 = -$n2*$q5 - $n3;
$ans2 = Formula("$e21 $var21 + $e22 $var22 + $e23")->reduce;

Context("Fraction-NoDecimals")->texStrings;
$dispe11 = Compute("$num11*$p1/$den11 - $num12*$p3/$den12");
$dispe12 = Compute("$num12*$p4/$den12");
$dispe13 = Compute("-$num11*$p2/$den11");
$dispe21 = Compute("$num21*$q1/$den21 - $num22*$q3/$den22");
$dispe22 = Compute("-$num21*$q2/$den21 + $num22*$q4/$den22");
$dispe23 = Compute("-$num22*$q5/$den22 - $num23/$den23");
if ($dispe11 == -1) {
  $dispans1 = "-";
} elsif ($dispe11 != 1) {
  $dispans1 = $dispe11;
} else {
  $dispans1 = "";
}
$dispans1 = $dispans1.$var11;
if ($dispe12 == -1) {
  $dispans1 = $dispans1."-";
} elsif ($dispe12 != 1) {
  $dispans1 = $dispans1."+".$dispe12;
}
$dispans1 = $dispans1.$var12."+".$dispe13;

if ($dispe21 == -1) {
  $dispans2 = "-";
} elsif ($dispe21 != 1) {
  $dispans2 = $dispe21;
} else {
  $dispans2 = "";
}
$dispans2 = $dispans2.$var21;
if ($dispe22 == -1) {
  $dispans2 = $dispans2."-";
} elsif ($dispe22 != 1) {
  $dispans2 = $dispans2."+".$dispe22;
}
$dispans2 = $dispans2.$var22."+".$dispe23;


Context("LimitedPolynomial-Strict");
Context()->variables->are($var11=>"Real", $var12=>"Real",$var21=>"Real", $var22=>"Real");


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Simplify each expression:
$PAR
(a) \(\displaystyle $dispexpn1 = \) \{ans_rule(35)\}
$PAR
(b) \(\displaystyle $dispexpn2 = \) \{ans_rule(35)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans1->cmp());
ANS($ans2->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} (a) \(\displaystyle $dispans1\), $SPACE (b) \(\displaystyle $dispans2\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();