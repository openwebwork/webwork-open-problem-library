# DESCRIPTION
# 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter()
## DBsection()
## KEYWORDS()
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "AnswerFormatHelp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;

#
# Subclass the numeric functions
#
package my::Function::numeric;
our @ISA = ('Parser::Function::numeric');

#
# Override sqrt() to return a special value (usually 1) when evaluated
# effectively eliminating it from the product.
#
sub sqrt {
  my $self = shift;
  my $value = $self->context->flag("setSqrt");
  return $value+1 if $value && $_[0] == 1; # force sqrt(1) to be incorrect
  return $value if $value;
  return $self->SUPER::sqrt(@_);
}

#
# end of subclass
#
package main;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@vars = ("x","y","z","a","b","c","p","q","r");
$ch1 = random(0,scalar(@vars)-1,1);
do {$ch2 = random(0,scalar(@vars)-1,1)} until ($ch2 != $ch1);
$v1 = $vars[$ch1];
$v2 = $vars[$ch2];
Context()->variables->are($v1=> ["Real", limits => [0,2]], $v2=> ["Real", limits => [0,2]]);
Context()->functions->set(sqrt=>{class=>'my::Function::numeric'});
Context()->flags->set(reduceConstantFunctions=>0);

$case = random(0,1,1);
$a = list_random(2,3,5,6,7,8,10,11,13);
$b = non_zero_random(-9,9);
if ($case == 0) {
  $disp = "\left(\sqrt{$a} + $b $v1\right)^2";
  if ($b == 1) {
    $disp = "\left(\sqrt{$a} + $v1\right)^2";    
  } elsif ($b == -1) {
    $disp = "\left(\sqrt{$a} - $v1\right)^2";    
  }
  $e1 = ($b)**2;
  $e2 = abs(2*$b);
  $ans = Formula("$e1 $v1^2 + $a + $e2 $v1 sqrt($a)");
  if ($b < 0) { 
    $ans = Formula("$e1 $v1^2 + $a   - $e2 $v1 sqrt($a)");
  }
} else {
  $disp = "\left(\sqrt{$a $v2} + $b $v1\right)^2";
  if ($b == 1) {
    $disp = "\left(\sqrt{$a $v2 } + $v1\right)^2";    
  } elsif ($b == -1) {
    $disp = "\left(\sqrt{$a $v2} - $v1\right)^2";    
  }
  $e1 = ($b)**2;
  $e2 = abs(2*$b);
  $ans = Formula("$e1 $v1^2 + $a $v2 + $e2 $v1 sqrt($a $v2)");
  if ($b < 0) { 
    $ans = Formula("$e1 $v1^2 + $a $v2   - $e2 $v1 sqrt($a $v2)");
  }
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Simplify.  Assume that all expressions under radicals represent nonnegative numbers.
$PAR
$BCENTER
\($disp =\)  \{ans_rule(20)\}
$ECENTER
$PAR
Write your answer using radical notation if necessary.  
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS( $ans-> cmp( checker => sub {
  my ($correct,$student,$ans) = @_;
  return 0 if $ans->{isPreview} || $correct != $student;
  #
  #  Get parsed formula for student and correct answers
  #
  $student = $ans->{student_formula};
  $correct = $correct->{original_formula} if defined $correct->{original_formula};
  #
  # check if equal when sqrt's are replaced by 1
  #
  Context()->flags->set(setSqrt => 101);
  delete $correct->{test_values}, $student->{test_values};
  my $OK = ($correct == $student);
  Context()->flags->set(setSqrt => 0);
  #
  Value::Error("Check to see if your answer is simplified.") unless $OK;
  return $OK;
  }, formatStudentAnswer=>"reduced"
  )
);


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} 
  \{ AnswerFormatHelp("exponents", "Click here for help writing exponents and square roots.") \}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();