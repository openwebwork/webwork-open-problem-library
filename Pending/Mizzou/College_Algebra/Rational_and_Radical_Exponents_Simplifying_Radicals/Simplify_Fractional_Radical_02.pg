# DESCRIPTION
# 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter()
## DBsection()
## KEYWORDS()
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextLimitedPowers.pl",
  "parserMultiAnswer.pl",
  "unionTables.pl",
  "AnswerFormatHelp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
LimitedPowers::OnlyPositiveIntegers();
@vars = ("x","y","z","r","s","t","m","n","p","q");
$ch1 = random(0,scalar(@vars)-1,1);
do {$ch2 = random(0,scalar(@vars)-1,1)} until ($ch2 != $ch1);
$v1 = $vars[$ch1];
$v2 = $vars[$ch2];
Context()->variables->are($v1=>"Real", $v2=>"Real");

$r = 2;
$p1 = $r*random(2,3)+non_zero_random(-$r+1,$r-1);
$q1 = $r*random(2,3)+non_zero_random(-$r+1,$r-1);
do {$p2 = non_zero_random(-7,7,1)} until ($p1 - $p2 > 1);
do {$q2 = non_zero_random(-7,7,1)} until ($q1 - $q2 > 1 && $q2 != 1);
$c = list_random(3,5);
$a = 2;
$ar = ($a)**($r+1);
$b = $ar*$c;

$ap1 = ($p1-$p2) % $r;
$ap2 = floor(($p1 - $p2)/$r); 
$aq1 = ($q1-$q2) % $r;
$aq2 = floor(($q1-$q2)/$r);

$f = "\displaystyle \frac{\sqrt{$b $v1^{$p1} $v2^{$q1}}}{\sqrt{$c $v1^{$p2} $v2^{$q2}}}";
if ($ap1 == 0 && $aq1 == 0) {
  $num = Formula("$a $v1^($ap2) $v2^($aq2) sqrt($a)")->reduce;
  $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a}";
} elsif ($ap1 == 0) {
  $num = Formula("$a $v1^($ap2) $v2^($aq2) sqrt($a $v2^($aq1))")->reduce;
  if ($aq1 == 1) {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v2}";
  } else {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v2^{$aq1}}";
  }
} elsif ($aq1 == 0) {
  $num = Formula("$a $v1^($ap2) $v2^($aq2) sqrt($a $v1^($ap1))")->reduce;
  if ($ap1 == 1) {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v1}";
  } else {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v1^{$ap1}}";
  }
} else {
  $num = Formula("$a $v1^($ap2) $v2^($aq2) sqrt($a $v1^($ap1) $v2^($aq1))")->reduce;
  if ($ap1 == 1 && $aq1 == 1) {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v1 $v2}";
  } elsif ($ap1 == 1) {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v1 $v2^{$aq1}}";
  } elsif ($aq1 == 1) {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v1^{$ap1} $v2}";
  } else {
    $dnum = "$a $v1^{$ap2} $v2^{$aq2} \sqrt{$a $v1^{$ap1} $v2^{$aq1}}";
  }
}
$den = Formula("1")->reduce;

$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};
 
      if ( ( $f1==$f1stu &&  $f2==$f2stu) || 
           (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif ( $f1==$f1stu || -$f1==$f1stu) {
          return [1,0];
      } elsif ( $f2==$f2stu || -$f2==$f2stu ) {
          return [0,1];
      } elsif ( ($numbogus==$f1stu || -$numbogus==$f1stu) ||
                ($denbogus==$f2stu || -$denbogus==$f2stu) ) {
          $self->setMessage(1,"Both answer blanks must be filled");
          $self->setMessage(2,"Both answer blanks must be filled");
          return [0,0];
      } elsif ( $f1*$f2stu==$f1stu*$f2 ) {
          $self->setMessage(1,"Simplify your answer further");
          $self->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);

if ($displayMode eq 'TeX') {
  $displayfrac =
  "\[ $f = ".$multians->ans_rule(10).$multians->ans_rule(10)." \]";
} else {
  $displayfrac =
  ColumnTable(
  "\( \displaystyle $f = \)",
  $multians->ans_rule(20).$BR.$HR.$multians->ans_rule(20),
  indent => 0, separation => 10, valign => "MIDDLE"
  );
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Simplify the radical expression.  Assume that all variables represent positive quantities.
$PAR
$BCENTER
$displayfrac
$ECENTER
$BR
Write your answer using radical notation if necessary.  
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($multians->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \(\displaystyle $dnum\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD}
  \{ AnswerFormatHelp("exponents", "Click here for help writing exponents and square roots.") \}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();