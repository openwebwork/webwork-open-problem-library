# DESCRIPTION
# Asks about time of travel for a plane with tailwind or headwind.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('functions', 'algebra, application of linear equations')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.5')
## Problem1('61 62')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextCurrency.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$case = random(0,1,1); # 0 - headwind, 1 - tailwind
$t = random(1.5,4,0.5);
do {
  $stillsp = random(300,600,25);
  $windsp = random(15,45,5);
  if ($case == 0) {
    $dist = ($stillsp - $windsp)*$t;
  } else {
    $dist = ($stillsp + $windsp)*$t;
  }
} until ($dist == floor($dist));


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
if ($case == 0) {
  BEGIN_TEXT
  An airplane that travels \($stillsp\) mph in still air encounters a \($windsp\) mph headwind. How long will it take the plane to travel \($dist\) miles into the wind?
  $PAR
  Time Taken to Travel: \{ans_rule(6)\} hours
  END_TEXT
} else {
  BEGIN_TEXT
  An airplane that can travel \($stillsp\) mph in still air is flying with a \($windsp\) mph tailwind. How long will it take the plane to travel \($dist\) miles with the wind?
  $PAR
  Time Taken to Travel: \{ans_rule(6)\} hours
  END_TEXT
}


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($t)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $t hours
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();