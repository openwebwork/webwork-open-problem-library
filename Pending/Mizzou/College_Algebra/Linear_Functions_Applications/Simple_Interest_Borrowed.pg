# DESCRIPTION
# Asks to determine amount borrowed
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('functions', 'algebra, application of linear equations', 'simple interest rate')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.5')
## Problem1('43')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextCurrency.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
do {
  $total = random(1100,2500,5); 
  $P = random($total-200,$total-40,1);
  $r = sprintf("%0.1f", 100*($total-$P)/$P);

  Context("Currency")->currency->addSymbol("dollars","dollar");
  $P = Currency($P);
  $total = Currency($total);
} until ($total == $P*(1+$r/100) && 2 < $r && $r < 8);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Clare borrowed money from her parents at \($r\)$PERCENT simple interest to help pay her tuition. At the end of 1 year, she owed a total of \($total\) in principal and interest. How much did she borrow?
$PAR
Amount Borrowed: \{ans_rule(20)\}  (Round your answer to the nearest cent and include units.)
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($P)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($P\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();