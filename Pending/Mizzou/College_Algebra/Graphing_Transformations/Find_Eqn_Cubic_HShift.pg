# DESCRIPTION
# Gives the graph of a transformed cubic function and asks for the 
# correct equation which has this graph.
# The graph always has horizontal shift.
# The graph has nothing else.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Transformations of Functions')
## KEYWORDS('graph transformations','transformations of functions','cubic')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "parserAssignment.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswer = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$maxXVal = 11;
$maxYVal = $maxXVal;
$gridWidth = 500;
$gridHeight = 500;

# initialize graphs, draw grid manually, and label axes
$graph = init_graph(-$maxXVal, -$maxYVal, $maxXVal, $maxYVal, size => [$gridWidth, $gridHeight]);

for ($i = -$maxYVal + 1; $i < $maxYVal; $i++) {
  for ($j = 0; $j < 4; $j++) {
    if ($i != 0) {
      $graph->moveTo(-$maxXVal, $i);
      $graph->lineTo($maxXVal, $i, 'gray', 1);
    }
  }
}

for ($i = -$maxXVal+1; $i < $maxXVal+1; $i++) {
  for ($j = 0; $j < 4; $j++) {
    if ($i != 0) {
      $graph->moveTo($i, -$maxYVal);
      $graph->lineTo($i, $maxYVal, 'gray', 1);
    }
  }
}

for ($j = 0; $j < 4; $j++) {
  $graph->moveTo(-$maxXVal, 0);
  $graph->arrowTo($maxXVal, 0, 'black', 1);
  $graph->arrowTo(-$maxXVal, 0, 'black', 1);
  $graph->moveTo(0, -$maxYVal);
  $graph->arrowTo(0, $maxYVal, 'black', 1);
  $graph->arrowTo(0, -$maxYVal, 'black', 1);
  $graph->lb(new Label($maxXVal-0.1, -0.2, 'x', 'black', 'top', 'right'));
  $graph->lb(new Label(0.4, $maxYVal-0.1, 'y', 'black', 'top', 'left'));
  $graph->lb(new Label(1,-0.1,'1', 'black', 'top','center'));
  $graph->lb(new Label(5,-0.1,'5', 'black', 'top','center'));
  $graph->lb(new Label(10,-0.1,'10', 'black', 'top','center'));
  $graph->lb(new Label(-5,-0.1,'-5', 'black', 'top','center'));
  $graph->lb(new Label(-10,-0.1,'-10', 'black', 'top','center'));
  
  $graph->lb(new Label(-0.1,0.5,'1', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,4.5,'5', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,9.5,'10', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,-5.5,'-5', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,-10.5,'-10', 'black', 'bottom', 'right'));
}

# setup coefficients and formula for answer
Context()->variables->are(x => 'Real', y => 'Real');
parser::Assignment->Allow;
$pad = floor($maxXVal/2);

$HShift = 1; # 0 - has no shift, 1 - has
$VShift = 0; # 0 - has no shift, 1 - has
$VRefl = 0; # 0 - has no refl, 1 - has
$VStrShr = 0; # 0 - has none, 1 - has str, 2 - has shr

$b = 0; # hori shift factor
if ($HShift == 1 && $VStrShr != 2) {
  $b = non_zero_random(-$maxXVal+2,$maxXVal-2,1);
} elsif ($HShift == 1) {
  $b = non_zero_random(-$maxXVal+$pad,$maxXVal-$pad,1);
}

$c = 0; # vert shift factor
if ($VShift == 1 && $VRefl == 0) {
  $c = non_zero_random(-$maxXVal+2,$pad,1);
} elsif ($VShift == 1 && $VRefl == 1) {
  $c = non_zero_random(-$pad,$maxXVal-2,1);
}

@possVSSR = (); # possible vert str/shr/reflect factors
if ($VRefl == 0 && $VStrShr == 0) {
  @possVSSR = (1);
} elsif ($VRefl == 1 && $VStrShr == 0) {
  @possVSSR = (-1);
}

$a = list_random(@possVSSR);
if ($VStrShr == 1) {
  if ($VRefl == 0) {
    for ($a = 2; ($a + $c) < $maxXVal-$pad/2; $a++) {
      push(@possVSSR, $a);
    }
  } else {
    for ($a = 2; (-$a + $c) > -$maxXVal+$pad/2; $a++) {
      push(@possVSSR, -$a);
    }
  }
  $a = list_random(@possVSSR);
} elsif ($VStrShr == 2) {
  if ($VRefl == 0) {
    @possVSSR = (3,9);
  } else {
    @possVSSR = (-3,-9);
  }
  $a = 1/list_random(@possVSSR);
}

$expn = sub { my $x = shift(); return $a*(($x-$b)**3)+$c; };
$fun = new Fun($expn, $graph);
$fun->domain(-$maxXVal,$maxXVal);
$fun->steps(1500);
$origeqn = "y = x^3";
$answer = Formula("y = $a*((x-$b)^3)+$c")->reduce;

$dispans = "y = ";
if ($a == -1) {
  $dispans = ($dispans)."-";
} elsif ($a != 1) {
  if (abs($a) < 1) {
    if ($a < 0) {
      $dispans = ($dispans)."-\frac{1}{".abs(1/$a)."}";
    } else {
      $dispans = ($dispans)."\frac{1}{".abs(1/$a)."}";
    }
  } else {
    $dispans = ($dispans).($a);
  }
}

if ($b == 0) {
  $dispans = ($dispans)."x^2";
} else {
  $dispans = ($dispans)."\left(x +".(-$b)."\right)^3";
}

if ($c != 0) {
  $dispans = ($dispans)."+".($c);
}

$expno = sub { my $x = shift(); return ($x)**3 };
$funo = new Fun($expno, $graph);
$funo->domain(-$maxXVal,$maxXVal);
$funo->steps(1500);
$funo->color(green);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Write an equation that represents the function graphed in blue by using transformations from \($origeqn\), which is graphed in green.

$PAR
$BCENTER
\{ image(insertGraph($graph), width=>$gridWidth, height=>$gridHeight, tex_size=>500 ); \}
$ECENTER 

$BR
Equation: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($answer->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD
    \($dispans\)
    $PAR
    END_TEXT
} else {
    BEGIN_TEXT
    $PAR
    ${BBOLD}Help:${EBOLD} \{ helpLink("equations", "Click here for help entering equations as answers.") \}
    $BR
    END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization. Edited/Updated in 2013.
$BR
Desc: Find formula of the function that is graphed in blue. 
$BR Function Type: cubic
$BR Transformations: horiz shift');
ENDDOCUMENT();