# DESCRIPTION
# 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter()
## DBsection()
## KEYWORDS()
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "contextLimitedPoint.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals");
$a = non_zero_random(-15,15);

$case = random(0,1,1);
$dcase = random(0,1,1);

if ($case == 0) {
  if ($dcase == 0) {
    $eqn = "y = $a";
  } else {
    $eqn = "y - $a = 0";
  }
  $dans = "the slope is zero and the \(y\)-intercept is \((0,$a)\)";
} else {
  if ($dcase == 0) {
    $eqn = "x = $a";
  } else {
    $eqn = "x - $a = 0";
  }
  $dans = "the slope is undefined and there is no \(y\)-intercept";
}

Context("LimitedPoint")->strings->add("undefined"=>{}, "none"=>{});
if ($case == 0) {
  $m = Compute("0");
  $yint = Compute("(0,$a)");
} else {
  $yint = String("none");
  $m = String("undefined");
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Determine the slope and \(y\)-intercept of the line 
$PAR
\[$eqn\]
$PAR
Slope: \{ans_rule(10)\} (Write ${BBOLD}undefined${EBOLD} if the slope is undefined.)
$PAR
\(y\)-intercept: \{ans_rule(10)\} (Write as an ordered pair, or if no \(y\)-intercept exists, write ${BBOLD}none${EBOLD}.)
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($m->cmp(studentsMustReduceFractions=>1));
ANS($yint->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $dans
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();