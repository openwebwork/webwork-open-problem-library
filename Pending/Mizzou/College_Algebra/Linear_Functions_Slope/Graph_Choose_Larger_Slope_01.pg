# DESCRIPTION
# 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter()
## DBsection()
## KEYWORDS()
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "parserPopUp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("1");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$maxx = 15;
$maxy = $maxx;
$minx = -$maxx;
$miny = -$maxy;
$gsize = 500;
$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($j = $minx; $j <= $maxx; $j++) {
  $graph->moveTo($j,$miny);
  $graph->lineTo($j,$maxy,'gray',1);
}
for ($j = $miny; $j <= $maxy; $j++) {
  $graph->moveTo($minx,$j);
  $graph->lineTo($maxx,$j,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));

if (($j != 0 && $j % 5 == 0) || $j == 1) {
  $graph->lb(new Label($j,-0.1,$j, 'black', 'top','center')); 
}

if (($j != 0 && $j % 5 == 0) || $j == 1) {
  $graph->lb(new Label(-0.1,$j,$j, 'black', 'middle', 'right'));
}

do {
  $m1 = non_zero_random(-7,7)/random(1,7);
  $m2 = non_zero_random(-7,7)/random(1,7);
} until ($m1 != $m2);
$b1 = random(-6,6);
$b2 = random(-6,6);

if ($m1 > $m2) {
  $pop = PopUp(["select", "red", "blue"], "red");
} else {
  $pop = PopUp(["select", "red", "blue"], "blue");
}

$L1 = sub { my $x = shift(); return ($m1*$x + $b1); };
$L2 = sub { my $x = shift(); return ($m2*$x + $b2); };
$F1 = new Fun($L1,$graph);
$F2 = new Fun($L2,$graph);
$F1->steps(1500);
$F2->steps(1500);
$F1->color('red');
$F2->color('blue');
$F1->weight(4);
$F2->weight(4);

$scale = 0.6;
$fig = image(insertGraph($graph), width=>$gsize*$scale, height=>$gsize*$scale, tex_size=>500 );


###########################################################################
# state the problem 
###########################################################################
BEGIN_TEXT
$BCENTER
$fig
$ECENTER 
$PAR
Determine which line has larger slope: \{ $pop->menu() \}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($pop->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem, since MC problem first attempt is skipped by
# using an if statement around problem statement and placing a message
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \{$pop->correct_ans()\}
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Note:${EBOLD} You may click the graph to enlarge it.
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus();

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();