##DESCRIPTION
##  College Algebra Review: Factoring by Grouping
##ENDDESCRIPTION

##KEYWORDS('algebra', 'factoring', 'grouping')

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Expanding and Factoring')
## Date('Spring 2012')
## Author1('David Covert')
## Author2('Teri Christiansen')
## Institution('University of Missouri')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('R.4')
## Problem1('')


########################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PeriodicRerandomization.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"PGcourse.pl",
"parserMultiAnswer.pl",
);

TEXT(beginproblem());

#######################################
#  Set-up

Context("Numeric");
Context()->variables->are(s=>"Real",t=>"Real");

$a = list_random(2,4,8);
$b = list_random(3,5,7);
$c = list_random(-2,-4,2,4);
$d = list_random(3,5,7,-3);
$e1 = $a*$c;
$e2 = $b*$c;
$e3 = $a*$d;
$e4 = $b*$d;

$fac1 = Formula(" $a s + $b t ");
$fac2 = Formula(" $c s^2 + $d  ")->reduce;

$expression = "\( $e1 s^3 + $e2 s^2t + $e3 s + $e4 t \)";

$multians = MultiAnswer($fac1, $fac2)->with(
  singleResult => 0,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};
      if ( ($f1 == $f1stu && $f2 == $f2stu) ||
           ($f1 == $f2stu && $f2 == $f1stu) ) {
          return [1,1];
      } else {
          if ($f1 == $f1stu || $f2 == $f1stu) {
              return [1,0];
          } elsif ($f1 == $f2stu || $f2 == $f2stu) {
              return [0,1];
          } else {
              return [0,0];
          }
      }
  }
);
################################################
#  Main text

BEGIN_TEXT

Factor the expression $expression.  Simplify your 
answer as much as possible.
$BR
$BR
\( \big( \)
\{ $multians->ans_rule(10) \}
\( \big) \big( \)
\{ $multians->ans_rule(10) \}
\( \big) \)
\{ AnswerFormatHelp("formula") \}
$PAR
$BR
END_TEXT


################################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS($multians->cmp());

PeriodicRerandomization("3"); #Problem resets itself after 3 attempts

PeriodicStatus(
 "Generate a new version of this problem",
 "You have ${attempts_modp_remaining} attempt(s) remaining before you will receive a new version of this problem."
 );

COMMENT('MathObject version', 'Features PeriodicRerandomization');
ENDDOCUMENT();