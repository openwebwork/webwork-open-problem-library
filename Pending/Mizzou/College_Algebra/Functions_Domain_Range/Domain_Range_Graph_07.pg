# DESCRIPTION
# Gives the graph of sine or cosine graph, along x-axis or y-axis
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Graphs of Functions')
## KEYWORDS('domain', 'range', 'functions')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$maxXVal = 11;
$maxYVal = $maxXVal;
$gridWidth = 500;
$gridHeight = 500;

# initialize graphs, draw grid manually, and label axes
$graph = init_graph(-$maxXVal, -$maxYVal, $maxXVal, $maxYVal, size => [$gridWidth, $gridHeight]);

for ($i = -$maxYVal + 1; $i < $maxYVal; $i++) {
  for ($j = 0; $j < 4; $j++) {
    if ($i != 0) {
      $graph->moveTo(-$maxXVal, $i);
      $graph->lineTo($maxXVal, $i, 'gray', 1);
    }
  }
}

for ($i = -$maxXVal+1; $i < $maxXVal+1; $i++) {
  for ($j = 0; $j < 4; $j++) {
    if ($i != 0) {
      $graph->moveTo($i, -$maxYVal);
      $graph->lineTo($i, $maxYVal, 'gray', 1);
    }
  }
}

for ($j = 0; $j < 4; $j++) {
  $graph->moveTo(-$maxXVal, 0);
  $graph->arrowTo($maxXVal, 0, 'black', 1);
  $graph->arrowTo(-$maxXVal, 0, 'black', 1);
  $graph->moveTo(0, -$maxYVal);
  $graph->arrowTo(0, $maxYVal, 'black', 1);
  $graph->arrowTo(0, -$maxYVal, 'black', 1);
  $graph->lb(new Label($maxXVal-0.1, -0.2, 'x', 'black', 'top', 'right'));
  $graph->lb(new Label(0.4, $maxYVal-0.1, 'y', 'black', 'top', 'left'));
  $graph->lb(new Label(1,-0.1,'1', 'black', 'top','center'));
  $graph->lb(new Label(5,-0.1,'5', 'black', 'top','center'));
  $graph->lb(new Label(10,-0.1,'10', 'black', 'top','center'));
  $graph->lb(new Label(-5,-0.1,'-5', 'black', 'top','center'));
  $graph->lb(new Label(-10,-0.1,'-10', 'black', 'top','center'));
  
  $graph->lb(new Label(-0.1,0.7,'1', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,4.7,'5', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,9.7,'10', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,-5.3,'-5', 'black', 'bottom', 'right'));
  $graph->lb(new Label(-0.1,-10.3,'-10', 'black', 'bottom', 'right'));
}

for ($i = 0; $i < random(20,50); $i++) { # more random???
  $case1 = random(0,1,1); # 0 - cosine, 1 - sine
  $case2 = random(0,1,1); # 0 - along x-axis, 1 - y-axis
}
Context("Interval");
if ($case1 == 0) {
  $a = random(4,10);
  $k = random(2,5,1);
  $expn0 = sub { my $t = shift(); $t };
  $expn1 = sub { my $t = shift(); $a*cos(pi*$t/$k) };
} else {
  $a = random(4,10);
  $k = random(2,5,1);
  $expn0 = sub { my $t = shift(); $t };
  $expn1 = sub { my $t = shift(); $a*sin(pi*$t/$k) };
}
if ($case2 == 0) {
  $fun = new Fun($expn0,$expn1, $graph);
  $fun->domain(-15,15);
  $domain = Interval("(-inf,inf)");
  $range = Interval("[-$a,$a]");
} else {
  $fun = new Fun($expn1,$expn0, $graph);
  $fun->domain(-15,15);
  $range = Interval("(-inf,inf)");
  $domain = Interval("[-$a,$a]");
}
$fun->weight(2);
$fun->steps(1500);

HEADER_TEXT(<<'EOF');
<meta http-equiv="Cache-control" content="no-cache">
EOF

###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$PAR
$BCENTER
\{ image(insertGraph($graph), width=>$gridWidth, height=>$gridHeight, tex_size=>500 ); \}
$ECENTER 
$PAR

Given the graph of the relation above, find the following:
$PAR
(a) Domain: \{ans_rule(20)\}
$PAR
(b) Range: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($domain)->cmp());
ANS(Compute($range)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD
    $PAR
    (a) \($domain\)
    $PAR
    (b) \( $range \)
    $PAR
    END_TEXT
} else {
    BEGIN_TEXT
    $PAR
Write your answer using interval notation. $PAR
    ${BBOLD}Help:${EBOLD} \{ AnswerFormatHelp("intervals","Click here for help entering intervals.") \}
    $BR
    END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();