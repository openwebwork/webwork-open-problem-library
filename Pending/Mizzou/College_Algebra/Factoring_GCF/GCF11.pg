##DESCRIPTION
##  College Algebra Review: Introduction to Factoring: GCD
##ENDDESCRIPTION

##KEYWORDS('algebra', 'factoring', 'gcd')

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Expanding and Factoring')
## Date('Spring 2012')
## Author1('David Covert')
## Author2('Teri Christiansen')
## Institution('University of Missouri')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('R.3')
## Problem1('')


########################################
#  Initialization




DOCUMENT();

loadMacros(
"PGstandard.pl",
"PeriodicRerandomization.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"AnswerFormatHelp.pl",
"PGcourse.pl",
);

TEXT(beginproblem());

#######################################
#  Set-up

Context("Numeric");

$a = list_random(2,4,8,16);
$b = random(2,5,1);
$c = random(3,13,2);

$fac1 = Formula("(x + $b)");
$fac2 = Formula("($a*x + $c)");

$expression = "\( $a x (x + $b) + $c (x + $b) \)";

$multians = MultiAnswer($fac1, $fac2)->with(
  singleResult => 0,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};
      if ( ($f1 == $f1stu && $f2 == $f2stu) ||
           ($f1 == $f2stu && $f2 == $f1stu) ) {
          return [1,1];
      } else {
          if ($f1 == $f1stu || $f2 == $f1stu) {
              return [1,0];
          } elsif ($f1 == $f2stu || $f2 == $f2stu) {
              return [0,1];
          } else {
              return [0,0];
          }
      }
  }
);


################################################
#  Main text

BEGIN_TEXT

Rewrite the expression $expression by taking 
out the greatest common factor.
$BR
$BR
\( \big( \)
\{ $multians->ans_rule(10) \}
\( \big) \big( \)
\{ $multians->ans_rule(10) \}
\( \big) \)
\{ AnswerFormatHelp("formula") \}
$PAR $BR
END_TEXT


################################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS($multians->cmp());

PeriodicRerandomization("3"); #Problem resets itself after 3 attempts

PeriodicStatus(
 "Generate a new version of this problem",
 "You have ${attempts_modp_remaining} attempt(s) remaining before you will receive a new version of this problem."
 );

COMMENT('MathObject version', 'Features PeriodicRerandomization');



ENDDOCUMENT();