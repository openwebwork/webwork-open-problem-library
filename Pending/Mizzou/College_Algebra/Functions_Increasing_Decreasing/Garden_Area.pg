# DESCRIPTION
# Asks for the area function, domain of function, and to determine the
# dimensions that yield max area based on the graph
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('relative extrema', 'area', 'domain', 'range')
## Author1('Rick Lynch')
## Author2('Teri Christiansen')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "contextInequalities.pl",
  "unionTables.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$secs = random(2,4);
$tfence = 2*($secs+1)*random(3,10,1);
$area = Formula("-($secs+1) x^2 + $tfence x");
$width = $tfence/(2*($secs+1));
$length = ($tfence - ($secs+1)*$width);
$maxarea = $area->eval(x=>$width);

Context("Inequalities-Only")->variables->are(x=>"Real");
$domain = Compute("0 < x < $tfence/($secs+1)");

if ($secs == 2) {
  $dispsecs = "two";
} elsif ($secs == 3) {
  $dispsecs = "three";
} else {
  $dispsecs = "four";
}

$disparea = "A(x) = ".(-($secs+1))."x^2 + $tfence x";

$minx = -$width/4;
$miny = -$maxarea/8;
$maxx = 2*$width+$width/8;
$maxy = $maxarea+$maxarea/8;
$gsize = 540*2/3;
$disp = "($width,$maxarea)";

$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, $maxy/100, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label($width/12, $maxy-$maxy/100, 'A(x)', 'black', 'top', 'left'));
$graph->lb(new Label($width+$width/20, $maxarea+$maxarea/45, $disp, 'black', 'bottom', 'left'));
$graph->stamps(new Circle($width,$maxarea,5,'blue','blue'));


$expn = sub { my $x = shift(); -($secs+1)*(($x)**2) + $tfence*$x };
$fun = new Fun($expn,$graph);
$fun->domain($minx,$maxx);
$fun->steps(1000);

$fig1 = image( "Garden_$secs.png", width=>$gsize, height=>147, tex_size=>500 );
$fig2 = image(insertGraph($graph), width=>$gsize, height=>$gsize, tex_size=>500 );



###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$BCENTER
\{
BeginTable().
  AlignedRow([$fig1, $fig2]).
  TableSpace(20,15).
  AlignedRow(["Figure 1","Figure 2"]).
EndTable();
\}
$ECENTER
$PAR

Tessa has $tfence ft of fencing available to construct a fence that will divide her garden into $dispsecs rectangular sections. Her house forms one side of the garden and \(x\) represents the width, as shown in Figure 1.
$PAR 
(a) Express the total area of the $dispsecs sections as a function of x.
$PAR
$SPACE $SPACE $SPACE\(A(x) =\) \{ans_rule(20)\}
$PAR
(b) Find the domain of the function. Write your answer as a compound inequality involving \(x\).
$PAR
$SPACE $SPACE $SPACE Domain of \(A(x)\): \{ans_rule(20)\}
$PAR
(c) Using the graph of \(A(x)\) shown in Figure 2, determine the dimensions that yield the maximum area.
$PAR
$SPACE $SPACE $SPACE Width: \{ans_rule(5)\} ft
$PAR
$SPACE $SPACE $SPACE Length: \{ans_rule(5)\} ft
$PAR

END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($area)->cmp());
ANS(Compute($domain)->cmp());
ANS(Compute($width)->cmp());
ANS(Compute($length)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD
    $PAR
    (a) \($disparea\)
    $PAR
    (b) \($domain\)
    $PAR
    (c) width is $width ft, length is $length ft
    $PAR
    END_TEXT
} else {
    BEGIN_TEXT
    $PAR
    ${BBOLD}Help:${EBOLD} \{AnswerFormatHelp("formulas", "Click here for help entering formulas")\} or \{AnswerFormatHelp("inequalities", "click here for help entering inequalities")\}.
    $BR
    END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();