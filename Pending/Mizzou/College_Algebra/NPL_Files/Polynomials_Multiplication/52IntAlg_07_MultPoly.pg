###DESCRIPTION
## Multiplying Polynomials
## 
##ENDDESCRIPTION
## DBsubject('Intermediate Algebra')
## DBchapter('Ch 05: Polynomials, Polynomial Functions, and Factoring')
## DBsection('Multiplication of Polynomials')
## KEYWORDS('polynomials')
## TitleText1('Essentials of Intermediate Algebra')
## EditionText1('1')
## AuthorText1('Blitzer')
## Section1('5.2')
## Problem1('')
## Author('RA Cruz')
## Institution('The College of Idaho')
## Date: 2007/10
# Pulled from NPL: Library/CollegeOfIdaho/setAlgebra_05_02_MultiplyPolynomials/52IntAlg_07_MultPoly.pg
# Edited for Periodic Re-randomization by Rick Lynch @ Mizzou

DOCUMENT(); # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "contextLimitedPolynomial.pl",
 "PeriodicRerandomization.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");

######################################
#  Setup

Context("LimitedPolynomial-Strict");
Context()->variables->are(a=>'Real',b=>'Real');

$a= random(1,7,1);
($b1,$b0)= (random(2,5,1),non_zero_random(-3,3,1));

$n1=random(2,4,1);
$n2=random(2,4,1);
$n3=random(2,4,1);

$poly1 = nicestring([$a],["a b^$n1"]);
$poly2 = nicestring([$b1,$b0],["a^$n2 b^$n3","a b"]);

######################################
#  Main text

BEGIN_TEXT
Multiply and simplify:  
$PAR
\( $poly1 ( $poly2 )  = \) \{ ans_rule(40) \} 
END_TEXT

######################################
#  Answer

($c1,$c0) = ($a*$b1,$a*$b0);
($ae1,$ae0) = ($n2+1,2);
($be1,$be0) = ($n1+$n3,$n1+1);
$ans = Formula("$c1*a^$ae1*b^$be1 + $c0*a^$ae0*b^$be0")->reduce;
ANS($ans->cmp); 

$showPartialCorrectAnswers = 1;

Context()->texStrings;
###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();