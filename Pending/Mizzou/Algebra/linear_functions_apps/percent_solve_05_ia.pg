# DESCRIPTION
# Asks about the salary compensation of someone compared to average.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('functions', 'algebra, application of linear equations')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.5')
## Problem1('36')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextCurrency.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Currency")->currency->addSymbol("dollars","dollar");
$lowsal = Currency(random(35000,40000,100));
$pcnthigh = random(5,20,1);
$highsal = (1+$pcnthigh/100)*$lowsal;
#$lowsal = $highsal/(1+$pcnthigh/100);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
The average salary of a government worker is \($highsal\) per year. Given that this is about \($pcnthigh %\) percent higher than the yearly salary of a private-sector worker, find the salary of the private-sector worker.
$PAR
Private-Sector Salary: \{ans_rule(20)\}  (Round your answer to the nearest cent and include units.)
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($lowsal)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($lowsal\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();