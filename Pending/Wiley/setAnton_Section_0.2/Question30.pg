# ************************************
#   Comments + Keyword Clarification
#
#    Anton, Calculus, 0.2.30
# ************************************
# DESCRIPTION
# Evaluate function values at specific values of x for f(x) = sqrt(x)
#
# ENDDESCRIPTION
## DBsubject(Algebra)
## DBchapter(Functions)
## Institution(John Wiley & Sons)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Anton')
## EditionText1('9')
## Section1('0.2')
## Problem1('30')
## KEYWORDS('Functions', 'Polynomial')
#***************************************************************
#   Initialization - Load standard PG and MathObjects macros   
#***************************************************************
DOCUMENT();
loadMacros("PGstandard.pl","MathObjects.pl","alignedChoice.pl","littleneck.pl");
#
rand_button();
# Set Up - Set up variable context and formulation of problem
#
$CT = Context("Numeric");
$CT->flags->set(limits=>[0,4]);
#************************************
#  Create function of form sqrt(x)
#************************************
$Gx = Compute("sqrt(x)");
#************************
#   (a) Find g(As + B)
#************************
$CT->variables->add(s=>'Real',h=>'Real');
$A1 = random(2,9,1);
$A2 = non_zero_random(-10,10,1);
$CT->variables->set(s=>{limits=>[-$A2/$A1,4-$A2/$A1]} , h=>{limits=>[0,4]});
$ArgA = Formula("$A1 s + $A2")->reduce;
$AnsA = $Gx->substitute(x=>$ArgA);
#*****************************
#   (b) Find g(sqrt(x) + A)
#*****************************
$B1 = non_zero_random(-10,10,1);
$ArgB = Formula("sqrt(x) + $B1")->reduce;
$AnsB = $Gx->substitute(x=>$ArgB);
#**********************
#   (c) Find A*g(Bx)
#**********************
$C1 = non_zero_random(-10,10,1);
$C2 = random(1,10,1);
$ArgC = Formula("$C2 x")->reduce;
$Tmp = $Gx->substitute(x=>$ArgC);
$AnsC = Formula("$C1 * $Tmp")->reduce;
($num,$Natnum,$Radnum,$Texstr,$Error) = sqrt_simplify($C2);
if ($Natnum != 1)
{
  $EQ = "=";
  $coeff = $C1*$Natnum;
  $Csimp = Formula("$coeff sqrt($Radnum x)")->reduce;
}
else
{
  $EQ = "";
  $Csimp = "";
}
#**********************
#   (d) Find A/g(x)
#**********************
$D1 = non_zero_random(-10,10,1);
$ArgD = Formula("$D1/$Gx")->reduce;
$AnsD = $ArgD;
$AnsD->{limits} = [4,9];
#**********************
#   (e) Find g(g(x))
#**********************
$ArgE = Formula("$Gx");
$AnsE = $Gx->substitute(x=>$Gx);
$AnsE->{limits} = [4,9];
#**********************************
#   (f) Find g(x)^(2n) = g(x^2n)
#**********************************
$N = random(2,6,2);
$GtoN = Formula("$Gx^$N")->reduce;
$ArgF = Formula("x^$N")->reduce;
$GxtoN = $Gx->substitute(x=>$ArgF);
$AnsF = Formula("$GtoN - $GxtoN")->reduce;
#***************************
#   (g) Find g(A/sqrt(x))
#***************************
$G1 = random(1,10,1);
$ArgG = Formula("$G1/sqrt(x)")->reduce;
$AnsG = $Gx->substitute(x=>$ArgG);
$AnsG->{limits} = [4,9];
#******************************
#   (h) Find g((x - 1)^(2n))
#******************************
$N2 = random(4,16,4);
$ArgH = Formula("(x - 1)^$N2")->reduce;
$AnsH = $Gx->substitute(x=>$ArgH)->reduce;
$Hsimp = Formula("(x - 1)^($N2/2)")->reduce;
#***********************
#   (i) Find g(x + h)
#***********************
$ArgI = Formula("x + h");
$AnsI = $Gx->substitute(x=>$ArgI);
#******************************
#   Make a neatly lined list
#******************************
Context()->texStrings;
$Qlist = new_aligned_list(ans_rule_len=>25, numbered=>0, tex_spacing=>"10pt", align=>"LEFT");
$Qlist->qa("(a) \( \;\;\small{g($ArgA)} \)",                    $AnsA->cmp,
#          "   \( \small{g($ArgB)} \)",                     $AnsB->cmp,
           "(b) \( \;\;\small{$C1 g($ArgC)} \)",                $AnsC->cmp,
           "(c) \( \;\;\large{\frac{$D1}{g(x)}} \)",            $AnsD->cmp,
           "(d) \( \;\;\small{g($ArgE)} \)",                    $AnsE->cmp,
           "(e) \( \;\;\small{(g(x))^$N - g(x^$N)} \)",         $AnsF->cmp,
           "(f) \( \;\;\small{g}\large{\left($ArgG\right)} \)", $AnsG->cmp,
           "(g) \( \;\;\small{g($ArgH)} \)",                    $Hsimp->cmp,
           "(h) \( \;\;\small{g($ArgI)} \)",                    $AnsI->cmp);
# **********************
#   Problem Statement
# **********************
TEXT(beginproblem());
#
# Strings in Tex form (formula)
#
BEGIN_TEXT
Let \( \small{g(x) = $Gx} \). Find each of the following.
$PAR
\{ $Qlist->print_q \}
$PAR
END_TEXT
#
# Expect strings in standard form
#
Context()->normalStrings;
# *******************************
#   Answer and Solution section
# *******************************
#
# Check student solution
#
ANS($Qlist->correct_ans);
#***************************
#  Explanation of solution  
#***************************
Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
To evaluate a function at a specific value of the input variable \( \small{x} \), replace all instances of
the variable \( \small{x} \) with the input value and evaluate the resulting expression.
$PAR
\[ \begin{aligned}
     \small{g($ArgA)} &= $AnsA \\
     \small{$C1 g($ArgC)} &= $AnsC $EQ $Csimp  \\
     \small{\frac{$D1}{g(x)}} &= $AnsD \\
     \small{g($ArgE)} &= $AnsE \\
     \small{(g(x))^$N - g(x^$N)} &= $AnsF = 0 \\
     \small{g}\left($ArgG\right) &= $AnsG \\
     \small{g($ArgH)} &= $AnsH = $Hsimp \\
     \small{g($ArgI)} &= $AnsI \\
   \end{aligned}
\]
END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();