## DESCRIPTION
## Compute a non-zero vector orthogonal to a given vector in R^3, and then a non-zero vector orthogonal to both of those.
##   All vectors will have small integer entries (between -2 and 4), and all of those entries will be non-zero.
##   There are infinitely many possible solutions, all of which are accepted.
## ENDDESCRIPTION

## DBsubject(Geometry)
## DBchapter(Vector geometry)
## DBsection(Cross product)
## Date(October 10, 2019)
## Institution(Mount Allison University)
## Author(Nathaniel Johnston)
## MO(1)
## TitleText1('Introduction to Linear and Matrix Algebra')
## AuthorText1('Nathaniel Johnston')
## EditionText1('1')
## Section1('1.')
## Problem1('')
## KEYWORDS('vectors','orthogonality','cross product')
## http://www.njohnston.ca/publications/introduction-to-linear-and-matrix-algebra/

##############################################################
#  Initialization
##############################################################

DOCUMENT();      

loadMacros(
    "PGstandard.pl",
    "MathObjects.pl",
    "PGchoicemacros.pl",
);

TEXT(beginproblem());

##############################################################
#  Problem Setup
##############################################################

Context("Vector");
Context()->lists->set(Vector => {open => "(", close => ")"});
Context()->parens->set("(" => {type => "Vector", close => ")"});

$a = list_random(-2,-1,1,2,3,4);
$b = list_random(-2,-1,1,2,3,4);
$c = list_random(-2,-1,1,2,3,4);
$v = Vector([$a,$b,$c]);

$ans1 = Vector([-$b,$a,0]);
$ans2 = $v x $ans1;
$stud_ans1 = $ans1;

##############################################################
#  Text
##############################################################

Context()->texStrings;
BEGIN_TEXT
Find a non-zero vector that is orthogonal to \( \displaystyle $v \): \{ $ans1->ans_array \}
$BR
Find a non-zero vector that is orthogonal to \( \displaystyle $v \) and the vector you entered above: \{ $ans2->ans_array \}
END_TEXT
Context()->normalStrings;

##############################################################
#  Answers and Solutions
##############################################################

$showPartialCorrectAnswers = 1;

ANS( $ans1->cmp(checker => sub {
      my ($correct,$student) = @_;
      $stud_ans1 = $student;
      return (abs($v . $student) < 0.0001 && $student->norm > 0.0001);
    }));

ANS( $ans2->cmp(checker => sub {
      my ($correct,$student) = @_;
      return (abs($v . $student) < 0.0001 && abs($stud_ans1 . $student) < 0.0001 && $student->norm > 0.0001);
    }));
ENDDOCUMENT();
