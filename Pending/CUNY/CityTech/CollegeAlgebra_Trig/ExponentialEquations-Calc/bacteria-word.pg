##DESCRIPTION
##  Algebra problem: exponential model of population growth
##ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Exponential and logarithmic expressions and functions)
## DBsection(Exponential and logarithmic equations)
## Institution(CUNY City Tech)
## Author(K. Andrew Parker)
## Level(5)
## Language(en)
## MO(1)
## KEYWORDS('algebra', 'exponential', 'exponential equation', 'logarithms', 'logarithm', 'exponential growth population', 'population growth')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->are(t=>Real);

$init = random(300,900,50);
$rate = random(0.025,0.088,0.0007);
$At = Formula("$init*e^($rate t)");

$mins = random(5,25,5);
$Amins = $At->eval(t=>$mins);
$Amins = round($Amins);
$time = Real("log(2)/$rate")->with(tolType=>'absolute',tolerance=>0.0005);

Context("LimitedNumeric");
Context()->flags->set(tolType=>'absolute', tolerance=>0.5);
Context()->{error}{msg}{"You are not allowed to type decimal numbers in this problem"} 
  = "Round your answer to the nearest whole number.";
Parser::Number::NoDecimals();

$init = Real("$init");
$Amins = Real("$Amins");

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Exponential Growth and Decay ### <<

Exponential growth and decay problems follow the model given by the equation [`A(t)=Pe^{rt}`].

* The model is a function of time [`t`]
* [`A(t)`] is the amount we have after time [`t`]
* [`P`] is the initial amount, because for [`t=0`], notice how [`A(0)=Pe^{0\cdot t}=Pe^{0}=P`]
* [`r`] is the growth or decay rate. It is _positive_ for growth and _negative_ for decay

Growth and decay problems can deal with money (interest compounded continuously), bacteria growth, radioactive decay, population growth etc. So [`A(t)`] can represent any of these depending on the problem.


>> ### Practice ### <<

The growth of a certain bacteria population can be modeled by the function

>> [`` A(t) = [$At] ``] <<  

where [` A(t) `] is the number of bacteria and [` t `] represents the time in minutes.

a. What is the initial number of bacteria? [_________________________] (round to the nearest whole number of bacteria.)

b. What is the number of bacteria after [$mins] minutes? [_________________________] (round to the nearest whole number of bacteria.)

c. How long will it take for the number of bacteria to double? [_________________________] (your answer must be accurate to at least 3 decimal places.)


END_PGML

##############################################################
#
#  Answers
#
#

##############################################################
#
#  Hints
#
#




BEGIN_PGML_HINT
  
**Hints:**

* We already found the initial amount of the bacteria in (a). Find [`t`] when [`A(t)`] is double that.


END_PGML_HINT

ANS($init->cmp->withPostFilter(sub { 
  my $ans = shift; 
  $ans->{ans_message} = "Your answer should not contain parenthesis. Compute the result as a number." 
    if $ans->{ans_message} eq "Unexpected character '('";
  $ans->{ans_message} = "Your answer should not contain any operations. Compute the final result as a number." 
    if ( $ans->{ans_message} eq "Can't use '^' in this context" || $ans->{ans_message} eq "Can't use '+' in this context" || $ans->{ans_message} eq "Can't use '-' in this context" || $ans->{ans_message} eq "Can't use '*' in this context" || $ans->{ans_message} eq "Can't use '/' in this context" );
  return $ans; 
}));
ANS($Amins->cmp->withPostFilter(sub { 
  my $ans = shift; 
  $ans->{ans_message} = "Your answer should not contain parenthesis. Compute the result as a number." 
    if $ans->{ans_message} eq "Unexpected character '('";
  $ans->{ans_message} = "Your answer should not contain any operations. Compute the final result as a number." 
    if ( $ans->{ans_message} eq "Can't use '^' in this context" || $ans->{ans_message} eq "Can't use '+' in this context" || $ans->{ans_message} eq "Can't use '-' in this context" || $ans->{ans_message} eq "Can't use '*' in this context" || $ans->{ans_message} eq "Can't use '/' in this context" );
  return $ans; 
}));
ANS($time->cmp->withPostFilter(sub { 
  my $ans = shift; 
  my $student = $ans->{student_ans};
  my $correct = $ans->{correct_ans};
  $ans->{ans_message} = "You're close, but you may have rounded too much." 
    if ( abs($student - $correct) < 0.05 && abs($student-$correct) > 0.0005 );
  $ans->{ans_message} = "Your answer should not contain parenthesis. Compute the result as a number." 
    if $ans->{ans_message} eq "Unexpected character '('";
  $ans->{ans_message} = "Your answer should not contain any operations. Compute the final result as a number." 
    if ( $ans->{ans_message} eq "Can't use '^' in this context" || $ans->{ans_message} eq "Can't use '+' in this context" || $ans->{ans_message} eq "Can't use '-' in this context" || $ans->{ans_message} eq "Can't use '*' in this context" || $ans->{ans_message} eq "Can't use '/' in this context" );
  return $ans; 
}));



##############################################################
#
#  Solutions
#
#



BEGIN_PGML_SOLUTION

a. The initial population is [`A(0)= [$init] e^{([$rate] \cdot 0 )} = [$init]e^0  = [$init]\cdot 1 = [$init]`].

b. We want to know the population size [`A(t)`] when [`t= [$mins]`]. So we need to evaluate [`A([$mins])`].
    
    >>[`A([$mins])= [$init] e^{([$rate] \cdot [$mins] )} \approx [$Amins] `]<<
    
    The number of bacteria after 10 minutes is [`[$Amins]`].
    
c. The initial population is [`[$init]`].  The double of that is [`[@2*$init@]`]. We want to find [`t`] such that [`A(t)= [@2*$init@]`]:

>>
[`\begin{align*}
[$At] & = [@2*$init@] & \qquad \text{divide both sides by } [$init] \\
e^{[$rate] t}  & = 2  & \qquad \text{apply } \ln \text{to both sides}\\
\ln\left(e^{[$rate] t}\right)  & = \ln 2  & \qquad \text{use the } \log \text{property for powers} \\
[$rate] t \ln e & = \ln 2  & \qquad  \text{use that } \ln e = 1 \\
 [$rate] t  & = \ln 2  & \qquad  \text{divide both sides by } [$rate] \\
 t & = \dfrac{\ln 2}{[$rate]} &\\
 t & \approx [$time] &
\end{align*}
`]<<

The population will double in about [`[$time]`] minutes.

END_PGML_SOLUTION
COMMENT("Funded by US DoE Title V: Opening Gateways grant.");

ENDDOCUMENT();        
