##DESCRIPTION
##  Algebra problem: Find the distance between two points
##ENDDESCRIPTION

##KEYWORDS('algebra', 'coordinate distance', 'distance formula', 'distance', 'cartesian coordinates')

## DBsubject(Algebra)
## DBchapter(Cartesian coordinate system)
## DBsection(Midpoint and distance formulas)
## Level(2)
## Author(K. Andrew Parker)
## Institution(CUNY City Tech)
## Language(en)


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "contextLimitedRadical.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Point");

do { 
  $x1 = random(-9,9,1);
  $y1 = random(-9,9,1);
  $x2 = random(-9,9,1);
  $y2 = random(-9,9,1);
} until ( $x1 != $x2 && $y1 != $y2 );



$A = Point($x1,$y1);
$B = Point($x2,$y2);

$udA = ($y1>$y2)?'bottom':'top';
$udB = ($y1>$y2)?'top':'bottom';
$lrA = ($x1>$x2)?'left':'right';
$lrb = ($x1>$x2)?'right':'left';

$ABdeltaX = abs($x2-$x1);
$ABdeltaY = abs($y2-$y1);

$gr = init_graph(-10,-10,10,10,
axes=>[0,0],
grid=>[20,20],
size=>[500,500]);
$gr->stamps( closed_circle($x1,$y1,'blue') );
$gr->stamps( closed_circle($x2,$y2,'blue') );
$gr->moveTo($x1,$y1);
$gr->lineTo($x2,$y2,'blue',2);
$gr->lineTo($x1,$y2,'red');
$gr->lineTo($x1,$y1,'red');
$gr->lb( new Label($x1,$y1,"($x1,$y1)",
    'black','center',$udA));
$gr->lb( new Label($x2,$y2,"($x2,$y2)",
    'black','center',$udB));

$gr2 = init_graph(-10,-10,10,10,
axes=>[0,0],
grid=>[20,20],
size=>[500,500]);
$gr2->stamps( closed_circle($x1,$y1,'blue') );
$gr2->stamps( closed_circle($x2,$y2,'blue') );
$gr2->moveTo($x1,$y1);
$gr2->lineTo($x2,$y2,'blue',2);
$gr2->lineTo($x1,$y2,'red');
$gr2->lineTo($x1,$y1,'red');
$gr2->lb( new Label($x1,$y1,"($x1,$y1)",
    'black','center',$udA));
$gr2->lb( new Label($x2,$y2,"($x2,$y2)",
    'black','center',$udB));
$gr2->lb( new Label(($x1+$x2)/2,$y2,"$ABdeltaX",'black','center','top'));
$gr2->lb( new Label($x1,($y1+$y2)/2,"$ABdeltaY",'black','left','middle'));


$ABradicand = ($ABdeltaX)**2+($ABdeltaY)**2;

Context("Numeric");
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0, formatStudentAnswer=>"parsed");
# Context()->functions->enable("sqrt");
Parser::Number::NoDecimals();
Context()->operators->undefine("+"," +","+ ");
Context()->operators->undefine("-"," -","- ");
Context()->operators->undefine("/"," /","/ ");
Context()->operators->undefine("^"," ^","^ ","**"," **","** ");
Context()->{error}{msg}{"Can't use '+' in this context"} 
  = "Addition is disabled for this problem. Simplify the sum and resubmit your answer.";
Context()->{error}{msg}{"Can't use '-' in this context"} 
  = "Subtraction is disabled for this problem. Simplify the difference and resubmit your answer.";
Context()->{error}{msg}{"Can't use '/' in this context"} 
  = "Division is disabled for this problem. Simplify the quotient and resubmit your answer.";
Context()->{error}{msg}{"Can't use '^' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '**' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"You are not allowed to type decimal numbers in this problem"} 
  = "Decimals are not allowed for this problem, please write your answer using 'sqrt(...)'.";

$ans = Compute("sqrt($ABradicand)");

##############################################################
#
#  Text
#
#

BEGIN_PGML

Find the distance between these two points: [` [$A] `] and [` [$B] `]

[__________]{$ans}

* Write your answer in exact form, do not use decimal approximations.
* To write a square root such as [` \sqrt{15} `], type in 'sqrt(15)' instead of using rational exponents.
* You are not required to reduce your radicals for this problem.

END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

Turn the line segment connecting [`[$A]`] and [`[$B]`] into the hypotenuse of a right triangle.

>> [@ image(insertGraph($gr), width=>500, height=>500) @]* <<

Use the Pythagorean theorem to determine the length of the hypotenuse.

END_PGML_HINT
BEGIN_PGML_SOLUTION

>> [@ image(insertGraph($gr2), width=>500, height=>500) @]* <<

By the Pythagorean theorem:

[` \overline{AB} = \sqrt{([$ABdeltaX])^2+([$ABdeltaY])^2} `]

[` \overline{AB} = \sqrt{[$ABradicand]} `]

END_PGML_SOLUTION

COMMENT("Funded by US DoE Title V: Opening Gateways grant.");

ENDDOCUMENT();        