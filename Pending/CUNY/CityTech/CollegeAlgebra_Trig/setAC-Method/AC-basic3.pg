##DESCRIPTION
##  Algebra problem: Factor a trinomial by the ac-method
##ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Factoring)
## DBsection(Factoring trinomials)
## Institution(CUNY City Tech)
## Author(K. Andrew Parker)
## Level(2)
## Language(en)
## MO(1)
## KEYWORDS('factoring', 'polynomials')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "contextLimitedFactor.pl",
   "contextTypeset.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->are(x=>["Real",limits=>[-9,9]]);
Context()->noreduce('(-x)+y','(-x)-y');
Context()->flags->set(reduceConstants=>0,reduceConstantFunctions=>0);
Context()->operators->set(
     '+' => {class => 'bizarro::BOP::add', isCommand => 1},
     '-'  => {class => 'bizarro::BOP::subtract', isCommand => 1},
     '/'  => {class => 'bizarro::BOP::divide', isCommand => 1},
     '^' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
#     '**' => {class => 'bizarro::BOP::power', isCommand => 1},
  );

$factorCheck = sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview};
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      Value->Error("Your answer is not equivalent to the original polynomial") unless ($correct == $student);
      Context()->flags->set(bizarroAdd=>1, bizarroSub=>1);
      delete $correct->{test_values}, $student->{test_values};
      Value->Error("Your answer is equivalent to the correct answer, but is not properly factored") unless (($correct == $student) or ($student == $correct));
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      return 1;
  };

$C1 = 1;
$C2 = non_zero_random(-9,-1,1);
$C3 = 1;
do{ $C4 = non_zero_random(-9,-1,1); } until ( abs($C2) != abs($C4) );

# (C1 x + C2) (C3 x + C4)

$A = $C1*$C3;
$B = $C1*$C4+$C2*$C3;
$C = $C2*$C4;

$C1C4 = $C1*$C4;
$C2C3 = $C2*$C3;

$quad = Formula("$A x^2 + $B x + $C")->reduce;

$pair = List(Real($C1C4), Real($C2C3));

$FBG1A = Formula("$A x^2 + $C1C4 x + $C2C3 x + $C")->reduce;

$FBG1B = Formula("$C1 x ($C3 x + $C4) + $C2 ($C3 x + $C4)")->reduce;
$FBG2B = Formula("$C3 x ($C1 x + $C2) + $C4 ($C1 x + $C2)")->reduce;

$ans = Formula("($C3 x + $C4)($C1 x + $C2)")->reduce;

##############################################################
#
#  Text
#
#

BEGIN_PGML
  
  
**Use the AC Method to factor [`[$quad]`]**

* Split the linear term, writing [`[$quad]`]  as the sum of two binomials: [_______________]   
    _(be careful about how you choose to split [`[$B]x`], or the AC method won't work!)_

* Factor out the GCF of each binomial: [_______________]

* Complete the process of factoring by grouping: [_______________]   
    _(your answer should now be completely factored!)_

END_PGML

##############################################################
#
#  Answers
#
#

ANS($FBG1A->cmp(checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      my $context = Context();
      Context("Typeset");
      $studentDisp = Parser::Formula(Context("Typeset"), $ansHash->{original_student_ans});
      $ansHash->{preview_text_string} = $studentDisp->string;
      $ansHash->{preview_latex_string} = $studentDisp->TeX;
      Context($context);
      return 0 if $ansHash->{isPreview};
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      Value->Error("Your answer is not equivalent to the original polynomial") unless ($correct == $student);
      Context()->flags->set(bizarroAdd=>1, bizarroSub=>1);
      delete $correct->{test_values}, $student->{test_values};
      $factored = ($student == $correct || $correct == $student)? 1:0;
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      Value->Error("Your answer is equivalent to the original polynomial, <BR> but you have not split your linear term correctly.") unless ($factored==1);
      return 1;
  }));

ANS($FBG1A->cmp(checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      my $context = Context();
      Context("Typeset");
      $studentDisp = Parser::Formula(Context("Typeset"), $ansHash->{original_student_ans});
      $ansHash->{preview_text_string} = $studentDisp->string;
      $ansHash->{preview_latex_string} = $studentDisp->TeX;
      Context($context);
      return 0 if $ansHash->{isPreview};
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      Value->Error("Your answer is not equivalent to the original polynomial") unless ($correct == $student);
      Context()->flags->set(bizarroAdd=>1, bizarroSub=>1);
      delete $correct->{test_values}, $student->{test_values};
      $factored = ($student == $FBG1B || $FBG1B == $student)? 1:0;
      delete $correct->{test_values}, $student->{test_values};
      $factored = ($student == $FBG2B || $FBG2B == $student)? 1:0 unless ($factored==1);
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      Value->Error("Your answer is equivalent to the original polynomial, <BR> but is not correctly written as the sum of two _factored_ binomials.") unless ($factored==1);
      return 1;
  }));

ANS($ans->cmp(checker=>$factorCheck));

BEGIN_PGML_HINT

Identify your values for [`A`], [`B`], and [`C`].

* What is [`AC`]?  
* What pair of numbers have a sum of [`B`] and a product of [`AC`]?

Factor by grouping to complete the problem.

END_PGML_HINT
BEGIN_PGML_SOLUTION

First, identify [`AC`]:  
    [` AC = [$A]\times[$C] = [@$A*$C@] `]

Then find a pair of values who's sum is [` B = [$B] `], and product is [` AC = [@$A*$C@] `].

This pair of values is [`[$C1C4]`] and [`[$C2C3]`]:  
    [` ([$C1C4]) + ([$C2C3]) = [$B] `]  
    [` ([$C1C4]) \times ([$C2C3]) = [@$A*$C@] `]

Rewrite our original quadratic:  
    [`[$quad]`]  
    _Split the linear term using our pair of values:_  
    [`([@$A==1?"":"[$A]"@] x^2 + [$C1C4] x) + ([$C2C3] x + [$C])`]  
    _Factor by grouping:_  
    [`[$FBG1B]`]  
    [`[$ans]`]

END_PGML_SOLUTION

COMMENT("Funded by US DoE Title V: Opening Gateways grant.");

ENDDOCUMENT();        