##DESCRIPTION
##  Algebra problem: Solve a system of 2 equations, one of which is nonlinear (quadratic)
##ENDDESCRIPTION

##KEYWORDS('algebra', 'system of equations', 'solving system of equations', 'nonlinear equations')

## DBsubject(Algebra)
## DBchapter(Systems of equations and inequalities)
## DBsection(Nonlinear systems)
## Level(2)
## Author(K. Andrew Parker)
## Institution(CUNY City Tech)
## Language(en)

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric")->variables->are(x=>Real,y=>Real);
Context()->noreduce('(-x)+y','(-x)-y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);

$h = non_zero_random(-6,6,1);
$k = non_zero_random(-6,6,1);

$parabola = Formula("(x-$h)^2+$k")->reduce;

$x0 = random(-3,3,1);
do { $x1 = random(-5,5,1); } until( $x0 != $x1 );

$y0 = $parabola->eval(x=>$x0);
$y1 = $parabola->eval(x=>$x1);

$delX = $x0 - $x1;
$delY = $y0 - $y1;

$gcf = gcf($delX,$delY);
$delX = $delX/$gcf;
$delY = $delY/$gcf;

# y - y0 = m ( x - x0 )
# delx y - delY x = delX y0 - delY x0

$C = $delX * $y0 - $delY * $x0;

$line = Formula("$delX y - $delY x")->reduce;

Context("Point");
Parser::Number::NoDecimals();
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);

$ans = List( Point($x0,$y0), Point($x1,$y1) );


##############################################################
#
#  Text
#
#

BEGIN_PGML

Solve the following system of equations.

[` y = [$parabola] `]

[` [$line] = [$C] `]

Solution(s): [_______________]{$ans}

* Enter your answers as points: [` (x,y) `]
* Because these systems are non-linear, you may have more than one solution.
* If you have more than one solution, enter your answers as a list of points: [` (x_0, y_0), (x_1, y_1) `]
* Use 'sqrt(...)' to enter radical answers, do not use decimal approximations.

END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

One of the equations is already solved for [`y`], try substituting for the [`y`] in the other equation...

END_PGML_HINT
BEGIN_PGML_SOLUTION

We should notice right away that one of the equations is solved for [`y`].

    [` y = [$parabola] `]

*Substitute [`[$parabola]`] for [`y`] in the second equation:*

    [` [$line] = [$C] `]

    [` [@($delX==1)?"":"$delX"@] ([$parabola]) - [@($delY==1)?"":"$delY"@] x = [$C] `]

*Now that we have an equation with a single variable, expand and solve:*

    [` [@($delX==1)?"":"$delX"@] ([$parabola]) - [@($delY==1)?"":"$delY"@] x = [$C] `]

    _Expand [`(x-[$h])^2`]:_  
    [` [@($delX==1)?"":"$delX"@] (x^2 + [@-2*$h@] x + [@$h**2@] + [$k]) - [@($delY==1)?"":"$delY"@] x = [$C] `]

    _Keep simplifying and [@($C>0)?"subtract":"add"@] [@abs($C)@] on both sides:_  
    [` [@($delX==1)?"":"$delX"@] (x^2 + [@-2*$h@] x + [@$h**2+$k@] ) - [@($delY==1)?"":"$delY"@] x + [@-$C@] = [$C] + [@-$C@] `]  

    *Remember that as a quadratic, this equation should equal zero in order for us to eventually solve it.*
    [` [@($delX==1)?"":"$delX"@] x^2 + [@$delX*-2*$h@] x + [@$delX*($h**2+$k)@] - [@($delY==1)?"":"$delY"@] x + [@-$C@] = 0 `]

    _Combine like terms:_  
    [` [@($delX==1)?"":"$delX"@] x^2 + [@$delX*-2*$h-$delY@] x + [@$delX*($h**2+$k)-$C@] = 0 `]

    _Factor:_  
    [` (x - [$x0])(x - [$x1]) = 0 `]

    So, either [` x = [$x0] `] or [` x = [$x1] `].

*We're looking at the intersection of two graphs, so our solutions are points.*

*Find the [`y`]-coordinates corresponding to each [`x`] value.*

    *When [` x = [$x0] `] we have:*  
    [` y = [@$parabola->substitute(x=>$x0)->TeX@] = [$y0] `]  
    So our first solution is: [` ([$x0],[$y0]) `]

    *When [` x = [$x1] `] we have:*  
    [` y = [@$parabola->substitute(x=>$x1)->TeX@] = [$y1] `]  
    So our second solution is: [` ([$x1],[$y1]) `]

*Double-check your work using the other equation:*

    [` [$line] = [$C] `]

    For [` ([$x0],[$y0]) `]:  
    Is [` [@$line->substitute(x=>$x0,y=>$y0)->TeX@] = [$C] `]?

    For [` ([$x1],[$y1]) `]:  
    Is [` [@$line->substitute(x=>$x1,y=>$y1)->TeX@] = [$C] `]?

END_PGML_SOLUTION

COMMENT("Funded by US DoE Title V: Opening Gateways grant.");

ENDDOCUMENT();        