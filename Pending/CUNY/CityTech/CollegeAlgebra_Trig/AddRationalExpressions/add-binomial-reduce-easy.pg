## MO(1)
DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextLimitedPowers.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

$rationalChecker = sub {
     my ($correct,$student,$ansHash) = @_; 
     Value->Error("Check the answer preview box. Maybe you forgot parenthesis around your numerator or denominator?") unless $student->{tree}->class eq "BOP" && $student->{tree}{bop} eq "/";
     return 0 unless $correct == $student;
     my $cnum = Formula($correct->{tree}{lop});
     my $snum = Formula($student->{tree}{lop});
     my $cden = Formula($correct->{tree}{rop});
     my $sden = Formula($student->{tree}{rop});
     Value->Error("Your answer can be reduced further") unless ($cnum == $snum && $cden == $sden);
     return 1;
};

##############################################################
#
#  Setup
#
#
Context("Numeric")->noreduce('(-x)+y', '(-x)-y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);
LimitedPowers::OnlyPositiveIntegers();

$nAns = list_random(2,3,5,7);
do { $dAns = list_random(2,3,5,7); } until ( $nAns != $dAns );

$r = random(3,9,1)*random(-1,1,2);

$dB = $dAns * $r;
$denom = Formula("$dAns*x + $dB")->reduce;

do { $nA1 = random(3,9,1); } until ( $nA1 != $nAns );
$nA2 = $nAns - $nA1;

do { $nB1 = random(-1,1,2)*random(4,abs($nAns*$r)-1,1); } until ( $nB1 != $nAns*$r );
$nB2 = $nAns*$r - $nB1;

$n1 = Formula("$nA1 * x + $nB1")->reduce;
$n2 = Formula("$nA2 * x + $nB2")->reduce;

$frac1 = Formula("$n1/$denom");
$frac2 = Formula("$n2/$denom");

$ans = Formula("$nAns/$dAns");

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

$PAR
Combine and simplify if possible.
$PAR
\[ $frac1 + $frac2 \]
$PAR
\{ ans_rule(20) \}

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS($ans->cmp(checker=>$rationalChecker));

ENDDOCUMENT();        
