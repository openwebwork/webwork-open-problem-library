##DESCRIPTION
##  Algebra problem: Compute amount in interest-bearing account after n years using compound interest formula for different compounding frequencies
##ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Interest)
## DBsection(Compound Interest)
## Institution(CUNY City Tech)
## Author(K. Andrew Parker)
## Level(2)
## Language(en)
## MO(1)
## KEYWORDS('algebra', 'compound interest', 'compounded annually', 'compounded quarterly', 'compounded interest', 'finance', 'financial mathematics')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "contextCurrency.pl",
   "answerHints.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Currency");

Context()->{format}{number} = "%.3f#";

$principal = random(15000,35000,1000);
$principal = Currency("$principal")->with(trimTrailingZeros=>1);
@interval = ("annually","quarterly", "monthly", "weekly", "daily");
@numInt = (1,4,12,52,365);

$years = random(3,7,1);
$r = random(4,9,0.25);

@A = ();
for my $i (0..4) {
  my $n = $numInt[$i];
  $A[$i] = Currency("$principal*(1+$r/(100*$n))^($n*$years)");
};

Context()->operators->undefine("+"," +","+ ");
Context()->operators->undefine("-"," -","- ");
Context()->operators->undefine("*"," *","* ");
Context()->operators->undefine("/"," /","/ ");
Context()->operators->undefine("^"," ^","^ ","**"," **","** ");
Context()->functions->disable("All");

Context()->{error}{msg}{"Can't use '+' in this context"} 
  = "Addition is disabled for this problem.<BR> Compute the result and round to the nearest cent.";
Context()->{error}{msg}{"Can't use '-' in this context"} 
  = "Subtraction is disabled for this problem.<BR> Compute the result and round to the nearest cent.";
Context()->{error}{msg}{"Can't use '*' in this context"} 
  = "Multiplication is disabled for this problem.<BR> Compute the result and round to the nearest cent.";
Context()->{error}{msg}{"Can't use '/' in this context"} 
  = "Division is disabled for this problem.<BR> Compute the result and round to the nearest cent.";
Context()->{error}{msg}{"Can't use '^' in this context"} 
  = "Exponents are disabled for this problem.<BR> Compute the result and round to the nearest cent.";
Context()->{error}{msg}{"Can't use '**' in this context"} 
  = "Exponents are disabled for this problem.<BR> Compute the result and round to the nearest cent.";

##############################################################
#
#  Text
#
#

BEGIN_PGML

Suppose an investor deposits [$principal] into a savings account for [$years] years at [$r]% interest. Find the total amount of money in the account if the interest is:

1. Compounded [$interval[0]], then the investment is worth [__________] after [$years] years.
1. Compounded [$interval[1]], then the investment is worth [__________] after [$years] years.
1. Compounded [$interval[2]], then the investment is worth [__________] after [$years] years.
1. Compounded [$interval[3]], then the investment is worth [__________] after [$years] years.
1. Compounded [$interval[4]], then the investment is worth [__________] after [$years] years.

* **Round your answers to the nearest cent.**
* **Use a dollar sign to indicate that your answer is a monetary value.**

END_PGML

##############################################################
#
#  Answers
#
#

ANS($A[0]->cmp(promoteReals=>0)->withPostFilter(AnswerHints(
     sub {
          my ($correct, $student, $ans) = @_;
          return abs($correct-$student) < 0.02;
     } => 'You are close. <BR> Double check that you have rounded correctly.'
))->withPostFilter(sub {
     my $ans = shift;
     $ans->{ans_message} = "Your answer does not look like a monetary value. <BR> Maybe you forgot a dollar sign?"
          if $ans->{ans_message} =~ m/monetary/;
    return $ans;
    }
));
ANS($A[1]->cmp(promoteReals=>0)->withPostFilter(AnswerHints(
     sub {
          my ($correct, $student, $ans) = @_;
          return abs($correct-$student) < 0.02;
     } => 'You are close. <BR> Double check that you have rounded correctly.'
))->withPostFilter(sub {
     my $ans = shift;
     $ans->{ans_message} = "Your answer does not look like a monetary value. <BR> Maybe you forgot a dollar sign?"
          if $ans->{ans_message} =~ m/monetary/;
    return $ans;
    }
));
ANS($A[2]->cmp(promoteReals=>0)->withPostFilter(AnswerHints(
     sub {
          my ($correct, $student, $ans) = @_;
          return abs($correct-$student) < 0.02;
     } => 'You are close. <BR> Double check that you have rounded correctly.'
))->withPostFilter(sub {
     my $ans = shift;
     $ans->{ans_message} = "Your answer does not look like a monetary value. <BR> Maybe you forgot a dollar sign?"
          if $ans->{ans_message} =~ m/monetary/;
    return $ans;
    }
));
ANS($A[3]->cmp(promoteReals=>0)->withPostFilter(AnswerHints(
     sub {
          my ($correct, $student, $ans) = @_;
          return abs($correct-$student) < 0.02;
     } => 'You are close. <BR> Double check that you have rounded correctly.'
))->withPostFilter(sub {
     my $ans = shift;
     $ans->{ans_message} = "Your answer does not look like a monetary value. <BR> Maybe you forgot a dollar sign?"
          if $ans->{ans_message} =~ m/monetary/;
    return $ans;
    }
));
ANS($A[4]->cmp(promoteReals=>0)->withPostFilter(AnswerHints(
     sub {
          my ($correct, $student, $ans) = @_;
          return abs($correct-$student) < 0.02;
     } => 'You are close. <BR> Double check that you have rounded correctly.'
))->withPostFilter(sub {
     my $ans = shift;
     $ans->{ans_message} = "Your answer does not look like a monetary value. <BR> Maybe you forgot a dollar sign?"
          if $ans->{ans_message} =~ m/monetary/;
    return $ans;
    }
));

COMMENT("Funded by US DoE Title V: Opening Gateways grant.");

ENDDOCUMENT();        
