##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Calculus - single variable')
## DBchapter('Infinite sequences and series')
## DBsection('Geometric')
## Date('8/16/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "contextFraction.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Fraction");
Context()->flags->set(
    reduceConstants=>0,
    reduceConstantFunctions=>0);
Context()->variables->are(n=>["Real", resolution=>1, limits=>[0,125]]);
Parser::Number::NoDecimals();
Context()->{error}{msg}{"You are not allowed to type decimal numbers in this problem"} 
  = "Decimals are not allowed for this problem, please use exact forms (such as fractions) instead of decimal approximations.";
    
@n = ( random(9,18,1), random(20,30,1), random(35,50,1), random(70,95,1) );

foreach my $i (0..3) {
    my $plusminus = ($i>1)?1:0;
    my $fraction = ($i%2 == 1)?1:0;
    my $r = random(2,5,1)*(-1)**$plusminus;
    $ratio[$i] = ($fraction==0)?Real($r):Fraction(1,$r);
    $init[$i] = random(2,9,1);
    $seq[$i][0] = Fraction($init[$i]);
    foreach my $j (1..4) {
        $seq[$i][$j] = $seq[$i][$j-1] * $ratio[$i];
    }
    $seqDisp[$i] = List($seq[$i][0],$seq[$i][1],$seq[$i][2],$seq[$i][3],$seq[$i][4]);
    if ($n[$i] % 10 == 1 && $n[$i] > 20) { $th[$i] = "st" }
    elsif ($n[$i] % 10 == 2 && $n[$i] > 20) { $th[$i] = "nd" }    
    elsif ($n[$i] % 10 == 3 && $n[$i] > 20) { $th[$i] = "rd" }
    else { $th[$i] = "th" }
    $nth[$i] = Formula("$init[$i]*($ratio[$i])^($n[$i]-1)");
    $closedForm[$i] = Formula("$init[$i]*($ratio[$i])^(n-1)");
}

$introN = random(51,99,1);
$introNminus1 = $introN - 1;
$introNthTerm = Formula("2^$introNminus1");
if ($introN % 10 == 1) { $introNth = "st" }
elsif ($introN % 10 == 2) { $introNth = "nd" }
elsif ($introN % 10 == 3) { $introNth = "rd" }
else { $introNth = "th" }

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Closed Form ### <<

The "closed form" of a sequence [`a`] refers to a formula, [`a_n`], which can be used to determine the value of any term in the sequence, based only on the index (or _location_) in the sequence. 

We can construct a "closed form" for a given sequence by writing down an algebraic representation of the pattern for the sequence.

For example, the sequence [`a = \left \{ 1, 2, 4, 8, 16, \dots \right \}`] has the pattern of _doubling_ the previous term in the sequence. Our sequence starts with [`1`] and then doubles at each step. "Doubling at each step" is a _recursive_ view of the pattern (meaning that our description of the pattern requires knowledge of the previous elements), and is not helpful if we want to find the [`[$introN]^{[$introNth]}`] term of the sequence without finding all the previous terms. What we want is the _closed form_, which will allow us to find the [`[$introN]^{[$introNth]}`] term without finding all the terms before it.

We know that the "doubling" starts with the value [`1`] (as it is the first term in the sequence). How many times will we need to "double" to reach the [`[$introN]^{[$introNth]}`] term? [__________]{$introNminus1}

So what will the [`[$introN]^{[$introNth]}`] term be? [__________]{$introNthTerm}

If instead, we wanted to know the value of the [`n^{th}`] term, how many times would we need to "double"? [__________]{Formula("n-1")}

So what would the value of the [`n^{th}`] term be? (Your answer should include "[`n`]") [__________]{Formula("2^(n-1)")}

>> #### Practice #### <<

1. Consider the sequence [``a = \left \{ [$seqDisp[0]],\dots\right \} ``]  
    a. What is the first term of the sequence? [__________]{$init[0]}  
    b. What is the common ratio? [__________]{$ratio[0]}  
    c. What is the closed form for the [`n^{th}`] term of the sequence? [`a_n = `] [____________________]{$closedForm[0]}  
    d. Use the closed form to determine the value of [`a_{[$n[0]]}`]:  [____________________]{$nth[0]}  

1. Consider the sequence [``b = \left \{ [$seqDisp[1]],\dots\right \} ``]  
    a. What is the first term of the sequence? [__________]{$init[1]}  
    b. What is the common ratio? [__________]{$ratio[1]}  
    c. What is the closed form for the [`n^{th}`] term of the sequence? [`b_n = `] [____________________]{$closedForm[1]}  
    d. Use the closed form to determine the value of [`b_{[$n[1]]}`]:  [____________________]{$nth[1]}  

1. Consider the sequence [``c = \left \{ [$seqDisp[2]],\dots\right \} ``]  
    a. What is the first term of the sequence? [__________]{$init[2]}  
    b. What is the common ratio? [__________]{$ratio[2]}  
    c. What is the closed form for the [`n^{th}`] term of the sequence? [`c_n = `] [____________________]{$closedForm[2]}  
    d. Use the closed form to determine the value of [`c_{[$n[2]]}`]:  [____________________]{$nth[2]}  

1. Consider the sequence [``d = \left \{ [$seqDisp[3]],\dots\right \} ``]  
    a. What is the first term of the sequence? [__________]{$init[3]}  
    b. What is the common ratio? [__________]{$ratio[3]}  
    c. What is the closed form for the [`n^{th}`] term of the sequence? [`d_n = `] [____________________]{$closedForm[3]}  
    d. Use the closed form to determine the value of [`d_{[$n[3]]}`]:  [____________________]{$nth[3]}  

END_PGML

##############################################################
#
#  Answers
#
#


ENDDOCUMENT();        
