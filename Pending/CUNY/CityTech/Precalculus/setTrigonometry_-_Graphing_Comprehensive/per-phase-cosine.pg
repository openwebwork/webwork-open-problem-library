##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION


## DBsubject(Trigonometry)
## DBchapter(Trigonometric functions)
## DBsection(Sine & cosine functions - definitions, graphs, & properties)
## Date(7/19/2018)
## Institution(City Tech)
## Author(K. Andrew Parker)
## MO(1)
## KEYWORDS('algebra', 'inequality', 'fraction')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "AppletObjects.pl",
   "PGgraphmacros.pl",
   "PGML.pl",
   "contextFraction.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Fraction");
Context()->noreduce('(-x)-y','(-x)*y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);
Context()->variables->add(y=>'Real');

$A = 1; # random(-1,1,2)*random(2,3,1);
$B = list_random(2,3,4,6);
do { $C = non_zero_random(-1,6,1); } until ( $C/$B > -1/2 && $C/$B <= 1 ); # && gcf(abs($C),$B) == 1);
$period = Formula("2pi/$B");

$shift = Fraction($C,$B)->reduce;
$absC = abs($C);
$absCpi = (abs($C)==1)?Formula("pi"):Formula("$absC pi");
$absShift = Fraction(abs($C),$B)->reduce;

$phaseShift = Formula("$shift pi");

$fArg = ($shift>0)? Compute("$B x - $absCpi"):Compute("$B x + $absCpi");
$fArgTeX = $fArg->TeX;

$f = ($shift>0)? Compute("cos( $fArg )"):Compute("cos( $fArg )");
$f = $f->reduce;

$ans = List($A,$period,$phaseShift);
$axisSteps = ($B==4)?"'pi/4'":"'pi/6'";

$custom = sub {
    my ($correct, $student, $ansHash, $value) = @_;
    my ($Samp,$Sper,$Sphase) = @$student;
    my ($Camp,$Cper,$Cphase) = @$correct;
    my @errors = ();
    my $score = 0;
    $ansHash->{correct_ans_latex_string} = "{\text{amplitude: }$Camp \\ \text{period: }$Cper \\ \text{phase shift = }$Cphase}";
    $ansHash->{preview_latex_string} = "{\text{amplitude: }$Samp \\ \text{period: }$Sper \\ \text{phase shift = }$Sphase}";
    if ($Samp != $Camp) { push(@errors,"The amplitude of your graph is incorrect.") }
    if ($Samp == -1*$Camp) { push(@errors,"It looks like you forgot to reflect your graph. <BR> (Or you reflected your graph when you shouldn't have.)") }
    if ($Sper != $Cper) { push(@errors,"The period of your graph is incorrect.") }
    if ($Sper != $Cper && $Sphase == $Cphase) { push(@errors,"It looks like you didn't maintain the period of your graph when you phase shifted.") }
    if ($Sphase != $Cphase) { push(@errors,"The phase shift of your graph is incorrect.") }
    if ($Sphase != $Cphase && abs($Sphase) == abs($Cphase)) { push(@errors,"It looks like you phase shifted in the wrong direction.") }
    if ($Sphase != $Cphase && $Sphase == $C*pi) { push(@errors,"Remember that the phase shift is the value of \(x\) that makes \($fArgTeX = 0\).") }
    if ($Sper == $Cper && $Sphase == $Cphase && $Samp == $Camp ) {$score = 3};
    return ( $score, @errors );
};

######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";

$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => 'configure',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 947,              # may want to modify width
   height                => 469,              # may want to modify height
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
   submitActionScript    => qq{ getQE('answerBox').value = getAppletValues() },
   #submitActionScript => '',
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in

);


###############################################
#
#  PNG picture of GeoGebra applet for hardcopy

$im = init_graph(-8,-8,8,8, axes=>[0,0], grid=>[8,8], size=>[400,400]);
#add_functions($im,"$f for x in <-8,8> using color:blue and weight:2");

##################################
# Setup GeogebraWebApplet --
###################################

###############################################
#
#  For persistence of GeoGebra applet state 
#  when answers are submitted or page is refreshed.
#  Uses JavaScript interface to GeoGebra.

HEADER_TEXT(
qq! 
<script language="javascript">
   function ggbOnInit(param) {
       if (param == "$appletName") {
           applet_loaded(param,1);  // report that applet is ready. 
           ww_applet_list[param].safe_applet_initialize(2);
       }
   } 
</script>
<noscript>For this question to work properly, 
you must enable JavaScript, or use another browser 
(or computer) on which JavaScript works.</noscript>
!);

#######################################################
#
#  For setting initial values in GeoGebra from WeBWorK
#  Uses JavaScript interface to GeoGebra.

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setAppletCoefficients() {
   var applet=getApplet("$appletName");   // alert("Updating coefficients");
   if (typeof(applet)!="undefined") {
     if (typeof(applet.setValue)!="undefined") {
     
     ////////////////////////////////////////////////////////////////
     //  List the values of the parameters to be set in the applet here
     
     // hide/disable phase shift constructions
        // applet.setFixed('ps',true,false);
        // applet.setVisible('i',false);
        // applet.setVisible('A',false);

     // hide period constructions
        // applet.setVisible('g',false);
        // applet.setVisible('B',false);

     // hide/disable amplitude constructions
        applet.setFixed('a',true,false);
        applet.setVisible('h',false);

     // change visible axis steps (for snap-to-grid)
        applet.setAxisSteps(1,$axisSteps,1);
        applet.setPointCapture(1,1);

     } else {
          setTimeout("setAppletCoefficients()", 1000);
     }
   } else {
      setTimeout("setAppletCoefficients()",1000);
   }
}
ww_applet_list["$appletName"].setConfig = function() {setAppletCoefficients()};
</script>
END_SCRIPT

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;
	var phaseShift = applet.getValue("ps");
	var period = applet.getValue("per");
	var amplitude = applet.getValue("a");
    return( amplitude + "," + period + "," + phaseShift ); 
}
 </script>
END_SCRIPT

###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or
# a hidden AnswerBox
###################################
 TEXT($PAR,  MODES(TeX=>$im,
                      HTML=>$applet->insertAll(
                                debug =>0,
                                reinitialize_button => 0,
                                includeAnswerBox=>1,
 )));

##############################################################
#
#  Text
#
#

BEGIN_PGML

Manipulate the graph so that it matches [` f(x) = [$f] `].

END_PGML

##############################################################
#
#  Answers
#
#

NAMED_ANS( 'answerBox'=>$ans->cmp(checkTypes=>0, list_checker=>$custom) );

sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"true" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false",
showMenuBar=>"false" ,
showToolBar=>"false",
showAlgebraInput=>"false",
enableShiftDragZoom=>"false",
useBrowserForJS=>"true",
ggbbase64=>"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"
};
$result;
}

ENDDOCUMENT();        