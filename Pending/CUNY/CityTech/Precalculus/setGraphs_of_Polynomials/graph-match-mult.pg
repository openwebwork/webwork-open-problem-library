##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Polynomial equations and functions')
## DBsection('Graphs of polynomials')
## Date('6/20/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "PGchoicemacros.pl",
   "niceTables.pl",
   "parserPopUp.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 0;

##############################################################
#
#  Setup
#
#
Context("Numeric");

@roots = ( 1, 2, 3, 4 );
#@slice = NchooseK(4,3);

@rp = @roots[ NchooseK(4,2) ];

@facp = (Formula("x-$rp[0]"),Formula("x-$rp[1]"));
@facn = (Formula("x+$rp[0]"),Formula("x+$rp[1]"));

# Create the 2d array
# row 1 positive roots
# row 2 negative roots
@fac = ([@facp], [@facn]);

@rAns = ();

# start with multiplicity 2 for first root
foreach my $i (0..7) {
    $im[$i] = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
    $b2 = ($i>=4)?1:0; 
    $b1 = ($i-4*$b2)>=2?1:0;
    $b0 = $i-4*$b2-2*$b1;
    $rAns[$i][0] = ($b0==0)?"x=$rp[0]":"x=-$rp[0]"; #first root
    $rAns[$i][2] = ($b1==0)?"x=$rp[1]":"x=-$rp[1]"; #last root
    $rAns[$i][1] = ($b2==0)?"$rAns[$i][0]":"$rAns[$i][2]"; #repeated root
    $ans[$i] = Formula("($fac[$b0][0])^(2-$b2)*($fac[$b1][1])^(1+$b2)")->reduce;
    # create distributed polynomial for display
    $B = -1*($rp[0]*(-1)**($b0)+$rp[1]*(-1)**($b1)); # neg sum of roots
    $C = ($rp[0]*$rp[1])*(-1)**($b0+$b1); # multiply roots
    # $fDisp[$i] = Formula("x^3 + $B x^2 + $C x")->reduce;
    add_functions($im[$i],"$ans[$i] for x in <-5,5> using color:blue and weight: 2");
}

@alphaChoice = ("A","B","C","D","E","F");
@slice = NchooseK(8,6);
@fChoice = @ans[ @slice ];
@fIm = @im[ @slice ];
@perm = NchooseK(6,6);
@fIm = @fIm[ @perm ]; # shuffle the chosen images
@ansChoice = @alphaChoice[invert(@perm)]; # correct for the shuffle

$graph_object1 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
add_functions($graph_object1,"(x-1)^2*(x-4) for x in <-5,5> using color:blue and weight: 2");

$graph_object2 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
add_functions($graph_object2,"(x-1)*(x-4) for x in <-5,5> using color:blue and weight: 2");


$q1 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[0]);
$q2 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[1]);
$q3 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[2]);
$q4 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[3]);

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Graphs of Polynomials ### <<

Consider the polynomials [`f(x)=(x-1)^2(x-4)`] and [`g(x)=(x-1)(x-4)`]. 

These functions are similar in the sense that they both have the same factors, [`(x-1)`] and [`(x-4)`], and the same roots, [`x=1`] and [`x=4`]. But when we consider their graphs, they are considerably different:



>> [@ LayoutTable(
  [
    [image(insertGraph($graph_object1), width=>200, height=>200, tex_size=>400), [image(insertGraph($graph_object2), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['f(x)',['g(x)',rowcss=>"padding:1pt;"]],
    ],
  align => 'c c',
  center => 1,
);@]* <<


One of the main differences happens at the root [`x=1`]. We see that [`f(x)`] touches the [`x`]-axis at that root whereas [`g(x)`] crosses it. 

The reason for this behavior is that that root's factor appears _twice_ in the [`f(x)`] whereas it only appears _once_ in [`g(x)`]. 

>>The number of times a root's factor appears in a factored polynomial is called the _multiplicity_.<<

The root [`x=1`] has multiplicity two in [`f(x)=(x-1)^2(x-4)`]  -- because the factor appears twice, and has multiplicity one in [`g(x)=(x-1)(x-4)`] -- because the factor appears once. 

* When a root has an _even multiplicity_, the graph of the polynomial _touches_ the [`x`]-axis at that point. We see this in the graph of [`f(x)`]. 

* When a root has an _odd multiplicity_, the graph _crosses_ the [`x`]-axis at that point. We see this in the graph of [`g(x)`]. 

We also notice that the root [`x=2`] has multiplicity one in both [`f(x)`] and [`g(x)`], and that both graphs cross the [`x`]-axis at [`x=2`]. 

>> ### Practice ### <<

Match the equations given below with their corresponding graphs, keeping in mind the multiplicity of the roots and how that effects the intersection with the [`x`]-axis:


END_PGML

Context()->texStrings;
BEGIN_TEXT
\{ LayoutTable(
  [
    [image(insertGraph($fIm[0]), width=>200, height=>200, tex_size=>400), [image(insertGraph($fIm[1]), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['Graph A',['Graph B',rowcss=>"padding:1pt;"]],
    [image(insertGraph($fIm[2]), width=>200, height=>200, tex_size=>400), [image(insertGraph($fIm[3]), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['Graph C',['Graph D',rowcss=>"padding:1pt;"]],
    [image(insertGraph($fIm[4]), width=>200, height=>200, tex_size=>400), [image(insertGraph($fIm[5]), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['Graph E',['Graph F',rowcss=>"padding:1pt;"]],
    ],
  align => 'c c',
  center => 1,
); \}
END_TEXT
Context()->normalStrings;

BEGIN_PGML

1.  [` y = [$fChoice[0]]`] is shown in graph [_]{$q1}

1.  [` y = [$fChoice[1]]`] is shown in graph [_]{$q2}

1.  [` y = [$fChoice[2]]`] is shown in graph [_]{$q3}

1.  [` y = [$fChoice[3]]`] is shown in graph [_]{$q4}

END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

Factor out [`x`] first...

END_PGML_HINT

# prep the stored arrays of roots for the solutions block
$ans1=$rAns[$slice[0]];
$ans2=$rAns[$slice[1]];
$ans3=$rAns[$slice[2]];
$ans4=$rAns[$slice[3]];

BEGIN_PGML_SOLUTION

1. [` y = [$fChoice[0]]`] has roots at [`[$ans1->[0]]`], [`[$ans1->[1]]`], and [`[$ans1->[2]]`]; 

    These roots correspond to graph [$ansChoice[0]].

1. [` y = [$fChoice[1]]`] has roots at [`[$ans2->[0]]`], [`[$ans2->[1]]`], and [`[$ans2->[2]]`]; 

    These roots correspond to graph [$ansChoice[1]].

1. [` y = [$fChoice[2]]`] has roots at [`[$ans3->[0]]`], [`[$ans3->[1]]`], and [`[$ans3->[2]]`]; 

    These roots correspond to graph [$ansChoice[2]].

1. [` y = [$fChoice[3]]`] has roots at [`[$ans4->[0]]`], [`[$ans4->[1]]`], and [`[$ans4->[2]]`]; 

    These roots correspond to graph [$ansChoice[3]].

END_PGML_SOLUTION

ENDDOCUMENT();        
