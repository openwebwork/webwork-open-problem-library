##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Polynomial equations and functions')
## DBsection('Graphs of polynomials')
## Date('6/20/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "PGchoicemacros.pl",
   "niceTables.pl",
   "parserPopUp.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 0;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');

@roots = ( 1, 2, 3, 4 );
#@slice = NchooseK(4,3);

@rp = @roots[ NchooseK(4,2) ];
# make zero the last root for ease of graph generation
@rp = ( @rp, 0 );

@facp = (Formula("x-$rp[0]"),Formula("x-$rp[1]"),Formula("x-$rp[2]"));
@facn = (Formula("x+$rp[0]"),Formula("x+$rp[1]"),Formula("x+$rp[2]"));

# Create the 2d array
# row 1 positive roots
# row 2 negative roots
@fac = ([@facp], [@facn]);

@rAns = ();

# because one root is zero - we can only make 4 graphs
# but now we're going to get reflected copies of each of these 4
foreach my $i (0..7) {
    $im[$i] = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
    $b2 = ($i>=4)?1:0; # b2 determines whether or not we're reflecting
    $A = ($b2==1)?-1:1; # set the leading coefficient
    $b1 = ($i-4*$b2)>=2?1:0;
    $b0 = $i-4*$b2-2*$b1;
    $rAns[$i][0] = "x=0";
    $rAns[$i][1] = ($b0==0)?"x=$rp[0]":"x=-$rp[0]";
    $rAns[$i][2] = ($b1==0)?"x=$rp[1]":"x=-$rp[1]";
    # $rAns[$i][2] = ($b2==0)?"x=$rp[2]":"x=-$rp[2]";
    $ans[$i] = Formula("$A*$fac[$b2][2]*$fac[$b0][0]*$fac[$b1][1]")->reduce;
    # create distributed polynomial for display
    $B = $A*-1*($rp[0]*(-1)**($b0)+$rp[1]*(-1)**($b1)); # neg sum of roots
    $C = $A*($rp[0]*$rp[1])*(-1)**($b0+$b1); # multiply roots
    $fDisp[$i] = Formula("$A x^3 + $B x^2 + $C x")->reduce;
    add_functions($im[$i],"$ans[$i] for x in <-5,5> using color:blue and weight: 2");
}
@alphaChoice = ("A","B","C","D","E","F");
@slice = NchooseK(8,6); # choose 6 of the 8 functions
@fFact = @ans[ @slice ]; # the factored form of the selected graphs
@fPoly = @fDisp[ @slice ]; # the polynomial form of the selected graphs
@fIm = @im[ @slice ]; # the selected graphs

@perm = NchooseK(6,6);
@fIm = @fIm[ @perm ]; # shuffle the chosen images
@ansChoice = @alphaChoice[invert(@perm)]; # correct for the shuffle

$graph_object1 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
add_functions($graph_object1,"x^3+x^2-6x for x in <-5,5> using color:blue and weight: 2");

$graph_object2 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
add_functions($graph_object2,"-x^3-3x^2-2x for x in <-5,5> using color:blue and weight: 2");

$graph_object3 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
add_functions($graph_object3,"x^2-4 for x in <-5,5> using color:blue and weight: 2");

$graph_object4 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[400,400],grid=>[10,10]);
add_functions($graph_object4,"-x^2+1 for x in <-5,5> using color:blue and weight: 2");



$q1 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[0]);
$q2 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[1]);
$q3 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[2]);
$q4 = PopUp(["?","A","B","C","D","E","F"],$ansChoice[3]);

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Graphs of Polynomials ### <<

We have seen how each root of a polynomial and its corresponding factor (multiplicity) effects the graph of the polynomial. 

There is one more important aspect to consider in relation to graphs that comes from the leading term of the polynomial. 

Recall that the _leading term_ of a polynomial is the term that has the _highest degree_ of [`x`]. This degree is called the degree of the polynomial. 

For example, the leading term for [`f(x)=x^3+x^2-6x`] is [`x^3`], and the polynomial has degree 3. 

Let's look at the graph of [`f(x)`] and focus on the behavior of the ''tails'' of the graph. 


>> [@image(insertGraph($graph_object1), width=>200, height=>200, tex_size=>400)@]* <<

Notice how the left tail is below the [`x`]-axis and the right tail is above the [`x`]-axis. 

It turns out that all polynomials with _odd degree_ have tails of opposite directions -- one above the [`x`]-axis and one below it. 

What about the tail behavior of [`g(x)=-x^3-3x^2-2x`]? 

The leading term for [`g(x)`] is [`-x^3`], and the polynomial still has degree 3, which is odd. We expect the graph to have tails of opposite directions. 

Here is the graph of [`g(x)`]:

>> [@image(insertGraph($graph_object2), width=>200, height=>200, tex_size=>400)@]* <<


We see that the tails have opposite directions as expected. But in this case the left tail is above the [`x`]-axis and the right tail is below the [`x`]-axis. 


Upon taking a closer look at the leading terms, we notice that [`f(x)`] has a positive leading term, [`x^3`], while [`g(x)`] has a negative term, [`-x^3`]. It is precisely the negative sign that turned the tail behavior upside down for the graph of [`g(x)`]. 


In fact, all polynomials with an odd degree and a:
*  positive leading term have the left tail below the [`x`]-axis and the right tail above.

*  negative leading term have the left tail above the [`x`]-axis and the right tail below.



What about polynomials with an even degree? 

Consider the graph of [`x^2-4`]:


>> [@image(insertGraph($graph_object3), width=>200, height=>200, tex_size=>400)@]* <<

Can you see how the tails behave? How both are above the [`x`]-axis?

What about the tails of the graph of [`-x^2+1`]?

>> [@image(insertGraph($graph_object4), width=>200, height=>200, tex_size=>400)@]* <<

Can you see where both tails are?

It turns out that all polynomials with _even degree_ have both tails on _the same side_ of the [`x`]-axis. 

In fact, all polynomials with an even degree and a:
*  positive leading term have the both tails above the [`x`]-axis.

*  negative leading term have both tails below the [`x`]-axis.


>> ### Practice ### <<

Match the equations given below with their corresponding graphs.

END_PGML
Context()->texStrings;
BEGIN_TEXT
\{ LayoutTable(
  [
    [image(insertGraph($fIm[0]), width=>200, height=>200, tex_size=>400), [image(insertGraph($fIm[1]), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['Graph A',['Graph B',rowcss=>"padding:1pt;"]],
    [image(insertGraph($fIm[2]), width=>200, height=>200, tex_size=>400), [image(insertGraph($fIm[3]), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['Graph C',['Graph D',rowcss=>"padding:1pt;"]],
    [image(insertGraph($fIm[4]), width=>200, height=>200, tex_size=>400), [image(insertGraph($fIm[5]), width=>200, height=>200, tex_size=>400), rowcss=>"padding-bottom:2pt;"]],
    ['Graph E',['Graph F',rowcss=>"padding:1pt;"]],
    ],
  align => 'c c',
  center => 1,
); \}
END_TEXT
Context()->normalStrings;

BEGIN_PGML

1.  [` y = [$fPoly[0]]`] is shown in graph [_]{$q1}

1.  [` y = [$fPoly[1]]`] is shown in graph [_]{$q2}

1.  [` y = [$fPoly[2]]`] is shown in graph [_]{$q3}

1.  [` y = [$fPoly[3]]`] is shown in graph [_]{$q4}

END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

Factor out [`x`] first...

END_PGML_HINT

# prep the stored arrays of roots for the solutions block
$ans1=$rAns[$slice[0]];
$ans2=$rAns[$slice[1]];
$ans3=$rAns[$slice[2]];
$ans4=$rAns[$slice[3]];

BEGIN_PGML_SOLUTION

1. [` y = [$fPoly[0]]`] factors as [` y = [$fFact[0]] `], so it has roots at [`[$ans1->[0]]`], [`[$ans1->[1]]`], and [`[$ans1->[2]]`]; 

    The leading coefficient of [` y = [$fPoly[0]]`] is [@ ($fPoly[0]->eval(x=>-10))<0?"positive":"negative" @], so the left tail should be [@ ($fPoly[0]->eval(x=>-10))<0?"below":"above" @] the x-axis, and the right tail should be [@ ($fPoly[0]->eval(x=>-10))<0?"above":"below" @] the y-axis.

    These characteristics are seen in graph [$ansChoice[0]].

1. [` y = [$fChoice[1]]`] factors as [` y = [$ans[1]] `], so it has roots at [`[$ans2->[0]]`], [`[$ans2->[1]]`], and [`[$ans2->[2]]`]; 

    The leading coefficient of [` y = [$fPoly[1]]`] is [@ ($fPoly[1]->eval(x=>-10))<0?"positive":"negative" @], so the left tail should be [@ ($fPoly[1]->eval(x=>-10))<0?"below":"above" @] the x-axis, and the right tail should be [@ ($fPoly[1]->eval(x=>-10))<0?"above":"below" @] the y-axis.

    These characteristics are seen in graph [$ansChoice[1]].

1. [` y = [$fChoice[2]]`] factors as [` y = [$ans[2]] `], so it has roots at [`[$ans3->[0]]`], [`[$ans3->[1]]`], and [`[$ans3->[2]]`]; 

    The leading coefficient of [` y = [$fPoly[2]]`] is [@ ($fPoly[2]->eval(x=>-10))<0?"positive":"negative" @], so the left tail should be [@ ($fPoly[2]->eval(x=>-10))<0?"below":"above" @] the x-axis, and the right tail should be [@ ($fPoly[2]->eval(x=>-10))<0?"above":"below" @] the y-axis.

    These characteristics are seen in graph [$ansChoice[2]].

1. [` y = [$fChoice[3]]`] factors as [` y = [$ans[3]] `], so it has roots at [`[$ans4->[0]]`], [`[$ans4->[1]]`], and [`[$ans4->[2]]`]; 

    The leading coefficient of [` y = [$fPoly[3]]`] is [@ ($fPoly[3]->eval(x=>-10))<0?"positive":"negative" @], so the left tail should be [@ ($fPoly[3]->eval(x=>-10))<0?"below":"above" @] the x-axis, and the right tail should be [@ ($fPoly[3]->eval(x=>-10))<0?"above":"below" @] the y-axis.

    These characteristics are seen in graph [$ansChoice[3]].

END_PGML_SOLUTION

ENDDOCUMENT();        
