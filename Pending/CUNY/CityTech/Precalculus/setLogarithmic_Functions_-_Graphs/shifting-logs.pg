##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Exponential and logarithmic expressions and functions)
## DBsection(Graphs)
## Date(7/9/2018)
## Institution(City Tech)
## Author(K. Andrew Parker)
## MO(1)
## KEYWORDS('algebra', 'inequality', 'fraction')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "parserAssignment.pl",
   "parserFunction.pl",
   "AppletObjects.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";

$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => 'configure',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 400,              # may want to modify width
   height                => 400,              # may want to modify height
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
   submitActionScript    => qq{ getQE('answerBox').value = getAppletValues() },
   #submitActionScript => '',
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in

);


###############################################
#
#  PNG picture of GeoGebra applet for hardcopy

$im = init_graph(-5,-5,5,5,axes=>[0,0],grid=>[10,10],size=>[400,400]);
add_functions($im, "ln(x) for x in <0.0001,5> using color:blue and weight:2");

##################################
# Setup GeogebraWebApplet --
###################################

###############################################
#
#  For persistence of GeoGebra applet state 
#  when answers are submitted or page is refreshed.
#  Uses JavaScript interface to GeoGebra.

HEADER_TEXT(
qq! 
<script language="javascript">
   function ggbOnInit(param) {
       if (param == "$appletName") {
           applet_loaded(param,1);  // report that applet is ready. 
           ww_applet_list[param].safe_applet_initialize(2);
       }
   } 
</script>
<noscript>For this question to work properly, 
you must enable JavaScript, or use another browser 
(or computer) on which JavaScript works.</noscript>
!);


#######################################################
#
#  For setting initial values in GeoGebra from WeBWorK
#  Uses JavaScript interface to GeoGebra.

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setAppletCoefficients() {
   var applet=getApplet("$appletName");   // alert("Updating coefficients");
   if (typeof(applet)!="undefined") {
     if (typeof(applet.setValue)!="undefined") {
     
     ////////////////////////////////////////////////////////////////
     //  List the values of the parameters to be set in the applet here
     
          // Create the construction WebWork
          applet.setPerspective("G");
          applet.setPointCapture(1,2);
          applet.setCoordSystem(-5,5,-5,5);
          applet.setAxisSteps(1,1,1);
          applet.setGridVisible('true');
          applet.evalCommand('a = 1');
          applet.evalCommand('A = (a,0)');
          applet.setColor('A',228,27,23);
          applet.evalCommand('f = log(2,x - (a-1))');
          applet.evalCommand('x = (a-1)');
          applet.setLineStyle('g',1);
          applet.setColor('g',248,128,23);
          applet.evalCommand('h = log(2,x)');
          applet.setColor('h',122,119,119);
          applet.setLineThickness('h',2);
          applet.setCaption('h','y = log_2(x)');
          applet.setLabelStyle('h',2);
          applet.setLabelVisible('h',true);
     } else {
          setTimeout("setAppletCoefficients()", 1000);
     }
   } else {
      setTimeout("setAppletCoefficients()",1000);
   }
}
ww_applet_list["$appletName"].setConfig = function() {setAppletCoefficients()};
</script>
END_SCRIPT

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;
    // Get the value for re-positioned A
	var Ax = applet.getXcoord("A");
    return(Ax); 
}
 </script>
END_SCRIPT

###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or
# a hidden AnswerBox
###################################
# TEXT($PAR,  MODES(TeX=>'geogebraweb code',
#                      HTML=>$applet->insertAll(
#                                debug =>0,
#                                reinitialize_button => 1,
#                                #includeAnswerBox=>1,
# )));

Context("Numeric");

package NewFunc;
# this next line makes the function a 
#   function from reals to reals
our @ISA = qw(Parser::Function::numeric);

sub log2 {
  shift; my $x = shift;
  return CORE::log($x)/CORE::log(2);
}

package main;

# Make it work on formulas as well as numbers
sub log2 {Parser::Function->call('log2',@_)}

#  Add the new functions to the Context
Context()->functions->add(
  log2 => {class => 'NewFunc',
           TeX => '\log_2'}, );

$shift = non_zero_random(-4,3,1);
$fShifted = Formula("log2(x-$shift)")->reduce;
$LR = ($shift > 0)?"right":"left";
$absShift = abs($shift);

Context()->variables->set( x=>{limits=>[$shift,$shift+4]} );

$f = Formula("ln(x)");
$int = $shift+1;

parser::Assignment->Allow;
$logVA = Compute("x=$shift");

$custom = sub {
    my $ans = shift;
    $ans->{ans_message} = "Asymptotes are lines, and must be expressed as equations - not just as numbers." if ($ans->{ans_message} =~ m/isn't a variable equal to a/);
    $ans->{ans_message} = "Asymptotes are lines, and must be expressed as equations - not just as numbers." if ($ans->{ans_message} =~ m/should be more words/);
    return $ans;
    };

Context("Interval");

$adjustError = sub { 
  my $ans = shift; 
  $ans->{ans_message} = "Are you sure you want to include this endpoint in the domain?" 
    if $ans->{ans_message} eq "The type of interval is incorrect";
  return $ans; 
};

$logDom = Interval("($shift,inf)");

Context("Point");
$logInt = Point("($int,0)");

##############################################################
#
#  Text
#
#

 TEXT($PAR,  MODES(TeX=>'geogebraweb code',
                      HTML=>$applet->insertAll(
                                debug =>0,
                                reinitialize_button => 0,
                                includeAnswerBox=>1,
 )));

NAMED_ANS('answerBox'=>Real($int)->cmp);


BEGIN_PGML

Shift the graph of [`y = \log_2(x)`] to the [$LR] by [$absShift] units. 


a. The domain of the shifted function is [_______________]{$logDom->cmp()->withPostFilter($adjustError)}

a. The asymptote of the shifted function is [_______________]{$logVA->cmp()->withPostFilter($custom)}

a. Our shifted function has an [`x`]-intercept at [_______________]{$logInt}

a. Give an expression for our shifted graph: [`y=`] [_______________]{$fShifted}

* Use "log2( )" to represent [`\log_2()`]
* Use "inf" and "-inf" to represent [`\infty`] and [`-\infty`]
* Make sure to enter your asymptote as an equation.
* Make sure to enter your intercept as a point.

END_PGML

##############################################################
#
#  Answers
#
#


sub GEOGEBRA_PARAMS {
    my $result = {
appName=>"classic",
enableShiftDragZoom=>"false",
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false",
showMenuBar=>"false" ,
showToolBar=>"false",
showAlgebraInput=>"false",
useBrowserForJS=>"true",
#ggbbase64=>''
};

$result;
}


ENDDOCUMENT();        
