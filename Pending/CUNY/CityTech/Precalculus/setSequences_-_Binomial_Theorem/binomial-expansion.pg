##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Finite sequences and series')
## DBsection('Binomial theorem')
## Date('8/21/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "niceTables.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);

$eighthRow = List(1,8,28,56,70,56,28,8,1);

$introN = random(4,7,1);
$introK = random(2,$introN-2,1);
$introNFact = Real("$introN!");
$introKFact = Real("$introK!");
$introNKFact = Real("($introN-$introK)!");
$introPascal = Real("$introNFact/($introKFact*$introNKFact)");

$n[0] = random(9,15,1);
$k[0] = random(3,$n[0]-3,1);

$n[1] = random(16,20,1);
$k[1] = random(4,$n[1]-4,1);

sub combination {
    my( $n, $k ) = @_;
    #return (1,1) unless defined $n && $n =~ /^\d+$/ && defined $k && $k =~ /^\d+$/;
    my $num = 1;
    my $den = 1;
    while( $k > 0 ) {
        $num *= $n--;
        $den *= $k--;
    }
    return ($num,$den);
}

foreach my $i (0..1) {
    $nFact[$i] = Real("$n[$i]!");
    $kFact[$i] = Real("$k[$i]!");
    $nkFact[$i] = Real("($n[$i]-$k[$i])!");
    my ($num, $den) = combination($n[$i],$k[$i]);
    $pascal[$i] = Real("$num/$den");
}

### Re-initialize all answer variables in LimitedNumeric 
### This prevents students from using "!" in their answers

Context("LimitedNumeric");
Context()->{error}{msg}{"Can't use '+' in this context"} 
  = "Addition is disabled for this problem. Simplify the sum and resubmit your answer.";
Context()->{error}{msg}{"Can't use '-' in this context"} 
  = "Subtraction is disabled for this problem. Simplify the difference and resubmit your answer.";
Context()->{error}{msg}{"Can't use '*' in this context"} 
  = "Multiplication is disabled for this problem. Simplify the product and resubmit your answer.";
Context()->{error}{msg}{"Can't use '/' in this context"} 
  = "Division is disabled for this problem. Simplify the quotient and resubmit your answer.";
Context()->{error}{msg}{"Can't use '^' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '**' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '!' in this context"} 
  = "Factorials are disabled for this problem. Compute the result for yourself and resubmit your answer.";

foreach my $i (0..1) {
    $nFact[$i] = Real($nFact[$i]);
    $kFact[$i] = Real($kFact[$i]);
    $nkFact[$i] = Real($nkFact[$i]);
    $pascal[$i] = Real($pascal[$i]);
}

$introNFact = Real($introNFact);
$introKFact = Real($introKFact);
$introNKFact = Real($introNKFact);
$introPascal = Real($introPascal);

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Powers of Binomials ### <<

*Pascal's triangle* is a number pattern that is useful when computing large exponents of binomial expressions.

Let's start by looking at some smaller exponents of a binomial expression, [`(a+b)`]:  
>> [@ DataTable(
    [[['distribute `a`: ',noencase=>1],'a^2','+','ab','',''],
     [['distribute `b`: ',noencase=>1,midrule=>1],'','','ab','+','b^2'],
     [['combine like terms: ',noencase=>1],'a^2','+','2ab','+','b^2']],
    encase=>['`','`'],
    align=>'rccccc',
    caption=>'`(a+b)^2` as `(a+b)(a+b)`'
)@]*** <<

If we want to now consider [`(a+b)^3`], we can think of it as [`(a+b)(a+b)^2`] - or even [`(a+b)(a^2 + 2ab + b^2)`] because we already distributed [`(a+b)^2`]:  
>> [@ DataTable(
    [[['distribute `a`: ',noencase=>1],'a^3','+','2a^2b','+','ab^2','',''],
     [['distribute `b`: ',noencase=>1,midrule=>1],'','','a^2b','+','2ab^2','+','b^3'],
     [['combine like terms: ',noencase=>1],'a^3','+','3a^2b','+','3ab^2','+','b^3']],
    encase=>['`','`'],
    align=>'rccccccc',
    caption=>'`(a+b)^3` as `(a+b)(a^2+2ab+b^2)`'
)@]*** <<

And one more, for good measure. We will again consider [`(a+b)^4`] as the product of [`(a+b)`] and [`(a+b)^3`]:  
>> [@ DataTable(
    [[['distribute `a`: ',noencase=>1],'a^4','+','3a^3b','+','3a^2b^2','+','ab^3','',''],
     [['distribute `b`: ',noencase=>1,midrule=>1],'','','a^3b','+','3a^2b^2','+','3ab^3','+','b^4'],
     [['combine like terms: ',noencase=>1],'a^4','+','4a^3b','+','6a^2b^2','+','4ab^3','+','b^4']],
    encase=>['`','`'],
    align=>'rccccccccc',
    caption=>'`(a+b)^4` as `(a+b)(a^3+3a^2b+3ab^2+b^3)`'
)@]*** <<

What we see emerging here is the same pattern as Pascal's triangle. Look at the coefficients for each distributed polynomial:  
* for [`(a+b)^2`], the coefficients are [`1,2,1`];
* for [`(a+b)^3`], the coefficients are [`1,3,3,1`];  
* for [`(a+b)^4`], the coefficients are [`1,4,6,4,1`].

These are _exactly_ the rows of Pascal's triangle (for [`n=2`], [`n=3`], and [`n=4`], respectively). Do you notice how the row of Pascal's triangle is indicated by each exponent of our binomial? (This is also relevant as to why the top "row" of Pascal's triangle is considered to have [`n=0`] - think about it!)

Since we know the closed form to find any location in Pascal's triangle, [`\left( \frac{n!}{k!(n-k)!} \right)`], we can also use the same closed form to find the coefficient in the distributed form of a binomial raised to a power. In order to do that, though, we *must* know the values of [`n`] and [`k`]. We've already discovered that the row, [`n`], is given by the exponent of the binomial - but what about [`k`]? 

Each row in Pascal's triangle begins with [`k=0`], the next being [`k=1`], then [`k=2`], and so on. 

If we look at [`(a+b)^4`] as an example, we see that the [`k=0`] term is [`a^4`], the [`k=1`] term is [`4a^3b`], and the [`k=2`] term is [`6a^2b^2`]. It might be useful to include some of the _unwritten_ factors in each term:  
* [`k=0`] term : [`a^4 b^0`]
* [`k=1`] term : [`a^3 b^1`]
* [`k=2`] term : [`a^2 b^2`]

What we should notice is that the value of [`k`] in each term matches up with the power of [`b`] (and what's even more, the powers of [`a`] and [`b`] _always_ add up to [`n`]).

So, if we were to consider [`(a+b)^{[$introN]}`], and we wanted to determine the coefficient of [`a^{[$introN-$introK]}b^{[$introK]}`], what would it be?  
* [`n = `][_____]{$introN}
* [`k = `][_____]{$introK}
* The coefficient of [`a^{[$introN-$introK]}b^{[$introK]}`] will be [________]{$introPascal}

>> #### Practice #### <<

1. In the distributed form of [`(a+b)^{[$n[0]]}`], the coefficient of [`a^{[$n[0]-$k[0]]} b^{[$k[0]]}`] will be [__________]{$pascal[0]}

1. In the distributed form of [`(a+b)^{[$n[1]]}`], the coefficient of [`a^{[$n[1]-$k[1]]}b^{[$k[1]]}`] will be [__________]{$pascal[1]}

END_PGML

##############################################################
#
#  Answers
#
#


ENDDOCUMENT();        
