##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Finite sequences and series')
## DBsection('Binomial theorem')
## Date('8/21/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "niceTables.pl",
   "contextFraction.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Fraction");
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);
Context()->variables->are(x=>'Real',y=>'Real');

$eighthRow = List(1,8,28,56,70,56,28,8,1);

$introN = random(4,7,1);
$introK = random(2,$introN-2,1);
$introNFact = Real("$introN!");
$introKFact = Real("$introK!");
$introNKFact = Real("($introN-$introK)!");
$introPascal = Real("$introNFact/($introKFact*$introNKFact)");

$n[0] = random(9,15,1);
do { $k[0] = random(3,$n[0]-3,1) } until ($k[0] != $n[0]/2);
$a[0] = random(2,5,1);

$n[1] = random(16,20,1);
do { $k[1] = random(4,$n[1]-4,1) } until ($k[1]%2 == 1);
do { $a[1] = random(2,5,1) } until ($a[1] != $a[0]);

sub combination {
    my( $n, $k ) = @_;
    #return (1,1) unless defined $n && $n =~ /^\d+$/ && defined $k && $k =~ /^\d+$/;
    my $num = 1;
    my $den = 1;
    while( $k > 0 ) {
        $num *= $n--;
        $den *= $k--;
    }
    return ($num,$den);
}

foreach my $i (0..1) {
    $nFact[$i] = Real("$n[$i]!");
    $kFact[$i] = Real("$k[$i]!");
    $nkFact[$i] = Real("($n[$i]-$k[$i])!");
    my ($num,$den) = combination($n[$i],$k[$i]);
    $pascal[$i] = Fraction($num,$den)->reduce;
    #$pascal[$i] = Fraction($nFact[$i],"($kFact[$i]*$nkFact[$i])")->reduce;
    if ($n[$i]>2*$k[$i]) {
        $ab[$i] = ($i==0)?Fraction("$a[$i]^($n[$i]-2*$k[$i])"):Fraction("-$a[$i]^($n[$i]-2*$k[$i])");
    } else {
        $ab[$i] = ($i==0)?Fraction(1,"$a[$i]^(2*$k[$i]-$n[$i])"):Fraction(-1,"$a[$i]^(2*$k[$i]-$n[$i])");
    }
    $coeff[$i] = Fraction("$pascal[$i]*$ab[$i]")->reduce;
    $binom[$i] = ($i==0)?Formula("$a[$i]x + y/$a[$i]"):Formula("$a[$i]x - y/$a[$i]");
}

### This prevents students from using "!" in their answers
### Perl has no implementation for factorial, so we must resort to this method
Parser::Number::NoDecimals();
Context()->{error}{msg}{"You are not allowed to type decimal numbers in this problem"} 
  = "Decimals are not allowed for this problem, please use fractions instead of decimal approximations.";

Context()->operators->undefine("+"," +","+ ");
Context()->operators->undefine("-"," -","- ");
Context()->operators->undefine("*"," *","* ");
Context()->operators->undefine("^"," ^","^ ","**"," **","** ","!");
Context()->{error}{msg}{"Can't use '+' in this context"} 
  = "Addition is disabled for this problem. Simplify the sum and resubmit your answer.";
Context()->{error}{msg}{"Can't use '-' in this context"} 
  = "Subtraction is disabled for this problem. Simplify the difference and resubmit your answer.";
Context()->{error}{msg}{"Can't use '*' in this context"} 
  = "Multiplication is disabled for this problem. Simplify the product and resubmit your answer.";
Context()->{error}{msg}{"Can't use '^' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '**' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '!' in this context"} 
  = "Factorials are disabled for this problem. Compute the result for yourself and resubmit your answer.";

$introCoeff = Real(10*2*2*3*3*3);

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### More Complicated Binomials ### <<

What happens when we try to compute powers of binomials when the binomial is more complicated than just [`(a+b)`]? For example, what if we want to consider the coefficient of [`x^2 y^3`] in the expanded form of [`(2x + 3y)^5`]?

There's nothing stopping us from writing [`(a+b)^5`] instead, but we must *remember* that we've replaced [`2x`] with [`a`] and [`3y`] with [`b`].

From the closed form for Pascal's triangle, we can tell that the coefficient of [`a^2 b^3`] will be [`\frac{5!}{3!2!}`] or, when simplified, [`10`].

So we know that we'll have [`10 a^2 b^3`]. How does this relate to [`x`] and [`y`]? 

Remember that [`a`] was a replacement for [`2x`] and [`b`] replaced [`3y`].  
So, if we attempt to return to [`x`] and [`y`], our [`10 a^2 b^3`] would look like [`10 (2x)^2 (3y)^3`].

When multiplied out, what will be the coefficient of [`x^2 y^3`]? [__________]{$introCoeff}  
* It might help to think of [`a^2 b^3`] as [`aabbb`] before returning to [`x`] and [`y`]s.

>> #### Practice #### <<

1. In the distributed form of [`([$binom[0]])^{[$n[0]]}`], the coefficient of [`x^{[$n[0]-$k[0]]} y^{[$k[0]]}`] will be [__________]{$coeff[0]}

1. In the distributed form of [`([$binom[1]])^{[$n[1]]}`], the coefficient of [`x^{[$n[1]-$k[1]]}y^{[$k[1]]}`] will be [__________]{$coeff[1]}

* You may not enter decimal approximations for this problem
* Enter your answer as a fraction, if necessary.

END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_SOLUTION

[$nFact[1]]

[$kFact[1]]

[$nkFact[1]]

[$pascal[1]]

[$ab[1]]

END_PGML_SOLUTION

ENDDOCUMENT();        
