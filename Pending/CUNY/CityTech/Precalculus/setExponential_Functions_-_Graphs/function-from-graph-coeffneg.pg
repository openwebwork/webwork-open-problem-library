##DESCRIPTION
##  Inspired by Library/LoyolaChicago/Precalc/Chap3Sec1/Q15.pg 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Exponential and logarithmic expressions and functions')
## DBsection('Graphs')
## Date('7/6/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 0;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->are(x=>['Real',limits=>[-4,4]],y=>['Real',limits=>[0,20]]);
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);

# force students to recognize that when a = 1, b = f(1)
$a = random(-7,-2,1);
do { $b = random(-9,-2,1); } until ($a != $b);

$absA = abs($a);
$absB = abs($b);

$base = Formula("$absB/$absA");
$baseReal = $absB/$absA;

$hPos = ($baseReal < 1)?"top":"bottom";

$f = Formula("$a*($base)^x")->with(test_at=>[[0,$a],[1,$b]]);

$x = 1;
$y = $f->eval(x=>$x);

$gr = init_graph(-10,-10,10,10,size=>[400,400],axes=>[0,0]);
plot_functions($gr, "$a*$baseReal^x for x in <-10,10> using color:blue and weight:2");
$gr->lb( new Label($x,$y," ($x,$y)","blue","left",$hPos));
$gr->stamps(closed_circle($x,$y,'blue'));
$gr->lb( new Label(0,$a," (0,$a)","blue","left",$hPos));
$gr->stamps(closed_circle(0,$a,'blue'));

Parser::Number::NoDecimals();
Context()->{error}{msg}{"You are not allowed to type decimal numbers in this problem"} 
  = "Decimals are not allowed for this problem, please use exact forms (such as fractions) instead of decimal approximations.";


$gr1 = init_graph(-8,-8,8,8,size=>[400,400],grid=>[0,0], axes=>[0,0]);
add_functions($gr1,"-3*2^x for x in <-8,8> using color:blue and weight: 2");
$gr1->stamps(closed_circle(0,-3,'orange'));
$gr1->lb( new Label(0.9,-3,"(0,-3)",'orange','center','middle') );


$gr2 = init_graph(-8,-8,8,8,size=>[400,400],grid=>[0,0], axes=>[0,0]);
add_functions($gr2,"-3*(3/4)^x for x in <-8,8> using color:blue and weight: 2");
$gr2->stamps(closed_circle(0,-3,'orange'));
$gr2->lb( new Label(0.9,-3,"(0,-3)",'orange','center','middle') );

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Graphs of Exponential Functions ### <<

The exponential function [`f(x)=-3 \cdot 2^x`] has base [`2`], so we would expect its graph's right tail to shoot up and left tail to flatten.

However, this is its graph:

>> [@image( insertGraph($gr1),width=>400,height=>400,tex_size=>800 )@]* <<

We notice that the right tail shoots down not up as we thought. How come?

If we find the [`y`]-intercept for [`f(x)`] we find that it is [`(0,-3)`]. This tells us that the graph has to pass through this point, and thus, there is no way for the right tail to shoot up. 

The answer to what is happening simply lies in the negative coefficient.

A negative coefficient will flip the behavior of the tail of an exponential function. 


Notice for instance the graph of [`g(x)=-3\cdot (0.75)^x`].

>> [@image( insertGraph($gr2),width=>400,height=>400,tex_size=>800 )@]* <<

Instead of the graph's left tail shooting up as expected (since its base is less than [`1`]), it shoots down because the coefficient is negative. 

>> ### Practice ### <<


>> [@ image( insertGraph($gr), width=>400, height=>400, tex_size=>800 ) @]* <<

Assuming that [`f(x)`] is of the form [` A \cdot B^x `], write an expression for [`f(x)`]:

[`f(x)`] = [_______________]{$f}


END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

What is [`f(0)`] on the graph? What is [`f(0)`] using [`A \cdot B^x`]?

What is [`f(1)`] on the graph? What is [`f(1)`] using [`A \cdot B^x`]?

Use the answers to these questions to determine the appropriate values for [`A`] and [`B`].

END_PGML_HINT

ENDDOCUMENT();        
