##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Fundamentals)
## DBsection(Real Numbers)
## Date(6/3/2002)
## MO(1)
## TitleText1('Precalculus')
## AuthorText1('Stewart, Redlin, Watson')
## EditionText1('3')
## Section1('1.1')
## Problem1('22')
## KEYWORDS('algebra', 'inequality', 'fraction')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "bizarroArithmetic.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Complex");
Context()->flags->set(reduceConstants=>0,reduceConstantFunctions=>0);
Context()->operators->set(
'+' => {class => 'bizarro::BOP::add', isCommand => 1},
'-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
'*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
' *' => {class => 'bizarro::BOP::multiply', isCommand => 1},
'* ' => {class => 'bizarro::BOP::multiply', isCommand => 1},
'/' => {class => 'bizarro::BOP::divide', isCommand => 1},
' /' => {class => 'bizarro::BOP::divide', isCommand => 1},
'/ ' => {class => 'bizarro::BOP::divide', isCommand => 1},
'//' => {class => 'bizarro::BOP::divide', isCommand => 1},
'**' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
'^' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
);

$complex = Complex("1+1i");
$euler = Formula("sqrt(2)e^((pi/4)i)");
$polar = Formula("sqrt(2)(cos(pi/4)+i*sin(pi/4))");

$eulerChecker = sub {
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      # return 0 unless ($correct == $student); #already covered above
      Context()->flags->set(bizarroPow=>1,bizarroMul=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroPow=>0,bizarroMul=>0);
      delete $correct->{test_values};
      delete $student->{test_values};
      Value::Error("Your answer is equivalent to \($complex\), but it is not in the correct form.") unless $OK;
      return $OK;
}; 

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT


Enter \($complex\) in exponential form (\(r e^{i\theta}\)): 
$PAR
\{$euler->ans_rule\}
$PAR
Enter \($complex\) in polar form (\(r \left( \cos(\theta) + i \sin(\theta)\right) \)): 
$PAR
\{$euler->ans_rule\}


END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS($euler->cmp(checker=>$eulerChecker));
ANS($polar->cmp(checker=>$eulerChecker));

ENDDOCUMENT();        
