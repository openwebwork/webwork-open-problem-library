##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS()

## DBsubject('Algebra')
## DBchapter('Algebra of real numbers and simplifying expressions')
## DBsection('Inequalities and intervals')
## Date('6/29/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')
## TitleText1('Precalculus')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGgraphmacros.pl",
   "PGML.pl",
   "contextInequalities.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

foreach my $i (0..3) {
    $gr[$i] = init_graph(-6,-1,6,1, size=>[408,68]);
    # x-axis
    $gr[$i] -> moveTo(-6,0);
    $gr[$i] -> lineTo(6,0,'black','1');
    # x-axis ticks entered as y-value, color, list of x-values
    $gr[$i] -> h_ticks(0,"black",-5,-4,-3,-2,-1,0,1,2,3,4,5);
    # labels for tickmarks
    foreach my $j (0..5) {
        $gr[$i]->lb( new Label($j,-0.5,$j, 'black','center','middle'));
        $gr[$i]->lb( new Label(-$j,-0.5,-$j, 'black','center','middle'));
    }
}

$gr[0] -> stamps( closed_circle(-4,0,'blue') );
$gr[0] -> stamps( closed_circle(4,0,'blue') );

$gr[1] -> moveTo(4,0);
$gr[1] -> arrowTo(6,0,'blue',3);
$gr[1] -> stamps( open_circle(4,0,'blue') );

$gr[2] -> moveTo(-4,0);
$gr[2] -> arrowTo(-6,0,'blue',3);
$gr[2] -> stamps( closed_circle(-4,0,'blue') );

$gr[3] -> moveTo(-4,0);
$gr[3] -> lineTo(4,0,'blue',3);
$gr[3] -> stamps( open_circle(-4,0,'blue') );
$gr[3] -> stamps( closed_circle(4,0,'blue') );

Context("Interval");

@n = ();
$int = ();
foreach my $i (0..4) {
    $n[$i] = $i * non_zero_random(-8,8,1);
    if (random(0,1,1)==1) {
        $int[$i] = (random(0,1,1)==1)?Interval("(-inf,$n[$i])"):Interval("(-inf,$n[$i]]");
    } else {
        $int[$i] = (random(0,1,1)==1)?Interval("($n[$i],inf)"):Interval("[$n[$i],inf)");
    };
}

Context("Inequalities");

@ineq = ();
foreach my $i (0..4) {
    $ineq[$i] = Inequality($int[$i]);
}

##############################################################
#
#  Text
#
#

BEGIN_PGML
It is straightforward to graph specific values for [`x`]; for instance, consider this graph of [`x = 4`] or [`x=-4`]:

>> [@ image(insertGraph($gr[0]),width=>408, height=>68, tex_size=>700) @]* <<

But sometimes we want to refer to a _interval_ of values, such as *"all numbers greater than 4"*:

>> [@ image(insertGraph($gr[1]),width=>408, height=>68, tex_size=>700) @]* <<

    All the numbers greater than 4 have been shaded blue.  
    There is an open circle on the number 4 to indicate "4" is not included in the interval. (4 is not greater than itself!)

        * Inequality notation: [`x > 4`] (we could also write: [` 4 < x `])
        * Interval notation: [`(4,\infty)`] ([`\infty`] indicates that we want _all_ values greater than 4, up to _infinity_ as symbolized by the shaded arrow in the graph; note that the left parenthesis "(" next to the "4" indicates that the the left endpoint 4 is _not_ included in the interval.)

If we want to include an endpoint in our interval, we must consider something like *"all numbers less than _or equal to_ -4"*:

>> [@ image(insertGraph($gr[2]),width=>408, height=>68, tex_size=>700) @]* <<

    This interval _includes_ -4 because of the additional "or equal to" in the description of our range of values.

        * Inequality notation: [`x \le -4`] (alternatively: [` -4 \ge x `])
        * Interval notation: [`(-\infty,-4]`] (here the square bracket "]"  indicates that the endpoint -4 _is_ included in the interval.)

Rewrite each of the following interval expressions in _interval notation_:

* You can use "inf" and "-inf" for [`\infty`] and [`-\infty`].

a. [` [$ineq[0]] `] [________]{$int[0]}

b. [` [$ineq[1]] `] [________]{$int[1]}

c. [` [$ineq[2]] `] [________]{$int[2]}

d. [` [$ineq[3]] `] [________]{$int[3]}

e. [` [$ineq[4]] `] [_________]{$int[4]}



END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

* Think about each inequality: is [`x`] _bigger_ or _smaller_ than the specified number?
* Is the number _included_ in the interval ([`\le`] or [`\ge`])? Or is it _excluded_ ([`<`] or [`>`])?
* Use a parenthesis "(" or ")" when an endpoint is _excluded_ from the interval; use square brackets "\[" or "\]" when an endpoint is _included_ in the interval.
* Consider drawing a visual representation of the range given by each inequality - does that help you determine the interval notation?
* The order matters: [`-\infty`] always goes on the left and [`\infty`]  always goes on the right.

END_PGML_HINT

BEGIN_PGML_SOLUTION

a. [` [$int[0]] `]  

b. [` [$int[1]] `]  

c. [` [$int[2]] `]  

d. [` [$int[3]] `]  

e. [` [$int[4]] `]  

END_PGML_SOLUTION

ENDDOCUMENT();        
