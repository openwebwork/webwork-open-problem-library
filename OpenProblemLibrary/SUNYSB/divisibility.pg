## DESCRIPTION
## Discrete Mathematics
## ENDDESCRIPTION

## Tagged by cmd6a 8/6/06

## DBsubject(Number theory)
## DBchapter(Divisibility)
## DBsection(Division algorithm)
## Institution(SUNYSB)
## Level(2)
## KEYWORDS('discrete mathematics','number theory','integers','divisibility')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros('PG.pl',
        'PGbasicmacros.pl',
        'PGchoicemacros.pl',
        'PGanswermacros.pl',
        'PGgraphmacros.pl'
        );


TEXT(beginproblem()); # standard preamble to each problem.
# Since this is a true questions, we do not usually wish to tell students which
# parts of the matching question have been answered correctly and which are
# incorrect.  That is too easy.  To accomplish this we set the following flag to zero.
$showPartialCorrectAnswers = 0;

# Make a new select list
$tf = new_select_list();
# $tf now "contains" the select list object.  

$a = random(10,20,1);
$aprod = $a*random(10,20,1);

$b = random(10,20,1);
$bprod = $b*random(10,20,1);

$c = random(10,20,1);
$cprod = $c*random(10,20,1) + 1;

$d = random(10,20,1);
$dprod = $d*random(10,20,1);

$e = random(10,20,1);
$eprod = $e*random(10,20,1);

$f = random(10,20,1);
$fprod = $f*random(10,20,1)+1;

$g = random(10,20,1);
$gprod = $g*random(10,20,1);

$h = random(10,20,1);
$hprod = $h*random(10,20,1);

$i = random(10,20,1);
$iprod = $i*random(10,20,1)+1;

$j = random(100,200,1);
$jprod = $j*random(100,200,1)+1;

$k = random(100,200,1);
$kprod = $k*random(100,200,1)+1;

# Insert some  questions and whether or not they are true.
$tf -> qa (
"\($a \mid $aprod\)", "T",
"\($bprod \mid $b\)", "F",
"\($c \mid $cprod\)", "F",
"$d divides $dprod", "T",
"$eprod divides $e", "F",
"$f divides $fprod", "F",
"$g is divisible by $gprod", "F",
"$h is divisible by $hprod", "F",
"$hprod is divisible by $h", "T",
"$iprod is divisible by $i", "F",
"$jprod is divisible by $j", "F",
"$kprod is divisible by $k", "F"
);   # remember every statement has to end with a semi-colon.

# Choose two of the question and answer pairs at random.
$tf ->choose(9);  
# Now print the text using $ml->print_q 

BEGIN_TEXT
$PAR

Enter T or F depending on whether the statement is a true proposition or not.
(You must enter T or F -- True and False will not work.)$BR
\{ $tf-> print_q \}
$PAR
END_TEXT

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;

# The ra_... means that the output of this function is an array reference -- a gadget that looks like
# [T, F, T] or whatever the list of T's and F's represents the correct answers. 
# That's it.
ENDDOCUMENT();        # This should be the last executable line in the problem.
