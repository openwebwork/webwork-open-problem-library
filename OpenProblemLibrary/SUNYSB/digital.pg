## DESCRIPTION
## Discrete Mathematics
## ENDDESCRIPTION

## Tagged by cmd6a 8/6/06

## DBsubject(Set theory and logic)
## DBchapter(Propositional logic)
## DBsection(Operations on propositions)
## Institution(SUNYSB)
## Level(2)
## KEYWORDS('discrete mathematics','logic','nor','nand')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros('PG.pl',
        'PGbasicmacros.pl',
        'PGchoicemacros.pl',
        'PGanswermacros.pl',
        'PGgraphmacros.pl'
        );


TEXT(beginproblem()); # standard preamble to each problem.
# Since this is a true questions, we do not usually wish to tell students which
# parts of the matching question have been answered correctly and which are
# incorrect.  That is too easy.  To accomplish this we set the following flag to zero.
$showPartialCorrectAnswers = 0;

# 1

# Make a new multiple choice
$hnot = new_multiple_choice();

$ hnot -> qa ('Give a disjunctive normal form to represent \(f(p,q,r)\).', 
'\( (\neg p \wedge \neg q \wedge \neg r) \vee
(\neg p \wedge q \wedge r) \vee
(p \wedge q \wedge r)  \) ');

# Extra answers
$hnot ->extra(
'\( (\neg p \wedge \neg q \wedge r) \vee (\neg p \wedge q \wedge \neg r) \vee
(p \wedge \neg q \wedge \neg r) \vee (p \wedge \neg q \wedge r) \vee
(p \wedge q \wedge \neg r) \)',
'\( (\neg p \wedge \neg q \wedge \neg r) \vee (\neg p \wedge q \wedge r) \)',
'\( (\neg p \wedge q \wedge r) \vee (p \wedge q \wedge r) \)'
);

BEGIN_TEXT
    $PAR
    Consider the following truth table.
END_TEXT

TEXT(
    begintable(4),
         row( 'p', 'q', 'r', 'f(p,q,r)'),
         row( '0', '0', '0', '1'),
         row( '0', '0', '1', '0'),
         row( '0', '1', '0', '0'),
         row( '0', '1', '1', '1'),
         row( '1', '0', '0', '0'),
         row( '1', '0', '1', '0'),
         row( '1', '1', '0', '0'),
         row( '1', '1', '1', '1'),
    endtable()
);
BEGIN_TEXT
    $PAR
    \{ $hnot->print_q() \}
    $PAR
    \{ $hnot->print_a() \}
END_TEXT
ANS(radio_cmp($hnot->correct_ans));

# 2

# Make a new multiple choice
$hnot = new_multiple_choice();

$ hnot -> qa ('Give a conjunctive normal form to represent \(f(p,q,r)\).', 
'\( (p \vee q \vee \neg r) \wedge (p \vee \neg q \vee r) \wedge
(\neg p \vee q \vee r) \wedge (\neg p \vee q \vee \neg r) \wedge
(\neg p \vee \neg q \vee r) \)');

# Extra answers
$hnot ->extra(
'\( (\neg p \vee \neg q \vee \neg r) \wedge
(\neg p \vee q \vee r) \wedge
(p \vee q \vee r)  \) ',
'\( (p \vee q \vee \neg r) \wedge (p \vee \neg q \vee r) \wedge
(\neg p \vee q \vee r) \wedge (\neg p \vee q \vee \neg r) \)' ,
'\( (p \vee \neg q \vee r) \wedge
(\neg p \vee q \vee r) \wedge (\neg p \vee q \vee \neg r) \wedge
(\neg p \vee \neg q \vee r) \)'
);

BEGIN_TEXT
    $PAR
    \{ $hnot->print_q() \}
    $PAR
    \{ $hnot->print_a() \}
END_TEXT
ANS(radio_cmp($hnot->correct_ans));

# 3

$version = random(1,2,1);
if ($version == 1)
{
# Make a new multiple choice
$hnot = new_multiple_choice();

$ hnot -> qa ('Express \( a \vee b \) using only a NOR.', 
'NOR(NOR(a,b),NOR(a,b))');

# Extra answers
$hnot ->extra('NOR(NOR(a,b),NOR(b,b))',
'NOR(NOR(a,a),NOR(b,b))',
'NOR(a,b)'
);

BEGIN_TEXT
    $PAR
    \{ $hnot->print_q() \}
    $PAR
    \{ $hnot->print_a() \}
END_TEXT
ANS(radio_cmp($hnot->correct_ans));
}
else
{
# Make a new multiple choice
$hnot = new_multiple_choice();

$ hnot -> qa ('Express \( a \wedge b \) using only a NOR.', 
'NOR(NOR(a,a),NOR(b,b))');

# Extra answers
$hnot ->extra('NOR(NOR(a,b),NOR(a,b))',
'NOR(NOR(b,b),NOR(b,a))',
'NOR(a,b)'
);

BEGIN_TEXT
    $PAR
    \{ $hnot->print_q() \}
    $PAR
    \{ $hnot->print_a() \}
END_TEXT
ANS(radio_cmp($hnot->correct_ans));
}

# 4

$version = random(1,2,1);
if ($version == 1)
{
# Make a new multiple choice
$hnot = new_multiple_choice();

$ hnot -> qa ('Express \( a \vee b \) using only a NAND.', 
'NAND(NAND(a,a),NAND(b,b))');

# Extra answers
$hnot ->extra('NAND(NAND(b,b),NAND(b,a))',
'NAND(NAND(b,a),NAND(a,a))',
'NAND(a,b)'
);

BEGIN_TEXT
    $PAR
    \{ $hnot->print_q() \}
    $PAR
    \{ $hnot->print_a() \}
END_TEXT
ANS(radio_cmp($hnot->correct_ans));
}
else
{
# Make a new multiple choice
$hnot = new_multiple_choice();

$ hnot -> qa ('Express \( a \wedge b \) using only a NAND.', 
'NAND(NAND(a,b),NAND(a,b))');

# Extra answers
$hnot ->extra('NAND(NAND(a,a),NAND(b,b))',
'NAND(NAND(b,a),NAND(b,b))',
'NAND(a,b)'
);

BEGIN_TEXT
    $PAR
    \{ $hnot->print_q() \}
    $PAR
    \{ $hnot->print_a() \}
END_TEXT
ANS(radio_cmp($hnot->correct_ans));
}


ENDDOCUMENT();        # This should be the last executable line in the problem.





