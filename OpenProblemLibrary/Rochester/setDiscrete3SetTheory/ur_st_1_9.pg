## DESCRIPTION
##   Basic Set Theory
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Set theory and logic)
## DBchapter(Operations on sets)
## DBsection(Membership tables)
## Institution(Rochester)
## Author(Kenneth Rosen)
## Level(2)
## TitleText1('Discrete Mathematics')
## AuthorText1('Rosen')
## EditionText1('4')
## Section1('1.5')
## Problem1('10')
## KEYWORDS('Set', 'Intersection', 'Union', 'Containment', 'Complement','set theory','subset','union','intersection')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

@header=("$BCENTER \(A \)","\( B \) $ECENTER",
"$BCENTER \(B - A \) $ECENTER",
"$BCENTER \(A \cup B \) $ECENTER",
"$BCENTER \(A \cap (B - A) \) $ECENTER",
"$BCENTER \(A \cup (B - A) \) $ECENTER");
@Aa=qw(0 1 0 1);
@Ab=qw(0 1 0 1);
@Ac=qw(1 1 0 1);
@Ad=qw(0 0 0 0);
@header = map {EV2($_) } @header;

BEGIN_TEXT
Complete the following membership table by filling in the blanks with 1 or 0 as
appropriate.
$PAR
END_TEXT

TEXT(

begintable(1+scalar(@header)), 
	row(@header),
	row("1","1",ans_rule(10),ans_rule(10),ans_rule(13),ans_rule(13)),
	row("1","0",ans_rule(10),ans_rule(10),ans_rule(13),ans_rule(13)),
	row("0","1",ans_rule(10),ans_rule(10),ans_rule(13),ans_rule(13)),
	row("0","0",ans_rule(10),ans_rule(10),ans_rule(13),ans_rule(13)),
endtable() 
);

ANS(str_cmp($Aa[0]) );
ANS(str_cmp($Aa[1]) );
ANS(str_cmp($Aa[2]) );
ANS(str_cmp($Aa[3]) );

ANS(str_cmp($Ab[0]) );
ANS(str_cmp($Ab[1]) );
ANS(str_cmp($Ab[2]) );
ANS(str_cmp($Ab[3]) );

ANS(str_cmp($Ac[0]) );
ANS(str_cmp($Ac[1]) );
ANS(str_cmp($Ac[2]) );
ANS(str_cmp($Ac[3]) );

ANS(str_cmp($Ad[0]) );
ANS(str_cmp($Ad[1]) );
ANS(str_cmp($Ad[2]) );
ANS(str_cmp($Ad[3]) );

$mc1=new_multiple_choice();

BEGIN_TEXT
$PAR
Use the membership table above to answer the following questions.$PAR For each
part, check the answer that most completely describes the general situation.
END_TEXT

$mc1 -> qa (
"$BBOLD(1)$EBOLD \(A - B\)",
" \( \subseteq A\)"
);

$mc1 -> extra(
"\( = A \)",
"\(\subseteq B \)",
"\(= B - A \)"
);


BEGIN_TEXT
$PAR
\{ $mc1 -> print_q \}
\{ $mc1 -> print_a \}
END_TEXT

ANS(checkbox_cmp( $mc1 -> correct_ans ) );

$mc2=new_multiple_choice();

$mc2 -> qa (
"$BBOLD(2)$EBOLD \( A \cap (B - A)\)",
" \(= \emptyset \)"
);

$mc2 -> extra(
"\(= A \)",
"\(= B \)",
"\(= A \cap B \)"
);


BEGIN_TEXT
$PAR
\{ $mc2 -> print_q \}
\{ $mc2 -> print_a \}
END_TEXT

ANS(checkbox_cmp( $mc2 -> correct_ans ) );

$mc3=new_multiple_choice();

$mc3 -> qa (
"$BBOLD(3)$EBOLD \(A \cup (B - A)\)",
" \(= A \cup B \)"
);

$mc3 -> extra(
"\(= A \cap B \)",
"\(= A \)",
"\(= B \)"
);


BEGIN_TEXT
$PAR
\{ $mc3 -> print_q \}
\{ $mc3 -> print_a \}
END_TEXT

ANS(checkbox_cmp( $mc3 -> correct_ans ) );


ENDDOCUMENT();        # This should be the last executable line in the problem.;
