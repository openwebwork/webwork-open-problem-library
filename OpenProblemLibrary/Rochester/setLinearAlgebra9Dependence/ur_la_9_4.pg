## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 4/29/06

## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Linear independence)
## Institution(Rochester)
## Static(1)

## DESCRIPTION 
##  ## Determines whether f1, f2 are linearly dependent.
##  There are three subroutines.  Each can solve this  problem.  
##  The third one given--sub numdep-- appears to work best.
##   URL:http://webhost.math.rochester.edu/mth163lib/discuss/msgReader$417
##  
## ENDDESCRIPTION 
DOCUMENT() ;      

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl","PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
) ;


# h,g are given functions
# we wish to check whether  f is a
#linear comb.of g and h
#we assume f,g,h are defined on at least [0,1]
#$h = "13" ;
#$g = "(cos(2*t ))" ;
#$f ="( sin( t)*(sin( t)))" ;
$f = "exp(t)" ;
$g = "t" ;
$h = "2 + 3*t" ;
  #formulas for $f,$g,$h should not have t other than as
  #as argument, e.g. not tan(t) or sqrt(t)

sub dependent {
        my $x = random(.01,.49,.0001) ;
        my $y = random(.51,.99,.0001) ;
          
        my $gx1 = $g ;
        $gx1 =~ s~~t~~$x~~g ;
        my $gx = PG_restricted_eval ( "$gx1" ) ;

        my $gy1 = $g ;
        $gy1 =~ s~~t~~$y~~g ;
        my $gy = PG_restricted_eval ( "$gy1" ) ;

        my $hx1 = $h ;
        $hx1 =~ s~~t~~$x~~g ;
        my $hx = PG_restricted_eval( "$hx1" ) ;

        my $hy1 = $h ;
        $hy1 =~ s~~t~~$y~~g ;
         my $hy = PG_restricted_eval( "$hy1" ) ;

        my $det1 = $gx*$hy -$gy*$hx  ;

         my $fx1 = $f ;
         $fx1 =~ s~~t~~$x~~g ;
         my $fx = PG_restricted_eval ( "$fx1" ) ;

         my $fy1 = $f ;
         $fy1 =~ s~~t~~$y~~g ;
         my $fy = PG_restricted_eval ( "$fy1" ) ;

        my $det2 = $fy*$hx -$fx*$hy  ;

        my $det3 = $fx*$gy -$fy*$gx ;

        my $test = " (($f)*($det1)+ ($g )*($det2 ) + ($h )*($det3 ))" ;
               #  my $z = .5 ;
               #  $test =~ s~~t~~$z~~g ;
                 # $test = PG_restricted_eval( "$test" ) ;
                $test ;             
}
#######
#$test = dependent($f,$g,$h) ;
########
sub multidep {
        my $x ="x" ;
        my $y = "y" ;
        my $gx = $g ;
        $gx =~ s~~t~~x~~g ;
        my $gy = $g ;
        $gy =~ s~~t~~y~~g ;
        my $hx = $h ;
        $hx =~ s~~t~~x~~g ;
        my $hy = $h ;
        $hy =~ s~~t~~y~~g ;
        my $det1 = " $gx*$hy -$gy*$hx"  ;
        my $fx = $f ;
        $fx =~ s~~t~~$x~~g ;
        my $fy = $f ;
        $fy =~ s~~t~~$y~~g ;
        my $det2 = "$fx*$hy -$fy*$hx"  ;
        my $det3 = " $fx*$gy -$fy*$gx" ;
        my $test = " (($f)*($det1)- ($g )*($det2 ) + ($h )*($det3 ))" ;
                $test ;
}
####  
#$test = multidep ($f,$g,$h)  ;

#######
sub numdep {
    # $f = shift @_ ;
    my $ans = 0 ; #will be 0 or 1 according as $f,$g,$h are linearly
    #dependent
    my $mytol = .00000000001 ; #my tolerance of error
    #for lin dependence
    my $testpts = 9 ; #number of test points in R^3
    my $dep = 0 ; #numerical test of linear dependence
    my @function = ($f,$g,$h) ;
    my $x = .5 ;
    my @a = (0,0,0,0,0,0,0,0,0) ;
    my @w = (0,0,0) ;
    my ($p, $i ,$j ,$k ) = (0,0,0,0) ;
    my $fun = "0" ;
    my ($m0 ,$m1 ,$m2 , $m ) = (0,0,0,0) ;
    my $test = 0 ;    
    for ($p = 1 ; $p <= $testpts ; $p++) {
        for ($i = 0 ; $i <= 2 ; $i++) {
                $x = random(.1,.9,.00001) ;
                for ($j = 0 ; $j <= 2 ; $j++) {
                        $fun = $function[$j] ;
                        $fun =~ s~~t~~$x~~g ;
                        $k = $i *3 + $j ;
                        $a[$k] = PG_restricted_eval ( "$fun" ) ;
                        $w[$i] = $w[$i] + abs($a[$k]) ;       
                }
        }
    $w = $w[0]*$w[1]*$w[2] ;
    $m0 = $a[4]*$a[8] - $a[5]*$a[7] ;
    $m1 = $a[5]*$a[6] - $a[3]*$a[8] ;
    $m2 = $a[3]*$a[7] - $a[4]*$a[6] ;         
    $m = $a[0]*$m0 +  $a[1]*$m1 +  $a[2]*$m2 ;
    $m = abs($m /$w ) ;# dependence measurement
 #at pth point in R^3
    $dep = $dep + $m ;
    }
#warn "dep $dep" ;
    if ($dep > $mytol){
        $test = "0" ;
    } else {
        $test = "1" ;
    }
    $test ;
}
#######
$test = numdep($f,$g,$h) ;            
        TEXT(beginproblem()) ;

$showPartialCorrectAnswers = 1 ;

BEGIN_TEXT

Let  \( f = $f\), \(g = $g\), and \(h = $h \).
Give  the answer 1 if  \(f, \) \( g, \) and \( h\) are linearly 
dependent and 0 if they are linearly independent.$BR
\(linearly \) \( dependent? = \) \{ans_rule(5)\}

END_TEXT
$ans = $test  ;
#ANS(fun_cmp($ans, vars=>["t","x","y" ])) ;
#ANS(fun_cmp($ans, limits=>[.1,.9], relTol=>.01, vars=>"t")) ;
ANS(num_cmp($ans)) ;
ENDDOCUMENT ;



                                  






##################################################
my $XML_INFORMATION = <<'END_OF_XML_TRAILER_INFO';
<?xml version="1.0"?>
<metaPGdata>
	<author>Webwork Team</author>
	<course>MTH163</course>
	<description>Determines whether f1, f2 are linearly dependent.
There are three subroutines.  Each can solve this  problem.  
The third one given--sub numdep-- appears to work best.</description>
	<fullPath>setDESOLinear/53.pg</fullPath>
	<institution>University of Rochester</institution>
	<keywords></keywords>
	<libraryPath>setDESOLinear/53.pg</libraryPath>
	<libraryURL>http://webhost.math.rochester.edu/mth163lib/discuss/msgReader$417</libraryURL>
	<modified><dateTime.iso8601>20000810T15:08:46</dateTime.iso8601></modified>
	<msgNum>417</msgNum>
	<pgProblem>true</pgProblem>
	<preface></preface>
	<problemVariants></problemVariants>
	<probNum></probNum>
	<psvn></psvn>
	<revisedVersions></revisedVersions>
	<setName>DESOLinear</setName>
	<titleRoot>53</titleRoot>
	</metaPGdata>

END_OF_XML_TRAILER_INFO
##################################################

