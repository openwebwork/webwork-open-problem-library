## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 5/3/06

## DBsubject(Linear algebra)
## DBchapter(Inner products)
## DBsection(Applications)
## Date(July 2013)
## Institution(Rochester and Hope College)
## Author(Paul Pearson)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('8.5')
## Problem1('')
DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix')->variables->are(
'h'=>'Real',
'a'=>'Real',
'g'=>'Real',
);

# to make sure matrices are non-singular wrap the setup in a do BLOCK

$c0 = random(-110,-100,1);
$c1 = 1;
$c2 = 0;
$c3 = random(5,15,1);

# g = 0 for female,  1 for male.
@g = (0, 0, 0, 1, 1, 1);

# generate random height (h), age(a) and weight(w) data.
foreach $i (0..5) { 
	$h[$i] = random(155+5*$i,159+5*$i,1);
	$a[$i] = random(18+abs($i-3),20+abs($i-3),1);
	$w[$i] = $c0 + $c1*$h[$i] + $c2*$a[$i] + $c3*$g[$i] + random(-1,1,1);
}

@s = NchooseK(6,5);

#$A = new Matrix(5,4); #holds data, first column is 1's
#$W = new Matrix(5,1); # holds weight.

#foreach $i (0..4) { 
#	$A -> assign($i+1,1,1);
#	$A -> assign($i+1,2,$h[$s[$i]]);
#	$A -> assign($i+1,3,$a[$s[$i]]);
#	$A -> assign($i+1,4,$g[$s[$i]]);
#	
#	$W -> assign($i+1,1,$w[$s[$i]]);
#}

$A = Matrix([
[1, $h[$s[0]], $a[$s[0]], $g[$s[0]] ],
[1, $h[$s[1]], $a[$s[1]], $g[$s[1]] ],
[1, $h[$s[2]], $a[$s[2]], $g[$s[2]] ],
[1, $h[$s[3]], $a[$s[3]], $g[$s[3]] ],
[1, $h[$s[4]], $a[$s[4]], $g[$s[4]] ],
]);

$W = Matrix([
[ $w[$s[0]] ],
[ $w[$s[1]] ],
[ $w[$s[2]] ],
[ $w[$s[3]] ],
[ $w[$s[4]] ],
]);

#$AT = new Matrix(4,5);
#$AT->transpose($A);

$AT = $A->transpose;

#$B = new Matrix(4,4);
$B = $AT * $A;

#$B_lr = $B->decompose_LR();
#$B_det = $B_lr->det_LR();

$B_det = $B->det;

# recalculate if the determinant of the matrix is 0, or close to zero.

while (abs($B_det) <= E-5) {  # not enough to check for determinant zero
	foreach $i (0..5) {
        	$h[$i] = random(155+5*$i,159+5*$i,1);
        	$a[$i] = random(18+abs($i-3),20+abs($i-3),1);
	}
#	foreach $i (0..4) {
#        	$A -> assign($i+1,1,1);
#        	$A -> assign($i+1,2,$h[$s[$i]]);
#        	$A -> assign($i+1,3,$a[$s[$i]]);
#        	$A -> assign($i+1,4,$g[$s[$i]]);
#	} 
#	$AT->transpose($A);

$A = Matrix([
[1, $h[$s[0]], $a[$s[0]], $g[$s[0]] ],
[1, $h[$s[1]], $a[$s[1]], $g[$s[1]] ],
[1, $h[$s[2]], $a[$s[2]], $g[$s[2]] ],
[1, $h[$s[3]], $a[$s[3]], $g[$s[3]] ],
[1, $h[$s[4]], $a[$s[4]], $g[$s[4]] ],
]);
$AT = $A->transpose;

	$B = $AT * $A;
#	$B_lr = $B->decompose_LR();
#	$B_det = $B_lr->det_LR();
$B_det = $B->det;

}


#$I = new Matrix(4,4);
#$I = $B_lr->invert_LR();

$I = $B->inverse;

$SOL = $I * $AT * $W;

$c0 = $SOL->element(1,1);
$c1 = $SOL->element(2,1);
$c2 = $SOL->element(3,1);
$c3 = $SOL->element(4,1);

$f = Formula("$c0 + $c1 * h + $c2 * a + $c3 * g")->reduce;

Context()->texStrings;
BEGIN_TEXT

The table below lists the height \(h\) (in cm), the age \(a\) (in years), the gender \(g\) (0="Female", 1="Male"), and
the weight \(w\) (in kg) of some college students.

\[ \begin{array}{|r|r|r|r|}
\hline
\mbox{Height } & \mbox{Age} & \mbox{Gender} & \mbox{Weight} \cr
\hline
$h[$s[0]]      & $a[$s[0]]  & $g[$s[0]]     & $w[$s[0]]     \cr
\hline
$h[$s[1]]      & $a[$s[1]]  & $g[$s[1]]     & $w[$s[1]]     \cr
\hline
$h[$s[2]]      & $a[$s[2]]  & $g[$s[2]]     & $w[$s[2]]     \cr
\hline
$h[$s[3]]      & $a[$s[3]]  & $g[$s[3]]     & $w[$s[3]]     \cr
\hline
$h[$s[4]]      & $a[$s[4]]  & $g[$s[4]]     & $w[$s[4]]     \cr
\hline
\end{array} \]

We wish to fit a linear function of the form 
\[ w = c_0 + c_1 h + c_2 a + c_3 g \]
which predicts the weight from the rest of the data. 
Find the best approximation of this function, using least squares. 
$BR
$BR
\( w = w(h,a,g) = \) \{ $f->ans_rule(50) \}
END_TEXT
Context()->normalStrings;

ANS($f->cmp);
COMMENT('MathObject version');
ENDDOCUMENT();       # This should be the last executable line in the problem.