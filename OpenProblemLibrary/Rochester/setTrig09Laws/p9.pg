## DESCRIPTION
## Precalculus: Trigonometry
## ENDDESCRIPTION

## Tagged by cmd6a 5/11/06

## DBsubject(Trigonometry)
## DBchapter(Triangle trigonometry)
## DBsection(Law of sines or law of cosines (side-side-angle))
## Institution(Rochester)
## MLT(LawSinCos2)
## MLTleader(1)
## Level(4)
## KEYWORDS('trigonometry','law of sines','law of cosines')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl"
);

TEXT(beginproblem());

install_problem_grader(~~&std_problem_grader);
$showpartialcorrectanswers = 0;

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#


$A1 = random(30,50,2);  #angle A in degrees
$rA1=$A1*3.14159265/180;  #angle in radians
$b1 = random(12,25,1);  #side b
$h1=$b1*sin($rA1);
$h1=round($h1,2);
$a1=random($h1-5,$h1-1,.1);

$ans1=0;


$A2=random(31,51,2);
$a2=random($b1+1,$b1+10,.2);
$ans2=1;

$A3=random(32,52,2);
$rA3=$A3*3.14159265/180;  #angle in radians
$h3=random(7,15,.2);
$b3=$h3/sin($rA3);
$b3=round($b3,2);
$a3=random($h3+1,$b3-1,.2);
$ans3=2;

BEGIN_TEXT
Consider the triangle below. Click on the picture to see it more clearly.
$BR
\{ image("triangle.gif") \}
$BR
In questions 1, 2 and 3 below, you are given 2 sides of a triangle
and an angle opposite one of the sides. This is the so called "ambigous"
case since it can give 0 triangles, 1 triangle or 2 triangles.
$BR
In each case determine the number of triangles possible with the given parts.
(enter 0, 1 or 2)
$PAR
1.   \( a=$a1 \), \( b=$b1\),  \( A=$A1 ^\circ \)
$BR	number of possible triangles:  \{ans_rule(10)\}
$PAR
2.   \( a=$a2 \), \( b=$b1\),  \( A=$A2 ^\circ \)
$BR	number of possible triangles:  \{ans_rule(10)\}
$PAR
3.   \( a=$a3 \), \( b=$b3\),  \( A=$A3 ^\circ \)
$BR	number of possible triangles:  \{ans_rule(10)\}
        
END_TEXT

#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($ans1));
ANS(num_cmp($ans2));
ANS(num_cmp($ans3));

ENDDOCUMENT();        # This should be the last executable line in the problem.


