## DESCRIPTION
##   Truth Tables and Logical Equivalence
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Set theory and logic)
## DBchapter(Propositional logic)
## DBsection(Truth tables)
## Institution(Rochester)
## MLT(AskingEquivalence)
## MLTleader(1)
## Level(2)
## TitleText1('Discrete Mathematics')
## AuthorText1('Rosen')
## EditionText1('4')
## Section1('1.2')
## Problem1('16')
## KEYWORDS('Truth Table', 'Logic', 'Equivalence')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

@header=("\( p \)","\( q \)",
"\( p \rightarrow q \)",
"\( \lnot p \)",
"\( \lnot q \)",
"\( \lnot q \rightarrow \lnot p \)");
@Aa=qw(T T T F F T);
@Ab=qw(T F F F T F);
@Ac=qw(F T T T F T);
@Ad=qw(F F T T T T);

# evaulate the tex commands in the header
@header = map {EV2($_) } @header;
BEGIN_TEXT
Complete the following truth table by filling in the blanks with T or F as
appropriate.
$PAR
END_TEXT

TEXT(
begintable(1+scalar(@header)), 
	row(@header),
	row("T","T",ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10)),
	row("T","F",ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10)),
	row("F","T",ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10)),
	row("F","F",ans_rule(10),ans_rule(10),ans_rule(10),ans_rule(10)),
endtable() 
);

ANS(str_cmp($Aa[2]) );
ANS(str_cmp($Aa[3]) );
ANS(str_cmp($Aa[4]) );
ANS(str_cmp($Aa[5]) );

ANS(str_cmp($Ab[2]) );
ANS(str_cmp($Ab[3]) );
ANS(str_cmp($Ab[4]) );
ANS(str_cmp($Ab[5]) );

ANS(str_cmp($Ac[2]) );
ANS(str_cmp($Ac[3]) );
ANS(str_cmp($Ac[4]) );
ANS(str_cmp($Ac[5]) );

ANS(str_cmp($Ad[2]) );
ANS(str_cmp($Ad[3]) );
ANS(str_cmp($Ad[4]) );
ANS(str_cmp($Ad[5]) );

$cmc=new_checkbox_multiple_choice();

$cmc -> qa (
"$LQ\(  p \rightarrow q \)$RQ  and  $LQ\( \lnot q \rightarrow \lnot p
\)$RQ are",
"logically equivalent"
);

$cmc -> extra(
"not logically equivalent",
"not logically comparable"
);


BEGIN_TEXT
$PAR
\{ $cmc -> print_q \}
$PAR
\{ $cmc -> print_a \}
END_TEXT

ANS(checkbox_cmp( $cmc -> correct_ans ) );

ENDDOCUMENT();        # This should be the last executable line in the problem.;
