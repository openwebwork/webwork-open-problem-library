## DESCRIPTION
##   Modular Arithmetic
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Number theory)
## DBchapter(Congruences)
## DBsection(Linear congruences)
## Institution(Rochester)
## Level(2)
## KEYWORDS('Mod', 'Modular Arithmetic', 'Euclidean Algorithm')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());

$a = random(2,5,1);
$b = random(1,5,1);
$c = $a*$b+1;
$e = random($a+1,$a+3,1);
$d = $e*$c+$a;


$s = -$b;
$t = 1+$b*$e;

BEGIN_TEXT
The goal of this exercise is to practice finding the inverse modulo \(m\)
of some (relatively prime) integer \(n\). We will find the inverse of 
$c modulo $d, i.e., an integer \(c\) such that \( $c c \equiv 1 
\pmod{$d}. \)
$BR
$BR
First we perform the Euclidean algorithm on $c and $d: $BR
\( $d =  $e * \) \{ ans_rule(20) \} + \{ ans_rule(20) \} $BR
\{ ans_rule(20) \} \( =  \) \{ ans_rule(20) \} \( * $b \) \( + 1 \) $BR
[Note your answers on the second row should match the ones on the first
row.] 
$BR$BR
Thus gcd($c,$d)=1, i.e., $c and $d are relatively prime. 
$BR
$BR
Now we run the Euclidean algorithm backwards to write
\( 1 = $d s + $c t \) for suitable integers \( s, t \). $BR
\( s = \) \{ ans_rule(20) \} $BR
\( t = \) \{ ans_rule(20) \} $BR
when we look at the equation \( $d s + $c t \equiv 1 \text{ (mod } $d )\), the multiple of 
$d becomes zero and so we get $BR
\( $c t \equiv  1 \text{ (mod } $d ) \).
Hence the multiplicative inverse of $c modulo $d is \{ ans_rule(20) \}

END_TEXT

ANS(num_cmp( $c ) );
ANS(num_cmp( $a ) );
ANS(num_cmp( $c ) );
ANS(num_cmp( $a ) );
ANS(num_cmp( $s ) );
ANS(num_cmp( $t ) );
ANS(num_cmp( $t ) );

ENDDOCUMENT();        # This should be the last executable line in the problem.;
