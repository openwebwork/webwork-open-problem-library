## DESCRIPTION
##   Modular Arithmetic
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Number theory)
## DBchapter(Congruences)
## DBsection(Chinese remainder theorem)
## Institution(Rochester)
## Level(2)
## KEYWORDS('Mod', 'Modular Arithmetic')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


@header=("\( a \)", "\( a \text{ mod } 4 \)", "\( a \text{ mod } 7 \)");

@header=map{EV2($_)}@header;

BEGIN_TEXT
Fill in the blanks in the table with the unique integers \( a \) in the 
range \( 0 \leq a \leq 27 \) with the given remainders. $BR

Hint: It is probably
easiest to just make a table with the numbers between 0 and 27 and their
remainders and use that to find the answers. However one can also 
use the Chinese Remainder Formula $BR
\( x = a_1\hat{m}_1\hat{y}_1 + a_2\hat{m}_2\hat{y}_2 \) 
by finding the \( \hat{m}_k, \hat{y}_k \) once and then plugging 
in the various remainders for the \( a_k \) to get the various answers.
$PAR
END_TEXT
for( $i = 0; $i < 9; $i ++ ) {
	$a[$i] = random(0,3,1);
	$b[$i] = random(0,6,1);
	$j1[$i] = 0;
		do {$j1[$i] ++;
			$x[$i] = $j1[$i] * 7;
			$x[$i] -= 1;
			$x[$i] = $x[$i]/4;
		} until $x[$i] == int( $x[$i] );
	$j2[$i] = 0;
		do{$j2[$i] ++;
			$x[$i] = $j2[$i] *4;
			$x[$i] -= 1;
			$x[$i] = $x[$i]/7;
		} until $x[$i] == int( $x[$i] );
}

for($i = 0; $i < 9; $i ++ ) {
	$ans[$i] = $a[$i]*$j1[$i]*7+$b[$i]*$j2[$i]*4;
	$ans[$i] = $ans[$i] % 28;

}
TEXT(
begintable(3), 
	row(@header),
	row(ans_rule(10),$a[0],$b[0]),
	row(ans_rule(10),$a[1],$b[1]),
	row(ans_rule(10),$a[2],$b[2]),
	row(ans_rule(10),$a[3],$b[3]),
	row(ans_rule(10),$a[4],$b[4]),
	row(ans_rule(10),$a[5],$b[5]),
	row(ans_rule(10),$a[6],$b[6]),
	row(ans_rule(10),$a[7],$b[7]),
	row(ans_rule(10),$a[8],$b[8]),
endtable() 
);

ANS(num_cmp($ans[0]) );
ANS(num_cmp($ans[1]) );
ANS(num_cmp($ans[2]) );
ANS(num_cmp($ans[3]) );
ANS(num_cmp($ans[4]) );
ANS(num_cmp($ans[5]) );
ANS(num_cmp($ans[6]) );
ANS(num_cmp($ans[7]) );
ANS(num_cmp($ans[8]) );

ENDDOCUMENT();        # This should be the last executable line in the problem.;
