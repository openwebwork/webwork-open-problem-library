## DESCRIPTION
##   Modular Arithmetic
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Number theory)
## DBchapter(Congruences)
## DBsection(Linear congruences)
## Institution(Rochester)
## Level(2)
## KEYWORDS('Mod', 'Modular Arithmetic', 'Euclidean Algorithm')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());

$a = random(2,5,1);
$b = random(1,5,1);
$c = $a*$b+1;
$e = random($a+2,$a+4,1);
$d = $e*$c+$a;

$f = random(2,7,1);
$t = 1+$b*$e;

$ans = ($f*$t) % $d;
BEGIN_TEXT

Find the smallest positive integer \(x\) that solves the congruence: $BR
\[ $c x \equiv $f \pmod{$d} \] 
$BR
\( x = \) \{ ans_rule(10) \}
$BR
$BR
(Hint: From running the Euclidean algorithm forwards and backwards we 
get \( 1 = s($c) + t($d) \). Find \(s\) and use it to solve the congruence.)
END_TEXT

ANS(num_cmp( $ans ) );

ENDDOCUMENT();        # This should be the last executable line in the problem.;
