##DESCRIPTION
##TYPE('word problem')
##ENDDESCRIPTION

## Tagged by sawblade

## DBsubject(Algebra)
## DBchapter(Polynomial equations and functions)
## DBsection(Counting zeros)
## Institution(Rochester)
## Level(3)
## MO(1)
## KEYWORDS('polynomial,root,roots')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGpolynomialmacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

Context("Numeric");

# Uses Sturm's algorithm for counting roots
# reference: Real Solutions to Equations from Geometry by Frank Sottile
# AMS University Lecture Series vol. 57

# given a reference to an array of numbers, change the sign of each number
# in the array

sub chgSgn {
  my $aref = shift;
  my $i;
  foreach $i (0..scalar(@$aref)-1) {
    $aref->[$i] = -($aref->[$i]);
  }
}

# choose coefficients (f[0],...,f[5]) of random polynomial 
# f[0]*x^5 + f[1]*x^4 + ... + f[5]
# of degree 5

do {
  $tryAgain=0;  #don't repeat unless this changes
 
  $f[0] = non_zero_random(-20,20,1);
  foreach $i (1..5) {
	  $f[$i] = random(-20,20,1);
  }

  # coefficients of df = derivative of f

  foreach $i (0..4) {
    $df[$i]=($f[$i])*(5-$i);
  }

  # compute the Sturm sequence (f, df, f2, f3, f4, f5)

  $sturm[0] = ~~@f;
  $sturm[1] = ~~@df;
  foreach $i (2..5){
    $sturm[$i] = LongDiv($sturm[$i-2],$sturm[$i-1]);
    # sanity check to ensure sturm sequence doesn't get too crazy
    # and polynomial is square-free
    if ( abs($sturm[$i]->[0])< 10**(-6) ){
       $tryAgain = 1;  # leading coeff is dangerously small
       last;
    }
    chgSgn($sturm[$i]);
  }
  $foo = abs($sturm[2]->[0]);
} unless ($tryAgain);

# given a reference $a to array an of polynomial coefficients for 
# g = $a[0]*x^n + $a[1]*x^(n-1) + ...
# compute the value y=g(x) of g at given number x

sub polyval {
  my ($a,$x) = @_;
  my $i; 
  my $y = $a->[0];
  for ($i=1; $i < scalar(@$a); $i++ ){
     $y = $y*$x + ($a->[$i]); 
  }
  return $y;
}

# number of sign changes in Sturm sequence at a real number x

sub signChanges {
  my $x = shift;
  my $i;
  my $count=0;
  my $val0 = polyval($sturm[0],$x);
  foreach $i (1..5) {
    $val1 = polyval($sturm[$i],$x);
    if ($val0*$val1 < 0){ $count++; }
    $val0 = $val1;
  }
  return $count;
}

# use Cauchy's bound for the absolute value of the roots
# https://en.wikipedia.org/wiki/Geometrical_properties_of_polynomial_roots

$cauchyBound = 0;
foreach $i (1..5){
  $a = abs($f[$i]/$f[0]);
  if ($a > $cauchyBound){
    $cauchyBound = $a;
  }
}
$cauchyBound++;
$boundCeiling = ceil($cauchyBound);

# compute integer least upper bound

$hiBound = $boundCeiling;
$hiSignChanges = signChanges($hiBound);
for ($i=$boundCeiling-1; $i>-$boundCeiling-1; $i--){
  if (polyval($sturm[0],$i) == 0) {
    $hiBound = $i;
    last;
  } 
  if ( signChanges($i) > $hiSignChanges ){
    $hiBound = $i+1;
    last;
  }
}

# compute integer greatest lower bound

$lowBound = -$boundCeiling;
$lowSignChanges = signChanges($lowBound);
for ($i=-$boundCeiling+1; $i<$boundCeiling+1; $i++){
  if (polyval($sturm[0],$i) == 0) { 
    $lowBound = $i;
    last;
  }
  if ( signChanges($i) < $lowSignChanges ){
     $lowBound = $i-1;
     last;
  }
}

# display

$fstring = PolyString($sturm[0]);
$fdisp = Compute($fstring);

# answers 

$hiBound = Real($hiBound);
$lowBound = Real($lowBound); 

Context()->texStrings; 
BEGIN_TEXT;
\($testFn\)
\[f(x)=$fdisp\]
What is the smallest integer that is an upper bound for all the roots
of \(f\)? $BR
\{ans_rule(10)\}
$PAR
What is the largest integer that is a lower bound for all the roots of 
\(f\)? $BR
\{ans_rule(10)\}
END_TEXT
Context()-> normalStrings;

ANS($hiBound->cmp());
ANS($lowBound->cmp());
ENDDOCUMENT();        # This should be the last executable line in the problem.

