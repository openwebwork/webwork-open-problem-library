## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Differential equations)
## DBchapter(First order differential equations)
## DBsection(Integrating factor)
## Institution(Rochester)
## Level(3)
## Static(1)
## MO(1)
## KEYWORDS('differential equation' 'exact')

DOCUMENT() ;        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGanswermacros.pl",
"MathObjects.pl",
) ;

TEXT(beginproblem()) ;
$showPartialCorrectAnswers = 1 ;

Context('Numeric')->variables->add(y=>'Real');

BEGIN_TEXT

Check that the equation below is not exact but becomes exact when multiplied by the
integrating factor.
$BR
\[x^2y^3+x(1+y^2)y'=0 \]
Integrating factor: \(\mu(x,y) = 1/(xy^3)  \).
$BR
$BR
Solve the differential equation.
You can define the solution curve implicitly by a function in the form 
\(F(x,y) = G(x) + H(y) =K \) for some constant \(K\).
$BR$BR
\(F(x,y) = \) \{ ans_rule(30) \}

END_TEXT

# Can input a root, which defaults to [0,0], and another point
#  which defaults to [2,1]
sub lcc {
  my ( $correct, $student, $anshash) = @_;
  my %ah = %{ $anshash };
  my $root = $ah{root};
  $root = [0,0] unless defined($root);
  my $other = $ah{other};
  $other = [2,1] unless defined($other);
  my $const = $student->eval(x=>$root->[0], y=>$root->[1]);
  $student = $student-$const;
  if($student== 0) {
    Value::Error("The function cannot be constant");
    return 0;
  }
  my $c1 = $student->eval(x=>$other->[0], y=>$other->[1])/
    $correct->eval(x=>$other->[0], y=>$other->[1]);
  return 0 if $c1 == 0;
  $student = $student/$c1;
  return $correct == $student;
}



ANS(Compute("x^2/2-y^(-2)/2 + ln(y)")->cmp(checker=>~~&lcc,
  root=>[1,1], other=>[2,1]));

#ANS(level_curve_check(
#  FEQ("-(y^3*x)/(1+y^2)"),
#  FEQ("x^2/2-y^(-2)/2 + ln(y)"),initial_t=>1,initial_y=>1,tol=>.0001) );
  

ENDDOCUMENT() ;        # This should be the last executable line in the problem.



