## DESCRIPTION
##   Cantor Expansion and Factorials
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Numbers)
## DBchapter(Integers)
## DBsection(Other bases)
## Institution(Rochester)
## Level(2)
## TitleText1('Discrete Mathematics')
## AuthorText1('Rosen')
## EditionText1('4')
## Section1('2.4')
## Problem1('32')
## KEYWORDS('Integers', 'Factorials', 'Cantor Expansion')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());

for($i = 0; $i < 3; $i++) {
	$n1[$i] = random(0,1,1);
}

for($j = 0; $j < 3; $j++) {
	$n2[$j] = random(0,2,1);
}

for($k = 0; $k < 3; $k++) {
	$n3[$k] = random(0,3,1);
}
for($m = 0; $m < 2; $m ++) {
	$n4[$m] = random(0,4,1);
}
$n5 = random(0,5,1);

$a = $n3[0]*6+$n2[0]*2+$n1[0];
$b = $n5*120+$n4[0]*24+$n3[1]*6+$n2[1]*2+$n1[1];
$c = $n4[1]*24+$n3[2]*6+$n2[2]*2+$n1[2];


BEGIN_TEXT
A Cantor expansion is a sum of the form
\[ a_n n! + a_{n-1} (n-1)! + \dots a_2 2! + a_1 1! \]
where \( 0 \leq a_i \leq i \) are integers for \(i = 1,2,\dots n\). $BR
For example, the Cantor expansion of 17 is 
\( 17 = 2(3!) + 2(2!) + 1(1!). \) Note that 
\( 17 = 1(3!) + 5(2!) + 1(1!) \) is correct but is not a valid 
Cantor expansion of 17 since we insist the coefficient of n! is no more 
than n. Thus the coefficient of 2! should be a 0,1 or 2 for example. $BR   
Complete the following Cantor expansions of: $BR
(a) \( $a \) = \{ ans_rule(5) \}\( (3!) \)  + \{ ans_rule(5) \} \( (2!) \) + \{
ans_rule(5) \}\( (1!) \) 
$PAR
(b) \( $b \) = \{ ans_rule(5) \}\( (5!) \) + \{ ans_rule(5) \}\( (4!) \) + 
\{ ans_rule(5) \}\( (3!) \) + \{ ans_rule(5) \}\( (2!) \) + \{ ans_rule(5) \}\(
(1!) \)
$PAR
(c) \( $c \) =  \{ ans_rule(5) \}\( (4!) \) + \{ ans_rule(5) \}\( (3!) \) + \{ ans_rule(5)
\}\( (2!) \) + \{ ans_rule(5) \} \( (1!) \) $PAR
END_TEXT

ANS(num_cmp( $n3[0] ) );
ANS(num_cmp( $n2[0] ) );
ANS(num_cmp( $n1[0] ) );
ANS(num_cmp( $n5 ) );
ANS(num_cmp( $n4[0] ) );
ANS(num_cmp( $n3[1] ) );
ANS(num_cmp( $n2[1] ) );
ANS(num_cmp( $n1[1] ) );
ANS(num_cmp( $n4[1] ) );
ANS(num_cmp( $n3[2] ) );
ANS(num_cmp( $n2[2] ) );
ANS(num_cmp( $n1[2] ) );


ENDDOCUMENT();        # This should be the last executable line in the problem.;
