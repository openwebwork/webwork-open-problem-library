## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by cmd6a 4/20/06

## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Derivatives involving multiple rules (all rules))
## Institution(Rochester)
## MLT(tableinfo)
## Level(4)

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

TEXT($BEGIN_ONE_COLUMN);

# define two cubic polynomials

my $i;
foreach $i (0..3) {
	$a[$i]=random(-2,2,1);
	$b[$i]=random(-2,2,1);
	}

sub f1 {
    my ($x)=@_;
    my ($i,$out);
    $out=0;
    for ($i=3;$i>=0;$i--) {
    	$out=$out*$x+$a[$i]
    	}
    $out;
    }
 sub fp {
    my ($x)=@_;
    my ($i,$out);
    $out=0;
    for ($i=3;$i>=1;$i--) {
    	$out=$out*$x+$a[$i]*$i
    	}
    $out;
    }
sub g1 {
    my ($x)=@_;
    my ($i,$out);
    $out=0;
    for ($i=3;$i>=0;$i--){
    	$out=$out*$x+$b[$i]
    	}
    $out;
    }
 sub gp {
    my ($x)=@_;
    my ($i,$out);
    $out=0;
    for ($i=3;$i>=1;$i--) {
    	$out=$out*$x+$b[$i]*$i
    	}
    $out;
    }

($x1,$x2)=NchooseK(9,2);
$x1=$x1-4; $x2=$x2-4;
# make sure there is no divide by zero!
while ( ( g1($x1) == 0 ) ||  (g1($x1) == (-5) ) ) {
     ($x1,$x2)=NchooseK(9,2); $x1=$x1-4; $x2=$x2-4;
     }
#print "Content-type: text/html~~n~~n~~nx1= $x1";
#print "g1(x1)=",g1($x1);

# calculate the possible outputs from f and g
$x3=f1($x1);
$x4=f1($x2);
$x5=g1($x1);
$x6=g1($x2);
# calculate the table rows
@firstrow= &uniq ($x1,$x2,$x3,$x4,$x5,$x6);
@secondrow=(); @thirdrow=(); @fourthrow=(); @fifthrow=();
foreach $i (0..$#firstrow) {
	$secondrow[$i]="\(" . f1($firstrow[$i]) . "\)";
	$thirdrow[$i] = "\(" . g1($firstrow[$i]) . "\)";
	$fourthrow[$i]= "\(" . fp($firstrow[$i]) . "\)";
	$fifthrow[$i]= "\(" . gp($firstrow[$i]) . "\)";
	$firstrow[$i]= "\(" . $firstrow[$i] . "\)";
	}

# Calcuate the questions (about the new combined functions)

@questions=();
@answers = ();
qa(~~@questions,~~@answers,
"\((f g)'($x1)\)",
f1($x1)*gp($x1)+fp($x1)*g1($x1),

"\((f+g)'($x1)\)",
fp($x1)+gp($x1),

"If \(h(x)=g(f(x))\), calculate \(h'($x2)\).",
gp(f1($x2))*fp($x2),

"\((f-g)'($x1)\)",
fp($x1)-gp($x1),

"\((f/g)'($x1)\)",
( g1($x1)*fp($x1)-gp($x1)*f1($x1) )/( g1($x1)**2 ),

"\((f g)($x2)\)",
f1($x2) * g1($x2),

"\(f(f($x2))\)",
f1(f1($x2)),

"\(f($x1) /( g($x1) +5)\)",
f1($x1)/(g1($x1) +5),

"If \(h(x)=f(f(x))\), calculate \(h'($x1)\)",
fp(f1($x1))*fp($x1),

"If \(h(x)=f(g(x))\), calculate \(h'($x2)\)",
fp(g1($x2))*gp($x2),
);
# Choose the questions to be presented for this problem
@slice=NchooseK(scalar(@questions),5);
@quesStr=@questions[@slice];
@ansStr=@answers[@slice];
# Present the text.
TEXT(EV2(
qq!  This problem tests calculating new functions from old ones:$BR
From the table below calculate the quantities asked for:$BR!,
&begintable(scalar(@firstrow)+1),
&row(" \(x\) ",@firstrow),
&row(" \(f(x)\) ", @secondrow),
&row(" \(g(x)\) ", @thirdrow),
&row(" \(f'(x)\) ", @fourthrow),
&row(" \(g'(x)\) ", @fifthrow),
&endtable(),
));
foreach $i (1..@slice) {
	TEXT(EV2( $BR,ans_rule(20),$quesStr[$i-1] ));
	}

#ANS(num_cmp([@ansStr], format=>"%.3f", relTol=>1));
ANS(num_cmp($ansStr[0]),num_cmp($ansStr[1]),num_cmp($ansStr[2]), num_cmp($ansStr[3]), num_cmp($ansStr[4]) );
TEXT($END_ONE_COLUMN);
ENDDOCUMENT();        # This should be the last executable line in the problem.
