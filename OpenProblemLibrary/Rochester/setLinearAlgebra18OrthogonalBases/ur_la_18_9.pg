## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 5/3/06

## DBsubject(Linear algebra)
## DBchapter(Inner products)
## DBsection(Gram-Schmidt process)
## Date(July 2013)
## Institution(Rochester and Hope College)
## Author(Paul Pearson)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('8.2')
## Problem1('')
## KEYWORDS('linear algebra','matrix','basis','dot product','inner product','orthonormal','image')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"MatrixCheckers.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix');
Context()->flags->set(
  tolerance => 0.001,
  tolType => "absolute",
);

# the following matrix has orthogonal columns/rows: 

$v = non_zero_random(-6,6,1);

$a[1][1] = $v; 	$a[1][2] = -1;	$a[1][3] = 0;	$a[1][4] = 1;
$a[2][1] = 1;	$a[2][2] = $v;	$a[2][3] = 1;	$a[2][4] = 0;
$a[3][1] = 0;	$a[3][2] = -1;	$a[3][3] = $v;	$a[3][4] = -1;
$a[4][1] = -1;	$a[4][2] = 0;	$a[4][3] = 1;	$a[4][4] = $v;

# permute the rows: 

@slice = NchooseK(4,4);

foreach $i (1..4) { 
	foreach $j (1..4) { 
		$b[$i][$j] = $a[$slice[$i-1]+1][$j];
	}
}

# rows 2-4 of the displayed matrix will be linear combinations of rows 1 and 2 of the sliced matrix: 

foreach $i (2..4) { 
	$m[$i] = non_zero_random(-3,3,1);
	$n[$i] = non_zero_random(-3,3,1);
	foreach $j (1..4) { 
		$c[$i][$j] = $m[$i]*$b[1][$j] + $n[$i]*$b[2][$j];
	}
}

# find a vector in the column space orthogonal to the first column: 

$prod = $b[1][1]*$b[1][2] + $c[2][1]*$c[2][2] + $c[3][1]*$c[3][2] + $c[4][1] + $c[4][2]; 
$norm1sq = $v*$v + 2;

$d[1][2] = $b[1][2] - $prod*$b[1][1]/$norm1sq;

foreach $i (2..4) { 
	$d[$i][2] = $c[$i][2] - $prod*$c[$i][1]/$norm1sq;
}

###################################

$A = Matrix([[$b[1][1], $b[1][2], $b[1][3], $b[1][4]], 
				       [$c[2][1], $c[2][2], $c[2][3], $c[2][4]],
                                       [$c[3][1], $c[3][2], $c[3][3], $c[3][4]],
                                       [$c[4][1], $c[4][2], $c[4][3], $c[4][4]]]);

$basis1 = Matrix([$b[3][1], $b[3][2], $b[3][3], $b[3][4]])->transpose;
$basis2 = Matrix([$b[4][1], $b[4][2], $b[4][3], $b[4][4]])->transpose;

$basis3 = Matrix([$b[1][1], $c[2][1], $c[3][1], $c[4][1]])->transpose;
$basis4 = Matrix([$d[1][2], $d[2][2], $d[3][2], $d[4][2]])->transpose;

###################################

$multians1 = MultiAnswer($basis1, $basis2)->with(
  singleResult => 1,
  separator => ',',
  tex_separator => ',',
  allowBlankAnswers=>0,
  checker => ~~&orthonormal_basis_checker_columns,
);

$multians2 = MultiAnswer($basis3, $basis4)->with(
  singleResult => 1,
  separator => ',',
  tex_separator => ',',
  allowBlankAnswers=>0,
  checker => ~~&orthonormal_basis_checker_columns,
);


Context()->texStrings;
BEGIN_TEXT
Let \[ A = $A. \]
Find orthonormal bases of the kernel and image of \(A\).
$BR
$BR
Basis of the kernel:
$BR
\(\Bigg\lbrace\) 
\{ $multians1->ans_array(15) \}, 
\{ $multians1->ans_array(15) \} 
\(\Bigg\rbrace.\)
$BR
$BR
Basis of the image:
$BR
\(\Bigg\lbrace\) 
\{ $multians2->ans_array(15) \}, 
\{ $multians2->ans_array(15) \} 
\(\Bigg\rbrace.\)
END_TEXT
Context()->normalStrings;

ANS($multians1->cmp);
ANS($multians2->cmp);
COMMENT('MathObject version');
ENDDOCUMENT();