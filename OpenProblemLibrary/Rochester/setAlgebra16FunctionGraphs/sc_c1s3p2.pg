## DESCRIPTION
## Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Algebra)
## DBchapter(Polynomial equations and functions)
## DBsection(Graphs of polynomials)
## Date(6/3/2002)
## Institution(Rochester)
## MLT(Intersect)
## Level(2)
## TitleText1('College Algebra')
## AuthorText1('Stewart, Redlin, Watson')
## EditionText1('3')
## Section1('4.5')
## Problem1('40 46')
## KEYWORDS('function' 'equation','functions', 'Newton's method')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
"PGauxiliaryFunctions.pl");

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

# continuity (for real numbers)
$three_tries_only = 4;
while (--$three_tries_only)  {  # redo this calculation if not root is found.
	$a= random(-5,5,1);
	$b= random(-8,8,1);
	$c= random(2,5,1);
	$d = random(-4,4,1);

	sub f2 {
		my ($z) = @_;
		$z**4 - $c*$z**3 - $d*$z**2 + $a*$z + $b;
	}

	sub fp {
		my ($z) = @_;
		4*$z**3 - 3*$c*$z**2 - 2*$d*$z +$a;
	}

	# newtons method for finding a positive root
	my $range = 40;
	$x0= $range;
	$errorTol=.00001;

	# find a first guess
	while ( ( f2($x0) * f2($x0-1) > 0 ) &&  $x0 > -$range )  {
	$x0 = $x0 -1;
	}

	$safety = 20;
	while (--$safety) {
		#$x0= random(1,4,.1);  # first guess,
		$count = 20;
		$delta= 100;
		# iterate
		while ( abs( $delta) > $errorTol && --$count > 0 )  {
			$delta = fp($x0) == 0 ? 1 :f2($x0)/fp($x0); # check for zero tangents
			$x0 = $x0-$delta;
			} # quit if the answer doesn't change much or
			  # the iteration has gone one too long.
	    last if  $count > 0;  # quit if we have an answer
	    }
	last if $safety >0;  # quit if this problem has found an answer.
}

TEXT("$PAR Warning -- the computer may not have calculated the correct answer.  If you can't get the
computer to accept your answer please consult with your
instructor.  (initial tries left = $safety, iterations left = $count)$PAR")  if ($safety<=0) or ($count <=0);
  # if count or safety went to zero there might be trouble.

Global::log_info("problem sc_c1s3p2.pg: safety=$safety, count=$count","","",query_string()) if ($safety<=0) or ($count <=0);

TEXT(EV2(<<EOT));
Use a graphing calculator to find the largest value of \( x \) which satisfies \( x^4 ?{$a:%5.3f}x ?{$b:%5.3f} = !{$c:%5.3f}x^3 ? {$d:%5.3f}x^2 \).
Give the answer to 2 decimal places.\{ans_rule(30)\}
$BR
Remember to calculate the trig functions in radian mode.
EOT

ANS(num_cmp($x0, format=>"%5.4f", tolType=>"absolute", mode=>"strict", tol=>.01));

ENDDOCUMENT();        # This should be the last executable line in the problem.

