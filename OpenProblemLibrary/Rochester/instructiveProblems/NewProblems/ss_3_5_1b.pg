## DESCRIPTION
##  Sample of new style problem.
## ENDDESCRIPTION

## Tagged by jjh2b

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(AIM tutorial: new problems)
## Institution(Rochester)
## MO(1)
## KEYWORDS('sample','webwork','new')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",     # Standard macros for PG language
"PGcourse.pl",      # Customization file for the course
"MathObjects.pl",
# "source.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###################
#
#  Setup

Context("Complex");
 #   Allows for complex and real valued variables as well as lists of both.  
 # Complex numbers can be represented in any of the following ways (using 2+3i 
 # as an example): Complex(2,3), Complex(2+3i), Complex("2+3i").
 # To force answers to be of the form (Real Expr.) + (Real Expr.)*i, 
 # use Context("LimitedComplex").


@primes = (2,3,5,7,11,13,17,19);
# Ensure exponent cannot be reduced

$m = random(0,2,1);
$n = random(3,7,1);

$Num = @primes[$n];
$Den = @primes[$m];

# calculate linear factors:

@answers = ();     # an empty array

# Generates all $Den solutions, storing them in an array
foreach  $k (1..$Den)   {

# making Num*(2k+1)/Den *pi* i, but reducing to nicer $q/$Den pi i
# all modulo 2 pi i
      $q = ($Num * (2*$k+1)) % (2*$Den);  
      # adjust if it is better with a negative value
      $q -= 2*$Den if $q > $Den;
      # deal with special cases, 0, 1, $Den, -1, then general case
      push @answers, ($q == 0 ? "0" : $q == $Den ? "pi i" :
         ($q == 1 ? "" : $q == -1 ? "-" : $q) . "pi/$Den i");
}
# Make math object of the string, which will be a list because we
# are separating the answers by commas.  Then, answer checking will not
# depend on the order of the answers.
$c = Compute(join(", ",@answers));
foreach $k (@{$c->{data}}) {
      $k = $k->with(period=>Complex("2 pi i"),logPeriodic=>0);
      #   ->with(period=>Complex("2*pi*i"),logPeriodic=>0); modifies the answer 
      # checker to accept correct answers mod 2*pi*i.  If the problems requires 
      # a modulus in an exponential (like e^(-pi/2 + 2pik)), we then set 
      # logPeriodic=>1. 
}

#### Prepare poplist for  question
@num_of_sols_pop_up_list = (
       ' '  => '?',
    infinity => "An infinite number of distinct solutions",
    0   => "No solutions",
    1   => "One distinct solution",
    2   => "2 distinct solutions",
    3   => "3 distinct solutions",
    4   => "4 distinct solutions",
    5   => "5 distinct solutions",
    6   => "6 distinct solutions",
    7   => "7 distinct solutions",
    8   => "8 distinct solutions",
);
$str1 = "-1";
$str2 = "$Num/$Den";

###################
#
#  Text

Context()->texStrings;
BEGIN_TEXT

Practice finding solutions to equations involving complex exponential, log and trig functions. Enter solutions separated by commas.

$PAR

How many distinct values does \(($str1)^{\frac{$Num}{$Den}}\) have?
$SPACE$SPACE$SPACE $SPACE \{pop_up_list(@num_of_sols_pop_up_list)\}
$PAR

What are the distinct values of \( ($str1)^{\frac{$Num}{$Den}} \)? $SPACE $SPACE $SPACE \(\exp\big(\)\{ans_rule(50)\}\(\big)\)

END_TEXT
Context()->normalStrings;

###################
#
#  Answers

ANS(Real($Den)->cmp);
ANS($c->cmp); 
#   Modified by the List object and period, the answers of $c
# are checked as an unordered List where each entry is checked mod 2pi*i.


;
ENDDOCUMENT();
