## DESCRIPTION
##  Sample of new style problem.
## ENDDESCRIPTION

## Tagged by jjh2b

## DBsubject(WeBWorK)
## DBchapter(WeBWorK Tutorial)
## DBsection(AIM Tutorial: New Problems)
## Institution(Rochester)
## MO(1)
## KEYWORDS('sample','webwork','new')

DOCUMENT();       # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",  # Standard macros for PG language
"PGcourse.pl",    # Contains customization settings for the course
"MathObjects.pl", # Macros for the different types of Math Objects: 
                  #      (Real, Complex, List, Point, Vector, Matrix, Interval, 
                  #       Set, Union, String, Formula), containing information 
                  #       such as the appropriate answer checker associated 
                  #       which each object. 
# "source.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###################
#
#  Setup

$a = random(1,10,1);
$c = random(1,10,1);
do {$d = random(1,10,1);} until($d != $c);  # picks $d not equal to $c

$tag = random(2,6,1);
if($tag == 5) { $n = Formula("0"); }
else { $n = Formula("pi/$tag"); }

#    Creates a function with respect to x (x is the default variable enabled), 
#  and does basic fixes to it via 'reduce'; i.e. (-1)*x-> -x, (x + 0) -> x, etc.
       $Funct = Formula("($a*sin(x))/($c*sin(x) + $d*cos(x))")->reduce;

#  Takes derivative of $Funct with respect to x.
       $deriv = $Funct->D; 

#  Evaluates $deriv at x = $n
       $m = $deriv->eval(x=>($n->eval));

#    Compute preserves the numeric structure of the inside as far as using 
#  it as a correct answer.  
#    For example, $answer = Compute("9 - (3 * 8)"); ... ANS($answer->cmp); 
#  will compare -15 to the student's answer, but will display "9 - (3 * 8)" 
#  as the correct answer.
       $b = Compute(($Funct->eval(x=>($n->eval)))-($m)*($n));

       $TangentLine = Formula("$m*x + $b");


###################
#
#  Text

#    Displays expressions / variables inside \( ... \) as TeX strings 
#  formatted as the type selected (e.g. Images or jsMath).
       Context()->texStrings;

BEGIN_TEXT

Let \( f(x) = $Funct \). $PAR
Then \( f'(x) = \) \{$Funct->ans_rule(80)\}. $PAR
Write the equation of the tangent line to the graph of \(y=f(x)\) at \( x = $n \) written in the form \(y=mx+b\):
$BR
\( y = \) \{$TangentLine->ans_rule(100)\}

END_TEXT

# Displays expressions / variables inside \( ... \) as regular strings but formatted as the type selected (e.g. Images or jsMath).
       Context()->normalStrings;

###################
#
#  Answers

#  An appropriate answer checker is used based on the type of 
#    Math Object (Real, List, Interval, etc.) being compared.

ANS($deriv->cmp);
ANS($TangentLine->cmp);


COMMENT('MathObject version');
ENDDOCUMENT();
