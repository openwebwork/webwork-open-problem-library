## DESCRIPTION
##  Sample of new style problem.
## ENDDESCRIPTION

## Tagged by jjh2b

## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(AIM tutorial: new problems)
## Institution(Rochester)
## MO(1)
## KEYWORDS('sample','webwork','new')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
# "source.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###################
#
#  Setup

$a = random(2,7,1);
$a3 = Compute("$a^3");
$b = random(2,7,1);
$b3 = Compute("$b^3");

$answ = Compute("(3*$b^4+3*$b^2/32)+(3*$a^4+3*$a^2/32)");

###################
#
#  Text

Context()->texStrings;
BEGIN_TEXT
Find the length of the curve
\[
x = 3 y^{4/3}-\frac{3}{32}y^{2/3}, \quad -$a3\le y\le $b3
\]
$BR
\(L\) =  \{ ans_rule(40)\}

END_TEXT
Context()->normalStrings;

# Creates a Custom Checker for a common mistake on this problem.

$checker = sub {

  my ($correct, $student, $ans) = @_;

  $WrongAns = Compute("(3*$b^4+3*$b^2/32)-(3*$a^4+3*$a^2/32)");

# If there is a "trick" or subtlety to a problem that most students might not 
#    pick up on, this is a helpful way of steering the students right without 
#    confusing those that may have approached the problem in a different way 
#    that avoids this subtlety (as opposed to using a Hint that every student 
#    can and most likely will read).

  Value::Error(
 "Note: arc length cannot be negative.  The antiderivative 
  representing arc length of x can take on negative values, 
  so you need to break the integral up -first integrating 
  from -$a3 to 0 plus the integral from 0 to $b3, taking the 
  absolute value of each individually giving you total arc 
  length.")
       if($student == $WrongAns);

# If the student got the correct answer, s/he will not see the error above and 
#    will be marked correct; likewise, if the student got the answer incorrect 
#    but did not make the mistake above, s/he will not see the error above and 
#    will be marked incorrect.
     
       ($student == $correct); #    The value of the last line is evaluated and 
                               #  returned. If $student == $correct is true, 1 
                               #  will be returned and the student will receive 
                               #  'correct'; otherwise, the student will receive 
                               #  an 'incorrect'.
};

###################
#
#  Answers

ANS($answ->cmp(checker=>$checker));
  # Uses the custom answer checker defined above to show an error message.


;
ENDDOCUMENT();
