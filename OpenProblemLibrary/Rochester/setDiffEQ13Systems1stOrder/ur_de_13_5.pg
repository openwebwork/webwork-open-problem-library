## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Verification of solutions)
## Institution(Rochester)
## MLT(SDE-VS-match)
## Level(3)
## KEYWORDS('differential equation' 'first order' 'matrices')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGmatrixmacros.pl"
           );

# TEXT( ... , ... , )
# Is the simplest way of printing text, each string in the input is immediately printed.
# It does not do any of the simplifying and evaluating tricks performed by the BEGIN_TEXT/END_TEXT construction.

# beginproblem() is a macro which outputs the string
# which contains the number
# of points the problem is worth.

# Putting these two ideas together prints the standard opening line of a problem.
# We will use this construction routinely at the beginning of all subsequent problems.

TEXT(beginproblem());

# Since this is a matching questions, we do not usually wish to tell students which
# parts of the matching question have been answered correctly and which are
# incorrect.  That is too easy.  To accomplish this we set the following flag to zero.

$showPartialCorrectAnswers = 0;

# Make a new match list
$ml = new_match_list();
# $ml ->rf_print_a(~~&print_eqn_a);

#1    #####
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[15, 0, 0], [4, 20, -15], [4, 30, -25]]), "\(y(t)\)" ),
$BR.mbox( "\(y(t)=\)", display_matrix([["\(5e^{15t}\)", "\(0\)", "\(0\)"], 
				       ["\(2e^{15t}\)", "\(e^{5t}\)", "\(2e^{10t}\)"], 
				       ["\(2e^{15t}\)", "\(e^{5t}\)", "\(4e^{10t}\)"]]) ) 
);

#2    #################
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[-32, 49, -23], [-64, 78, -34], [64, -78, 34]]), "\(y(t)\)" ), 
$BR.mbox( "\(y(t)=\)", display_matrix([["\(-1\)", "\(3e^{64t}\)", "\(-3e^{16t}\)"], 
				       ["\(-3\)", "\(4e^{64t}\)", "\(-2e^{16t}\)"], 
				       ["\(-5\)", "\(-4e^{64t}\)", "\(2e^{16t}\)"]]) ) 
);

#3   #########################
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[14, 0, -4], [2, 13, -8], [-3, 0, 25]]), "\(y(t)\)" ),
$BR.mbox( "\(y(t)=\)", display_matrix([["\(0\)", "\(-e^{26t}\)", "\(4e^{13t}\)"], 
				       ["\(-4e^{13t}\)", "\(-2e^{26t}\)", "\(5e^{13t}\)"], 
				       ["\(0\)", "\(3e^{26t}\)", "\(e^{13t}\)"]]) ) 
);

#4    #########################
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[-13, -2, 3], [-15, -18, 5], [-33, -18, 7]]), "\(y(t)\)" ),
$BR.mbox( "\(y(t)=\)", display_matrix([["\(-e^{-4t}\)", "\(2e^{-8t}\)", "\(-e^{-12t}\)"], 
				       ["\(0\)", "\(-2e^{-8t}\)", "\(5e^{-12t}\)"], 
				       ["\(-3e^{-4t}\)", "\(2e^{-8t}\)", "\(3e^{-12t}\)"]]) )
);

#5    #########################
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[-97, 33, -5], [-140, 84, 35], [-4, 15, -8]]), "\(y(t)\)" ),
$BR.mbox( "\(y(t)=\)", display_matrix([["\(-2e^{-21t}\)", "\(5e^{-63t}\)", "\(-e^{63t}\)"], 
				       ["\(-4e^{-21t}\)", "\(5e^{-63t}\)", "\(-5e^{63t}\)"], 
				       ["\(4e^{-21t}\)", "\(-e^{-63t}\)", "\(-e^{63t}\)"]]) )
);

#6    #########################
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[-2, 0, 0], [0, -2, 0], [0, 0, -2]]), "\(y(t)\)" ),
$BR.mbox( "\(y(t)=\)", display_matrix([["\(-5e^{-2t}\)", "\(2e^{-2t}\)", "\(3e^{-2t}\)"], 
				       ["\(-2e^{-2t}\)", "\(2e^{-2t}\)", "\(2e^{-2t}\)"], 
				       ["\(e^{-2t}\)", "\(0\)", "\(4e^{-2t}\)"]]) )
);

#7    #########################
$ml -> qa (
mbox( "\(y'(t)=\)", display_matrix([[-86, 218, -160], [73, -49, 80], [111, -138, 165]]), "\(y(t)\)" ),
$BR.mbox( "\(y(t)=\)", display_matrix([["\(e^{60t}\)", "\(-2e^{45t}\)", "\(4e^{-75t}\)"], 
				       ["\(-3e^{60t}\)", "\(e^{45t}\)", "\(-2e^{-75t}\)"], 
				       ["\(-5e^{60t}\)", "\(3e^{45t}\)", "\(-3e^{-75t}\)"]]) )
);

##########################

# Choose three of the question and answer pairs at random.

$ml ->choose(3);  

# Using choose(3) would choose all three questions, but the order of the questions and answers would be scrambled.

# Now print the text using $ml->print_q for the questions and $ml->print_a to print the answers.

BEGIN_TEXT

Match the differential equations and their matrix function solutions: $BR
It's good practice to multiply at least one matrix solution out fully, to make sure that you
know how to do it, but you can get the other answers quickly by process of elimination and
just multiply out one row or one column.
$BR$BR
\{ $ml -> print_q \}
$BR
\{ $ml -> print_a \}

END_TEXT

# Enter the correct answers to be checked against the answers to the students.

ANS(str_cmp( $ml->ra_correct_ans )   ) ;

# That's it.

ENDDOCUMENT() ;        







