##DESCRIPTION
# Find linear factors of a quadratic equation with complex coefficients
##ENDDESCRIPTION

## Tagged by cmd6a 8/1/07

## DBsubject(Complex Analysis)
## DBchapter(Series and Residues)
## DBsection(Zeroes and Poles)
## Institution(Rochester)
## MLT(ca-poles-no-cancel)
## MLTleader(1)
## Level(2)
## MO(1)
## TitleText1('Complex Analysis')
## AuthorText1('Saff, Snider')
## EditionText1('3')
## Section1('3.1')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "Parser.pl",
   "PGunion.pl",        # Union College macros
   #"PGcourse.pl",      # Customization file for the course
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Complex");

##############################################################
#
#  Setup
#
#

$a  = non_zero_random(-5,5,1);
$ai = non_zero_random(-5,5,1);
$b  = non_zero_random(-5,5,1);
$bi = non_zero_random(-5,5,1);

#create two complex roots
$aa = Complex($a, $ai); # Formula("$a + i ($ai)");
$bb = Complex($b, $bi); # Formula("$b + i ($bi)");

# enter rational function
$f = Formula("(z^2+4)/((z-$aa)(z-$bb)^2)");
$f = $f->reduce;

#calculate pole locations factors
if ($aa == $bb)
{
   $poles_deg1 = List(Formula("None"));
   $poles_deg2 = List(Formula("None"));
   $poles_deg3 = List(Formula("$aa"));
}

else
{
   $poles_deg1 = List(Formula("$aa"));
   $poles_deg2 = List(Formula("$bb"));
   $poles_deg3 = List(Formula("None"));
}


##############################################################
#
#  Text
#
#
Context()->texStrings;

BEGIN_TEXT
Find the poles  for the function:

\[ R(z) = $f \]

$PAR
Enter the poles of multiplicity one, separated by 
commas (e.g. 3, 2+i, 1) or enter "None".
\{ ans_rule(20) \} 
$PAR
Enter the poles of multiplicity two \{ans_rule()\}
$PAR
Enter the poles of multiplicy three or more \{ans_rule()\}

END_TEXT

Context()->normalStrings;
##############################################################
#
#  Answers
#
#

ANS($poles_deg1->cmp);
ANS($poles_deg2->cmp);
ANS($poles_deg3->cmp);

ENDDOCUMENT();        # This should be the last executable line in the problem.
