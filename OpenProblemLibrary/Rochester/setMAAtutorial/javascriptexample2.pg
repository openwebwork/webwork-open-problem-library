##DESCRIPTION
##KEYWORDS('sample')
## Tagged by jjh2b

## DBsubject('WeBWorK')
## DBchapter('WeBWorK Tutorial')
## DBsection('MAA Tutorial')
## Date('8/30/07')
## Author('')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();

loadMacros("PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGnumericalmacros.pl",  # needed for the javaScript spline code
           ); 
#TEXT(beginproblem(), $BR,$BBOLD, "JavaScript Example 2", $EBOLD, $BR,$BR);

# define function to be evaluated
$a= random(1,3,1);
$b= random(-4,4,.1);
$c = random(-4,4,1);
$x0=random(-2,2,1);

# function =  ${a}x^2+${b}x +${c}sin(x)   
# This is just to provide the correct answer.
# This function will be defined for javaScript below.
sub fp {   # define a perl subroutine to calculate the derivative
    my $x = shift;
    2*$a*$x+$b;
}
$ans = fp($x0);

# approximate the function by a cubic spline
sub fun{
    my $x = shift;
    ${a}*$x**2+$b*$x +$c;
}
@x = ();
@y = ();
for ( $x1 = -3; $x1<3; $x1 = $x1+.1) {
    push(@x, $x1);
    push(@y, fun($x1) );
}
#warn join(" ", @x) ;  # test the calculation of the data points
#warn join(" ", @y) ;
$javascript= javaScript_cubic_spline(~~@x, ~~@y, name =>'func');

#$javascript =~s/</\&lt;/g;  # make the script visible for debugging
#warn   "script=$javascript" ; # check that the script was created


 
## This text will be placed in the header section of the HTML page
## not in the body where TEXT output is placed.
## Not processing is done.

HEADER_TEXT( javaScript_cubic_spline(~~@x, ~~@y, name =>'func')  );  


TEXT(beginproblem());
TEXT(MODES( TeX => "",
            HTML      =>  "<NOSCRIPT> This problem requires that javaScript be 
                           enabled </NOSCRIPT>~~n"
));

$functionArrow = MODES(
    TeX => "\(- f\rightarrow\)",
    HTML => '-- f -- &gt; &nbsp; '
);

# The following string contains a combination of HTML and javaScript
# which displays the input table for the javaScript calculator

$javaScript =<<ENDOFSCRIPT;
<CENTER>
<TABLE BORDER=4>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input1"  Value = "$x0" Size="20">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->" OnClick="this.form.Output1.value=func(this.form.Input1.value)">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output1"   Size="20">
</TD>
</TR>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input2"  Value = "$x0" Size="20">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->" OnClick="this.form.Output2.value=func(this.form.Input2.value)">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output2"   Size="20">
</TD>
</TR>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input3"  Value = "$x0" Size="20">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->" OnClick="this.form.Output3.value=func(this.form.Input3.value)">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output3"   Size="20">
</TD>
</TR>
</TABLE>

</CENTER>
<!-- Script Size:  1.89 KB  -->
ENDOFSCRIPT

BEGIN_TEXT
Find the derivative of the function \(f(x)\).  The windows below will tell
you the value of \(f\) for any input \(x\). (This is 
an "oracle function", since if you ask, it will tell.)
$PAR
\(f'( $x0  ) \) = \{ans_rule(50 ) \}
$PAR
to find the result. You can also enter numerical expressions and 
have WeBWorK do the calculations for you.
END_TEXT

# Here is where we actually print the javaScript, or alternatives for printed output.
TEXT(MODES(
     TeX        => " \fbox{ The java Script calculator was displayed here
                    }",
     Latex2HTML => "\begin{rawhtml} $javaScript \end{rawhtml}",
     HTML_tth   =>  $javaScript,
     HTML       =>  $javaScript,
      ));




ANS(num_cmp($ans,reltol => 1) );  #We are allowing 1 percent error for the answer.

            
ENDDOCUMENT();
