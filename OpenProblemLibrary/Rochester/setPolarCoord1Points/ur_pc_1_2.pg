## DESCRIPTION
## Calculus
## ENDDESCRIPTION


## Tagged by tda2d

## DBsubject(Trigonometry)
## DBchapter(Polar coordinates & vectors)
## DBsection(Polar and rectangular coordinates)
## Date(6/3/2002)
## Institution(Rochester)
## MLT(PolarToCart_Match)
## MLTleader(1)
## Level(2)
## TitleText1('Calculus: Early Transcendentals')
## AuthorText1('Rogawski')
## EditionText1('1')
## Section1('11.3')
## Problem1('5')
## TitleText2('Calculus: Early Transcendentals')
## AuthorText2('Stewart')
## EditionText2('6')
## Section2('10.3')
## Problem2('1 2 3 4')
## KEYWORDS('Polar Coordinates', 'Conversion')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
$pi = 4*arctan(1);
$r05 = non_zero_random(-4,4);
$r1 = 2*$r05;                      #so r1,r2 r3 are even 
$r2 = $r1;
$r3 = $r1;
$r35 = non_zero_random(-4,4);
$r4 = 2*$r35;                      #so r4 is even 
$r5 = $r1 + 3;                     #so r5 is odd
$r55 = non_zero_random(-4,4);
$r6 = 2*$r55;                      #so r6,r7 are even 
$r7 = $r2;

$t1 = 1;
$t15 = random(-3,3);
$t2 = non_zero_random(-8,8,4) + 1;    #so t2 is odd (ne t1 mod4)
$t3 = random(2,8) * random(-1,1,2);
$t35 = non_zero_random(-4,3);
$t4 = 3* $t35 + 1;                  #so t4 is 1 mod 3
$t5 = 3* $t35 + 5;                  # so t5 is 2 mod 3
$t55 = non_zero_random(-2,2);
$t6 = 6*$t55 - 1;                   #so t6 is 5mod 6
$t7 = 6*$t55 + 1;                   #so t7 is 1mod 6

$x1 = ($r1) * cos ($t1 * $pi/4) /sqrt(2);
$x2 = ($r2) * cos ($t2 * $pi/4) /sqrt(2);
$x3 = ($r3) * cos ($t3 * $pi/2) ;
if (abs($t3-int($t3/2)*2)>0) {$x3=0;} # if t3 is odd then x3=0
$x4 = ($r4) * cos ($t4 * $pi/3) ;
$x5 = ($r5) * cos ($t5 * $pi/3) ;
$x6 = ($r6) * cos ($t6 * $pi/6) /sqrt(3) ;
$x7 = ($r7) * cos ($t7 * $pi/6) /sqrt(3) ;

$y1 = ($r1) * sin (($t1) * ($pi/4)) /sqrt(2) ;
$y2 = ($r2) * sin (($t2) * ($pi/4)) /sqrt(2) ;
$y3 = ($r3) * sin (($t3) * ($pi/2)) ;
$y4 = ($r4) * sin (($t4) * ($pi/3)) /sqrt(3) ;
$y5 = ($r5) * sin (($t5) * ($pi/3)) /sqrt(3) ;
$y6 = ($r6) * sin (($t6) * ($pi/6)) ;
$y7 = ($r7) * sin (($t7) * ($pi/6)) ;

$questStr1 =EV2( " \(  ( $r1 , \frac{$t1 \pi}{4} ) \)"); 
$ansStr1 = EV2(   '\( ( \{spf($x1, "%5.0f")\} \sqrt{2},
                        \{spf($y1,"%5.0f") \} \sqrt{2} ) \)');

$questStr2 = EV2( " \(  ( $r2 , \frac{$t2 \pi}{4} ) \)");
$ansStr2 = EV2(   '\( ( \{spf($x2, "%5.0f")\} \sqrt{2},
                        \{spf($y2,"%5.0f") \} \sqrt{2} ) \)');

$questStr3 =EV2( " \(  ( $r3 , \frac{$t3 \pi}{2} ) \)");
$ansStr3 = EV2(   '\( ( \{spf($x3, "%5.0f")\} , \{spf($y3,"%5.0f") \} ) \)');

$questStr4 =EV2( " \(  ( $r4 , \frac{$t4 \pi}{3} ) \)");
$ansStr4 = EV2(   '\( ( \{spf($x4, "%5.0f")\} , \{spf($y4,"%5.0f") \} \sqrt{3}) \)');

$questStr5 =EV2( " \(  ( $r5 , \frac{$t5 \pi}{3} ) \)");
$ansStr5 = EV2(   '\( ( \{spf($x5, "%5.1f")\} , \{spf($y5,"%5.1f") \} \sqrt{3}) \)');

$questStr6 =EV2( " \(  ( $r6 , \frac{$t6 \pi}{6} ) \)");
$ansStr6 = EV2(   '\( ( \{spf($x6, "%5.0f")\} \sqrt{3} , 
                        \{spf($y6,"%5.0f") \} ) \)');

$questStr7 =EV2( " \(  ( $r7 , \frac{$t7 \pi}{6} ) \)");
$ansStr7 = EV2(   '\( ( \{spf($x7, "%5.0f")\} \sqrt{3} , 
                        \{spf($y7,"%5.0f") \} ) \)');

@questions =( $questStr1,$questStr2,$questStr3,$questStr4,$questStr5,$questStr6,$questStr7);
@answers =( $ansStr1,$ansStr2,$ansStr3,$ansStr4, $ansStr5, $ansStr6, $ansStr7);

# Now randomize the questions:
@slice = &NchooseK(7,6);
@shuffle = &shuffle(scalar(@slice));

TEXT(EV2(<<EOT));
For each set of Polar coordinates \( (r,\theta ) \),
match the equivalent Cartesian coordinates \( (x,y) \).
$BR
Don't use a calculator. $BR
EOT
TEXT(
&match_questions_list(@questions[@slice]),
&OL(@answers[@slice[@shuffle]])
);
ANS(str_cmp( [ @ALPHABET[&invert(@shuffle)] ]  ) );
     ##the correct answers are obtained by applying
     ##the inverse (adjoint) permutation to the captions.

ENDDOCUMENT();        # This should be the last executable line in the problem.

