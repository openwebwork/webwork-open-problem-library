## DESCRIPTION
##   Walk Through an Algorithm
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Computer science)
## DBchapter(Algorithm analysis)
## Institution(Rochester)
## TitleText1('Discrete Mathematics')
## AuthorText1('Rosen')
## EditionText1('4')
## Section1('2.1')
## Problem1('8')
## KEYWORDS('Algorithm', 'Iteration', 'While Loop')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());


$n = 8;
while (scalar keys %h < 8) {
        $h{random(1,15,1)} = 1;
}

@a = keys %h;

@d = num_sort(@a);



BEGIN_TEXT
This exercise refers to the binary search algorithm given below.  $HR $BR 
$BBOLD procedure $EBOLD $BITALIC binary search $EITALIC ($BITALIC x $EITALIC :
integer, \(a_1, a_2, ... , a_n \): increasing integers) $BR
$BITALIC i $EITALIC := 1 $LB $BITALIC i $EITALIC is left endpoint of search
interval $RB $BR
$BITALIC j $EITALIC := $BITALIC n $EITALIC $LB $BITALIC j $EITALIC is right
endpoint of search interval $RB $BR
$BBOLD while $EBOLD $BITALIC i $EITALIC \(<\) $BITALIC j $EITALIC $BR
$BBOLD begin $EBOLD $PAR
$BITALIC m $EITALIC := \(\lfloor (i+j)/ 2 \rfloor\) $PAR
$BBOLD if $EBOLD \(x > a_m \) $BBOLD then $EBOLD $BITALIC i $EITALIC := $BITALIC
m + 1 $EITALIC $PAR
$BBOLD else $EBOLD $BITALIC j $EITALIC := $BITALIC m $EITALIC $BR
$BBOLD end $EBOLD $BR
$BBOLD if $EBOLD \( x = a_i \) $BBOLD then $EBOLD $BITALIC location $EITALIC :=
$BITALIC i $EITALIC $BR
$BBOLD else $EBOLD $BITALIC location $EITALIC := 0 $BR
$LB $BITALIC location $EITALIC is the subscript of term equal to $BITALIC x
$EITALIC, or 0 if $BITALIC x $EITALIC is not found $RB 
$HR

Suppose our list of increasing integers is shown in the table below

END_TEXT
TEXT(
     begintable ($n),
       row(@d),
     endtable()
    );
    
BEGIN_TEXT
Suppose we conduct the binary search algorithm on this list 
where we search for $d[6]. $BR $BR

(a) In the language of  the algorithm above, enter the correct 
values for the following variables for this particular search: $BR $BR

\( x = \) \{ ans_rule(10) \} 
\( n = \) \{ ans_rule(10) \}
\( a_2 = \) \{ ans_rule(10) \}
\( a_4 = \) \{ ans_rule(10) \}
$BR $BR
(b) After the first iteration of the while loop, what are the values of 
the following variables? $BR

\( i = \) \{ ans_rule(10) \}
\( j = \) \{ ans_rule(10) \}
\( m = \) \{ ans_rule(10) \}
$PAR
END_TEXT
$m = floor((1+$n)/2);
ANS(num_cmp( $d[6] ) );
ANS(num_cmp( $n ) );
ANS(num_cmp( $d[1] ) );
ANS(num_cmp( $d[3] ) );

ANS(num_cmp( $m+1 ) );
ANS(num_cmp( $n ) );
ANS(num_cmp( $m ) );

$cmc = new_checkbox_multiple_choice();

$cmc -> qa (
"\( S \) has the following elements:",
"$d[4]",
"$d[5]",
"$d[6]",
"$d[7]"
);

$cmc -> extra(
"$d[0]",
"$d[1]",
"$d[2]",
"$d[3]"
);


BEGIN_TEXT
$BR
(c) Intuitively, after the first iteration of the while loop, 
we have cut down our search to a set S of roughly half of the original
numbers on the list. Check the numbers that are in the set S after 
the first iteration of the while loop: $BR
\{ $cmc -> print_q \}
$PAR
\{ $cmc -> print_a \}
END_TEXT

ANS(checkbox_cmp( $cmc -> correct_ans ) );

BEGIN_TEXT
$BR
(d) After the second iteration of the while loop, some of the
variables have 
altered values. Enter the values of the following variables after the 
second while loop iteration: $BR
\( i = \) \{ ans_rule(10) \}
\( j = \) \{ ans_rule(10) \}
\( m = \) \{ ans_rule(10) \}
$PAR
END_TEXT
$m2 = floor(($m+1+$n)/2);
$i2 = $m2+1;
ANS(num_cmp( $i2 ) );
ANS(num_cmp( $n ) );
ANS(num_cmp( $m2 ) );

BEGIN_TEXT
$BR
(e) After the third iteration of the while loop, some of the
variables have 
altered values. Enter the values of the following variables after the 
third while loop iteration: $BR
\( i = \) \{ ans_rule(10) \}
\( j = \) \{ ans_rule(10) \}
\( m = \) \{ ans_rule(10) \}
$PAR
END_TEXT

$m3 = floor(($i2+$n)/2);

ANS(num_cmp( 7 ) );
ANS(num_cmp( 7 ) );
ANS(num_cmp( 7 ) );

BEGIN_TEXT
$BR
(f) After the 3rd iteration of the while loop, 
the while loop terminates and the variable `location' is computed. 
Enter the value for this variable in this case: $BR
$BITALIC location $EITALIC = \{ ans_rule(10) \}
$PAR
END_TEXT

ANS(num_cmp( 7 ) );

ENDDOCUMENT();        # This should be the last executable line in the problem.;
