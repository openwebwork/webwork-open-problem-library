## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 4/30/06

## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(Diagonalization)
## Date(July 2013)
## Institution(Rochester and Hope College)
## Author(Paul Pearson)
## Level(4)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('6.3')
## Problem1('')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserPopUp.pl",
"PGcourse.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix');

# choose eigenvalues

$gen = random(0,1,1);

# if gen=0 then the smaller eigenvalue is repeat; if gen=1 then the bigger eigenvalue is repeat.

if ($gen == 0) { 
	$one = random(-5,1,1);
	$two = $one;
	$three = random($one+1,5,1);
	$mult1 = 2;
	$mult2 = 1;
} else {
	$one = random(-5,1,1);
	$two = random($one+1,5,1);
	$three = $two;
	$mult1 = 1;
	$mult2 = 2;
}

# create an invertible matrix with det either 1  or -1

$a11 = random(-2,2,1);
$a21 = random(-2,2,1);
$a31 = random(-1,1,2);

$b = non_zero_random(-2,2,1);
$a12 = $b * $a11;
$m = random(-1,1,2);
$a22 = $b * $a21 + $m;
$a32 = $b * $a31;

$c = random(-2,2,1);
$d = random(-2,2,1);
$n = random(-1,1,2);
$a13 = $c * $a11 + $d * $a12 + $n;  
$a23 = $c * $a21 + $d * $a22;
$a33 = $c * $a31 + $d * $a32;

$det = - $a31 * $m * $n;

# the inverse is then

$b11 = ($a22 * $a33 - $a23 * $a32)/$det;
$b12 = - ($a12 * $a33 - $a13 * $a32)/$det;
$b13 = ($a12 * $a23 - $a13 * $a22)/$det;
$b21 = - ($a21 * $a33 - $a23 * $a31)/$det;
$b22 = ($a11 * $a33 - $a13 * $a31)/$det;
$b23 = - ($a11 * $a23 - $a13 * $a21)/$det;
$b31 = ($a21 * $a32 - $a22 * $a31)/$det;
$b32 = - ($a11 * $a32 - $a12 * $a31)/$det;
$b33 = ($a11 * $a22 - $a12 * $a21)/$det;

# calculating our matrix

$gen2 = random(0,1,1);

# if $gen2 = 0 then the matrix is diagonalizable; if $gen2 = 1 then not diagonalizable.

if ($gen2 == 0) {

	$c11 = $a11*$one*$b11 + $a12*$two*$b21 + $a13*$three*$b31;
	$c12 = $a11*$one*$b12 + $a12*$two*$b22 + $a13*$three*$b32;
	$c13 = $a11*$one*$b13 + $a12*$two*$b23 + $a13*$three*$b33;

	$c21 = $a21*$one*$b11 + $a22*$two*$b21 + $a23*$three*$b31;
	$c22 = $a21*$one*$b12 + $a22*$two*$b22 + $a23*$three*$b32;
	$c23 = $a21*$one*$b13 + $a22*$two*$b23 + $a23*$three*$b33;

	$c31 = $a31*$one*$b11 + $a32*$two*$b21 + $a33*$three*$b31;
	$c32 = $a31*$one*$b12 + $a32*$two*$b22 + $a33*$three*$b32;
	$c33 = $a31*$one*$b13 + $a32*$two*$b23 + $a33*$three*$b33;

	if ($gen == 0) { 
		$dim1 = 2; 
		$dim2 = 1; 
	} else { 
		$dim1 = 1; 
		$dim2 = 2; 
	}

	$ans = "diagonalizable";

} else {
 
	if ($gen == 0) { 

 		$c11 = $a11*$one*$b11 + ($a11+$a12*$two)*$b21 + $a13*$three*$b31;
	        $c12 = $a11*$one*$b12 + ($a11+$a12*$two)*$b22 + $a13*$three*$b32;
        	$c13 = $a11*$one*$b13 + ($a11+$a12*$two)*$b23 + $a13*$three*$b33;

	        $c21 = $a21*$one*$b11 + ($a21+$a22*$two)*$b21 + $a23*$three*$b31;
        	$c22 = $a21*$one*$b12 + ($a21+$a22*$two)*$b22 + $a23*$three*$b32;
        	$c23 = $a21*$one*$b13 + ($a21+$a22*$two)*$b23 + $a23*$three*$b33;

	        $c31 = $a31*$one*$b11 + ($a31+$a32*$two)*$b21 + $a33*$three*$b31;
        	$c32 = $a31*$one*$b12 + ($a31+$a32*$two)*$b22 + $a33*$three*$b32;
        	$c33 = $a31*$one*$b13 + ($a31+$a32*$two)*$b23 + $a33*$three*$b33;

	} else {

                $c11 = $a11*$one*$b11 + $a12*$two*$b21 + ($a12+$a13*$three)*$b31;
                $c12 = $a11*$one*$b12 + $a12*$two*$b22 + ($a12+$a13*$three)*$b32;
                $c13 = $a11*$one*$b13 + $a12*$two*$b23 + ($a12+$a13*$three)*$b33;

                $c21 = $a21*$one*$b11 + $a22*$two*$b21 + ($a22+$a23*$three)*$b31;
                $c22 = $a21*$one*$b12 + $a22*$two*$b22 + ($a22+$a23*$three)*$b32;
                $c23 = $a21*$one*$b13 + $a22*$two*$b23 + ($a22+$a23*$three)*$b33;

                $c31 = $a31*$one*$b11 + $a32*$two*$b21 + ($a32+$a33*$three)*$b31;
                $c32 = $a31*$one*$b12 + $a32*$two*$b22 + ($a32+$a33*$three)*$b32;
                $c33 = $a31*$one*$b13 + $a32*$two*$b23 + ($a32+$a33*$three)*$b33;

        }

	$dim1 = 1;
	$dim2 = 1;
	$ans = "not diagonalizable";

}

$C = Matrix([[$c11, $c12, $c13], [$c21, $c22, $c23], [$c31, $c32, $c33]]);

$popup = PopUp(["choose","diagonalizable","not diagonalizable"],$ans);

Context()->texStrings;
BEGIN_TEXT
The matrix \[C = $C \] has two distinct eigenvalues with \( \lambda_1 < \lambda_2 \). 
$BR
$BR
The smaller eigenvalue \( \lambda_1 = \) \{ans_rule(5)\} has multiplicity \{ans_rule(5)\} and 
the dimension of the corresponding eigenspace is \{ans_rule(5)\}. 
$BR 
$BR
The larger eigenvalue \( \lambda_2 = \) \{ans_rule(5)\} has multiplicity \{ans_rule(5)\} and 
the dimension of the corresponding eigenspace is \{ans_rule(5)\}.
$BR
$BR
Is the matrix \(C\) diagonalizable? \{ $popup->menu \}
END_TEXT
Context()->normalStrings;

ANS(Compute("$one")->cmp);
ANS(Compute("$mult1")->cmp);
ANS(Compute("$dim1")->cmp);
ANS(Compute("$three")->cmp);
ANS(Compute("$mult2")->cmp);
ANS(Compute("$dim2")->cmp);
ANS($popup->cmp);

COMMENT('The matrix is sometimes defective and sometimes not defective.');
ENDDOCUMENT() ;        



