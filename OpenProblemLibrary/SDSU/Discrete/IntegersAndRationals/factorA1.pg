# DESCRIPTION
# Use of unique factorization
# 
# WeBWorK problem written by Michael E. O'Sullivan
# and Thomas Schmidt
# ENDDESCRIPTION

## DBsubject(Number theory)
## DBchapter(Divisibility)
## DBsection(Prime factorization)
## Institution(SDSU)
## Author(Thomas Schmidt','Michael E. O'Sullivan)
## MLT(enterfact)
## MLTleader(1)
## Level(2)
## Static(1)
## MO(1)


############################
# Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl"
);

TEXT(beginproblem());

############################
# Setup

$showPartialCorrectAnswers = 0;

# If you want to use integers with prime factors > 100,
# either add to this list or use an algorithm to
# generate a new list
@primes = (2,3,5,7,11,13,17,19,23,29,
		 31,37,41,43,47,53,59,61,
		 67,71,73,79,83,89,97);
		   
$n = 46;
$expr = "For \(n = $n\), find the prime factorization.";

@nfac = factor($n);
$pretty = prettyFactor(~~@nfac);
$tmp = join(",",@nfac);
$answer = Compute($tmp);

# takes parameter factor(integer)
# returns array of prime factors		   
sub factor {
	my $x = shift;
	my @factors = ();
	my $i = 0;

	while ($x >= $primes[$i]) {
		if (($x % $primes[$i]) == 0) {
			push(@factors,$primes[$i]);
			$x /= $primes[$i];
			$i = 0;
		} else {
			$i++;
		}
	}

	return @factors;
}

# takes parameter exponents(factor array)
# used by prettyFactor function
# returns array
sub exponents {
	my $aref = shift;
	
	my @arr = @$aref;
	my @exponent = ();
	my $count = 1;

	foreach my $i (0..scalar(@arr)-1) {
		if ($arr[$i] == $arr[$i+1]) {
			$count++;
		} else {
			push(@exponent,$arr[$i]);
			push(@exponent,$count);
			$count = 1;
		}
	}
	return @exponent;
}

# takes parameter prettyFactor(factors array)
# uses exponents function
# returns a LaTeX-formatted string of the factored integer
sub prettyFactor {
	my $aref = shift;
	
	my @fac = @$aref;
	my @arr = exponents(~~@fac);
	my @tmp = ();
	for (my $i = 0; $i < scalar(@arr); $i += 2) {
		if ($arr[$i+1] > 1) {
			push(@tmp,"$arr[$i]^$arr[$i+1]");
		} else {
			push(@tmp,$arr[$i]);
		}
	}
	my $result = join("\cdot ",@tmp);
	
	return $result;
}

############################
# Main Text

Context()->texStrings;
BEGIN_TEXT
$BR
$expr $BR
[Note: Enter your answer as a comma-separated list.  If the factorization is \(2^2\cdot 3^2\), enter your answer as \(2,2,3,3\)]
$BR
\{ans_rule(20)\}
END_TEXT
Context()->normalStrings;

############################
# Answer Evaluation

ANS($answer->cmp());

############################
# Solution

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR Solution: $PAR
\(n = $n\) $BR $BR
\($n\) has the prime factorization $BR
\($pretty\) $BR
END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
