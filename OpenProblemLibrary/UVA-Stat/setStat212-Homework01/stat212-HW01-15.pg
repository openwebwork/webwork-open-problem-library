## DESCRIPTION
##  Statistics: Descriptive statistics
## ENDDESCRIPTION

## naw tagged this problem.

## DBsubject(Statistics)
## DBchapter(Exploratory data analysis/descriptive statistics)
## DBsection(Classifying data)
## Date(5/31/2005)
## Institution(UVA)
## Author(Nolan A. Wages)
## Level(3)
## TitleText1('Statistics for Management and Economics')
## AuthorText1('Keller, Warrack')
## EditionText1('6')
## Section1('.')
## Problem1('')
## KEYWORDS('statistics', 'descriptive statistics', 'interval', 'nominal', 'ordinal')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

# True false questions are a special case of a "select list"
# Make a new select list

$ma = new_select_list();

# $ma now "contains" the select list object.
# Insert some  questions and whether or not they are interval, ordinal or 
# nominal data.

$ma->rf_print_q(~~&pop_up_list_print_q);

$ma -> ra_pop_up_list( [ No_answer => "  ?", Ordinal => "Ordinal", Nominal => "Nominal", Interval => "Interval"] );


$ma -> qa ( # each entry has to end with a comma
"Whether you are a US citizen",
"Nominal",
"Your marital status",
"Nominal",
"Number of cars in a parking lot",
"Interval",
"Amount of time you spend per week on your homework",
"Interval",
"Lily's travel time from her dorm to the student union at the University of Virginia",
"Interval",
"Heidi's favorite brand of tennis balls",
"Nominal",
"The status of your Statistics professor; Assistant Professor, Associate 
Professor, or Full Professor",
"Ordinal",
"The availability of parking on campus; Insufficient, Moderate, or Abundant",
"Ordinal",
);

# Choose four of the question and answer pairs at random.
$ma ->choose(4);

# Now print the text using $ma->print_q for the questions
# and $ma->print_a to print the answers.

BEGIN_TEXT
$PAR

Determine whether the following possible responses should be classified as interval, nominal or ordinal data.
$BR

\{ $ma-> print_q \}

$PAR

END_TEXT

# Enter the correct answers to be checked against the answers to the students.

ANS(str_cmp( $ma->ra_correct_ans )   ) ;
COMMENT('Questions selected randomly from a larger set.  See source for full question list.');

ENDDOCUMENT();        # This should be the last executable line in the problem.
