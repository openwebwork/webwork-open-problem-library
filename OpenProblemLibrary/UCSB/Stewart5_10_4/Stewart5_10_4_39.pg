## DBsubject(Trigonometry)
## DBchapter(Polar coordinates & vectors)
## DBsection(Curves)
## Institution(UCSB)
## MLT(IntersectionOfPolarCurves)
## MLTleader(1)
## Level(2)
## Static(1)
## TitleText1('Calculus: Early Transcendentals')
## AuthorText1('Stewart')
## EditionText1('5')
## Section1('10.4')
## Problem1('39')
## KEYWORDS('integration', 'areas and lengths in polar coordinates')

DOCUMENT();

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;
$a=random(1,10,1);
$b=random(1,10,1)*random(-1,1,2);
$c=random(1,10,1)*random(-1,1,2);

BEGIN_TEXT

$PAR
Find all points of intersection of the curves \(r=\cos(\theta)\) and \(r=1-\cos(\theta).\)

$PAR$HR$PAR
Use the following format to input your answers: $PAR

(1) Give your answer in polar coordinates \((r,\theta)\) with \(r>0\) and \(0 \le \theta < 2\pi.\) $PAR

(2) If the pole is an intersection point, type "pole" in lower case letters in both blanks for the $BBOLD first $EBOLD intersection point. $PAR

(3) List all other intersection points in order of increasing \(r.\)  If more than one point has the same value of \(r,\) list these points in order of increasing \(\theta.\) $PAR

(4) Type a capital "N" in all unused blanks.

$PAR$HR$PAR
First intersection point: \((r,\theta) =\) (\{ans_rule(7)\}, \{ans_rule(7)\})

$PAR
Second intersection point: \((r,\theta) =\) (\{ans_rule(7)\}, \{ans_rule(7)\})

$PAR
Third intersection point: \((r,\theta) =\) (\{ans_rule(7)\}, \{ans_rule(7)\})

$PAR
Fourth intersection point: \((r,\theta) =\) (\{ans_rule(7)\}, \{ans_rule(7)\})

$PAR
Fifth intersection point: \((r,\theta) =\) (\{ans_rule(7)\}, \{ans_rule(7)\})

END_TEXT

ANS(std_num_str_cmp("pole", ["pole","N"]));
ANS(std_num_str_cmp("pole", ["pole","N"]));

ANS(std_num_str_cmp("1/2", ["pole","N"]));
ANS(std_num_str_cmp("pi/3", ["pole","N"]));

ANS(std_num_str_cmp("1/2", ["pole","N"]));
ANS(std_num_str_cmp("5*pi/3", ["pole","N"]));

ANS(std_num_str_cmp("N", ["pole","N"]));
ANS(std_num_str_cmp("N", ["pole","N"]));

ANS(std_num_str_cmp("N", ["pole","N"]));
ANS(std_num_str_cmp("N", ["pole","N"]));

ENDDOCUMENT();
