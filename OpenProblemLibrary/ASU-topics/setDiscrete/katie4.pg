## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by YL

## DBsubject(Set theory and logic)
## DBchapter(Propositional logic)
## DBsection(Truth tables)
## Institution(ASU)
## MLT(3vars_noImplications)
## MLTleader(1)
## Level(2)
## Static(1)
## KEYWORDS('logic', 'predicate')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

@header=("\( p \)","\( q \)", "\( r \)", "\( q \vee r \)" , 
"\( p \wedge [q \vee r] \)" ,
"\( p \wedge q \)",  "\(  p \wedge r \)" ,
"\( [p \wedge q] \vee [p \wedge r] \)");

@Aa=qw(T T T T T T T T);
@Ab=qw(T T F T T T F T);
@Ac=qw(T F T T T F T T);
@Ad=qw(T F F F F F F F);
@Ae=qw(F T T T F F F F);
@Af=qw(F T F T F F F F);
@Ag=qw(F F T T F F F F);
@Ah=qw(F F F F F F F F);




BEGIN_TEXT
Use truth table to verify the distributive law by filling in the blanks with T or F as appropriate.
$PAR
END_TEXT

TEXT(begintable(1+scalar(@header)));
BEGIN_TEXT
\{ row(@header)\}
END_TEXT
TEXT(
	row("T","T","T",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("T","T","F",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("T","F","T",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("T","F","F",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("F","T","T",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("F","T","F",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("F","F","T",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
	row("F","F","F",ans_rule(10),ans_rule(12),ans_rule(10),ans_rule(10),ans_rule(15)),
endtable() 
);


ANS(str_cmp($Aa[3]) );
ANS(str_cmp($Aa[4]) );
ANS(str_cmp($Aa[5]) );
ANS(str_cmp($Aa[6]) );
ANS(str_cmp($Aa[7]) );

ANS(str_cmp($Ab[3]) );
ANS(str_cmp($Ab[4]) );
ANS(str_cmp($Ab[5]) );
ANS(str_cmp($Ab[6]) );
ANS(str_cmp($Ab[7]) );

ANS(str_cmp($Ac[3]) );
ANS(str_cmp($Ac[4]) );
ANS(str_cmp($Ac[5]) );
ANS(str_cmp($Ac[6]) );
ANS(str_cmp($Ac[7]) );

ANS(str_cmp($Ad[3]) );
ANS(str_cmp($Ad[4]) );
ANS(str_cmp($Ad[5]) );
ANS(str_cmp($Ad[6]) );
ANS(str_cmp($Ad[7]) );

ANS(str_cmp($Ae[3]) );
ANS(str_cmp($Ae[4]) );
ANS(str_cmp($Ae[5]) );
ANS(str_cmp($Ae[6]) );
ANS(str_cmp($Ae[7]) );

ANS(str_cmp($Af[3]) );
ANS(str_cmp($Af[4]) );
ANS(str_cmp($Af[5]) );
ANS(str_cmp($Af[6]) );
ANS(str_cmp($Af[7]) );

ANS(str_cmp($Ag[3]) );
ANS(str_cmp($Ag[4]) );
ANS(str_cmp($Ag[5]) );
ANS(str_cmp($Ag[6]) );
ANS(str_cmp($Ag[7]) );

ANS(str_cmp($Ah[3]) );
ANS(str_cmp($Ah[4]) );
ANS(str_cmp($Ah[5]) );
ANS(str_cmp($Ah[6]) );
ANS(str_cmp($Ah[7]) );


ENDDOCUMENT();        # This should be the last executable line in the problem.;
