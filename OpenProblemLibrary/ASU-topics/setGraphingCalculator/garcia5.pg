## DESCRIPTION
## Algebra
## ENDDESCRIPTION

## Tagged by XW

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Graphs)
## Institution(ASU)
## MLT(matchGraphs)
## Level(2)
## KEYWORDS('algebra', 'functions','graphing calculator')

#
# First comes some stuff that appears at the beginning of every problem
#

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGgraphmacros.pl",
"PGasu.pl",
"extraAnswerEvaluators.pl"
);

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$a = random(4,12);
$equation = "y = x^{1/3}-$a x^{-1/3}";

#we have to split the correct answer into two parts because of x^(-1/3) for x<0
$corrans1 = "-((-x)^(1/3)-$a*(-x)^(-1/3))";
$corrans2 = "x^(1/3)-$a*x^(-1/3)";

$myBool = random(1,4);
$ans = 0;

#incorrect solutions, trying to randomize common mistakes by students
$incorrans1 = "x^1/3-$a*x^-1/3";
$incorrans2 = "x*(1/3)-$a*x*(-1/3)";

#we have to split the incorrect answer into two parts because of x^(-1/3) for x<0
$incorrans3B = "x^(1/3)-$a*x^-1/3";
$incorrans3A = "-((-x)^(1/3)-$a*(-x)^-1/3)";
#"x^(1/3)-$a*x^(1/3)"; other poss.
#"x^1/3-$a*x^(-1/3)";  other poss.

#graphing stuff
($x1dom, $y1dom, $x2dom, $y2dom) = (10,10,10,10);
($xgrid, $ygrid) = ($x1dom+$x2dom,$y1dom+$y2dom);

$graph1 = init_graph(-$x1dom,-$y1dom,$x2dom,$y2dom,
   'axes'=>[0,0],
   'grid'=>[$xgrid,$ygrid],
   'size'=>[400,400]);
$graph2 = init_graph(-$x1dom,-$y1dom,$x2dom,$y2dom,
   'axes'=>[0,0],
   'grid'=>[$xgrid,$ygrid],
   'size'=>[400,400]);
$graph3 = init_graph(-$x1dom,-$y1dom,$x2dom,$y2dom,
   'axes'=>[0,0],
   'grid'=>[$xgrid,$ygrid],
   'size'=>[400,400]);
$graph4 = init_graph(-$x1dom,-$y1dom,$x2dom,$y2dom,
   'axes'=>[0,0],
   'grid'=>[$xgrid,$ygrid],
   'size'=>[400,400]);

#-----------------------------------------------------------------------------
# split graphs into two parts so the verticle asymptote does not appear
# .001 and -.001 ARE needed.                                                     
#-----------------------------------------------------------------------------
$corrgraph1 = FEQ("$corrans1 for x in <-$x1dom, -.001> using color:blue and weight:2");
$corrgraph2 = FEQ("$corrans2 for x in <.001, $x2dom> using color:blue and weight:2");

$incorrgraph1A = FEQ("$incorrans1 for x in <-$x1dom, -.001> using color:blue and weight:2");
$incorrgraph1B = FEQ("$incorrans1 for x in <.001, $x2dom> using color:blue and weight:2");

$incorrgraph2 = FEQ("$incorrans2 for x in <-$x1dom, $x2dom> using color:blue and weight:2");

$incorrgraph3A = FEQ("$incorrans3A for x in <-$x1dom, -.001> using color:blue and weight:2");
$incorrgraph3B = FEQ("$incorrans3B for x in <.001, $x2dom> using color:blue and weight:2");

$ans = $myBool;
if($myBool==1)
{
($figure1) = plot_functions( $graph1, $corrgraph1, $corrgraph2);
($figure2) = plot_functions( $graph2, $incorrgraph1A, $incorrgraph1B);
($figure3) = plot_functions( $graph3, $incorrgraph2);
($figure4) = plot_functions( $graph4, $incorrgraph3A, $incorrgraph3B);
}
elsif($myBool==2)
{
($figure1) = plot_functions( $graph1, $incorrgraph1A, $incorrgraph1B);
($figure2) = plot_functions( $graph2, $corrgraph2, $corrgraph1);
($figure3) = plot_functions( $graph3, $incorrgraph3A, $incorrgraph3B);
($figure4) = plot_functions( $graph4, $incorrgraph2);
}
elsif($myBool==3)
{
($figure1) = plot_functions( $graph1, $incorrgraph2);
($figure2) = plot_functions( $graph2, $incorrgraph3A, $incorrgraph3B);
($figure3) = plot_functions( $graph3, $corrgraph1, $corrgraph2);
($figure4) = plot_functions( $graph4, $incorrgraph1A, $incorrgraph1B);
}
else #myBool == 4
{
($figure1) = plot_functions( $graph1, $incorrgraph3A, $incorrgraph3B);
($figure2) = plot_functions( $graph2, $incorrgraph2);
($figure3) = plot_functions( $graph3, $incorrgraph1A, $incorrgraph1B);
($figure4) = plot_functions( $graph4, $corrgraph1, $corrgraph2);
}
#end graphing stuff

#
# Now the problem text itself, with ans_rule's to indicate where the
# answers go.  You can stop entering text, do more computations, and then
# start up again if you want.
#

BEGIN_TEXT
Graph \[ $equation \] on your calculator.  
$PAR
Figure 1\{ image(insertGraph($graph1)) \}
\{ image(insertGraph($graph2)) \}Figure 2
$PAR
Figure 3\{ image(insertGraph($graph3)) \}
\{ image(insertGraph($graph4)) \}Figure 4
$PAR
Which of the following graphs is the correct one?$PAR
Figure\{ans_rule(2)\}$PAR
$BBOLD Note: $EBOLD you can click on the graph to enlarge it.
END_TEXT

ANS(num_cmp("$ans"));


#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ENDDOCUMENT();        # This should be the last executable line in the problem.

