## DESCRIPTION
##   Linear Programming: Graphical
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Operations research)
## DBchapter(Linear programming)
## DBsection(Constrained optimization - planar)
## Institution(ASU)
## MLT(TrueFalseQuestions)
## MLTleader(1)
## Level(4)
## KEYWORDS('Linear', 'Inequality')

DOCUMENT();      
loadMacros("PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",

);
TEXT(beginproblem(), $BR,$BBOLD, "True False Problem", $EBOLD, $BR,$BR);
# Since this is a true questions, we do not usually wish to tell students which
# parts of the matching question have been answered correctly and which are
# incorrect.  That is too easy.  To accomplish this we set the following flag to
# zero.
$showPartialCorrectAnswers = 0;

# True false questions are a special case of a "select list"
# Make a new select list
$tf = new_select_list();
# $tf now "contains" the select list object.
# Insert some  questions and whether or not they are true.

$tf -> qa ( # each entry has to end with a comma
"If the feasible region in a linear programming problem is unbounded, the set of feasible points is finite in number.",
"F",
"If the set of feasible points is unbounded, then the linear programming problem has no solution.",
"F",
"A linear programming problem may result in infinitely many points maximizing the objective function.",
"T",
"There have to be a minimum of 3 corner points in the set of feasible points of a linear programming problem.",
"F",
);   # every statement has to end with a semi-colon.

# Choose two of the question and answer pairs at random.
$tf ->choose(2);

# Now print the text using $ml->print_q for the questions
# and $ml->print_a to print the answers.

BEGIN_TEXT
$PAR

Enter T or F depending on whether the statement is true or false.
(You must enter T or F -- True and False will not work.)$BR

\{ $tf-> print_q \}

$PAR

END_TEXT

# Enter the correct answers to be checked against the answers to the students.

ANS(str_cmp( $tf->ra_correct_ans )   ) ;

ENDDOCUMENT();        # This should be the last executable line i