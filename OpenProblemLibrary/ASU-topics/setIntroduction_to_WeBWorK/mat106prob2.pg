## DESCRIPTION
## Introduction to WeBWorK
## ENDDESCRIPTION

## KEYWORDS('functions', 'enter letters or words', 'true or false questions')
## Tagged by XW

## DBsubject('WeBWorK')
## DBchapter(WeBWorK tutorial)
## DBsection(WeBWorK tutorial)
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## MO(1)


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

## First we set up our variables.

Context("Numeric");
Context()->strings->add(T=>{},F=>{},"undefined"=>{});

$a = random(1,5,1);
$b = random(6,10,1);
$c = random(-10,-1,1);
$d = random(-10,-1,1);
$e = random(1,10,1);
$f = random(5,10,1);

# The first five question and answer pairs are randomly selected
# from this list

@quesAns = (
  ["$a   \lt    -$b", String("F")],
  ["$c   \leq    $c", String("T")],
  ["$d   \lt     $d", String("F")],
  ["\pi  \geq    \frac{22}{7}", String("F")],
  ["\sqrt {$e+3}  \geq    \sqrt $e + \sqrt 3", String("F")],
  ["\sqrt {$f-3}  \geq    \sqrt $f - \sqrt 3", String("T")],
  ["\sqrt {$f*$e}  \geq    \sqrt $e \sqrt $f", String("T")]
);

# randomly select five from the seven above 

@choices = (0..6);
for ($i=0; $i<5; $i++){
  $j=random($i,6,1);
  ($choices[$i],$choices[$j])=($choices[$j],$choices[$i]); 
}
@quesAns = @quesAns[@choices[0..4]];

## Begin the text of the question
## Insert the first five question/answer pairs into the text and generate the 
## others within the text. 

BEGIN_PGML
This part demonstrates WeBWorK problems where you enter letters
or words.  We start with a True/False question.

Enter a _T_ or an _F_ in
each answer space below to indicate whether the corresponding statement is true or false.

[___]{$quesAns[0][1]}  *1.* [`[$quesAns[0][0]]`]  

[___]{$quesAns[1][1]}  *2.* [`[$quesAns[1][0]]`] 

[___]{$quesAns[2][1]}  *3.* [`[$quesAns[2][0]]`] 

[___]{$quesAns[3][1]}  *4.* [`[$quesAns[3][0]]`] 

[___]{$quesAns[4][1]} *5.* [`[$quesAns[4][0]]`]
 
Notice that if one of your answers is wrong then, in this problem,
WeBWorK will tell you which parts are wrong and which parts are right.
This is the behavior for most problems, but for true/false or multiple
choice questions WeBWorK will usually only tell you whether or not all
the answers are correct.  It won't tell you which ones are wrong.  The
idea is to encourage you to think rather than to just try guessing.

Typically all of the answers must be correct before you get
credit for a problem like this.

-----

Now we have a question where the answer involves a word.  When a word is
a possible answer, we will usually emphasize your options by using
_italics_. Where would this happen? 

Well, we might have a situation where we have division by zero. Of course, we all know that this is _undefined_.

We might also try to take the square root (or even root) of a negative number. This is also _undefined_ if we expect to get a real number as an answer. 

-----

Evaluate the following expressions.  Exact real number answers are required for each problem. When one of them does not evaluate to a real number, type _undefined_ in its answer box. Also, if you try to enter the calculation into WeBWorK for an _undefined_ process, WeBWorK will NOT give you credit. 

Pay attention to how placing parentheses, shifting the location of a negative sign, or changing an operation can change the result of the calculations.

    *6.* [`(2/3-3)`] =  [__________]{Compute("-7/3")}

    *7.* [`2/(3-3) `] = [__________]{String("undefined")}

    *8.* [`(4-4)/(3*3) `] =  [__________]{Compute(0)}

    *9.* [`(4-4)/(3-3) `] = [__________]{String("undefined")}

    *10.* [` -\sqrt{25} `] = [__________]{Compute(-5)}

    *11.* [`\sqrt{-25} `] = [__________]{String("undefined")}
END_PGML



ENDDOCUMENT();        # This should be the last executable line in the problem.
