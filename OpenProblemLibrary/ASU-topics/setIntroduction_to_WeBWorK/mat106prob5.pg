
## DESCRIPTION
## Introduction to WeBWorK
## ENDDESCRIPTION

## KEYWORDS('functions', 'sample')
## Tagged by XW

## DBsubject('WeBWorK')
## DBchapter('WeBWorK Tutorial')
## DBsection('WeBWorK Tutorial')
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"extraAnswerEvaluators.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;


BEGIN_TEXT

In many problems we have more than one value to enter to create a correct answer. These are often called solution sets, but many times WeBworK describes them as "comma separated lists." 

$PAR
$HR
$PAR

$BBOLD A Review $EBOLD

$PAR

When writing a solution set, or set in general, we begin with "\(\lbrace \)" and end with "\(\rbrace\)." However, to reduce the amount of typing in WeBWorK, we usually leave out the curly braces. 

$PAR

Here is an example of the set of natural numbers between 3 and 10 written in proper set notation: 

$PAR

We might just list the correct values: {4, 5, 6, 7, 8, 9}.  This is called a $BITALIC roster $EITALIC. However, WeBWorK would expect you to enter only the "comma separated lists" in an answer box: 4, 5, 6, 7, 8, 9

$PAR

When entering a list, use a comma to separate each part of the answer. You may use spaces as you need to to improve the readability for you, but WeBWorK doesn't need them.

$PAR

We might also write {$BITALIC x $EITALIC| 3 < $BITALIC x $EITALIC < 10 where $BITALIC x $EITALIC is a natural number}. These are writen in  $BITALIC set builder notation. $EITALIC WeBWorK seldom if ever wants set builder notation. It is too difficult to program!

$PAR
$HR
$PAR

$BBOLD This problem set demonstrates WeBWorK questions where the "answer" is a list of numbers or an interval. $EBOLD

$PAR
$HR
$PAR

Enter the first three numbers of the form \( n^2 \), where \(n\) is a
positive integer, as a comma separated list.

$PAR

\{ ans_rule(30) \}

$PAR

You could have entered your answer as "1, 4, 9" (without the quotes), or
as "4, 1, 9", or as "2 $CARET 2, 1 $CARET 2, 3 $CARET 2".  The order of the
numbers does not matter, and you can still let WeBWorK evaluate expressions
for you.

$PAR

END_TEXT	

ANS(number_list_cmp("1^2, 2^2, 3^2" ) );

BEGIN_TEXT

$PAR
$HR
$PAR

$BBOLD More Review $EBOLD

$PAR

Recall that a special form of set notation is $BBOLD Interval Notation $EBOLD. This form of answer works for solution sets taken from the real number line. It is a very specific form. We must always list our interval from $BITALIC smallest to largest $EITALIC. This not negotiable! Instead of { } we use an appropriate combination of brackets [ ] and parentheses ( ) to show how the set is described.

$PAR

$BBOLD Here is an example: $EBOLD

$PAR

Describe the set of all real number between 3 and 10 using set builder and interval notations:

$PAR
$BBOLD Set Builder:  $EBOLD {$BITALIC x $EITALIC| 3 < $BITALIC x $EITALIC < 10}. Take a look at the answer here and compare it to the one above about the natural numbers. 

$PAR

$BBOLD Interval Notation:  $EBOLD (3, 10). WOW! That is so simple. However, we must be able to use every number from 3 to 10. So this could not be the solution set for 
 "the set of natural numbers between 3 and 10."

$PAR

$BBOLD With intervals, there is a difference between square brackets [ and  ] (which mean to include the end point) and parentheses ( and ) (which mean to not include the end point), and you will need to get them right to have the interval correct. $EBOLD 
$PAR

WeBWorK can handle standard interval notation.  In the problems below, we will describe a set in a couple of ways, and then show you how to enter it.  Now we will enter a few intervals from the real line.  


$PAR

Let's start with real numbers satisfying $SPACE  \(2\le x <5\). 

$PAR

The usual interval notation for this is  $SPACE  \( [2, 5) \). Enter it just as shown:  \{ ans_rule(30) \}. 

$PAR

Remember this! Practically no assignment in WeBWorK asks for an inequality as an answer (IE,  \(2\le x <5\). This is because of the difficulty you would have in showing the "or equal to" part and the many ways you could correctly introduce spaces into the answer. 

$PAR

Note also, you can follow the usual WeBWorK conventions when entering the
numbers in the interval, so you could also enter $SPACE [ sqrt(4), 2**2 + 1)!
Try it.  Previewing your answer can help here too if you are having
WeBWorK evaluate your answer. 

END_TEXT

ANS(interval_cmp("[2, 5)"));

BEGIN_TEXT

$PAR
$HR
$PAR

If we want to enter an interval where one side is unbounded, such as
the real numbers greater than 3, we would normally write \( (3, \infty) \).  Since computer keyboards do not come with an infinity symbol, we just write out the word $BITALIC infinity $EITALIC. Remember that you can drag and drop this word into an answer box when you need it.

$PAR

So, enter \( (3, \infty) \) here:  \{ ans_rule(30) \}

$PAR

END_TEXT

ANS(interval_cmp("(3, infinity)"));

BEGIN_TEXT

If we had wanted all real numbers less than or equal to 4, (\(-\infty\), 4], we would type ($BITALIC -infinity $EITALIC, 4] instead.

$PAR

So, enter (\(-\infty\), 4],  here:  \{ ans_rule(30) \}

$PAR

END_TEXT

ANS(interval_cmp("(-infinity,4]"));

BEGIN_TEXT

$PAR
$HR
$PAR

Finally, sometimes intervals come in more than one piece.  We call this kind of set "disjoint."  They would be normally written as the $BBOLD union $EBOLD of two intervals. Symbolically the $BBOLD union $EBOLD  is represented by the symbol "\( \cup \)."

$PAR

For example, the inequality \( x^2 \ge 25 \) is true when  \( x \ge 5 \) and also when \( x \le -5\).  We somteimes say that the inequality is "satisfied" when values are chosen that are smaller than -5 or larger than 5 or equal to either -5 or 5. 

$PAR

WOW! What a mouthful! In symbology the answer is much simpler. The correct interval notation is shown below.

$PAR

\[ (-\infty, -5] \cup [5, \infty) \]

$PAR

To type this into WeBWorK, we just use a capital U for the union symbol:

$PAR

$BCENTER (-infinity, -5] U [5, infinity) $ECENTER 



$PAR

So, enter \( (-\infty, -5] \cup [5, \infty) \)  here: \{ ans_rule(30) \}

$PAR

When using unions of intervals, the order of the intervals does not matter, so you could also enter [5, infinity) U (-infinity, -5]. However, remember within an individual interval we must always list form smallest to largest. Nothing is smaller than \( -\infty \) or larger than   \( \infty \) . Try dragging and dropping this answer into the box above. The 

$PAR

END_TEXT
	
ANS(interval_cmp("(-infinity, -5] U [5, infinity)"));

## First we set up our variables.
$a = random(-10,0,1);
$b = random(0,10,1);
$c = $a + 1;
$d = $b + 5; 


BEGIN_TEXT
$PAR
$HR
$PAR
Be aware that if you enter intervals which overlap, such as [$a, $b) \( \cup \)  ($c, $d), WeBWorK will expect you to simplify it into a single interval, in this case [$a, $d).

$PAR

Enter the correct interval for [$a, $b) \( \cup \)  ($c, $d)\{ ans_rule(30) \}

$PAR

END_TEXT

ANS(interval_cmp("[$a,$d)"));

ENDDOCUMENT();        # This should be the last executable line in the problem.
