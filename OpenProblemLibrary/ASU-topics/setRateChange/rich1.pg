## DESCRIPTION
## Derivatives
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Calculus - single variable)
## DBchapter(Limits and continuity)
## DBsection(Applications - instantaneous rate of change)
## Institution(ASU)
## Level(2)
## KEYWORDS('Derivatives' 'Rates of Change')

#
# First comes some stuff that appears at the beginning of every problem
#

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGgraphmacros.pl",
"PGasu.pl"
);

TEXT(beginproblem());


$xmin = -5; $xmax = 5;
$x1 = random(-4,-2); $x2 = random($x1+3, 4);
$y1 = random(1,7);
do{ $y2 = random(1,7); } until ($y1 != $y2);

$herm = new Hermite([-6,$x1,  $x2, 6],
                   [-3, $y1, $y2, -3],
                   [0, 2, -2, 0]);
$gr = init_graph($xmin,-1,$xmax,9, axes=>[0,0], 'grid'=>[10,10]);
new Fun($herm->rf_f,$gr);


$m = ($y2-$y1)/($x2-$x1);
$nx1 = 4*($x2-$x1)+1;
$dx1 = ($x2-$x1)/$nx1;
$d = $dx1 * 0.7;


$xci = $x1;
$xca = $xci + $d;

$g = FEQ("$m*(x-$x1)+$y1 for x in [$xci,$xca> using color:red and weight:2");
plot_functions($gr,$g); 
$xci = $x1 + $dx1; $xca = $xci + $d;

while ($xca < $x2-$d) {
 $g = FEQ("$m*(x-$x1)+$y1 for x in <$xci,$xca> using color:red and weight:2");
 plot_functions($gr,$g);
 $xci = round(($xca + $dx1)*100)/100; $xca = round(($xci + $d)*100)/100;
} 


$g = FEQ("$m*(x-$x1)+$y1 for x in <$xci,$x2] using color:red and weight:2");
plot_functions($gr,$g);


BEGIN_TEXT
$BR
The graph of a function is given. Determine the average rate of change of the function between the indicated values of the variable (in red).
$BR
\{ image(insertGraph($gr)) \}
$BR
$BBOLD Note: $EBOLD you can get an enlarged view of the graph by clicking on it.
	$PAR
	Average rate of change = \{ans_rule(10)\}
END_TEXT

#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($m, tolType=>'absolute', tol=>0.1));


ENDDOCUMENT();        # This should be the last executable line in the problem.

