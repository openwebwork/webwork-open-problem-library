## DESCRIPTION
## Algebra
## ENDDESCRIPTION

## Tagged by LD

## DBsubject(Algebra)
## DBchapter(Polynomial equations and functions)
## DBsection(Graphs of polynomials)
## Institution(ASU)
## MLT(MatchGraphs)
## Level(2)
## KEYWORDS('Algebra', 'Functions','Polynomial')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
                   "PGauxiliaryFunctions.pl"
                   );


$showPartialCorrectAnswers = 0;

TEXT(beginproblem());


$pictID[1] = [
"s31371.gif",  
"s31381.gif",  
"s31391.gif",  
"s31401.gif",  
"s31411.gif",  
"s31421.gif",  
];
$ml = new_match_list();

$pictSet=random(1,1,1);  # Choose one of the three picture sets
#$pictSetname = $pictSet.".gif";
$ml->qa (
"\(  x(x^2-4)\)" ,
image($pictID[$pictSet][0],tex_size=>200),
"\(  -x^2(x^2-4) \) ",
image($pictID[$pictSet][1],tex_size=>200),
"\( -x^5+5x^3-4x \)",
image($pictID[$pictSet][2],tex_size=>200),
"\( x^6/2-2x^4 \)",
image($pictID[$pictSet][3],tex_size=>200),
"\( x^4+2x^3 \)" ,
image($pictID[$pictSet][4],tex_size=>200),
"\( -x^3 + 2x^2 \)",
image($pictID[$pictSet][5],tex_size=>200),
);
$numGraphs = 4;
$ml->choose($numGraphs);
sub format_graphs {
        my $self = shift;
        my @in = @_;
        my $out = "";
        while(@in) {
                $out .=  shift(@in). "#" ;
        }
        $out;      # The output has to be a string in order to conform to the
                   # specs for the match list object, but I've put some
                   # markers in (#) so that
                   # I can break the string up into a list for use
                   # as an input into row.
}

# We need to change the output, since the normal
# output routine will put the pictures one above another. 
$ml->rf_print_a(~~&format_graphs);
               
BEGIN_TEXT
Match the functons with their graphs.
Enter the letter of the graph below which corresponds to the function.
($BBOLD Click on image for a larger view $EBOLD)
\{ $ml -> print_q \}
END_TEXT

# Place the output into a table
TEXT(
begintable($numGraphs),
 row( split("#",$ml->print_a() ) ),
 row(@ALPHABET[ 0..($numGraphs-1) ] ),
endtable(),
);

ANS(str_cmp( $ml ->ra_correct_ans()   ) ) ;

ENDDOCUMENT();        # This should be the last executable line in the problem.
