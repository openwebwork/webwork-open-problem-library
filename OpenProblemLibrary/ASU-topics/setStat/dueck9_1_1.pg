## DESCRIPTION
##  Statistics 
## ENDDESCRIPTION

## Tagged by dgt5v

## DBsubject(Statistics)
## DBchapter(Hypothesis tests)
## DBsection(Concepts)
## Institution(ASU)
## MLT(statethetest)
## Level(2)
## KEYWORDS('Statistics','Hypothesis Testing')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGnumericalmacros.pl",
"PGstatisticsmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

@quest1 = ('The mean salary of statistics professors is less than 70,000 dollars.', 
           'The mean salary of statistics professors is greater than  70,000 dollars.',
           'The mean salary of statistics professors is different form  70,000 dollars.');
@ans1 = ('\(H_0: \mu = 70,000, \) \(  H_1: \mu  < 70,000 \)', 
         '\(H_0: \mu = 70,000, \) \(  H_1: \mu  > 70,000 \)', 
         '\(H_0: \mu = 70,000, \) \(  H_1: \mu  \not= 70,000 \)');
@ans1b = ('Left-tailed', 'Right-tailed', 'Two-tailed');
$tag1 = random(0,2,1);

$mc[1] = new_multiple_choice();
$mc[1] -> qa($quest1[$tag1], $ans1[$tag1]);
$mc[1] -> extra( $ans1[($tag1+1)% 3 ], 
        '\(H_0: \mu  < 70,000, \) \(  H_1: \mu  \ge 70,000 \)', 
        '\(H_0: \mu  > 70,000, \) \(  H_1: \mu  \le 70,000 \)');

$mcb[1] = new_multiple_choice();
$mcb[1] -> qa('Classify the hypothesis test as $BITALIC two-tailed$EITALIC, $BITALIC left-tailed$EITALIC or $BITALIC right-tailed$EITALIC.', $ans1b[$tag1]);
$mcb[1] -> extra($ans1b[($tag1+1)% 3 ], $ans1b[($tag1+2)% 3 ]);

@quest2 = ('The mean monthly bill for cell phone users has changed from the 1996  mean of 47 dollars.', 
           'The mean monthly bill for cell phone users has decreased from the 1996  mean of 47 dollars.',
           'The mean monthly bill for cell phone users has increased from the 1996  mean of 47 dollars.');

@ans2 = ('\(H_0: \mu = 47 \) \(  H_1: \mu \not=  47 \)', 
         '\(H_0: \mu = 47, \) \(  H_1: \mu  < 47 \)', 
         '\(H_0: \mu = 47, \) \(  H_1: \mu >  47 \)');

@ans2b = ('Two-tailed' ,'Left-tailed', 'Right-tailed');

$tag2 = random(0,2);

$mc[2] = new_multiple_choice();
$mc[2] -> qa($quest2[$tag2], $ans2[$tag2]);
$mc[2] -> extra( $ans2[($tag2+1)% 3], 
        '\(H_0: \mu  > 47, \) \(  H_1: \mu  < 47 \)', 
        '\(H_0: \mu  \le 47, \) \(  H_1: \mu  > 47 \)');

$mcb[2] = new_multiple_choice();
$mcb[2] -> qa('Classify the hypothesis test as $BITALIC two-tailed$EITALIC, $BITALIC left-tailed$EITALIC or $BITALIC right-tailed$EITALIC.', $ans2b[$tag2]);
$mcb[2] -> extra($ans2b[($tag2+1) %3], $ans2b[($tag2+2) %3]);



@quest3 = ('IQ scores of statistics students have a standard deviation different from 15.',
           'IQ scores of statistics students have a standard deviation less than 15.', 
           'IQ scores of statistics students have a standard deviation more than 15.');
@ans3 = ('\(H_0: \sigma = 15, \) \(  H_1: \sigma  \not= 15 \)',  
         '\(H_0: \sigma = 15, \) \(  H_1: \sigma  < 15 \)',
         '\(H_0: \sigma = 15, \) \(  H_1: \sigma  > 15 \)');

@ans3b = ('Two-tailed', 'Left-tailed', 'Right-tailed');

$tag3 = random(0,2);

$mc[0] = new_multiple_choice();
$mc[0] -> qa($quest3[$tag3], $ans3[$tag3]);
$mc[0] -> extra( $ans3[($tag3+1) %3], 
        '\(H_0: \sigma \le 15, \) \(  H_1: \sigma  > 15 \)',
        '\(H_0: \sigma < 15, \) \(  H_1: \sigma  \ge 15 \)');

$mcb[0] = new_multiple_choice();
$mcb[0] -> qa('Classify the hypothesis test as $BITALIC two-tailed$EITALIC, $BITALIC left-tailed$EITALIC or $BITALIC right-tailed$EITALIC.', $ans3b[$tag3]);
$mcb[0] -> extra($ans3b[($tag3+1) %3], $ans3b[($tag3+2) %3]);

@slice = NchooseK(3,3);
@smc = @mc[@slice];
@smcb = @mcb[@slice];

BEGIN_TEXT

For each statement, express the null hypothesis  \(H_0\) and alternative 
hypothesis \( H_1\) in
symbolic form. $PAR

1. $SPACE 
\{ $smc[1]->print_q() \}$PAR
\{ $smc[1]->print_a() \} $PAR
\{ $smcb[1]->print_q() \}$PAR
\{ $smcb[1]->print_a() \}$PAR

2. $SPACE 
\{ $smc[2]->print_q() \} $PAR
\{ $smc[2]->print_a() \}$PAR
\{ $smcb[2]->print_q() \}$PAR
\{ $smcb[2]->print_a() \}$PAR

3. $SPACE 
\{ $smc[0]->print_q() \} $PAR
\{ $smc[0]->print_a() \}$PAR
\{ $smcb[0]->print_q() \}$PAR
\{ $smcb[0]->print_a() \}$PAR

END_TEXT

ANS(radio_cmp($smc[1]->correct_ans));
ANS(radio_cmp($smcb[1]->correct_ans));
ANS(radio_cmp($smc[2]->correct_ans));
ANS(radio_cmp($smcb[2]->correct_ans));
ANS(radio_cmp($smc[0]->correct_ans));
ANS(radio_cmp($smcb[0]->correct_ans));


ENDDOCUMENT();       # This should be the last executable line in the problem.