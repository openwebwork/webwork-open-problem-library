## DESCRIPTION
## Systems of Linear Equations
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Institution(ASU)
## MLT(3nodiruniq)
## Level(2)
## KEYWORDS('Algebra' 'Linear Equations')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGasu.pl",
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl",
"extraAnswerEvaluators.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

do {
$a11=non_zero_random(-2,2);
$a12=non_zero_random(-2,2);
$a13=0;
$a21=0;
$a22=non_zero_random(-3,3);
$a23=non_zero_random(-2,2);
$a31=non_zero_random(-2,2);
$a32=0;
$d=$a21*$a32-$a22*$a31;
$a33=non_zero_random(-4,4);
} until
($a11*($a22*$a33-$a23*$a32)-$a12*($a21*$a33-$a23*$a31)+$a13*$d != 0);

$x=random(-3,3);
$y=non_zero_random(-3,3);
$z=non_zero_random(-3,3);

$b1 = $a11*$x + $a12*$y + $a13*$z;
$b2 = $a21*$x + $a22*$y + $a23*$z;
$b3 = $a31*$x + $a32*$y + $a33*$z;

$NO_SPACE = '@{}';

$ls1 = nicestring([$a11,$a12,$a13],['x','y','z']);
$ls2 = nicestring([$a21,$a22,$a23],['x','y','z']);
$ls3 = nicestring([$a31,$a32,$a33],['x','y','z']);

$mc = new_multiple_choice();
$mc->qa("How many solutions are there to this system?",
"Exactly 1");
$mc->makeLast("None",
"Exactly 1",
"Exactly 2",
"Exactly 3",
"Infinitely many",
"None of the above");

BEGIN_TEXT
$PAR
Solve the system $BR
\[ \left\{ "\{"; \}
\begin{array}{r${NO_SPACE}l${NO_SPACE}}
               $ls1&= $b1 \cr
	        $ls2 &= $b2 \cr
               $ls3 &= $b3 
\end{array}\right. \]



END_TEXT



BEGIN_TEXT
$BR
Give the coordinates of the solution below.
$BR$BR
\(x = \) \{ans_rule(10) \}
$BR$BR
\(y = \) \{ans_rule(10) \}
$BR$BR
\(z = \) \{ans_rule(10) \}

END_TEXT

# we use fun_cmp so it doesn't give a syntax error if they try functions
# it still works since we are comparing to a "constant" function, which
# is the same as comparing to a number

ANS(fun_cmp("$x",vars=>["z"]));
ANS(fun_cmp("$y",vars=>["z"]));
ANS(fun_cmp("$z",vars=>["z"]));

# If there were no solutions, we would use
# ANS(auto_right("this answer can be left blank")); 
# ANS(auto_right("this answer can be left blank"));

ENDDOCUMENT();        # This should be the last executable line in the problem.

