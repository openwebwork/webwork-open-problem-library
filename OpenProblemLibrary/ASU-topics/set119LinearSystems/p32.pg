## DESCRIPTION
## Systems of Linear Equations
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Institution(ASU)
## MLT(3aug)
## Level(3)
## KEYWORDS('Algebra' 'Linear Equations' 'Matrix' 'Matrices')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl",
"PGmatrixmacros.pl",
"extraAnswerEvaluators.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$ENV{'partial_weights'} = [1,1,1,1,1,1,1,1,1,9,0,0,0];
install_problem_grader(~~&weighted_partial_grader);

###
#  reduced row echelon form         [ 1  0  a| b]
#                                   [ 0  1  c| d]
#                                   [0   0  0| e]

# row1 = e*row1 + f*row2,  row2 = g * row1 + h * row2, row3 = e row1 + m row2 + row3

$a = non_zero_random(-4,4,1);
$b = non_zero_random(-5,5,1);
$c = non_zero_random(-4,4,1);
$d = non_zero_random(-4,4,1);

$e = non_zero_random(-5,5,1);
$f = non_zero_random(-3,3,1);
$g = non_zero_random(-3,3,1);

do {$h = non_zero_random(-3,3,1);} until ($e*$h != $f*$g);
$l = non_zero_random(-3,3,1);
$m = non_zero_random(-3,3,1);


$a11 = $e;
$a12 = $f;
$a13 = $a*$e + $c*$f;
$a14 = $b*$e+$f*$d;
$a21 = $g;
$a22 = $h;
$a23 = $a*$g + $c*$h;
$a24 = $b*$g+$h*$d;
$a31 = $l;
$a32 = $m;
$a33 = $a*$l+$c*$m;
$a34 = $b*$l+$d*$m+$e;


$ls1 = nicestring([$a11,$a12,$a13],['x','y','z']);
$ls2 = nicestring([$a21,$a22,$a23],['x','y','z']);
$ls3 = nicestring([$a31,$a32,$a33],['x','y','z']);

$mc = new_multiple_choice();
$mc->qa("How many solutions are there to this system?",
"None");
$mc->makeLast("None",
"Exactly 1",
"Exactly 2",
"Exactly 3",
"Infinitely many",
"None of the above");

BEGIN_TEXT
Solve the system by finding the reduced row-echelon form of the augmented
matrix. 

\[\left\{ "\{"; \}
\begin{array}{ll}
        $ls1 &= $a14 \\
        $ls2 &= $a24  \\
        $ls3 &= $a34
\end{array}\right.
\]
$BR
Fill in the blanks for the first 3 columns of the reduced row-echelon form
of the augmented matrix:
$BCENTER
\{display_matrix([[ans_rule(5),ans_rule(5),ans_rule(5),"***"],
[ans_rule(5),ans_rule(5),ans_rule(5),"***"],
[ans_rule(5),ans_rule(5),ans_rule(5),"***"]],
'align'=>"ccc|c")
\}
$ECENTER

\{ $mc->print_q() \}
        $PAR
\{ $mc->print_a() \}

$BR
END_TEXT

ANS(num_cmp(1)); ANS(num_cmp(0)); ANS(num_cmp($a));
ANS(num_cmp(0)); ANS(num_cmp(1)); ANS(num_cmp($c));
ANS(num_cmp(0)); ANS(num_cmp(0)); ANS(num_cmp(0));

ANS(radio_cmp($mc->correct_ans));

$ans1 = $inputs_ref->{AnSwEr0001};
if(defined($ans1)) {
  if($ans1 eq "D") {
TEXT("${BBOLD}Hint:$EBOLD 
each solution to this system is an ordered triplet with three coordinates.  Together,
the three coordinates make one solution.  Having exactly three solutions is
not possible.");
 } elsif($ans1 eq "C") {
TEXT("${BBOLD}Hint:$EBOLD 
it is not possible for a linear system of equations to ever have exactly 2 solutions.");
 }}
BEGIN_TEXT

$HR

$BR
If there is one solution, give its coordinates in the answer spaces below.  
$PAR
If there
are infinitely many solutions, enter ${BITALIC}z$EITALIC in the answer blank for \(z\),
enter a formula for \(y\) in terms of \(z\) in the answer blank for \(y\) and
enter a formula for \(x\) in terms of \(z\) in the answer blank for \(x\).  
$PAR
If there are no solutions, leave the answer blanks for \(x\), \(y\) and \(z\) empty.
$BR$BR
\(x = \) \{ans_rule(40) \}
$BR$BR
\(y = \) \{ans_rule(40) \}
$BR$BR
\(z = \) \{ans_rule(40) \}

END_TEXT

# since there is no  solutions, we use
ANS(pc_evaluator([[auto_right("This answer can be left blank"),1,"Finish the earlier parts of the problem before doing this one"]])); 

ANS(pc_evaluator([[auto_right("This answer can be left blank"),1,"Finish the earlier parts of the problem before doing this one"]])); 

ANS(pc_evaluator([[auto_right("This answer can be left blank"),1,"Finish the earlier parts of the problem before doing this one"]])); 


ENDDOCUMENT();        # This should be the last executable line in the problem.

