## DESCRIPTION
##   Simplex Method
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Operations research)
## DBchapter(Linear programming)
## DBsection(Simplex method)
## Institution(ASU)
## MLT(appmax)
## MLTleader(1)
## Level(5)
## KEYWORDS('Simplex Method')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGmatrixmacros.pl",
"PGasu.pl"
);

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$a = random(200,500,100);
$b = random(100,500,100);



$pla = $a+2*$b;
$rub = 2*($a+$b);
$sil = 2*$pla+random(200,500,100);

$low = random(4,8,2);
$lp = $low-1;
$lpp = $low/2;

BEGIN_TEXT
A company produces three types of pencil holders: basic, deluxe, and supreme.
All types require plastic, rubber, and silver as shown
\[ \{ display_matrix_mm([['\textbf{Type}', '\textbf{Plastic}', '\textbf{Rubber}', '\textbf{Silver}'], 'hline', ['Basic', 1,2,2],['Deluxe', 2,2,4], ['Supreme',1,2,4]] , align=>'l|ccc', left=>'.', right=>'.') \} \]
$BR$BR
The company has $pla units of plastic, $rub units of rubber, and $sil units of silver.  It makes a profit of $DOLLAR$lp, $DOLLAR$low, and $DOLLAR$lpp respectively on basic, deluxe, and supreme pencil holders.  Assuming that all pencil holders which are manufactured can be sold, determine the number of each type of pencil holder the company
should produce to maximize its profit.
$BR$BR
Number of Basic pencil holders = \{ans_rule(40)\}
$BR$BR
Number of Deluxe pencil holders = \{ans_rule(40)\}
$BR$BR
Number of Supreme pencil holders = \{ans_rule(40)\}
END_TEXT

#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($a));
ANS(num_cmp($b));
ANS(num_cmp(0));

ENDDOCUMENT();        # This should be the last executable line in the problem.

