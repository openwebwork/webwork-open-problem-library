## DESCRIPTION
##   Simplex Method
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Operations research)
## DBchapter(Linear programming)
## DBsection(Simplex method)
## Institution(ASU)
## MLT(state)
## Level(2)
## KEYWORDS('Simplex Method')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl"
);

TEXT(beginproblem());

$showPartialCorrectAnswers=0;
install_problem_grader(~~&std_problem_grader);

for $j (0..30) { $a[$j] = random(2, 10);}

@mc = ();

$sys1 = "Maximize \[P = $a[0] x_1 + $a[1] x_2\] subject
to the constraints $BR$BR \[\begin{array}{rrrcr}
-$a[2] x_1 & + & $a[3] x_2 & \ge & -$a[4] \cr
$a[5] x_1 &- &x_2 &\le &$a[6] \cr
x_1\ge 0 &&x_2 & \ge & 0
\end{array} \] ";

$mc1 = new_multiple_choice();
$mc1->qa("$sys1", 
"This can be put in standard form by replacing
\( -$a[2] x_1  +  $a[3] x_2 \ge  -$a[4]\) with
\( $a[2] x_1  -  $a[3] x_2 \le  $a[4]\)"
);
$mc1->extra("This can be put in standard form by replacing
\( $a[5] x_1 - x_2 \le $a[6] \) with \( $a[5] x_1 + x_2 \le $a[6] \) ",
"This can be put in standard form by replacing
\( -$a[2] x_1  +  $a[3] x_2 \ge  -$a[4]\) with
\( $a[2] x_1  +  $a[3] x_2 \le  $a[4]\)"
);
$mc1->makeLast("This system is already in standard form",
"This system cannot be put in standard form");
push @mc, $mc1;

$sys1 = "Maximize \[P = $a[7] x_1 +  x_2 + $a[8] x_3\] subject
to the constraints $BR$BR \[\begin{array}{rrrrrcr}
 x_1 & + & $a[9] x_2& + & $a[10] x_3 & \ge & -$a[11] \cr
 x_1 & - & $a[12] x_2&  & & \le & -$a[13] \cr
\end{array} \] 
$BR
\[ x_1\ge 0 \qquad x_2 \ge 0 \qquad x_{3} \ge  0\]
";

$mc1 = new_multiple_choice();
$mc1->qa("$sys1", "This system cannot be put in standard form"); 
$mc1->extra("This can be put in standard form by replacing
\(x_1  + $a[9] x_2 + $a[10] x_3  \ge  -$a[11]\) with
\(-x_1 - $a[9] x_2 - $a[10] x_3  \le  $a[11]\)",
"This can be put in standard form by replacing
\( x_1 - $a[12] x_2 \le -$a[13]\) with \( x_1 + $a[12] x_2 \le $a[13]\)",
"This can be put in standard form by both replacing
\(x_1  + $a[9] x_2 + $a[10] x_3  \ge  -$a[11]\) with
\(-x_1 - $a[9] x_2 - $a[10] x_3  \le  $a[11]\) and replacing
\( x_1 - $a[12] x_2 \le -$a[13]\) with \( x_1 + $a[12] x_2 \le $a[13]\)"
);
$mc1->makeLast("This system is already in standard form",
"This system cannot be put in standard form");

push @mc, $mc1;

$c = random(2,3);
$sys1 = "Maximize \[P = $a[15] x_1 + $a[16] x_2 + $a[17] x_3\] subject
to the constraints $BR$BR \[\begin{array}{rrrrrcr}
 x_1 & - & x_2& + & $a[18] x_3 & \le & $a[14] \cr
 x_1 & - & x_2&  &  & \ge & $a[20] \cr
&& &&x_{$c} & \le & $a[19] 
\end{array} \] $BR
\[ x_1\ge 0 \qquad x_2 \ge 0 \qquad x_{3} \ge  0\]
";

$mc1 = new_multiple_choice();
$mc1->qa("$sys1", "This system cannot be put in standard form"); 
$mc1->extra("This can be put in standard form by replacing
\( x_1  -  x_2 +  $a[18] x_3  \le  $a[14]\) with
\( x_1  + x_2 +  $a[18] x_3  \le  $a[14]\)",
"This can be put in standard form by replacing
\( x_1  -  x_2     \ge  $a[20]\) with \( x_1 - x_2 \le $a[20]\)",
"This can be put in standard form by dropping \(x_{$c} \le $a[19]\)"
);
$mc1->makeLast("This system is already in standard form",
"This system cannot be put in standard form");

push @mc, $mc1;

$sys1 = "Maximize \[P =  x_1 + $a[21] x_2 + x_3\] subject
to the constraints $BR$BR \[\begin{array}{rrrrrcr}
 $a[22] x_1 & - & $a[23] x_2&  & & \ge & - $a[24]  \cr
 -$a[25] x_1 & + &  x_2& - & x_3 & \le &  $a[26] 
\end{array} \] $BR
\[ x_1\ge 0 \qquad x_2 \ge 0 \qquad x_{3} \ge  0\]
";

$mc1 = new_multiple_choice();
$mc1->qa("$sys1", "This can be put in standard form by replacing
\( $a[22] x_1  -  $a[23] x_2 \ge - $a[24]\) with 
\(-$a[22] x_1  + $a[23] x_2 \le $a[24]\)"
); 
$mc1->extra("This can be put in standard form by replacing
\( $a[22] x_1  -  $a[23] x_2 \ge - $a[24]\) with 
\($a[22] x_1  -  $a[23] x_2 \le  $a[24]\)",
"This can be put in standard form by replacing
\(-$a[25] x_1  +   x_2 -  x_3  \le   $a[26]\) with 
\($a[25] x_1  -  x_2 +  x_3  \ge -$a[26]\)"
);
$mc1->makeLast("This system is already in standard form",
"This system cannot be put in standard form");

push @mc, $mc1;

@mc = @mc[NchooseK(4,4)];

BEGIN_TEXT
For each system, determine if it is in standard form, or if it can
be modified to be in standard form.  The result would not just have
to be in standard form; it also has to be equivalent to the original system.
	$BR$HR$BR
\{ $mc[0]->print_q() \}
$BR
\{ $mc[0]->print_a() \}
$BR $HR $BR
\{ $mc[1]->print_q() \}
$BR
\{ $mc[1]->print_a() \}
$BR $HR $BR
\{ $mc[2]->print_q() \}
$BR
\{ $mc[2]->print_a() \}
$BR $HR $BR
\{ $mc[3]->print_q() \}
$BR
\{ $mc[3]->print_a() \}

END_TEXT

ANS(radio_cmp($mc[0]->correct_ans));
ANS(radio_cmp($mc[1]->correct_ans));
ANS(radio_cmp($mc[2]->correct_ans));
ANS(radio_cmp($mc[3]->correct_ans));


ENDDOCUMENT();        # This should be the last executable line in the problem. 
