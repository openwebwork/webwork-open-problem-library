## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by YL

## DBsubject(Algebra)
## DBchapter(Cartesian coordinate system)
## DBsection(Midpoint and distance formulas)
## Institution(ASU)
## Level(2)
## KEYWORDS('Geometry', 'Cartesian Coordinates')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl",
"extraAnswerEvaluators.pl"
);

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

#These will be the coordinates of the points
$a = random(-10,10);
$b = random(-10,10);
$c = random (-10,10);

#This will be the distance between the points
do {$d = random (2,30);} until ($d**2>($b-$c)**2);

$ans1 = $a+sqrt($d**2-($b-$c)**2);
$ans2 = $a-sqrt($d**2-($b-$c)**2);

#
# Now the problem text itself, with ans_rule's to indicate where the
# answers go.  You can stop entering text, do more computations, and then
# start up again if you want.
#

BEGIN_TEXT
Find all \(x\) such that the distance between the points \(($a, $b)\)
and \((x, $c)\) is $d.  
	$BR$BR
	\(x\)= \{ans_rule(40)\}
$BR$BR
$BBOLD Note:$EBOLD
If there is more that one \(x\), give a comma separated list (i.e.:  1,2).
END_TEXT

#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(number_list_cmp("$ans1,$ans2"));

ENDDOCUMENT();        # This should be the last executable line in the problem.

