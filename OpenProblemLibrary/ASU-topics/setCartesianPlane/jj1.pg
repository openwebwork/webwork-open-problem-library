## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by YL

## DBsubject(Algebra)
## DBchapter(Cartesian coordinate system)
## DBsection(Midpoint and distance formulas)
## Institution(ASU)
## Level(3)
## KEYWORDS('Geometry', 'Cartesian Coordinates')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl",
"extraAnswerEvaluators.pl"
);

TEXT(beginproblem());

#
# First pick random spot for right angle

$x[0] = random(-10,10);
$y[0] = random(-10,10);

# Go off in a random (not horiz or vertical) direction for next vertex

$d1 = non_zero_random(-8,8);
$d2 = non_zero_random(-8,8);
$gg = gcd($d1,$d2);

# Go off in orthogonal direction for third vertex
$sl1 = -$d2/$gg;
$sl2 = $d1/$gg;
$m = non_zero_random(1,5);

$x[1] = $x[0] + $d1;
$y[1] = $y[0] + $d2;
$x[2] = $x[0] + $m*$sl1;
$y[2] = $y[0] + $m*$sl2;

# Flip a coin, and it it comes up heads, randomly pick a vertex
# and nudge it's x-coordinate a little

if(random(0,1)) {
  $aa = random(1,3);
  $x[$aa] += non_zero_random(-2,2);
}

# Now we permute the 3 verticies, so A is not always the right angle

@slice = NchooseK(3,3);
@x = @x[@slice];
@y = @y[@slice];

# kludge to make distance computation easier
$x[3] = $x[0]; $y[3] = $y[0];

# compute the 3 distances squared
for($j=0; $j<3; $j++) {
 $d[$j] = ($x[$j]-$x[$j+1])**2 + ($y[$j]-$y[$j+1])**2;
}

# check if it is a right triangle by direct computation, maybe we nudged
# one right triangle into being a different one by mistake, so now we will
# still get the answer right
$rt = "no";
if(($d[0]+$d[1] == $d[2]) || ($d[0]+$d[2] == $d[1]) || ($d[1]+$d[2] == $d[0])) {
 $rt = "yes";
}

BEGIN_TEXT
Consider triangle \(\triangle ABC\) in the plane where
$BR \(A = ($x[0], $y[0]) \)
$BR \(B = ($x[1], $y[1]) \)
$BR \(C = ($x[2], $y[2]) \)
	$PAR
Find the lengths of the sides of the triangle:
$PAR
\( AB = \) \{ans_rule(40)\}
$BR
\( BC = \) \{ans_rule(40)\}
$BR
\( AC = \) \{ans_rule(40)\}
$BR
END_TEXT
ANS(num_cmp("sqrt($d[0])"));
ANS(num_cmp("sqrt($d[1])"));
ANS(num_cmp("sqrt($d[2])"));

BEGIN_TEXT
$PAR
Is \(\triangle ABC\) a right triangle? ($BITALIC yes $EITALIC or $BITALIC no $EITALIC)
	\{ans_rule(20)\}
END_TEXT

ANS(str_cmp($rt));

ENDDOCUMENT();        # This should be the last executable line in the problem.

