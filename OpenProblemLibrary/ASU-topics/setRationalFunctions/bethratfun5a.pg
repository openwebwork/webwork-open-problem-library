## DESCRIPTION
## Rational Functions
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Algebra)
## DBchapter(Rational equations and functions)
## DBsection(Graphs of rational functions)
## Institution(ASU)
## Level(2)
## MO(1)
## KEYWORDS('Algebra' 'Rational Functions')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"parserImplicitPlane.pl"
);

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#
$showPartialCorrectAnswers = 1;

$a = non_zero_random(-10,10);
$b = random(2,9);
do {$c = non_zero_random(-10,10);} until ($c!=$b);
$d = random(1,9);
$ha = $a/$b;
$va = -$c/$b;
$xint = -$d/$a;
$yint = $d/$c;

BEGIN_TEXT
Consider the function \[ f(x)=\frac{$a x + $d}{ $b x + $c} \]
$BR$BR
Enter the equations of the vertical asymptotes.  If there are no
vertical asymptotes, enter $BITALIC none$EITALIC.
If there is more than one vertical asymptote, enter a list
of the equations separated by a comma (e.g., x=20, x=-7).
$BR$BR
Vertical asymptotes:  \{ans_rule(40)\}
$BR
$HR
Enter the equations of the horizontal asymptotes.  If there are no
horizontal asymptotes, enter $BITALIC none$EITALIC.
If there is more than one horizontal asymptote, enter a list
of the equations separated by a comma (e.g., y=20, y=-7).
$BR$BR
Horizontal asymptotes: \{ans_rule(40)\}
$BR
$HR
Find the \(x\)-intercept(s). 
If there is more than one \(x\)-intercept give a list of the \(x\)-intercepts 
separated by commas (i.e.:  (1,2),(3,4)). If there is no \(x\)-intercept type in $BITALIC none${EITALIC}.
$BR$BR
\(x\)-intercepts: \{ans_rule(40)\}

$BR
$HR
Find the \(y\)-intercept: \{ans_rule(40)\}

$BR
$HR
Find the domain of \(f(x)\):  
\{ans_rule(40)\}
$BR
Give your answer in \{ helpLink("interval notation") \}.

END_TEXT

ANS(List(ImplicitPlane("x=$va"))->cmp);
ANS(List(ImplicitPlane("y=$ha"))->cmp);

Context("Vector");
ANS(List(Point($xint, 0))->cmp);
ANS(List(Point(0, $yint))->cmp);
ANS(Union("(-inf, $va)U($va, inf)")->cmp);

ENDDOCUMENT();        # This should be the last executable line in the problem.


