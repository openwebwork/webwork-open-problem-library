## DESCRIPTION
## DBsubject('Introduction to Statistics')
## DBchapter('Part II From Exploration to Inference')
## DBsection('Chapter 10: Introducing Probability')
## KEYWORDS('statistics', 'probability')
## TitleText1('The Basic Practice of Statistics')
## EditionText1('5e')
## AuthorText1('David Moore')
## Section1('Chapter 10: Introducing Probability')
## Problem1('')
## Author('R Cruz')
## Institution('The College of Idaho')
## Date: 2009/03

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGstatisticsmacros.pl", 
  "answerHints.pl",
  "contextInequalities.pl"
);

TEXT(beginproblem());

######################################
#  Setup

Context("Inequalities-Only");
Context()->variables->add(X=>'Real');
$mu = random(73, 82, 0.1);
$sigma = random(8, 11, 0.1);
$score1 = $mu - random(7,15,1);
$score2 = $mu + random(7,12,0.5);

$zscore1 = int(100 * (-0.005 + ($score1 - $mu) / $sigma))/100;
$zscore2 = int(100 * (0.005 + ($score2 - $mu) / $sigma))/100;
$pval1 = 1-uprob(abs($zscore1));
$pval2 = 1-uprob(abs($zscore2));

@event = ("a score over $score1",
	  "a score less than $score1",
	  "a score equal to $score1");
@ans_event = (Compute("X>$score1"), Compute("X<$score1"), Compute("X=$score1"));
@ans_prob = ($pval1, 1-$pval1, 0.0);
$choose = random(0,2,1);

######################################
#  Main text

BEGIN_TEXT
The score on an exam from a certain MAT 112 class, \(X\), is normally
distributed with \(\mu = $mu\) and \(\sigma = $sigma\).
$BR
$BR
NOTE: Assume for the sake of this problem that the score is a continuous variable.  A score can thus take on any value on the continuum.  (In real life, scores are often treated as if they were continuous values but are actually discrete in most cases.)

$PAR
(a)   Write the event ''$event[$choose]'' in terms of \(X\): \{ans_rule(20)\}.

$PAR
(b)  Find the probability of this event: \{ans_rule(10)\} $PAR

$PAR
(c)    Find the probability that a randomly chosen score is greater than $score2: \{ans_rule(15)\}.

$PAR
(d)    Find the probability that a randomly chosen score is between $score1 and $score2: \{ans_rule(15)\}.
END_TEXT

######################################
#  Answers

$showPartialCorrectAnswers = 1;

##Answer checker not working as expected.  It uses this line instead of the one in the checker. 
##Had to add these lines to get it to give the desired hint.

Context()->{error}{msg}{"Operands of '*' are not of compatible types"} 
                         = 'Enter the event: X = n, X < n, X > n or m < X < n';
Context()->variables->add(P=>'Real',p=>'Real');

$ans_a = $ans_event[$choose];
ANS($ans_a->cmp->withPostFilter(AnswerHints(
    sub {
         my($correct,$student,$ansHash) = @_;
         return $ansHash->{student} !~ /(xX)/ 
         } => ["Enter the event: X = n, X > n, X < n or m < X < n", replaceMessage=>1, score => 0]
))); 

$ans_b = Real($ans_prob[$choose])->with(tolType=>'absolute',   
        tolerance=>'0.0005');
ANS($ans_b->cmp->withPostFilter(AnswerHints(
    sub {
         my($correct,$student,$ansHash) = @_;
         return abs($correct - $student) <= 0.003;
         } => ["Close! Try keeping more accuracy in your calculation.", score => 0],
     sub {
         my ($correct,$student,$anshash) = @_;
         return $student < 0 || $student > 1;
         } => ["Probabilities must be between 0 and 1."]
))); 

$ans_c = Real(1-$pval2)->with(tolType=>'absolute', tolerance=>'0.0005');
ANS($ans_c->cmp->withPostFilter(AnswerHints(
    sub {
         my($correct,$student,$ansHash) = @_;
         return abs($correct - $student) <= 0.003;
         } => ["Close! Try keeping more accuracy in your calculation.", score => 0],
     sub {
         my ($correct,$student,$anshash) = @_;
         return $student < 0 || $student > 1;
         } => ["Probabilities must be between 0 and 1."]
)));

$ans_d = Real($pval1 - (1-$pval2))->with(tolType=>'absolute', 
        tolerance=>'0.0005');
ANS($ans_d->cmp->withPostFilter(AnswerHints(
    sub {
         my($correct,$student,$ansHash) = @_;
         return abs($correct - $student) <= 0.003;
         } => ["Close! Try keeping more accuracy in your calculation.", score => 0],
     sub {
         my ($correct,$student,$anshash) = @_;
         return $student < 0 || $student > 1;
         } => ["Probabilities must be between 0 and 1."]
)));

ENDDOCUMENT();       # This should be the last executable line in the problem.










