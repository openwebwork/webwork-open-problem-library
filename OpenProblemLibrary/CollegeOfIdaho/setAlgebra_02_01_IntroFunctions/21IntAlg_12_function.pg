##DESCRIPTION
## Introduction to Functions
## 
##ENDDESCRIPTION
## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Domain and range)
## Institution(The College of Idaho)
## Author(RA Cruz)
## MLT(DomainRangeFromGraph)
## Level(2)
## MO(1)
## TitleText1('Essentials of Intermediate Algebra')
## AuthorText1('Blitzer')
## EditionText1('1')
## Section1('2.1')
## Problem1('')
## KEYWORDS('functions')
## Date: 2007/09 updatead 2013/08 -rac

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "contextInequalitiesAllowStrings.pl",
  "answerHints.pl",
  "PGgraphmacros.pl"
);

TEXT(beginproblem());

######################################
#  Setup

Context("Numeric");

#--------Define the function-----------

$a = non_zero_random(-.25,.25,.5);
$h = random(-2,2,1);
$k = random(-2,2,1);
$dom1 = $h-random(2,3,1);
$dom2 = $h+random(2,3,1);
$f = Formula("$a*(x-$h)^2+$k");

#--------Define the graph--------------
$refreshCachedImages=1;

$xmin = -6;
$ymin = -6;
$xmax = 6;
$ymax = 6;
 
$graph = init_graph($xmin,$ymin,$xmax,$ymax,
                             'axes'=>[0,0],'grid'=>[$xmax-$xmin,$ymax-$ymin]);
$graph->lb('reset');
add_functions( $graph, "$f for x in [$dom1,$dom2] using color:blue and weight:3");
$graph->lb( new Label($xmin+2,$ymax-.5, "y = f(x)",'black','center') );

$i = 0;           # Number the axes
do {
  $xnum = $i + $xmin + 1;
  if ($xnum!=0) {$graph->lb( new Label($xnum,0, "$xnum",'black','center') );}
  $i =$i+1;
} while ($i<($xmax-$xmin)-1);

$i = 0;
do {
  $ynum = $i +$ymin + 1;
  if ($ynum!=0) {$graph->lb( new Label(-.2,$ynum+.1, "$ynum",'black','center') );} 
  $i =$i+1;
} while ($i<($ymax-$ymin)-1);

#------------Pick the points---------------

$n1 = random($dom1,$dom2,1);
do {$n2 = random($dom1,$dom2,1);} while ($n1==$n2);
@input = ($n1,$n2);

######################################
#  Main text
#  Note:  tex_size=>n is for the size on the hardcopy: 600=60%

BEGIN_TEXT
$BCENTER
\{ image( insertGraph($graph), width=>400, 
    height=>400, tex_size=>600 ) \}
$ECENTER
$BR

Use the graph of \(y = f(x)\) given above to find:
$PAR
a) \(f($input[0]) = \) \{ans_rule(10)\}
$PAR
b) \(f($input[1]) = \) \{ans_rule(10)\}
$PAR
c) The domain: \{ans_rule(20)\}
$PAR
d) The range: \{ans_rule(20)\}
END_TEXT

######################################
#  Answers

$showPartialCorrectAnswers = 1;

Context()->strings->add("No solution"=>{},
                        "Not defined"=>{},
                        "Does not exist"=> {},
                        "All real numbers"=>{});

#------Part a)---------------------------
$ans_a = $f->eval(x=>$input[0])->reduce->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_a->cmp);

#------Part b)---------------------------
$ans_b = $f->eval(x=>$input[1])->reduce->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_b->cmp);

#  Note:  The context is changed to inequalites that allow 
#         "All real numbers" as an alias for "R" in a customized 
#         context.
#  Note:  The PostFilter check is to make sure the inequality has the 
#         correct variable. The comparison is to -infinity<x<infinity, 
#         so the check is only done if the student's answer is in 
#         inequality form.

Context("Inequalities-AllowStrings");
Context()->variables->add(y=>'Real');

#------Part c)---------------------------
$ans_c = Compute("$dom1 <= x <= $dom2")->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_c->cmp->withPostFilter(AnswerHints(
            sub {
                my ($correct,$student,$ans) = @_;
                return $student =~ /y/ && $student=~/[<>]/;
                } => ["Use the variable $BITALIC x $EITALIC for the domain of a function.", 
                      checkCorrect => 1, 
                      score => 0]
)));

#-------Part d)------------------------------
$ran1 = $k;    #Case: a>0
@endpt = ($f->eval(x=>$dom1)->reduce,$f->eval(x=>$dom2)->reduce);
$ran2 = $endpt[0];
if ($ran2<$endpt[1]) {$ran2 = $endpt[1];}
if ($a<0) {    #Case: a<0
    $ran2 = $k;
    $ran1 = $endpt[0];
    if ($ran1>$endpt[1]) {$ran1 = $endpt[1];}
}

$ans_d = Compute("$ran1 <= y <= $ran2")->with(tolerance=>0.15, tolType=>'absolute');
ANS($ans_d->cmp->withPostFilter(AnswerHints(
      sub {
          my ($correct,$student,$ans) = @_;
          return $student =~ /x/;
          } => ["Use the variable $BITALIC y $EITALIC for the range of a function.", 
                checkCorrect => 1, 
                score => 0]
)));

######################################
#  Solutions
Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
$BR
a) \(f($input[0]) = $ans_a\) 
$BR
b) \(f($input[1]) = $ans_b\)
$BR
c) The domain of \(f\): \($ans_c\)
$BR
d) The range of \(f\): \($ans_d\)
END_SOLUTION
Context()->normalStrings;

;
ENDDOCUMENT();
