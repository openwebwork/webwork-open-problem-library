##DESCRIPTION
##  Operations on functions using graphs
## 
##ENDDESCRIPTION
## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Compositions and combinations of functions)
## Institution(The College of Idaho)
## Author(RA Cruz)
## MLT(cc-graphs-evaluate)
## MLTleader(1)
## Level(2)
## MO(1)
## TitleText1('Essentials of Intermediate Algebra')
## AuthorText1('Blitzer')
## EditionText1('1')
## Section1('2.2')
## Problem1('')
## KEYWORDS('function operations', 'domain')
## Date: 2007/09 updated 2013/09 -rac

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl"
);

TEXT(beginproblem());

######################################
#  Setup

#----define graph f and graph g:

@dom = (-4,4);

#----first define the parameters (value and first derivatives)
@fy = ( random(4,7,1), random(3,4,1), random(2,3,1), 
        random(0,2,1), random(-1,2,1), random(1,3,1), 
        random(3,4,1), random(4,5,1), random(6,7,1));
@fyp = ( -1, -1, -1, -1, 0, 1, 1, 1, );

foreach my $i (0..8) {
#$fy[$i] = random(-1, 5, 1);  #Tried to smooth out the f a bit
#$fyp[$i] = random(-1,1, 2);
$gy[$i] = random(-1, 7, 1);
$gyp[$i] = random(-1,1, 2);
}
#---Note the last element of the fy's is made to get space for the labels

#----define the functions
$hermite_f = new Hermite( [ $dom[0], $dom[0]+1, $dom[0]+2, 
                            $dom[0]+3, $dom[0]+4, $dom[0]+5, 
                            $dom[0]+6, $dom[0]+7, $dom[0]+8 ],
[ @fy ],
[ @fyp ]);
$hermite_g = new Hermite( [ $dom[0], $dom[0]+1, $dom[0]+2, 
                            $dom[0]+3, $dom[0]+4, $dom[0]+5, 
                            $dom[0]+6, $dom[0]+7, $dom[0]+80 ],
[ @gy ],
[ @gyp ]);

#---define the functions themselves -- we'll need them to answer questions.
sub f_rule {
my $x = shift;
my $out;
$out = $hermite_f->rf_f->($x);
$out;
}
sub g_rule {
my $x = shift;
my $out;
$out = $hermite_g->rf_f->($x);
$out;
}

#----make the graph

$refreshCachedImages=1;

$xmin = $dom[0]-2;
$ymin = -2;
$xmax = $dom[1]+2;
$ymax = 8;

$graph = init_graph($xmin,$ymin,$xmax,$ymax, 
                              axes =>[0,0], 
                              grid =>[$xmax-$xmin,$ymax-$ymin]);
$graph->lb('reset');

#----plot the f graph
$f = new Fun($hermite_f->rf_f,$graph);
$f->color('red');
$graph ->stamps( closed_circle($dom[0], f_rule($dom[0]), 'red') );
$graph ->stamps( closed_circle($dom[1], f_rule($dom[1]), 'red') );

#----plot the g graph
$g = new Fun($hermite_g->rf_f,$graph);
$g->color('blue');
$graph ->stamps( closed_circle($dom[0], g_rule($dom[0]), 'blue') );
$graph ->stamps( closed_circle($dom[1], g_rule($dom[1]), 'blue') );

#----restrict the domain
$f->domain($dom[0], $dom[1]);
$g->domain($dom[0], $dom[1]);

#----Label the graphs

$graph->lb(new Label($dom[1],f_rule($dom[1]), "y=f(x)",'red','left'));
$graph->lb(new Label($dom[1], g_rule($dom[1]), "y=g(x)",'blue','left'));

$i = 0;           # Number the axes
do {
  $xtick = $i + $xmin + 1;
  if ($xtick!=0) {$graph->lb(new Label($xtick,0, "$xtick",'black','center'));}
  $i =$i+1;
} while ($i<($xmax-$xmin)-1);

$i = 0;
do {
  $ytick = $i +$ymin + 1;
  if ($ytick!=0) {$graph->lb(new Label(-.2,$ytick+.1, "$ytick",'black','center'));} 
  $i =$i+1;
} while ($i<($ymax-$ymin)-1);

$input = random(-3,3,1);

######################################
#  Main text

BEGIN_TEXT
$BCENTER
\{ image( insertGraph($graph), 
width=>400,height=>400,tex_size=>600 ) \}
$ECENTER
$BR
The graph of \( f \) is shown in red, and the graph of \( g \) is shown in blue. Use the graphs to evaluate each quantity given below.
$BR 
NOTE: If only a blue section of graph shows up, that means the red
graph is behind it.
$BR
NOTE: Round your values to the closest integer.
$PAR
a) \( f($input) =\) \{ans_rule(20)\}
$PAR
b) \( g($input) =\) \{ans_rule(20)\}
$PAR
c) \( (f + g)($input) =\) \{ans_rule(20)\}
$PAR
d) \( (g - f)($input) =\) \{ans_rule(20)\}
END_TEXT

######################################
#  Answers 

Context("Numeric");
$f_value = Real(f_rule($input))->with(tolerance=>0.1,toltype=>'absolute');
$g_value = Real(g_rule($input))->with(tolerance=>0.1,toltype=>'absolute');

$ans_a = $f_value;
ANS($ans_a->cmp);

$ans_b = $g_value;
ANS($ans_b->cmp);

$ans_c = $f_value + $g_value;
ANS($ans_c->cmp);

$ans_d = $g_value - $f_value;
ANS($ans_d->cmp);

$showPartialCorrectAnswers = 1;

######################################
#  Solution

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
$BR
a) \( f($input) = $ans_a\)
$PAR
b) \( g($input) =  $ans_b\)
$PAR
c) \( (f + g)($input) =  $ans_c\)
$PAR
d) \( (g - f)($input) =  $ans_d\)
END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version');
ENDDOCUMENT();
