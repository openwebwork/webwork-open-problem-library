## DESCRIPTION
##   Relating Equations of Lines and Planes
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Geometry)
## DBchapter(Vector geometry)
## DBsection(Lines with planes)
## Date(8/23/07)
## Institution(Union College)
## Level(3)
## TitleText1('Calculus')
## AuthorText1('Anton')
## EditionText1('7')
## Section1('12.6')
## Problem1('15')
## KEYWORDS('Line', 'Plane', 'Perpendicular', 'Normal', 'Parallel')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "MathObjects.pl",
  "parserImplicitPlane.pl",
  "parserVectorUtils.pl",
  "contextString.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl",
);


TEXT(beginproblem());

##############################################
#  Setup

Context("Vector")->variables->are(t=>'Real');
Context()->reduction->set('(-x)-y'=>0);

#
#  The line p + tv
#
$v = non_zero_vector3D();
$p = non_zero_point3D();
$L = Line($p,$v);

#
#  Some parallel planes
#
$N1 = cross $v &non_zero_vector3D; $p1 = non_zero_point3D();
while (norm(cross $N1 $v) == 0) {$N1 = cross $v &non_zero_vector3D}
$N2 = cross $v &non_zero_vector3D; $p2 = non_zero_point3D();
while (norm(cross $N2 $v) == 0) {$N2 = cross $v &non_zero_vector3D}

#
#  Some perpendicular planes
#
$N3 = (3/2)*$v; $p3 = non_zero_point3D();
$N4 = -2*$v;    $p4 = non_zero_point3D();

#
#  Some other planes
#
$N5 = non_zero_vector3D(); $p5 = non_zero_point3D();
$N6 = non_zero_vector3D(); $p6 = non_zero_point3D();

##############################################
#  Layout

Context("ImplicitPlane");

#
#  The various pop-up choices
#
@pop_up_choices = (
  "no_answer"     => "?",
  "parallel"      => "parallel",
  "perpendicular" => "perpendicular",
  "neither"       => "neither",
);

$context{'String'}->strings->add(
  "parallel"      => {},
  "perpendicular" => {},
  "neither"       => {},
  "no_answer"     => {string => "", TeX => ""},
);

@ans = ();

#
#  Make a pop up question and answer
#
sub PopUp {
  my ($P,$N) = @_;
  my @ropts = (indent => 30, separation => 3, align=>"RIGHT", valign=>"TOP");
  my $type = 3;
     $type = 2 if (areParallel $v $N);
     $type = 1 if ($v.$N == 0);
  push(@ans,$pop_up_choices[2*$type]);
  Row(["\(L\) is ",
      pop_up_list(@pop_up_choices)." to the plane \(".ImplicitPlane($P,$N)->TeX."\)".$PAR],
      @ropts);
}

#
#  Print the list of questions as a table
#
sub PrintQ {
  my @questions = @_;
  my @rows = ();
  foreach my $v (@questions) {push(@rows,PopUp(@{$v}))}
  return join(TableSpace(5,0),@rows);
}

#
#  The planes to ask about
#
@QA = ([$p1,$N1],[$p2,$N2],[$p3,$N3],[$p4,$N4],[$p5,$N5],[$p6,$N6])
          [(shuffle(6))[0..3]];  # choose 4 randomly

##############################################
#  Main text and answers

Context()->texStrings;
BEGIN_TEXT

Consider the line \(L(t) = $L\).  Then:

$BCENTER
$PAR
\{
  BeginTable(center=>0).
    PrintQ(@QA).
  EndTable()
\}
$ECENTER

END_TEXT
Context()->normalStrings;

##################################################
# Answers

Context("String");

ANS(string_cmp(@ans));
install_problem_grader(~~&std_problem_grader);
$showPartialCorrectAnswers = 0;

##################################################


;
ENDDOCUMENT();
