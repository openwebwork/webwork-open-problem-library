## DESCRIPTION
##   Determining Critical Points from Level Curves
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Calculus - multivariable)
## DBchapter(Differentiation of multivariable functions)
## DBsection(Extreme values and optimization)
## Date(8/23/07)
## Institution(Union College)
## Level(2)
## KEYWORDS('Graph', 'Critical Point', 'Multivariable', 'Isolated')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "MathObjects.pl",
  "contextTF.pl",
  "unionImage.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl",
);


TEXT(beginproblem());

##############################################
#  Setup

Context("TF");

#
#  The functions and their associated files
#
@QA = (
  "level1.gif", "T",
  "level2.gif", "F",
  "level3.gif", "F",
  "level4.gif", "F",
  "level5.gif", "T",
  "level6.gif", "T",
);

#
#  The size of the images
#
$size = [150,150];
$tsize = 333;

##############################################

#
#  use a select list
#
$sl = new_select_list();
$sl->rf_print_q(~~&my_print_q);
$sl->qa(@QA);               #  set the questions and answers
$sl->choose(4);             #  select 4 of them

##############################################

sub my_print_q {
  my $self = shift; local (@images) = @_;
  my @opts = (separation => 60, valign => "MIDDLE");

  BeginTable().
    Row([Answer(1).Level(1),Answer(2).Level(2)],@opts).
    TableSpace(30).
    Row([Answer(3).Level(3),Answer(4).Level(4)],@opts).
  EndTable();
}

sub Answer {ans_rule(3)." ".$BBOLD.$_[0].".".$EBOLD." "}
sub Level  {
 my $n = shift;
 Image($images[$n-1],
   size => $size, tex_size => $tsize,
   align => "MIDDLE",
   border => 0);
}

##############################################
#  Main text

BEGIN_TEXT

The diagrams below are supposed to represent level sets
for a function with isolated critical points.  The heights of the
levels are shown by the numbers around the edges.
$PAR

Some of the diagrams are incorrect, however.  Indicate the ones that
are correct by marking them "${BBOLD}T${EBOLD}" and the ones that are
in error by marking them "${BBOLD}F${EBOLD}".  (If a level's height is
not marked, the diagram is considered correct if there exists a number
that would work for that level.)

$PAR
\{$sl->print_q\}

END_TEXT

##################################################
#  Answers

ANS(string_cmp($sl->ra_correct_ans));

$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

##################################################


COMMENT('MathObject version');
ENDDOCUMENT();
