## DESCRIPTION
##   Identify Level Curves
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Calculus - multivariable)
## DBchapter(Concepts for multivariable functions)
## DBsection(Traces, contours, and level sets)
## Date(8/23/07)
## Institution(Union College)
## Level(2)
## KEYWORDS('Graph', 'Multivariable', 'Level Curve')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "MathObjects.pl",
  "contextABCD.pl",
  "imageChoice.pl",
  "LiveGraphics3D.pl",
  "PGcourse.pl",
);


TEXT(beginproblem);

##############################################
#  Setup

Context("ABCD")->strings->add(E=>{}, F=>{});

$size = [150,150];   # the size of the images
$tsize = 300;        # tex size of images
$lsize = [200,200];  # the size of the Live3D images
$tlsize = 400;       # tex size of Live3D images

#
#  Setup up a LiveGraphics3D file and image
#
sub Graph {
  my $n = shift;
  #
  #  The .zip file must be renamed .html so that alias() will know how to
  #  handle it properly.
  #
  my $mfile = alias("graph$n-zip.html");
  my $gfile = alias("graph${n}s.gif");
  my $live3d = Live3Dfile("graph$n.m",
       image => $gfile,
       archive => $mfile,
       size => $lsize, tex_size => $tlsize,
       scale => 1.4);
  return ($live3d,"graph$n.gif");
}

#
#  The Live3D files and their associated GIFs
#
@QA = (
  Graph(1), Graph(2), Graph(3), Graph(4),
  Graph(5), Graph(6), Graph(7), Graph(8),
);

##############################################

#
#  use an image match list
#
$ml = new_image_match_list(
  link => 0,                #  don't link to separate image
  size => $size,            #  image size in pixels
  tex_size => $tsize,       #  tex size in percent times 10
  border => 0,              #  image already includes border
  columns => 2,             #  number of columns
);

$ml->qa(@QA);               #  set the questions and answers
$ml->choose(4);             #  select 4 of them
$ml->choose_extra(2);       #  and show the other 2

##############################################

#
#  Make a table of the Live3D images and answer rules
#

sub my_print_q {
  my $self = shift; my (@L3D) = @_;
  local $length = $self->{ans_rule_len};

  BeginTable().
    AlignedRow([@L3D[0,1]]).
    TableSpace(5,0).
    AlignedRow([Answer(1),Answer(2)]).
    TableSpace(25,6).
    AlignedRow([@L3D[2,3]]).
    TableSpace(5,0).
    AlignedRow([Answer(3),Answer(4)]).
  EndTable();
}

sub Answer {$BBOLD.$_[0].". ".$EBOLD.ans_rule($length)}

$ml->{rf_print_q} = ~~&my_print_q;

##############################################
#  Main text

BEGIN_TEXT

For each surface shown on the left, select the image on the right
that represents the level sets for that surface.
Drag a surface in order to rotate it.  In the level sets, the red
areas are the lowest levels while the purple are the highest.
$PAR

\{ColumnMatchTable($ml)\}
$PAR

END_TEXT

##################################################
#  Answers

ANS(string_cmp($ml->ra_correct_ans));

$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

##################################################

ENDDOCUMENT();        # This should be the last executable line in the problem.
