## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Calculus - single variable)
## DBchapter(Infinite sequences and series)
## DBsection(Applications of Taylor polynomials)
## Institution(Indiana)
## Level(3)
## KEYWORDS('Series' 'Sequences' 'summation')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$a = random(1,10,1);
$b = random(1,10,1);
$c = random(3,8,1);
#$accuracy = random(0,.000001,.00000001);
$d = random(3,6,1);
$c1 = $c - 1 ;

BEGIN_TEXT

\( (a) \) Compute \(s_{$d} \) of
	\( \displaystyle \sum_{n=1}^\infty\frac{$a}{$b n^$c}  \)$BR
	\{ans_rule(45)\} $BR
\( (b) \) Estimate the error in using \(s_{$d}\) as an approximation of the sum
	of the series.  (I.e. use \( \displaystyle \int_{$d}^{\infty} f(x)dx \geq r_{$d} \))$BR
	\{ans_rule(20)\} $BR
\( (c) \) Use n = $d and
\[ s_n + \int_{n+1}^{\infty} f(x)dx \leq s \leq s_n + \int_{n}^{\infty}f(x)dx \]
	to find a better estimate of the sum. $BR
	\{ans_rule(20)\} \( \leq s \leq \)  \{ans_rule(20)\}
END_TEXT

# a simple code to perform a summation. (for A)
	$i = 1;
	$sum = 0;
	while ($i <= $d ) {
                $fofi = $a/($b*$i**$c);
		$sum = $sum + $fofi;
		$i = $i +1 ;
	}
#to make sure that the answer is always an integer (for D)
#	$terms =  (1/(3*$accuracy))**(1/3);
#	if ($terms != int($terms)) {
#		$terms = $terms +1 ;
#		}
#@ans=();
$ans0 = $sum ;
$ans1 = $a/($b*$c1*$d**$c1);
$ans2 = $sum + $a/($b*$c1*($d+1)**$c1);
$ans3 = $sum + $a/($b*$c1*$d**$c1);

#ANS(num_cmp(relTol=>@ans));
#ANS(ordered_num_cmp_list(@ans) );
ANS(num_cmp($ans0));
ANS(num_cmp($ans1));
ANS(num_cmp($ans2));
ANS(num_cmp($ans3));

$soln_expand_a1 = '';
$soln_expand_a2 = '';
for $i (1..$d) {
	$soln_expand_a1 .= '+ \frac{'.$a.'}{'.$b.' \cdot '.$i.'^{'.$c.'}}';
	$soln_pieces_a2 .= '+ '.($a/($b*($i**$c)));
}
$soln_expand_a1 = substr($soln_expand_a1,2);
$soln_pieces_a2 = substr($soln_pieces_a2,2);

$soln_1mc = 1 - $c;
$soln_cm1 = $c - 1;
$soln_dt1mc = $d**$soln_1mc;
$soln_bfrac = $a/($b*$soln_1mc);
$soln_bfin = -$soln_bfrac*$soln_dt1mc;

$soln_c_right = $ans0 + $soln_bfin;
$soln_dp1 = $d + 1;
$soln_c_left_pre = $soln_dp1**$soln_1mc;
$soln_c_left_fin = -$soln_bfrac*$soln_c_left_pre;
$soln_c_left = $ans0 + $soln_c_left_fin;

&SOLUTION(EV3(<<'EOT'));

For part (a), we simply compute:
\[
\begin{aligned}
s_d
&=	\sum_{n=1}^{$d} \frac{$a}{$b \cdot n^{$c}}	\\\\
&=	$soln_expand_a1	\\\\
&=	$soln_pieces_a2	\\\\
&=	$ans0
\end{aligned}
\]

For part (b), we simply evaluate the integral they asked us to evaluate:
\[
\begin{aligned}
\int_{$d}^\infty f(x) dx
&=	\int_{$d}^\infty \frac{$a}{$b \cdot x^{$c}} dx	\\\\
&=	\frac{$a}{$b} \int_{$d}^\infty x^{-$c} dx	\\\\
&=	\frac{$a}{$b}
		\left \left(\frac{x^{-$c+1}}{-$c+1}\right)\right|_{$d}^\infty	\\\\
&=	\frac{$a}{$b($soln_1mc)}
		\left( \lim_{n\to\infty} \frac{1}{x^{$soln_cm1}} -
			\frac{1}{$d^{$soln_cm1}} \right)	\\\\
&=	$soln_bfrac \left( 0 - $soln_dt1mc \right) = $soln_bfin
\end{aligned}
\]

For part (c), we are asked to compute
\[
s_n + \int_{n+1}^{\infty} f(x)dx \leq s \leq s_n + \int_{n}^{\infty}f(x)dx
\]
but conveniently enough, we've already calculated both \(s_$d\) and
the right hand integral, \(\displaystyle \int_{$d}^\infty} f(x) dx \).  So about half our
work is done:
\[
\begin{aligned}
s_n + \int_{n}^\infty f(x) dx
&=	s_{$d} + \int_{$d}^\infty f(x) dx	\\\\
&=	$ans0 + $soln_bfin	\\\\
&=	$soln_c_right
\end{aligned}
\]
Now for the left hand side, we must simply calculate
\( \displaystyle \int_{n+1}^\infty f(x) dx = \int_{$d+1}^\infty f(x) dx
	= \int_{$soln_dp1}^\infty f(x) dx \),
but if we examine our work above, we need not re-integrate everything, we
can simply evaluate
\( $soln_bfrac \left( 0 - \frac{1}{$soln_dp1^{$soln_cm1}} \right)
	= $soln_bfrac(-$soln_c_left_pre) = $soln_c_left_fin \).
Thus we have
\[
\begin{aligned}
s_n + \int_{n+1}^\infty f(x) dx
&=	s_{$soln_dp1} + \int_{$soln_dp1}^\infty f(x) dx	\\\\
&=	$ans0 + $soln_c_left_fin	\\\\
&=	$soln_c_left
\end{aligned}
\]
So the estimate of \(s\) becomes this good: 

\[ $soln_c_left \leq s \leq $soln_c_right \]

EOT

ENDDOCUMENT();        # This should be the last executable line in the problem.
