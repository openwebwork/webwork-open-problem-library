# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Optimization - business and economics)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(5)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('4.4')
## Problem1('15')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('4.5')
## Problem2('16')
## TitleText3('Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('6')
## Section3('4.5')
## Problem3('18')
## TitleText4('Applied Calculus')
## AuthorText4('Hughes-Hallett')
## EditionText4('4')
## Section4('4.')
## Problem4('27')
## KEYWORDS('calculus', 'derivative', 'local maxima and minima', 'maxima', 'minima', 'marginal cost', 'marginal profit')

## Textbook tags
## HHChapter1('Using the Derivative')
## HHChapter2('Using the Derivative')

DOCUMENT();
loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"parserPopUp.pl",
"MathObjects.pl",
);

Context("Numeric");
Context()->variables->are(q=>'Real', x=>'Real');

# pick some sensible values for the coefficients: this
#    is for the cost function,
#    C(q) = a q^3 - b q^2 + c q
$a = 0.01;
$b = random(0.6,0.8.0.1);
$c = random(11,15,1);  # this gets changed later

# our price is chosen at random as well
$p = list_random(6,10);

# then we tweak our numbers to make sure that the value for q at the
#    maximum profit isn't integer, and that the value for our change
#    in price in the second part of the problem is an integer
#    this is horrendously ad hoc, but does at least give values we like
#    for the problem.
if ( $p == 6 ) {
    if ( $b == 0.6 )    { $c = list_random(12, 14); }
    elsif ( $b == 0.7 ) { $c = 12; }
    elsif ( $b == 0.8 ) { $c = 14; }
} elsif ( $p == 7 ) {
    if ( $b == 0.6 )    { $c = random(12, 14, 1); }
    elsif ( $b == 0.7 ) { $c = list_random(12, 13, 14); }
    elsif ( $b == 0.8 ) { $c = list_random(11, 13, 14); }
} elsif ( $p == 8 ) {
    if ( $b == 0.6 )    { $c = list_random(12, 14); }
    elsif ( $b == 0.7 ) { $c = list_random(11, 12, 14); }
    elsif ( $b == 0.8 ) { $b = 0.7; $c = list_random(11, 12, 14); }
} elsif ( $p == 9 ) {
    if ( $b == 0.6 )    { $c = list_random(11, 12, 14, 15); }
    elsif ( $b == 0.7 ) { $c = list_random(11, 14, 15); }
    elsif ( $b == 0.8 ) { $c = random(12, 15, 1); }
} else { # p = 10
    if ( $b == 0.6 )    { $c = list_random(12, 14); }
    elsif ( $b == 0.7 ) { $c = list_random(11, 13, 14); }
    elsif ( $b == 0.8 ) { $c = 12; }
}

# the cost function
$cost = Formula("$a q^3 - $b q^2 + $c q");

# and the profit
$profit = Formula("$p q - $cost");
$profitp = $profit->D;
$profitp2 = $profitp->D;

# the maximum profit occurs when the derivative of the profit
#    is zero, which is when
#      p - 3 a q^2 + 2 b q - c = 0,
#    or
#      3 a q^2 - 2 b q + (c - p) = 0,
#    so we must have
#      q = ( b +/- sqrt( b^2 - 3 a (c - p) ) ) / (3 a)
# the smaller of these values is the minimum profit,
#    so we have
$qmin = Formula( "($b - sqrt($b^2 - 3 $a($c - $p)))/(3 $a)" );
$qmax = Formula( "($b + sqrt($b^2 - 3 $a($c - $p)))/(3 $a)" );

# the numerical value of these are
$qminn = $qmin->eval();
$qmaxn = $qmax->eval();

# note that these are guaranteed not to be integer because of
#    the adjustment we made above
$qlower = int($qmaxn);
$qupper = $qlower + 1;

# the profits at these two are
$profitLower = $profit->eval(q=>$qlower);
$profitUpper = $profit->eval(q=>$qupper);

# so the maximum profit is
if ( $profitLower->value > $profitUpper->value ) {
    $maxProfit = $profitLower;
    $maxQ = $qlower;
    $costAtMax = $cost->eval(q=>$qlower);
} else {
    $maxProfit = $profitUpper;
    $maxQ = $qupper;
    $costAtMax = $cost->eval(q=>$qupper);
}

$profitExpl =<<eox;
and, because we must manufacture an integer number of goods,
the points nearest \(q=$qmaxn\) with integer \(q\)-values:
\( \pi($qlower) = $profitLower \) and
\( \pi($qupper) = $profitUpper \) .
eox

# now, suppose we manufacture a fixed number of goods ($maxQ) and play
#    with the price.  if the price increases by x and we lose (loss)(x)
#    sales, then the profit is now
#      (p + x)(q - loss x) = - (loss) x^2 + (q - (loss)(p) x + p q
#    thus the maximum will be when 2(loss)x = q - (loss)(p)
#  p is fixed from above (between 6 and 10, inclusive);
#  q is chosen to be maxQ; so we'd like
#      x = (q - (loss)(p))/ (2(loss)) = q/(2(loss)) - p/2
#    to be an integer; we check $loss = 1 and $loss = 2 to find
#    which will work (we're guaranteed that one will by our choice
#    of values for a,b,c and p, above)

if ( int(($maxQ - $p*2)/4) == ($maxQ - $p*2)/4 ) {
    $loss = 2;
} else {
    $loss = 1;
}

# the profit is now
$profit2 = Formula("($p + x)($maxQ - $loss x)");

# and the change in p to maximize profit is 
$deltap = Formula("($maxQ - $p $loss)/(2 $loss)");

# some useful formulae
$nitems = Formula("$maxQ - $loss x")->reduce;
$revenueFunc = Formula("($p+x)($maxQ - $loss x)")->reduce;
$profitFunc = Formula("($p+x)($maxQ - $loss x) - $costAtMax")->reduce;
# its derivative
$profitFuncp = $profitFunc->D->reduce;

# these values should always require increasing the price
$incrPop = PopUp(["?","decrease","increase","neither increase nor decrease"],
		 "increase");
$price1 = $p + 1;
$quant1 = $maxQ - $loss;


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context()->texStrings;
BEGIN_TEXT
The total cost \( C(q) \) of producing \( q \) goods is given by:
\[
C(q) = $cost
\]

$PAR
What is the fixed cost?
$BR
fixed cost = \{ ans_rule(25) \} dollars

$PAR
What is the maximum profit if each item is sold for $p
dollars?  (Assume you sell everything you produce.)
$BR
maximum profit = \{ ans_rule(45) \} dollars

$PAR
Suppose we fix production at $maxQ goods produced, and that
they all sell when the price is $p dollars each.  Also suppose
that for each 1 dollar increase in price, $loss fewer goods are sold
(so if the price is $price1 dollars, $quant1 of the $maxQ goods being
produced are sold.)
$PAR
To maximize profit in this case, we should
\{ $incrPop->menu() \}
the price by
\{ ans_rule(25) \}
dollars.
$BR
(Enter zero if the price should remain at $p dollars.)

END_TEXT
Context()->normalStrings;

## because we chose the values carefully, the following should
##    always give an integer number of dollars, so the rounding
##    should be moot.
# make sure we're giving profit in a whole number of cents
$maxprofit = round(100*$maxProfit)/100;
# and similarly for the deltap
$dp = round(100*($deltap->eval))/100;

ANS( Compute("0")->cmp() );
ANS( Compute("$maxprofit")->cmp() );
ANS( $incrPop->cmp() );
ANS( Compute("$dp")->cmp() );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

The fixed cost is 0 because \( C(0)=0 \).

$PAR

Profit, \(\pi(q)\), is equal to money from sales, \($p q\),
minus total cost to produce those items, \(C(q)\).  So
\( \pi = $profit \).  This is maximized
when its derivative is zero, or when 
\( \pi' = $profitp = 0 \).
Using the quadratic formula, we find \( q \approx $qminn \) or 
\( q \approx $qmaxn \). 

$PAR

Now \( \pi'' = $profitp2 \), so 
\(\pi''($qminn)>0 \) and \(\pi''($qmaxn)<0\).  This
means \(q = $qminn\) is a local minimum and 
\(q=$qmaxn\) a local maximum. We now evaluate
the endpoint, \( \pi(0)=0 \), 
and the points nearest \(q=$qmaxn\) with integer
\(q\)-values: 
\( \pi($qlower) = $profitLower \) and
\( \pi($qupper) = $profitUpper \) .  So the maximum profit is 
\( \pi = $maxprofit \).

$PAR

Next we consider the sale of \( q = $maxQ \) items.  
The money from sales is equal to price\(\times\)quantity sold.  
If the price is raised from $p dollars by \(x\) dollars to 
\($p + x\), the result is a reduction
in sales from $maxQ items to  \(($nitems)\) items.  So
the result of raising the price by \(x\) dollars is to change the
money from sales from 
\(($p)($maxQ)\) to \($revenueFunc\) dollars.
If the production level is fixed at  $maxQ, then
the production costs are fixed at \( C($maxQ) = $costAtMax \), and
the profit is given by:
\[
\pi(x) = $profitFunc.
\]
This expression gives the profit as a function of change in
price \(x\), rather than as a function of quantity as in the
previous part of the problem.
We set the derivative of \(\pi\) with respect to \(x\) equal to zero to
find the change in price that maximizes the profit:
\( \frac{d\pi}{dx} = $profitFuncp = 0. \)
So \( x = $dp \) (which means we should ${BITALIC}increase$EITALIC
the price), and this must give a maximum for \( \pi(x) \)
since the graph of
\( \pi \) is a parabola which opens downward.

END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version');
ENDDOCUMENT();
