# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"parserImplicitEquation.pl",
"parserMultiAnswer.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

## Tagged by glr 05/14/09


## DBsubject(Calculus - multivariable)
## DBchapter(Concepts for multivariable functions)
## DBsection(Traces, contours, and level sets)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('12.5')
## Problem1('31')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('12.5')
## Problem2('34')
## KEYWORDS('multivariable', 'functions', 'level surface')

## Textbook tags
## HHChapter1('Functions of Several Variables')

Context("ImplicitEquation");
Context()->variables->add( z=>'Real' );
Context()->flags->set( ignoreEndpointTypes=>1 );

$showPartialCorrectAnswers = 1;

$a = random(-3,3,1);
$b = random(-3,3,1);
$a = 0;
$e = Compute( "e^(-((x-$a)^2 + (y - $b)^2 + z^2))" )->reduce();

$asq = $a*$a;
$bsq = $b*$b;

Context()->variables->set(
    x=>{limits=>[$a-2,$a+2]},
    y=>{limits=>[$b-2,$b+2]},
    z=>{limits=>[-2,2]}
);

$cxz = Compute( "1/(e^($bsq+1))" );
# $xz = ImplicitEquation( "(x-$a)^2 + z^2 = 1" )->reduce();
$xz = Formula( "(x-$a)^2 + z^2" )->reduce();
$cxzval = Compute("1");

$cyz = Compute( "1/(e^($asq+1))" );
# $yz = ImplicitEquation( "(y-$b)^2 + z^2 = 1" )->reduce();
$yz = Formula( "(y-$b)^2 + z^2" )->reduce();
$cyzval = Compute("1");

$cxy = Compute( "1/(e^(1))" );
# $xy = ImplicitEquation( "(x-$a)^2 + (y-$b)^2 = 1" )->reduce();
$xy = Formula( "(x-$a)^2 + (y-$b)^2" )->reduce();
$cxyval = Compute("1");

$xzAns = MultiAnswer( $cxz, $xz, $cxzval )->with(
    singleResult => 0,
    allowBlankAnswers => 1,
    checkTypes => 0,
    checker => sub {
        my ( $correct, $student, $self ) = @_;
        my ( $cstu, $eqstu, $eqcstu ) = @{$student};
        my ( $cans, $eqans, $eqcans ) = @{$correct};
	my @ret = (0,0,0);

	## type checking
	$cstu = Real($cstu) if ( $cstu ne "" );
	## allow equation to be entered in either order
	if ( ref($eqstu) eq ref($eqcans) && ref($eqcstu) eq ref($eqans) ) {
	    $tmp = $eqstu;
	    $eqstu = $eqcstu;
	    $eqcstu = $tmp;
	}
	$eqstu  = Formula( $eqstu );
	$eqcstu = Formula( $eqcstu );

	## check the value of c
	if ( $cans->typeMatch($cstu) && $cstu > Compute(0) &&
	     $cstu <= Compute("1/e^($bsq)") ) {
	    $ret[0] = 1;
	}

	## check by first making sure that any constant term is combined
	##    on the "right-hand" side of the equation, and then that the
	##    functional form and constant are both correct
	if ( defined($eqstu) && defined($eqcstu) ) {
	    $diff = $eqstu - $eqans;
	    $diffDx2 = $diff->D('x')->D('x');
	    $diffDz2 = $diff->D('z')->D('z');
	    ## if this is to be correct, the difference must be a constant
	    if ( Formula(0) == $diffDx2 && Formula(0) == $diffDz2 ) {
		$eqcstu = $eqcstu - $diff;
		$eqstu  = $eqstu - $diff;
		$eqcans = $ret[0] ? (-log($cstu) - $bsq) : 0;
		$ret[1] = ( $eqans == $eqstu );
		$ret[2] = $ret[0] && ( Formula($eqcans) == $eqcstu );
	    }
	}

	return [ @ret ];
    }
);

$yzAns = MultiAnswer( $cyz, $yz, $cyzval )->with(
    singleResult => 0,
    allowBlankAnswers => 1,
    checkTypes => 0,
    checker => sub {
        my ( $correct, $student, $self ) = @_;
        my ( $cstu, $eqstu, $eqcstu ) = @{$student};
        my ( $cans, $eqans, $eqcans ) = @{$correct};
	my @ret = (0,0,0);

	## type checking
	$cstu = Real($cstu) if ( $cstu ne "" );
	## allow equation to be entered in either order
	if ( $eqcans->typeMatch( $eqstu ) && $eqans->typeMatch($eqcstu) ) {
	    $tmp = $eqstu;
	    $eqstu = $eqcstu;
	    $eqcstu = $tmp;
	}
	$eqstu  = Formula( $eqstu );
	$eqcstu = Formula( $eqcstu );

	## check the value of c
	if ( $cans->typeMatch( $cstu ) && $cstu > Compute(0) &&
	     $cstu <= Compute("1/e^($asq)") ) {
	    $ret[0] = 1;
	}
	## check by first making sure that any constant term is combined
	##    on the "right-hand" side of the equation, and then that the
	##    functional form and constant are both correct
	if ( defined($eqstu) && defined($eqcstu) ) {
	    $diff = $eqstu - $eqans;
	    $diffDy2 = $diff->D('y')->D('y');
	    $diffDz2 = $diff->D('z')->D('z');
	    ## if this is to be correct, the difference must be a constant
	    if ( Formula(0) == $diffDy2 && Formula(0) == $diffDz2 ) {
		$eqcstu = $eqcstu - $diff;
		$eqstu  = $eqstu - $diff;
		$eqcans = $ret[0] ? -log($cstu) - $asq : 0;
		$ret[1] = ( $eqans == $eqstu );
		$ret[2] = $ret[0] && ( Formula($eqcans) == $eqcstu );
	    }
	}

	return [ @ret ];
    }
);

$xyAns = MultiAnswer( $cxy, $xy, $cxyval )->with(
    singleResult => 0,
    allowBlankAnswers => 1,
    checkTypes => 0,
    checker => sub {
        my ( $correct, $student, $self ) = @_;
        my ( $cstu, $eqstu, $eqcstu ) = @{$student};
        my ( $cans, $eqans, $eqcans ) = @{$correct};
	my @ret = (0,0,0);

	## type checking
	$cstu = Real($cstu) if ( $cstu ne "" );
	## allow equation to be entered in either order
	if ( $eqcans->typeMatch( $eqstu ) && $eqans->typeMatch($eqcstu) ) {
	    $tmp = $eqstu;
	    $eqstu = $eqcstu;
	    $eqcstu = $tmp;
	}
	$eqstu  = Formula( $eqstu );
	$eqcstu = Formula( $eqcstu );

	## check the value of c
	if ( $cans->typeMatch( $cstu ) && $cstu > Compute(0) &&
	     $cstu <= Compute("1") ) {
	    $ret[0] = 1;
	}
	## check by first making sure that any constant term is combined
	##    on the "right-hand" side of the equation, and then that the
	##    functional form and constant are both correct
	if ( defined($eqstu) && defined($eqcstu) ) {
	    $diff = $eqstu - $eqans;
	    $diffDx2 = $diff->D('x')->D('x');
	    $diffDy2 = $diff->D('y')->D('y');
	    ## if this is to be correct, the difference must be a constant
	    if ( Formula(0) == $diffDx2 && Formula(0) == $diffDy2 ) {
		$eqcstu = $eqcstu - $diff;
		$eqstu  = $eqstu - $diff;
		$eqcans = $ret[0] ? -log($cstu): 0;
		$ret[1] = ( $eqans == $eqstu );
		$ret[2] = $ret[0] && ( Formula($eqcans) == $eqcstu );
	    }
	}

	return [ @ret ];
    }
);

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

Describe in words the level surfaces of
\( g(x,y,z) = $e \).
Think what the intersections of these
surfaces with the three coordinate planes look like.
$PAR

${BBOLD}(a)$EBOLD
In symbolic form, these level surfaces are given by
\( $e = c \)
where \(c\) is a constant.  For what values of \(c\)
are level surfaces defined?
$BR
\(c \in\) \{ ans_rule(35) \}
$BR
${BITALIC}(Give your answer as an interval or list of intervals; for
example, if c is less than 1 or greater than or equal to 2, enter
${BBOLD}(-inf,1),[2,inf)$EBOLD.)$EITALIC

$PAR
${BBOLD}(b)$EBOLD
Pick a level surface that intersects the \(xz\)-plane.  What is your
value of \(c\)? $BR
\( c = \) \{ $xzAns->ans_rule(15) \}
$BR
Write the equation for the intersection, as an expression set equal
to a constant:
$BR
\{ $xzAns->ans_rule(30) \} = \{ $xzAns->ans_rule(10) \}

$PAR
${BBOLD}(c)$EBOLD
Pick a level surface that intersects the \(yz\)-plane.  What is your
value of \(c\) (which might be different from that you used in
${BBOLD}(a)$EBOLD? $BR
\( c = \) \{ $yzAns->ans_rule(15) \}
$BR
Write the equation for the intersection, as an expression set equal
to a constant:
$BR
\{ $yzAns->ans_rule(30) \} = \{ $yzAns->ans_rule(10) \}

$PAR
${BBOLD}(d)$EBOLD
Pick a level surface that intersects the \(xy\)-plane.  What is your
value of \(c\)? $BR
\( c = \) \{ $xyAns->ans_rule(15) \}
$BR
Write the equation for the intersection, as an expression set equal
to a constant:
$BR
\{ $xyAns->ans_rule(30) \} = \{ $xyAns->ans_rule(10) \}

END_TEXT
Context()->normalStrings;

ANS(Interval( "(0,1]" )->cmp() );
ANS($xzAns->cmp() );
ANS($yzAns->cmp() );
ANS($xyAns->cmp() );

$ex = Compute( "(x - $a)^2 + (y - $b)^2 + z^2" )->reduce();

$xzLHS = Compute( "(x - $a)^2 + z^2" )->reduce();
$yzLHS = Compute( "(y - $b)^2 + z^2" )->reduce();
$xyLHS = Compute( "(x - $a)^2 + (y - $b)^2" )->reduce();

$asqp1 = $a*$a + 1;
$bsqp1 = $b*$b + 1;

$c1 = ( $b == 0 ) ? 1 : "e^{-$bsqp1}";
$c2 = ( $a == 0 ) ? 1 : "e^{-$asqp1}";

$masq = ( $a == 0 ) ? '' : "- $asq";
$mbsq = ( $b == 0 ) ? '' : "- $bsq";

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

${BBOLD}(a)$EBOLD
The level surfaces are the graphs of
\(g(x,y,z) = $e = c\)
for constant values of \(c\) such that
\(0 < c < \infty\).
$PAR
Then \( $ex = -\ln c\), which is
the graph of a sphere since \(-\ln c \ge 0\) (or a point if \(c=1\)).

$PAR
${BBOLD}(b)$EBOLD
In the \(xz\)-plane, \(y=0\), so the intersections of the level
surfaces with the plane are circles,
\( $xzLHS = -\ln(c) $mbsq \).  Thus we must have \(c \le e^{-$bsq}\),
for example, \(c = $c1\), for which the intersection of the level
curve with the \(xz\)-plane is
\[ $xzLHS = 1. \]

$PAR
${BBOLD}(c)$EBOLD
Similarly, in the \(yz\)-plane, \(x=0\), so the intersections of the level
surfaces with the plane are circles,
\( $yzLHS = -\ln(c) $masq \).  Thus we must have \(c \le $c2\),
for example, \(c = e^{-$asqp1}\), for which the intersection of the level
curve with the \(xz\)-plane is
\[ $yzLHS = 1. \]

$PAR
${BBOLD}(d)$EBOLD
Finally, in the \(xz\)-plane, \(z=0\), so the intersections of the level
surfaces with the plane are circles,
\( $xyLHS = -\ln(c) \).  Thus we must have \(c \le 1\),
for example, \(c = e^{-1}\), for which the intersection of the level
curve with the \(xz\)-plane is
\[ $xyLHS = 1. \]


END_SOLUTION
Context()->normalStrings;


;
ENDDOCUMENT();
