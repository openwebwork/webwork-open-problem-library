# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Differential equations)
## DBchapter(Numerical methods)
## DBsection(Euler)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(2)
## Static(1)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('11.3')
## Problem1('1')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('11.3')
## Problem2('1')
## TitleText3('Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('6')
## Section3('11.3')
## Problem3('7')
## KEYWORDS('calculus', 'integral', 'differential equations', 'euler', 'numerical calculation')

## Textbook tags
## HHChapter1('Differential Equations')
## HHChapter2('Differential Equations')


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Numeric");
Context()->variables->add(y=>"Real");
$showPartialCorrectAnswers = 1;

$which = random(0,3,1);
$which = 3;

@sfunc = ( sub { my ($x,$y) = @_; return $x + $y; },
	   sub { my ($x,$y) = @_; return $x - $y; },
	   sub { my ($x,$y) = @_; return -1*$x + $y; },
	   sub { my ($x,$y) = @_; return -1*$x - $y; } );
@deeqn = ( Compute("x+y"), Compute("x-y"), Compute("-x+y"), Compute("-x-y") );
@ic = ( [-1,0], [0,-1], [0,1], [1,0] );

$h = 0.1;

# first answer
@sl0 = ();
@f0  = ();
@x0  = ( 1 );
@y0  = ( 1 );
$endpt0 = 1.4;

$x0 = 1; $y0 = 1;
for ( my $i=1; $i<5; $i++ ) {
    push( @f0,  &{$sfunc[$which]}($x0,$y0) );
    push( @sl0, $h*$f0[-1] );

    $y0 = $y0 + $sl0[-1];
    push( @y0, $y0 );
    $x0 += $h;
    push( @x0, $x0 );
}

# second answer
@sl1 = ();
@f1  = ();
@x1  = ($ic[$which]->[0]);
@y1  = ($ic[$which]->[1]);
$endpt1 = $ic[$which]->[0] + 1.4;

$x1 = $ic[$which]->[0]; $y1 = $ic[$which]->[1];
for ( my $i=1; $i<15; $i++ ) {
    push( @f1,  &{$sfunc[$which]}($x1,$y1) );
    push( @sl1, $h*$f1[-1] );

    $y1 = $y1 + $sl1[-1];
    push( @y1, $y1 );
    $x1 += $h;
    push( @x1, $x1 );
}

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

Consider the differential equation \( y'=$deeqn[$which] \).
$PAR
Use Euler's method with \( \Delta x=0.1 \) to estimate \( y \)
when \( x=$endpt0 \) for the solution curve satisfying
$BR
\( y(1)=1 \) : Euler's approximation gives
\( y($endpt0)\approx \) \{ ans_rule(8) \}
$PAR
Use Euler's method with \( \Delta x=0.1 \) to estimate \( y \)
when \( x=$endpt1 \) for the solution curve satisfying
\( y($ic[$which]->[0]) = $ic[$which]->[1] \) : Euler's approximation gives
\( y($endpt1)\approx \) \{ ans_rule(8) \}

END_TEXT
Context()->normalStrings;

ANS(Compute($y0)->cmp() );
ANS(Compute($y1)->cmp() );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

Euler's method for \( y' = $deeqn[$which]\) with
\(y($ic[$which2]->[0])=$ic[$which2]->[1]\):

$PAR
\{ begintable(3) \}
\{ row( "\(x\)", "\(y\)", "\(\Delta y = \)(slope)\(\Delta x\)" ) \}
\{ row( "$x0[0]",   "$y0[0]", "$sl0[0] = ($f0[0])($h)" ) \}
\{ row( "$x0[1]", $y0[1], "$sl0[1] = ($f0[1])($h)" ) \}
\{ row( "$x0[2]", $y0[2], "$sl0[2] = ($f0[2])($h)" ) \}
\{ row( "$x0[3]", $y0[3], "$sl0[3] = ($f0[3])($h)" ) \}
\{ row( "$endpt0", $y0[4], "" ) \}
\{ endtable() \}
$PAR

So \(y($endpt0) \approx $y0[4]\).

$PAR
Similarly, Euler's method for \( y' = $deeqn[$which]\) with \(y(-1)=0\)
gives
$PAR
\{ begintable(3) \}
\{ row( "\(x\)", "\(y\)", "\(\Delta y = \)(slope)\(\Delta x\)" ) \}
\{ row( "$x1[0]",   "$y1[0]", "$sl1[0] = ($f1[0])($h)" ) \}
\{ row( "$x1[1]", $y1[1], "$sl1[1] = ($f1[1])($h)" ) \}
\{ row( "$x1[2]", $y1[2], "$sl1[2] = ($f1[2])($h)" ) \}
\{ row( "$x1[3]", $y1[3], "$sl1[3] = ($f1[3])($h)" ) \}
\{ endtable() \}
$PAR

We note that this is proceeding linearly, because the slope is
constant.  Thus we have \(y($endpt1) = $y1[-1]\).  In this case the
Euler approximation is exact, because our initial condition
happens to lie on a linear solution to the differential equation
(see also problem 1 from homework set 11.2).

END_SOLUTION
Context()->normalStrings;


COMMENT('MathObject version');
ENDDOCUMENT();
