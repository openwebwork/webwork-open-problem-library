# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Differential equations)
## DBchapter(Numerical methods)
## DBsection(Euler)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(4)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('11.3')
## Problem1('5')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('11.3')
## Problem2('5')
## TitleText3('Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('6')
## Section3('11.3')
## Problem3('15')
## KEYWORDS('calculus', 'integral', 'differential equations', 'euler', 'numerical calculation')

## Textbook tags
## HHChapter1('Differential Equations')
## HHChapter2('Differential Equations')

DOCUMENT();
loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"MathObjects.pl",
);
 
Context("Numeric");

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$m = random(2,7,1);
$y0 = random(1,5,1);

# actual solution
$soln = "$y0 + ($m/2)*x^2";
# at y=1,
$y1 = $y0 + $m/2;

# Euler with two steps
$ye2 = "$y0 + 0.25*$m";
$ye2n = $y0 + 0.25*$m;

# Euler with four steps
# y0 + .25*(m(.25)) + .25(m(.5)) + .25(m(.75))
$ye4 = "$y0 + 0.25*$m*(0.25 + 0.5 + 0.75)";
$ye4n = $y0 + 0.25*$m*(0.25 + 0.5 + 0.75);

# error 
$err2 = $m/4;
$err4 = $m/8;

Context()->texStrings;
BEGIN_TEXT

Consider the differential equation
\[
\frac{dy}{dx} = $m x,
 \]
with initial condition \(y(0) = $y0\).

$PAR
${BBOLD}A.$EBOLD
Use Euler's method with two steps to estimate  \(y\)  when  \(x=1\):
$BR
\( y(1) \approx \) \{ ans_rule(10) \}
$BR
${BITALIC}(Be sure ${BBOLD}not$EBOLD to round your calculations at
each step!)$EITALIC
$PAR
Now use four steps:
$BR
\( y(1) \approx \) \{ ans_rule(10) \}
$BR
${BITALIC}(Be sure ${BBOLD}not$EBOLD to round your calculations at
each step!)$EITALIC

$PAR
${BBOLD}B.$EBOLD
What is the solution to this differential equation (with the given
initial condition)?
$BR
\( y = \) \{ ans_rule(35) \}

$PAR
${BBOLD}C.$EBOLD
What is the magnitude of the error in the two Euler approximations you
found? 
$BR
Magnitude of error in Euler with 2 steps = \{ ans_rule(15) \}
$BR
Magnitude of error in Euler with 4 steps = \{ ans_rule(15) \}

$PAR
${BBOLD}D.$EBOLD
By what factor should the error in these approximations change (that
is, the error with two steps should be what number times the error
with four)? 
$BR
factor = \{ ans_rule(10) \}
$BR
${BITALIC}(How close to this is the result you obtained above?)$EITALIC

END_TEXT
Context()->normalStrings;

ANS(num_cmp( [$ye2, $ye4] ) );
ANS(fun_cmp( $soln ) );
ANS(num_cmp( [$err2, $err4] ) );
ANS(num_cmp( 2 ) );

$mo4 = $m/4;
$yval1 = $y0 + $m/16;
$yval2 = $yval1 + $m/8;
$mo2 = ( $m/2 == int($m/2) ) ? $m/2 : "\frac{$m}{2}";

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

${BBOLD}A.$EBOLD
Euler's method with two steps uses \(\Delta x = 0.5\), so we have 
$BR
\(y(0) = $y0\),
$BR
\(y(0.5) \approx y(0) + 0.5 ( $m (0) ) = $y0 \), and
$BR
\(y(1) \approx y(0.5) + 0.5 ( $m (0.5) ) = $y0 + $mo4 = $ye2n\).

$PAR
Similarly, with four steps \(\Delta x = 0.25\), so
$BR
\(y(0) = $y0\),
$BR
\(y(0.25) \approx y(0) + 0.25 ( $m (0) ) = $y0 \), 
$BR
\(y(0.5) \approx y(0.25) + 0.25 ($m (0.25)) = $yval1\),
$BR
\(y(0.75) \approx y(0.5) + 0.25 ($m (0.5)) = $yval2\),
$BR
\(y(1) \approx y(0.75) + 0.25 ($m (0.75)) = $ye4n\),

$PAR
${BBOLD}B.$EBOLD
We can just integrate to find the solution to the differential
equation: \( y = $mo2 x^2 + C \).  For \(y(0) = $y0\), we must 
have \( y = 0.5 x^2 + $y0 \).

$PAR
${BBOLD}C.$EBOLD
The error in the two Euler approximations is just the difference
between the estimates for \(y(1)\) and the exact value.  That is, the
difference between $ye2n and $y1, and between $ye4n and $y1.  Thus,
taking the magnitude of the differences,
$BR
Error in Euler with two steps = $err2, and
$BR
Error in Euler with four steps = $err4.

$PAR
${BBOLD}D.$EBOLD
Since we doubled the number of steps we took, we expect the error to
drop by a factor of two (that is, the error in the Euler approximation
with two steps should be twice as big as that with four), which it is.

END_SOLUTION
Context()->normalStrings;


COMMENT('MathObject version');
ENDDOCUMENT();
