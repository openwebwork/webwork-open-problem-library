# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Differential equations)
## DBchapter(Numerical methods)
## DBsection(Euler)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('11.3')
## Problem1('3')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('11.3')
## Problem2('3')
## TitleText3('Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('6')
## Section3('11.3')
## Problem3('9')
## KEYWORDS('calculus', 'integral', 'differential equations', 'euler', 'numerical calculation')

## Textbook tags
## HHChapter1('Differential Equations')
## HHChapter2('Differential Equations')

DOCUMENT();
loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGgraphmacros.pl", 
"MathObjects.pl",
);
 
Context("Numeric");

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$k = non_zero_random(-4,4,1);
if ( $k == 1 ) { 
    $kd = '';
} elsif ( $k == -1 ) { 
    $kd = '-';
} else {
    $kd = $k;
}
$y0 = random(0.5, 1.5, 0.5);
$y0d = ( $y0 == 1 ) ? '' : $y0;

$ou = new_multiple_choice();
$ou->qa("Is the estimated solution an over or under estimate for " .
	"the actual solution?", "under");
$ou->extra("over");
$ou->makeLast("under");

# generate the euler solutions
@yEul = ( $y0 );
@yEulr = ( $y0 );
for ( my $i=1; $i<=5; $i++ ) {
    $yEul[$i] = $yEul[$i-1] + (0.2)*($k)*($yEul[$i-1]);
    $yEulr[$i] = round($yEul[$i-1]*1000)/1000;
}

Context()->texStrings;
BEGIN_TEXT

Consider the solution of the differential equation \( y' = $kd y \) 
passing through \( y(0) = $y0 \).

$PAR
${BBOLD}A.$EBOLD
Sketch the slope field for this differential equation, and sketch the
solution passing through the point (0,$y0).

$PAR
${BBOLD}B.$EBOLD
Use Euler's method with step size \( \Delta x=0.2 \) to estimate the
solution at \( x=0.2,0.4,\ldots,1 \), using these to fill in the
following table.  ${BITALIC}(Be sure ${BBOLD}not$EBOLD to round your
answers at each step!)$EITALIC
$BR
$BCENTER
\{ begintable(7) \}
\{ row( "\(x = \)", "0", "0.2", "0.4", "0.6", "0.8", "1.0" ) \}
\{ row( "\(y\approx\)", "$y0", ans_rule(8), ans_rule(8), ans_rule(8),
        ans_rule(8), ans_rule(8) ) \}
\{ endtable() \}
$ECENTER

$PAR
${BBOLD}C.$EBOLD
Plot your estimated solution on your slope field.  Compare the solution
and the slope field.
\{ $ou->print_q() \}
\{ $ou->print_a() \}

$PAR
${BBOLD}D.$EBOLD
Check that \( y = $y0d e^{$k x} \) is a solution to \( y' = $kd y \)
with \( y(0) = $y0 \).

END_TEXT
Context()->normalStrings;

foreach ( @yEul[1..5] ) { ANS( Compute($_)->cmp() ); }
# ANS( num_cmp( [ @yEul[1..5] ] ) );
ANS( radio_cmp( $ou->correct_ans() ) );

# make a graph of the solution and Euler solutions
# what is the scale?  ymax = ( y0, if k < 0 ), or ( y0 e^(k), else )
if ( $k < 0 ) {
    $ymax = 2;
} else {
    $ymax = ( 0, 5, 10, 30, 80 )[$k];
}
# slope field and solution, euler
$gr1 = init_graph(-0.1,-0.1,1,$ymax,'axes'=>[0,0],'grid'=>[1,1]);
$gr2 = init_graph(-0.1,-0.1,1,$ymax,'axes'=>[0,0],'grid'=>[1,1]);
for ( my $i=0; $i<6; $i++ ) {
    $xval = $i*(0.2);
    for ( my $j=0; $j<6; $j++ ) {
	$yval = $j*($ymax)/5;
# find the slope there
	$m = $k*$yval;
# left & right endpoints of the slope field line, each of which are 0.05 long
	$xleft = $xval - 0.025;  $yleft = $yval - 0.025*$m;
	$xright = $xval + 0.025; $yright = $yval + 0.025*$m;
# draw the slope field line
	$gr1->moveTo($xleft,$yleft);
	$gr1->lineTo($xright,$yright,'black');
	$gr2->moveTo($xleft,$yleft);
	$gr2->lineTo($xright,$yright,'black');
    }
}
add_functions($gr1, "$y0*e^($k*x) for x in <0,1> using color:blue " .
	      "and weight:2");
add_functions($gr2, "$y0*e^($k*x) for x in [0,1> using color:blue " .
	      "and weight:1");

# add the Euler solution to the second graph
for ( my $i=1; $i<6; $i++ ) {
    $xl = ($i-1)*(0.2);
    $xr = $i*0.2;
    $m = ($yEul[$i] - $yEul[$i-1])/($xr-$xl);
    add_functions($gr2, "$yEul[$i-1] + ($m)*(x - $xl) " .
		  "for x in [$xl,$xr] using color:red and weight:2");
}

$ouest = ( $k > 0 ) ? "under" : "over";

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

${BBOLD}A.$EBOLD
A rough sketch of the slope field and solution are shown in the graph
below. 
$BCENTER
\{ image(insertGraph($gr1), 'tex_size'=>500) \}
$BR
${BITALIC}(Click on the graph for a larger version.)$EITALIC
$ECENTER

$PAR
${BBOLD}B.$EBOLD
Note that we are using \(\Delta x = 0.2\).  Therefore, Euler's method
gives 
$BR
\( y(0.2) \approx y(0) + 0.2 ($k) y(0) = $yEul[1] \)
$BR
\( y(0.4) \approx y(0.2) + 0.2 ($k) y(0.2) = $yEul[2] \)
$BR
\( y(0.6) \approx y(0.4) + 0.2 ($k) y(0.4) = $yEul[3] \)
$BR
\( y(0.8) \approx y(0.6) + 0.2 ($k) y(0.6) = $yEul[4] \)
$BR
\( y(1.0) \approx y(0.8) + 0.2 ($k) y(0.8) = $yEul[5] \).

$PAR
${BBOLD}C.$EBOLD
A plot of the Euler approximation is shown in the graph below, in
red.
$BCENTER
\{ image(insertGraph($gr2), 'tex_size'=>500) \}
$BR
${BITALIC}(Click on the graph for a larger version.)$EITALIC
$ECENTER
From the slopes of the slope field, we can see that the Euler solution
is an $ouest estimate for the actual solution.

END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version');

ENDDOCUMENT();
