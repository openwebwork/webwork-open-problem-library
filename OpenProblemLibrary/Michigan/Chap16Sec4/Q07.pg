# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 04/29/10


## DBsubject(Calculus - multivariable)
## DBchapter(Integration of multivariable functions)
## DBsection(Double integrals in polar)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## MLT(IdentifyLimitsGivenDomainGraph)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('16.4')
## Problem1('7')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('16.4')
## Problem2('5')
## KEYWORDS('polar coordinates', 'integral', 'calculus')

## Textbook tags
## HHChapter1('Integrating Functions of Several Variables')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"parserFunction.pl",
"parserMultiAnswer.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Numeric");
Context()->variables->add( y=>'Real', r=>'Real', t=>'Real' );
$showPartialCorrectAnswers = 1;

parserFunction( "f(x,y)" => "sin(x*y)" );

## a rectangular region
$x0 = list_random(0,1,2,3,4);
$x1 = $x0 + list_random(1,2,3,4);
$y0 = list_random(0,1,2,3,4);
$y1 = $y0 + list_random(1,2,3,4);
$x1++ if ( $x1 - $x0 == $y1 - $y0 );

## and a sector
$whichSec = random(0,5,1);
$r0 = list_random(1,2,3,4);
$r0o2 = ( $r0 == 2 || $r0 == 4 ) ? $r0/2 : "$r0/2";
@sangles = ( [ Compute(0), Compute("pi/6") ], [ Compute(0), Compute("pi/4"), ],
	     [ Compute(0), Compute("pi/3") ],
	     [ Compute("pi/6"), Compute("pi/2") ],
	     [ Compute("pi/4"), Compute("pi/2") ],
	     [ Compute("pi/3"), Compute("pi/2") ] );
@sangles_tex = ( [0, "\pi/6"], [0, "\pi/4"], [0, "\pi/3"],
		 ["\pi/6", "\pi/2"], ["\pi/4", "\pi/2"], ["\pi/3", "\pi/2"] );
@rxy_txt = ( [ [$r0,0], ["sqrt(3)$r0o2", "$r0o2" ] ],
	     [ [$r0,0], ["$r0/sqrt(2)", "$r0/sqrt(2)"] ],
	     [ [$r0,0], ["$r0o2", "sqrt(3)$r0o2" ] ],
	     [ ["sqrt(3)$r0o2", "$r0o2" ], [0,$r0] ],
	     [ ["$r0/sqrt(2)", "$r0/sqrt(2)" ], [0,$r0] ],
	     [ ["$r0o2", "sqrt(3)$r0o2" ], [0,$r0] ] );
## some text descriptions of the end points of the sector
($rcx0, $rcy0) = @{$rxy_txt[$whichSec]->[0]};
($rcx1, $rcy1) = @{$rxy_txt[$whichSec]->[1]};

# do a rectangular and an angular region
@gr = ( init_graph( -1, -1, $x1+1, $y1+1, grid=>[$x1+2,$y1+2], axes=>[0,0],
		    size=>[250,250] ),
	init_graph( -1, -1, $r0+1, $r0+1, grid=>[$r0+2,$r0+2], axes=>[0,0],
		    size=>[250,250] ) );
$gr[0]->new_color("lightblue", 214,230,244);
$gr[0]->moveTo($x0,$y0);
$gr[0]->lineTo($x0,$y1,'blue',2);
$gr[0]->lineTo($x1,$y1,'blue',2);
$gr[0]->lineTo($x1,$y0,'blue',2);
$gr[0]->lineTo($x0,$y0,'blue',2);
$gr[0]->fillRegion( [ $x0+.5, $y0+.5, 'lightblue' ] );
$gr[1]->new_color("lightblue", 214,230,244);
$gr[1]->moveTo(0,0);
$gr[1]->lineTo( $r0*cos($sangles[$whichSec]->[0]),
		$r0*sin($sangles[$whichSec]->[0]), 'blue', 2 );
$gr[1]->moveTo( 0, 0 );
$gr[1]->lineTo( $r0*cos($sangles[$whichSec]->[1]),
		$r0*sin($sangles[$whichSec]->[1]), 'blue', 2 );
$fn = new Fun( sub { $r0*cos($_[0]); }, sub { $r0*sin($_[0]) }, $gr[1] );
$fn->domain( @{$sangles[$whichSec]} );
if( $whichSec < 3 ) {
    $gr[1]->stamps( closed_circle($r0*cos($sangles[$whichSec]->[1]),
				  $r0*sin($sangles[$whichSec]->[1]), 'blue') );
    $gr[1]->lb( new Label( $r0*cos($sangles[$whichSec]->[1]) + .1,
			   $r0*sin($sangles[$whichSec]->[1]) + .1,
			   "($rcx1,$rcy1)", 'black', 'right', 'bottom' ) );
    $gr[1]->fillRegion( [ .5*$r0, 0.1, 'lightblue' ] );
} else {
    $gr[1]->stamps( closed_circle($r0*cos($sangles[$whichSec]->[0]),
				  $r0*sin($sangles[$whichSec]->[0]), 'blue') );
    $gr[1]->lb( new Label( $r0*cos($sangles[$whichSec]->[0]) + .1,
			   $r0*sin($sangles[$whichSec]->[0]) + .1,
			   "($rcx0,$rcy0)", 'black', 'right', 'bottom' ) );
    $gr[1]->fillRegion( [ 0.1, .5*$r0, 'lightblue' ] );
}

@desc = ( "a rectangular region with diagonally opposite corners ($x0,$y0) " .
	    "and ($x1,y1).",
	  "a sector of a circle of radius $r0 centered at the origin, with " .
	    "radial endpoints ($rcx0,$rcy0) and ($rcx1,$rcy1)." );

## then the appropriate integral checkers are
@chk = ();
$chk[0] = MultiAnswer( Compute($x0), Compute($x1), Compute($y0),
			   Compute($y1), Formula( "f(x,y)" ),
			   Compute("y"), Compute( "x" ) )->with(
    singleAnswer=>0,
    checker=>sub {
	my ( $c, $s, $self ) = @_;
	@res = ( 0, 0, 0, 0, 0, 0, 0 );
	## check order
	if ( $c->[5] == $s->[5] ) {
	    $res[5] = 1;
	    $res[2] = ( $c->[2] == $s->[2] ) ? 1 : 0;
	    $res[3] = ( $c->[3] == $s->[3] ) ? 1 : 0;
	    if ( $c->[6] == $s->[6] ) {
		$res[6] = 1;
		$res[0] = ( $c->[0] == $s->[0] ) ? 1 : 0;
		$res[1] = ( $c->[1] == $s->[1] ) ? 1 : 0;
	    }
	} elsif ( $c->[6] == $s->[5] ) {
	    $res[5] = 1;
	    $res[2] = ( $c->[0] == $s->[2] ) ? 1 : 0;
	    $res[3] = ( $c->[1] == $s->[3] ) ? 1 : 0;
	    if ( $c->[5] == $s->[6] ) {
		$res[6] = 1;
		$res[0] = ( $c->[2] == $s->[0] ) ? 1 : 0;
		$res[1] = ( $c->[3] == $s->[1] ) ? 1 : 0;
	    }
	} elsif ( $c->[6] == $s->[6] ) {
	    $res[6] = 1;
	    $res[0] = ( $c->[0] == $s->[0] ) ? 1 : 0;
	    $res[1] = ( $c->[1] == $s->[1] ) ? 1 : 0;
	} elsif ( $c->[5] == $s->[6] ) {
	    $res[6] = 1;
	    $res[0] = ( $c->[2] == $s->[0] ) ? 1 : 0;
	    $res[1] = ( $c->[3] == $s->[1] ) ? 1 : 0;
	}
	$res[4] = ( $c->[4] == $s->[4] ) ? 1 : 0;
	return [ @res ];
    }
);

$chk[1] = MultiAnswer( Compute($sangles[$whichSec]->[0]),
			    Compute($sangles[$whichSec]->[1]), Compute(0),
			   Compute($r0), Formula( "r*f(r*cos(t),r*sin(t))" ),
			   Compute("r"), Compute( "t" ) )->with(
    singleAnswer=>0,
    checker=>sub {
	my ( $c, $s, $self ) = @_;
	@res = ( 0, 0, 0, 0, 0, 0, 0 );
	## check order
	if ( $c->[5] == $s->[5] ) {
	    $res[5] = 1;
	    $res[2] = ( $c->[2] == $s->[2] ) ? 1 : 0;
	    $res[3] = ( $c->[3] == $s->[3] ) ? 1 : 0;
	    if ( $c->[6] == $s->[6] ) {
		$res[6] = 1;
		$res[0] = ( cos($c->[0]) == cos($s->[0]) &&
			    sin($c->[0]) == sin($s->[0]) ) ? 1 : 0;
		$res[1] = ( cos($c->[1]) == cos($s->[1]) &&
			    sin($c->[1]) == sin($s->[1]) ) ? 1 : 0;
	    }
	} elsif ( $c->[6] == $s->[5] ) {
	    $res[5] = 1;
	    $res[2] = ( cos($c->[0]) == cos($s->[2]) &&
		        sin($c->[0]) == sin($s->[2]) ) ? 1 : 0;
	    $res[3] = ( cos($c->[1]) == cos($s->[3]) &&
		        sin($c->[1]) == sin($s->[3]) ) ? 1 : 0;
	    if ( $c->[5] == $s->[6] ) {
		$res[6] = 1;
		$res[0] = ( $c->[2] == $s->[0] ) ? 1 : 0;
		$res[1] = ( $c->[3] == $s->[1] ) ? 1 : 0;
	    }
	} elsif ( $c->[6] == $s->[6] ) {
	    $res[6] = 1;
	    $res[0] = ( cos($c->[0]) == cos($s->[0]) &&
		        sin($c->[0]) == sin($s->[0]) ) ? 1 : 0;
	    $res[1] = ( cos($c->[1]) == cos($s->[1]) &&
		        sin($c->[1]) == sin($s->[1]) ) ? 1 : 0;
	} elsif ( $c->[5] == $s->[6] ) {
	    $res[6] = 1;
	    $res[0] = ( $c->[2] == $s->[0] ) ? 1 : 0;
	    $res[1] = ( $c->[3] == $s->[1] ) ? 1 : 0;
	}
	$res[4] = ( $c->[4] == $s->[4] ) ? 1 : 0;
	return [ @res ];
    }
);

@order = NchooseK(2,2);


Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

For each of the following, set up the integral of an arbitrary
function \(f(x,y)\) over the region in whichever of rectangular
or polar coordinates is most appropriate.  (Use \(t\) for
\(\theta\) in your expressions.)
$PAR
${BBOLD}(a)$EBOLD
The region
$BR
$BCENTER
\{ image( insertGraph( $gr[$order[0]] ), tex_size=>250, height=>250,
	  width=>250, extra_html_tags=>'alt="' . $desc[$order[0]] . '"' ) \}
$ECENTER
With
\( a = \) \{ $chk[$order[0]]->ans_rule(5) \},
\( b = \) \{ $chk[$order[0]]->ans_rule(5) \},
$BR
\( c = \) \{ $chk[$order[0]]->ans_rule(5) \}, and
\( d = \) \{ $chk[$order[0]]->ans_rule(5) \},
$BR
integral = \( \int_a^b \int_c^d \) \{ $chk[$order[0]]->ans_rule(15) \}
\(d\)\{ans_rule(5)\} \(d\)\{ $chk[$order[0]]->ans_rule(5)\}

$PAR
${BBOLD}(b)$EBOLD
The region
$BR
$BCENTER
\{ image( insertGraph( $gr[$order[1]] ), tex_size=>250, height=>250,
	  width=>250, extra_html_tags=>'alt="' . $desc[$order[1]] . '"' ) \}
$ECENTER
With
\( a = \) \{ $chk[$order[1]]->ans_rule(5) \},
\( b = \) \{ $chk[$order[1]]->ans_rule(5) \},
$BR
\( c = \) \{ $chk[$order[1]]->ans_rule(5) \}, and
\( d = \) \{ $chk[$order[1]]->ans_rule(5) \},
$BR
integral = \( \int_a^b \int_c^d \) \{ $chk[$order[1]]->ans_rule(15) \}
\(d\)\{ans_rule(5)\} \(d\)\{ $chk[$order[1]]->ans_rule(5)\}

END_TEXT
Context()->normalStrings;

ANS($chk[$order[0]]->cmp() );
ANS($chk[$order[1]]->cmp() );

@type = ( 'rectangular', 'partially-circular' );
@coords = ( 'Cartesian', 'polar' );
@int = ( "\int_{$x0}^{$x1}\int_{$y0}^{$y1} f(x,y)\,dy\,dx",
	 "\int_{$sangles_tex[$whichSec]->[0]}^{$sangles_tex[$whichSec]->[1]}" .
	     "\int_{0}^{$r0} f(r\cos(\theta),r\sin(\theta))\,r\,dr\,d\theta" );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

${BBOLD}(a)$EBOLD
Since this is a $type[$order[0]] region, we use $coords[$order[0]]
coordinates.  This gives
\[ $int[$order[0]]. \]

$PAR
${BBOLD}(b)$EBOLD
Since this is a $type[$order[1]] region, we use $coords[$order[1]]
coordinates.  This gives
\[ $int[$order[1]]. \]

END_SOLUTION
Context()->normalStrings;


;
ENDDOCUMENT();
