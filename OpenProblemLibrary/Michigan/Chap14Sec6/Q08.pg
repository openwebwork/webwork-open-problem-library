# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 01/11/10


## DBsubject(Calculus - multivariable)
## DBchapter(Differentiation of multivariable functions)
## DBsection(Chain rule)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## MLT(chain3)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('14.6')
## Problem1('8')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('14.6')
## Problem2('10')
## KEYWORDS('chain rule', 'multivariable', 'functions', 'calculus', 'derivatives ')

## Textbook tags
## HHChapter1('Differentiating Functions of Several Variables')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Numeric");
Context()->variables->add( u=>'Real', v=>'Real', y=>'Real' );
$showPartialCorrectAnswers = 1;

$a = random(1,7,1);
$whichz = random(0,2,1);
$whichu = random(0,1,1);
if ( $whichz == 0 ) {
    $zfunc = Compute( "(x + $a*y)*e^(y)" )->reduce();
} elsif ( $whichz == 1 ) {
    $zfunc = Compute( "($a*x + y)*e^(x)" )->reduce();
} else {
    $zfunc = Compute( "(x + $a*y)*e^(x+y)" )->reduce();
}
if ( $whichz == 0 ) {
    $xfunc = Compute( "u" );
    $yfunc = Compute( "ln(v)" );
} elsif ( $whichz == 1 ) {
    $xfunc = Compute( "ln(u)" );
    $yfunc = Compute( "v" );
} else {
    if ( $whichu ) {
        $xfunc = Compute( "ln(u)" );
	$yfunc = Compute( "v" );
    } else {
        $xfunc = Compute( "u" );
	$yfunc = Compute( "ln(v)" );
    }
}
$dzdx = $zfunc->D('x');
$dzdy = $zfunc->D('y');
$dxdu = $xfunc->D('u');
$dydv = $yfunc->D('v');

$dzdxsub = $dzdx->substitute( x=>$xfunc, y=>$yfunc );
$dzdusub = Compute( "($dzdxsub)*($dxdu)" );
$dzdysub = $dzdy->substitute( x=>$xfunc, y=>$yfunc );
$dzdvsub = Compute( "($dzdysub)*($dydv)" );

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

If
\[ z = $zfunc,\qquad x = $xfunc,\qquad y = $yfunc, \]
find \( \partial z/\partial u \) and \( \partial z/\partial v \).
The variables are restricted to domains on which
the functions are defined.
$PAR
\( \partial z/\partial u = \) \{ ans_rule(55) \}
$PAR
\( \partial z/\partial v = \) \{ ans_rule(55) \}

END_TEXT
Context()->normalStrings;

ANS($dzdusub->cmp( checker=>sub {
    my ( $correct, $student, $ansHash ) = @_;
    if ( $correct == $student ) {
        return 1;
    } else {
        return ( Compute( "($dzdx)*($dxdu)" ) == $student ) ? 1 : 0;
    } } ) );
ANS($dzdvsub->cmp( checker=>sub {
    my ( $correct, $student, $ansHash ) = @_;
    if ( $correct == $student ) {
        return 1;
    } else {
        return ( Compute( "($dzdy)*($dydv)" ) == $student ) ? 1 : 0;
    } } ) );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

Since \(z\) is a function of two variables \(x\) and \(y\) which are
functions of two variables $u$ and $v$, the two chain rule identities
which apply are:
\[
\frac{\partial z}{\partial u}  = 
       \frac{\partial z}{\partial x}\frac{\partial x}{\partial u}+
       \frac{\partial z}{\partial y}\frac{\partial y}{\partial u} \]
so
\[ \frac{\partial z}{\partial u} =
    ($dzdx) \left($dxdu\right) + ($dzdy)\cdot 0
\]
\[ = $dzdusub. \]
and
\[
\frac{\partial z}{\partial v} =
       \frac{\partial z}{\partial x}\frac{\partial x}{\partial v}+
       \frac{\partial z}{\partial y}\frac{\partial y}{\partial v} \]
so
\[ \frac{\partial z}{\partial v} = ($dzdx)(0) + ($dzdy)\cdot ($dydv) \]
\[ = $dzdvsub. \]

END_SOLUTION
Context()->normalStrings;


;
ENDDOCUMENT();
