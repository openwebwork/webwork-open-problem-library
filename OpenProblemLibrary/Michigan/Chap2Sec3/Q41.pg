# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 11/21/08

## Author('Gavin LaRose');
## Author('Gavin LaRose');
## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Conceptual understanding of derivatives)
## Institution(University of Michigan)
## MLT(DerivSketch)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('2.3')
## Problem1('41')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('2.3')
## Problem2('45')
## TitleText3('Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('6')
## Section3('2.3')
## Problem3('47')
## KEYWORDS('calculus','derivative','instantaneous velocity','difference quotient','definition of derivative')

## Textbook tags
## HHChapter('Key Concept: The Derivative')


DOCUMENT();
loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGgraphmacros.pl",
"MathObjects.pl",
"hhAdditionalMacros.pl",
"unionTables.pl",
);

Context("Numeric");

## we pick from pieces that are increasing or decreasing;
##   because we don't specify what happens at the boundaries
##   there are multiple correct answers
@graphs = ();
@func = ( "x", "x^2", "sqrt(x)", "1-x", "(x-1)^2", "sqrt(1-x)", "1/2",
	  "4*x*(1-x)", "4*x*(x-1)+1" );
@gdesc = ( "a line increasing from bottom left to top right of the graph",
	   "a curve increasing with increasing slope from bottom left to " .
	       "top right of the graph",
	   "a curve increasing with decreasing slope from bottom left to " .
	       "top right of the graph",
	   "a line decreasing from top left to bottom right of the graph",
	   "a curve decreasing with increasing slope from top left to " .
	       "bottom right of the graph",
	   "a curve decreasing with decreasing slope from top left to " .
	       "bottom right of the graph",
	   "a horizontal line through the center of the graph",
	   "a curve starting at the bottom left of the graph, reaching " .
	       "the top of the graph mid-way across the x-range, and then " .
	       "decreasing back to zero at the right end of the graph",
	   "a curve starting at the top right of the graph, reaching the " .
	       "bottom of the graph mid-way across the x-range, and then " .
	       "increasing back to the top right corner of the graph" );

for (my $i=0; $i<@func; $i++ ) {
    $graphs[$i] = init_graph( 0,0,1,1,size=>[100,100] );  ## no axes or labels
    add_functions($graphs[$i], "$func[$i] for x in <0,1> using color:blue " .
		  "and weight:2");
}
## the increasing functions are 0-2, decreasing, 3-5, zero for the 6th,
##   and the last two we never use in this problem
## we show these in a random order; the reordered increasing, decreasing,
##   and zero slope segments are
@shuff = shuffle(9);
## the increasing, decreasing, and flat segments are now in slots
@inc = ();
@dec = ();
$zer = '';
for ( my $i=0; $i<@shuff; $i++ ) {
    if ( $shuff[$i] < 3 )     { push( @inc, $i+1 ); }
    elsif ( $shuff[$i] < 6 )  { push( @dec, $i+1 ); }
    elsif ( $shuff[$i] == 6 ) { $zer = $i+1; }
}

## pick a combination of functions
@descr = ( "f'(x) > 0", "f'(x) < 0", "f'(x) = 0" );
$a = random(1,4,1);
## for x < -a, we use
$f1 = random(0,2,1);
## for -a < x < a,
$f2 = ($f1 + random(1,2,1))%2;
## and for x > a
$f3 = ($f2 + random(1,2,1))%2;

## this means that the student must enter one of the following responses
##    for each segment
if ( $f1 == 0 )    { @cor1 = @inc; }
elsif ( $f1 == 1 ) { @cor1 = @dec; }
else               { @cor1 = ( $zer ); }
if ( $f2 == 0 )    { @cor2 = @inc; }
elsif ( $f2 == 1 ) { @cor2 = @dec; }
else               { @cor2 = ( $zer ); }
if ( $f3 == 0 )    { @cor3 = @inc; }
elsif ( $f3 == 1 ) { @cor3 = @dec; }
else               { @cor3 = ( $zer ); }

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

foreach $i (0..8) {
  $fig[$i] = image(insertGraph($graphs[$shuff[$i]]), height=>100, width=>100, tex_size=>250,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[$i]] . '"');
}

Context()->texStrings;
BEGIN_TEXT

On a piece of paper, draw the graph of a continuous function
\( y=f(x) \) that satisfies the
following three conditions.
\[ $descr[$f1]\quad\mbox{for}\quad x < -$a, \]
\[ $descr[$f2]\quad\mbox{for}\quad -$a < x < $a, \]
\[ $descr[$f3]\quad\mbox{for}\quad $a < x \]

$PAR
Approximate your function by picking a segment from the following for
each of the sections of your graph, first for \(x < -$a\), then for
\(-$a < x < $a\), and then for \($a < x\).  (You should, of course,
imagine sliding the pieces vertically up or down to make the function
you create be continuous.)
$PAR
For \(x < -$a\), use segment \{ ans_rule(5) \} $BR
For \(-$a < x < $a\), use segment \{ ans_rule(5) \} $BR
For \($a < x\), use segment \{ ans_rule(5) \}
$PAR
$BCENTER
\{
BeginTable().
  AlignedRow([$fig[0],$fig[1],$fig[2]]).
  TableSpace(5,0).
  AlignedRow(["1","2","3"]).
  TableSpace(25,6).
  AlignedRow([$fig[3],$fig[4],$fig[5]]).
  TableSpace(5,0).
  AlignedRow(["4","5","6"]).
  TableSpace(25,6).
  AlignedRow([$fig[6],$fig[7],$fig[8]]).
  TableSpace(5,0).
  AlignedRow(["7","8","9"]).
EndTable()
\}
$ECENTER

END_TEXT
Context()->normalStrings;

if ( @cor1 > 1 ) {
    $pl1 = "one of";
    $ans1 = "$cor1[0], $cor1[1], or $cor1[2]";
    ANS(Compute($cor1[0])->cmp( checker=>sub {
				     my ( $c, $s, $a ) = @_;
				     return ( $s == $c || $s == $cor1[1] ||
					      $s == $cor1[2] ); } ) );
} else {
    $pl1 = "";
    $ans1 = $cor1[0];
    ANS(Compute($cor1[0])->cmp() );
}
if ( @cor2 > 1 ) {
    $pl2 = "one of";
    $ans2 = "$cor2[0], $cor2[1], or $cor2[2]";
    ANS(Compute($cor2[0])->cmp( checker=>sub {
				     my ( $c, $s, $a ) = @_;
				     return ( $s == $c || $s == $cor2[1] ||
					      $s == $cor2[2] ); } ) );
} else {
    $pl2 = "";
    $ans2 = $cor2[0];
    ANS(Compute($cor2[0])->cmp() );
}
if ( @cor3 > 1 ) {
    $ans3 = "$cor3[0], $cor3[1], or $cor3[2]";
    ANS(Compute($cor3[0])->cmp( checker=>sub {
				     my ( $c, $s, $a ) = @_;
				     return ( $s == $c || $s == $cor3[1] ||
					      $s == $cor3[2] ); } ) );
} else {
    $ans3 = $cor3[0];
    ANS(Compute($cor3[0])->cmp() );
}

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

Because \( $descr[$f1]\) for \(x < -$a\), the first segment must be
$pl1 $ans1.  Similarly, because \( $descr[$f2]\) for \(-$a < x < $a\),
the second segment must be $pl2 $ans2.  And lastly, the third segment
must be $ans3.

END_SOLUTION
Context()->normalStrings;



COMMENT('MathObject version');
ENDDOCUMENT();



\{ begintable(3) \}
\{ row( "${BBOLD}1.$EBOLD" .
        image(insertGraph($graphs[$shuff[0]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[0]] . '"'),
        "${BBOLD}2.$EBOLD" .
        image(insertGraph($graphs[$shuff[1]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[1]] . '"'),
        "${BBOLD}3.$EBOLD" .
        image(insertGraph($graphs[$shuff[2]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[2]] . '"') ) \}
\{ row( "${BBOLD}4.$EBOLD" .
        image(insertGraph($graphs[$shuff[3]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[3]] . '"'),
        "${BBOLD}5.$EBOLD" .
        image(insertGraph($graphs[$shuff[4]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[4]] . '"'),
        "${BBOLD}6.$EBOLD" .
        image(insertGraph($graphs[$shuff[5]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[5]] . '"') ) \}
\{ row( "${BBOLD}7.$EBOLD" .
        image(insertGraph($graphs[$shuff[6]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[6]] . '"'),
        "${BBOLD}8.$EBOLD" .
        image(insertGraph($graphs[$shuff[7]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[7]] . '"'),
        "${BBOLD}9.$EBOLD" .
        image(insertGraph($graphs[$shuff[8]]), height=>100, width=>100,
  	      extra_html_tags=>'alt="' . $gdesc[$shuff[8]] . '"') ) \}
\{ endtable() \}
