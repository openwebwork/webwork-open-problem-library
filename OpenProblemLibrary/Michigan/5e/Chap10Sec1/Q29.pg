# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al.,
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 10/16/09

## DBsubject(Calculus - single variable)
## DBchapter(Infinite sequences and series)
## DBsection(Taylor series)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(4)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('10.1')
## Problem1('29')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('10.1')
## Problem2('33')
## KEYWORDS('calculus', 'integral', 'taylor series', 'polynomials')

## Textbook tags
## HHChapter1('Approximating Functions Using Series')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGgraphmacros.pl",
"parserPopUp.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Point");
$showPartialCorrectAnswers = 1;

$f0 = Compute( random(1,5,1) );
$f1m = random(-1,1,2);
($f1c, $f2c, $f3c) = (random(-2,-1,1), 1, 2)[NchooseK(3,3)];
## we need to know which of these have positive curvature, and which
##    is greatest, below
$i = 1;
foreach ( $f1c, $f2c, $f3c ) {
    if ( $_ == 1 ) {
	$fccu2 = $i;
    } elsif ( $_ == 2 ) {
	$fccu1 = $i;
    }
    $i++;
}

$f1 = Compute( "$f0 + $f1m*x + $f1c*x^2" )->reduce();
$f2 = Compute( "$f0 + $f1m*x + $f2c*x^2" )->reduce();
$f3 = Compute( "$f0 + $f1m*x + $f3c*x^2" )->reduce();

$g0 = Compute( random(1,5,1) );

$g1m = random(-1,1,2);
$g2m = random(-1,1,2);
$g3m = random(-1,1,2);
## make sure that these are not all the same
$g1m = $g1m * -1 if ( $g1m == $g2m && $g2m == $g3m );

## we need to know which of these has a different sign from the
##    other two
$gmdiff = 1;
$gmddir = ( $g1m > 0 ) ? 'upward' : 'downward';
if ( $g1m*$g2m > 0 ) {
    $gmdiff = 3;
    $gmddir = ( $g3m > 0 ) ? 'upward' : 'downward';
} elsif ( $g1m*$g3m > 0 ) {
    $gmdiff = 2;
    $gmddir = ( $g2m > 0 ) ? 'upward' : 'downward';
}

@gcurv = (random(1,2,1), 1, 2);
($g1c, $g2c, $g3c) = @gcurv[NchooseK(3,3)];
## make sure that the two that have the same slope have different
##    curvatures.
if ( $gmdiff == 1 ) {
    $g2c = (( $g2c == 2 ) ? 1 : 2) if ( $g2c == $g3c );
    $gccu1 = ( $g2c > $g3c ) ? 2 : 3;
    $gccu2 = ( $g2c > $g3c ) ? 3 : 2;
} elsif ( $gmdiff == 2 && $g1c == $g3c ) {
    $g1c = (( $g1c == 2 ) ? 1 : 2) if ( $g1c == $g3c );
    $gccu1 = ( $g1c > $g3c ) ? 1 : 3;
    $gccu2 = ( $g1c > $g3c ) ? 3 : 1;
} elsif ( $gmdiff == 3 ) {
    $g1c = (( $g1c == 2 ) ? 1 : 2) if ( $g1c == $g2c );
    $gccu1 = ( $g1c > $g2c ) ? 1 : 2;
    $gccu2 = ( $g1c > $g2c ) ? 2 : 1;
}

$g1 = Compute( "$g0 + $g1m*x + $g1c*x^2" )->reduce();
$g2 = Compute( "$g0 + $g2m*x + $g2c*x^2" )->reduce();
$g3 = Compute( "$g0 + $g3m*x + $g3c*x^2" )->reduce();

## we display the graph of f as graph
$whichF = random(0,1,1);
if ( $whichF ) {
    $fis = 'II';
    $gis = 'I';
    $fmatch = PopUp( ["?", "I", "II"], 'II' );
    $gmatch = PopUp( ["?", "I", "II"], 'I' );
    $apoint = Point( 0,$g0 );
    $bpoint = Point( 0,$f0 );
} else {
    $fis = 'I';
    $gis = 'II';
    $fmatch = PopUp( ["?", "I", "II"], 'I' );
    $gmatch = PopUp( ["?", "I", "II"], 'II' );
    $apoint = Point( 0,$f0 );
    $bpoint = Point( 0,$g0 );
}

## graph these
$yf1 = $f1->eval(x=>0.5)-$f0;
$yf2 = $f2->eval(x=>0.5)-$f0;
$yf3 = $f3->eval(x=>0.5)-$f0;
@fyvals = num_sort( ( $yf1, $yf2, $yf3 ) );
if ( $fyvals[0] < -0.5 ) {
    $fymin = $fyvals[0];
} else {
    $fymin = -0.5;
}
if ( $fyvals[2] > 0.5 ) {
    $fymax = $fyvals[2];
} else {
    $fymax = 0.5;
}

$gr1 = init_graph( -0.5,$fymin,0.5,$fymax, axes=>[0,0], size=>[250,250] );
$gr1->lb('reset');
add_functions( $gr1, "$f1-$f0 for x in <-.5,.5> using color:blue and weight:2",
	       "$f2-$f0 for x in <-0.5,0.5> using color:blue and weight:2",
	       "$f3-$f0 for x in <-0.5,0.5> using color:blue and weight:2" );
$fgrLabel = ($whichF ? "B" : "A");
if ( $f1m > 0 ) {
    $gr1->lb( new Label(0.025,-0.05, $fgrLabel, "black","top","left") );
} else {
    $gr1->lb( new Label(0.025,0.05, $fgrLabel, "black","bottom","left") );
  }
$gr1->stamps( closed_circle(0,0,"black") );

$gr1->lb( new Label( 0.45, $fyvals[0], "c", "black", "right", "bottom" ) );
$gr1->lb( new Label( 0.5, $fyvals[1], "b", "black", "right", "bottom" ) );
$gr1->lb( new Label( 0.5, $fyvals[2], "a", "black", "right", "top" ) );

## figure out which are the matches for the fs
@cba = ( 'c', 'b', 'a' );
$i = 0;
foreach my $fy ( @fyvals ) {
    if ( $yf1 == $fy ) {
        $f1match = PopUp( [ "?", "I.a", "I.b", "I.c", "II.a", "II.b", "II.c" ],
			  "$fis.$cba[$i]" );
    } elsif ( $yf2 == $fy ) {
        $f2match = PopUp( [ "?", "I.a", "I.b", "I.c", "II.a", "II.b", "II.c" ],
			  "$fis.$cba[$i]" );
    } else {
        $f3match = PopUp( [ "?", "I.a", "I.b", "I.c", "II.a", "II.b", "II.c" ],
			  "$fis.$cba[$i]" );
    }
    $i++;
}

$yg1 = $g1->eval(x=>0.5)-$g0;
$yg2 = $g2->eval(x=>0.5)-$g0;
$yg3 = $g3->eval(x=>0.5)-$g0;
@gyvals = num_sort( ( $yg1, $yg2, $yg3 ) );
if ( $gyvals[0] < -0.5 ) {
    $gymin = $gyvals[0];
} else {
    $gymin = -0.5;
}
if ( $gyvals[2] > 0.5 ) {
    $gymax = $gyvals[2];
} else {
    $gymax = 0.5;
}

$gr2 = init_graph( -0.5,$gymin,0.5,$gymax, axes=>[0,0], size=>[250,250] );
$gr2->lb('reset');
add_functions( $gr2, "$g1-$g0 for x in <-.5,.5> using color:blue and weight:2",
	       "$g2-$g0 for x in <-0.5,0.5> using color:blue and weight:2",
	       "$g3-$g0 for x in <-0.5,0.5> using color:blue and weight:2" );
$ggrLabel = ( $fgrLabel eq 'A' ? 'B' : 'A' );
$gr2->lb( new Label(0.025,0.1, $ggrLabel, "black","center","left") );
$gr2->stamps( closed_circle(0,0,"black") );

$gr2->lb( new Label( 0.5, $gyvals[0], "c", "black", "right", "bottom" ) );
$gr2->lb( new Label( 0.5, $gyvals[1], "b", "black", "right", "bottom" ) );
$gr2->lb( new Label( 0.45, $gyvals[2], "a", "black", "right", "top" ) );

# figure out which of these the gs are
$i = 0;
foreach my $gy ( @gyvals ) {
    if ( $yg1 == $gy ) {
        $g1match = PopUp( [ "?", "I.a", "I.b", "I.c", "II.a", "II.b", "II.c" ],
			  "$gis.$cba[$i]" );
    } elsif ( $yg2 == $gy ) {
        $g2match = PopUp( [ "?", "I.a", "I.b", "I.c", "II.a", "II.b", "II.c" ],
			  "$gis.$cba[$i]" );
    } else {
        $g3match = PopUp( [ "?", "I.a", "I.b", "I.c", "II.a", "II.b", "II.c" ],
			  "$gis.$cba[$i]" );
    }
    $i++;
}
## the correct answer for the g with the different slope:
if ( $gmdiff == 1 ) {
    $gdiff_correct = $g1match->correct_ans();
} elsif ( $gmdiff == 2 ) {
    $gdiff_correct = $g2match->correct_ans();
} else {
    $gdiff_correct = $g3match->correct_ans();
}

## finally, build the graphs in the correct order
if ( $whichF ) {
    $fig2 = image( insertGraph( $gr1 ), tex_size=>200, height=>250,
		   width=>250, extra_html_tags=>'alt=""' );
    $fig1 = image( insertGraph( $gr2 ), tex_size=>200, height=>250,
		   width=>250, extra_html_tags=>'alt=""' );
} else {
    $fig1 = image( insertGraph( $gr1 ), tex_size=>200, height=>250,
		   width=>250, extra_html_tags=>'alt=""' );
    $fig2 = image( insertGraph( $gr2 ), tex_size=>200, height=>250,
		   width=>250, extra_html_tags=>'alt=""' );
}

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

One of the two sets of functions, \( f_1 \), \( f_2 \), \( f_3 \),
or \( g_1 \), \( g_2 \), \( g_3 \), is graphed in the figure to the
left below; the other set is graphed in the right figure.
Points \( A \) and \( B \) each have \( x=0 \).
Taylor polynomials of degree 2 approximating these functions near
\( x=0 \) are as follows:
\[
f_1(x) \approx $f1 \qquad\qquad g_1(x) \approx $g1
\]
\[
f_2(x) \approx $f2 \qquad\qquad g_2(x) \approx $g2
\]
\[
f_3(x) \approx $f3 \qquad\qquad g_3(x) \approx $g3.
\]

${BCENTER}
\{ begintable(2) \}
\{ row( "$SPACE${BBOLD}I.$EBOLD$SPACE" . $fig1,
	"$SPACE${BBOLD}II.$EBOLD$SPACE" . $fig2 ) \}
\{ endtable() \}
$ECENTER

$PAR
${BBOLD}(a)$EBOLD
Match the functions to the appropriate figure:$BR
\(f\) matches \{ $fmatch->menu() \} $BR
\(g\) matches \{ $gmatch->menu() \}

$PAR
${BBOLD}(b)$EBOLD
What are the coordinates of the points \( A \) and \( B \)? $BR
\(A = \) \{ ans_rule(15) \} $BR
\(B = \) \{ ans_rule(15) \}

$PAR
${BBOLD}(c)$EBOLD
Match each function with the graphs (a)--(c) in the appropriate
figure. $BR
\( f_1 = \) \{ $f1match->menu() \} $BR
\( f_2 = \) \{ $f2match->menu() \} $BR
\( f_3 = \) \{ $f3match->menu() \} $BR
\( g_1 = \) \{ $g1match->menu() \} $BR
\( g_2 = \) \{ $g2match->menu() \} $BR
\( g_3 = \) \{ $g3match->menu() \}

END_TEXT
Context()->normalStrings;

ANS( $fmatch->cmp() );
ANS( $gmatch->cmp() );
ANS( $apoint->cmp() );
ANS( $bpoint->cmp() );
ANS( $f1match->cmp() );
ANS( $f2match->cmp() );
ANS( $f3match->cmp() );
ANS( $g1match->cmp() );
ANS( $g2match->cmp() );
ANS( $g3match->cmp() );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

${BBOLD}(a)$EBOLD
Since the coefficient of the \(x\)-term of each \(f\) is $f1m,
we know \(f_1'(0)=f_2'(0) =f_3'(0)=$f1m\). Thus, each of the \(f\)s' slopes
are the same, as shown in figure \{ $fmatch->correct_ans() \}.
$PAR
Similarly, the coefficient of the \(x\)-terms in \(g_1\), \(g_2\), and
\(g_3\) are $g1m, $g2m, and $g3m, respectively.  Thus, it is figure
\{ $gmatch->correct_ans() \} that gives the graphs of the \(g\)s.

$PAR
${BBOLD}(b)$EBOLD
Since \(f_1(0)=f_2(0)=f_3(0)=$f0\), the point \($fgrLabel\) is
\((0, $f0)\).
Similarly, since \(g_1(0) = g_2(0) = g_3(0) = $g0\), the point
\($ggrLabel\) is \((0, $g0)\).

$PAR
${BBOLD}(c)$EBOLD
Since the coefficient of \(x^2\) in the Taylor polynomials is equal
to \(\frac{f''(0)}{2!}\), the second derivatives of the \(f\)s are
\[f_1''(0)=2!($f1c)\qquad f_2''(0)=2!($f2c)\qquad f_3''(0)=2!($f3c).\]
Thus, \(f_{$fccu1}\) and \(f_{$fccu2}\) are concave up, with
\(f_{$fccu1}\) having the larger second derivative, so
\(f_1\) is \{ $f1match->correct_ans() \},
\(f_2\) is \{ $f2match->correct_ans() \}, and
\(f_3\) is \{ $f3match->correct_ans() \}.
$PAR

Since \(g_{$gmdiff}\) slopes $gmddir we know that \(g_{$gmdiff}\)
is $gdiff_correct.  Then, using the same logic as before, we know
that \(g_{$gccu1}\) and \(g_{$gccu2}\) are concave up, with
\(g_{$gccu1}\) having the larger second derivative, so we have
\(g_1\) is \{ $g1match->correct_ans() \},
\(g_2\) is \{ $g2match->correct_ans() \}, and
\(g_3\) is \{ $g3match->correct_ans() \}.

END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version');

ENDDOCUMENT();
