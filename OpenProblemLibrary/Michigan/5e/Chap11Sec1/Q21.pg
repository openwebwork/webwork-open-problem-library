# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Differential equations)
## DBchapter(Introductory concepts)
## DBsection(Verification of solutions)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## MLT(Verify_Matching)
## Level(3)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('11.1')
## Problem1('21')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('11.1')
## Problem2('24')
## KEYWORDS('calculus', 'integral', 'differential equations')

## Textbook tags
## HHChapter('Differential Equations')


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Numeric");
$showPartialCorrectAnswers = 1;

## the original Q21 has the differential equations and solutions
##    y'' - y = 0,                    y = e^x,       y = x^{-2},
##    x^2 y'' + 2 x y' - 2 y = 0      y = x^3,
##    x^2 y'' - 6 y = 0               y = e^{-x}

## for x^2 y'' + a x y' + b y = 0
##  r^2 + (a - 1) r + b = 0
##     = (r - r1) (r - r2) = 0
## so a - 1 = -(r1 + r2) and b = r1 r2

## for x^2 y'' + b y = 0
##  r^2 - r + b = 0
##     = (r - r1) (r - r2) = 0
## so 1 = (r1 + r2) and b = r1 r2

@eulEqn = ();
@expEqn = ();
@eulSol = ();
@expSol = ();
@eulDer = ();
@expDer = ();

## create four Euler equations with nice solutions
$r1 = random(-6,-2,2);
$r2 = random(1,-1*$r1-1,2);
$a1 = -1*($r1 + $r2) + 1;
$b1 = -1*$r1*$r2;  ## this is -b, which is positive
$eulEqn[0] = "x^2 y'' + $a1 x y' - $b1 y = 0";
$eulSol[0] = [ "x^{$r1}", ($r2 == 1 ? "x" : "x^{$r2}") ];
$r1m1 = $r1 - 1;  $r1s = $r1*$r1m1;  $r1m2 = $r1m1 - 1;
$r2m1 = $r2 - 1;  $r2s = $r2*$r2m1;  $r2m2 = $r2m1 - 1;
## yes, this is clumsy
if ( $r2 == 1 )    { $rsol1 = "1";  $rsol2 = "0"; }
elsif ( $r2 == 2 ) { $rsol1 = "2x"; $rsol2 = "2"; }
elsif ( $r2 == 3 ) { $rsol1 = "3x^2"; $rsol2 = "6x"; }
else {
    $rsol1 = "$r2 x^{$r2m1}";
    $rsol2 = "$r2s x^{$r2m2}";
}
$eulDer[0] = [ [ "$r1 x^{$r1m1}", "$r1s x^{$r1m2}" ],
	       [ "$rsol1", "$rsol2" ] ];

$s1 = random(2,6,2);
$s2 = random(-1*$s1+1,-1,2);
$s1++ if ( $s1 + $s2 == 1 );  # avoid a constant solution
$a2 = -1*(1 - ($s1 + $s2));  # this is -a, which is positive
$b2 = -1*$s1*$s2;
$eulEqn[1] = "x^2 y'' - $a2 x y' - $b2 y = 0";
$eulSol[1] = [ "x^{$s1}", "x^{$s2}" ];
$s1m1 = $s1 - 1;  $s1s = $s1*$s1m1;  $s1m2 = $s1m1 - 1;
$s2m1 = $s2 - 1;  $s2s = $s2*$s2m1;  $s2m2 = $s2m1 - 1;
## very clumsy
if ( $s1 == 1 )    { $ssol1 = "1";  $ssol2 = "0"; }
elsif ( $s1 == 2 ) { $ssol1 = "2x"; $ssol2 = "2"; }
elsif ( $s1 == 3 ) { $ssol1 = "3x^2"; $ssol2 = "6x"; }
else {
    $ssol1 = "$s1 x^{$s1m1}";
    $ssol2 = "$s1s x^{$s1m2}";
}
$eulDer[1] = [ [ "$ssol1", "$ssol2" ],
	       [ "$s2 x^{$s2m1}", "$s2s x^{$s2m2}" ] ];

$p1 = $r1;
$p2 = 1 - $p1;
$b3 = -1*$p1*$p2;  # this is -b, which is positive
$eulEqn[2] = "x^2 y'' - $b3 y = 0";
$eulSol[2] = [ "x^{$p1}", "x^{$p2}" ];
$p2m1 = $p2 - 1;  $p2s = $p2*$p2m1;  $p2m2 = $p2m1 - 1;
$eulDer[2] = [ [ "$r1 x^{$r1m1}", "$r1s x^{$r1m2}" ],
	       [ "$p2 x^{$p2m1}", "$p2s x^{$p2m2}" ] ];

$q1 = $s1;
$q2 = 1 - $q1;
$b4 = -1*$q1*$q2;
if ( $b4 == $b3 ) {
    $q1 = ( $s1 == 2 ) ? $s1 + 1 : $s1 - 1;
    $q2 = 1 - $q1;
    $b4 = -1*$q1*$q2;
}
$eulEqn[3] = "x^2 y'' - $b4 y = 0";
$eulSol[3] = [ "x^{$q1}", "x^{$q2}" ];
$q2m1 = $q2 - 1;  $q2s = $q2*$q2m1;  $q2m2 = $q2m1 - 1;
$eulDer[3] = [ [ "$ssol1", "$ssol2" ],
	       [ "$q2 x^{$q2m1}", "$q2s x^{$q2m2}" ] ];

## for y'' + a y' + b y = 0
##    r^2 + a r + b = 0
##    (r - r1)(r - r2) = 0
## so a = -(r1 + r2), b = r1 r2

## and two exponentials
$m1 = random(1,4,1);
$m2 = -1*$m1;
$b5 = $m1*$m1;  # -b again
$expEqn[0] = "y'' - $b5 y = 0";
$expSol[0] = [ ($m1 == 1 ? "e^{x}" : "e^{$m1 x}") ,
	       ($m1 == 1 ? "e^{-x}" : "e^{-$m1 x}") ];
$md = ( $m1 == 1 ) ? '' : $m1;  $mds = ( $m1 == 1 ) ? '' : $m1*$m1;
$expDer[0] = [ [ "$md e^{$md x}", "$mds e^{$md x}" ],
	       [ "-$md e^{-$md x}", "$mds e^{-$md x}" ] ];

$n1 = $m1 + 1;
$n2 = -1*$n1;
$b6 = $n1*$n1; # -b again
$expEqn[1] = "y'' - $b6 y = 0";
$expSol[1] = [ "e^{$n1 x}", "e^{-$n1 x}" ];
$ns = $n1*$n1;
$expDer[1] = [ [ "$n1 e^{$n1 x}", "$ns e^{$n1 x}" ],
	       [ "-$n1 e^{-$n1 x}", "$ns e^{-$n1 x}" ] ];

## a matching list; we include two Euler and one exponential
@whichEul = NchooseK(4,4);
@whichExp = NchooseK(2,2);

$match = new_match_list();
$match->qa( "\( $eulEqn[$whichEul[0]] \)",
	        "\( y = $eulSol[$whichEul[0]]->[0] \) or " .
	        "\( y = $eulSol[$whichEul[0]]->[1] \)",
	    "\( $eulEqn[$whichEul[1]] \)",
	        "\( y = $eulSol[$whichEul[1]]->[0] \)",
	    "\( $expEqn[$whichExp[0]] \)",
	        "\( y = $expSol[$whichExp[0]]->[0] \) or " .
	        "\( y = $expSol[$whichExp[0]]->[1] \)" );
$match->choose(3);
$match->extra( "\( y = $eulSol[$whichEul[2]]->[0] \) or " .
	           "\( y = $eulSol[$whichEul[2]]->[1] \)",
	       "\( y = $eulSol[$whichEul[3]]->[1] \)",
	       "\( y = $expSol[$whichExp[1]]->[0] \)" );
$match->choose_extra(3);

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

Match the solutions to the differential equations.  If multiple
options could be correct for one of the differential equations,
pick the option that includes all solutions.

\{ $match->print_q() \}
\{ $match->print_a() \}

END_TEXT
Context()->normalStrings;

ANS( str_cmp( $match->ra_correct_ans ) );

@q = @{$match->selected_q()};
@a = @{$match->ra_correct_ans};

## because there are duplicates in the solutions of the different
##    equations, we have to be a little careful about which we put into
##    our derivative list
sub isin { $v = shift(); foreach ( @_ ) { return 1 if $_ eq $v; }; return 0; }
@funcs    = ( $eulSol[$whichEul[0]]->[0], $eulSol[$whichEul[0]]->[1] );
@der1List = ( $eulDer[$whichEul[0]]->[0]->[0], $eulDer[$whichEul[0]]->[1]->[0] );
@der2List = ( $eulDer[$whichEul[0]]->[0]->[1], $eulDer[$whichEul[0]]->[1]->[1] );
if ( ! isin( $eulSol[$whichEul[1]]->[0], @funcs ) ) {
    push( @funcs, $eulSol[$whichEul[1]]->[0] );
    push( @der1List, $eulDer[$whichEul[1]]->[0]->[0] );
    push( @der2List, $eulDer[$whichEul[1]]->[0]->[1] );
}
push( @funcs, $expSol[$whichExp[0]]->[0], $expSol[$whichExp[0]]->[1] );
push( @der1List, $expDer[$whichExp[0]]->[0]->[0], $expDer[$whichExp[0]]->[1]->[0] );
push( @der2List, $expDer[$whichExp[0]]->[0]->[1], $expDer[$whichExp[0]]->[1]->[1] );
if ( ! isin( $eulSol[$whichEul[3]]->[1], @funcs ) ) {
    push( @funcs, $eulSol[$whichEul[3]]->[1] );
    push( @der1List, $eulDer[$whichEul[3]]->[1]->[0] );
    push( @der2List, $eulDer[$whichEul[3]]->[1]->[1] );
}
if ( ! isin( $eulSol[$whichEul[2]]->[0], @funcs ) ) {
    push( @funcs, $eulSol[$whichEul[2]]->[0] );
    push( @der1List, $eulDer[$whichEul[2]]->[0]->[0] );
    push( @der2List, $eulDer[$whichEul[2]]->[0]->[1] );
}
if ( ! isin( $eulSol[$whichEul[2]]->[1], @funcs ) ) {
    push( @funcs, $eulSol[$whichEul[2]]->[1] );
    push( @der1List, $eulDer[$whichEul[2]]->[1]->[0] );
    push( @der2List, $eulDer[$whichEul[2]]->[1]->[1] );
}
push( @funcs, $expSol[$whichExp[1]]->[0] );
push( @der1List, $expDer[$whichExp[1]]->[0]->[0] );
push( @der2List, $expDer[$whichExp[1]]->[0]->[1] );
$derstr = '';
for ( my $i=0; $i<@funcs; $i++ ) {
    $derstr .= "\( \frac{d}{dx} ($funcs[$i]) = $der1List[$i] \) and " .
        "\( \frac{d^2}{dx^2} ($funcs[$i]) = $der2List[$i] \) $BR";
}

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

Calculating the derivatives of each possible solution, we have $BR
$derstr

$PAR
Thus, by plugging into each of the equations, we find that
the correct answers are: $BR
$q[0] : $a[0], $BR
$q[1] : $a[1], and $BR
$q[2] : $a[2].

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
