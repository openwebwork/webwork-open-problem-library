# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

## Tagged by glr 05/12/09


## DBsubject(Calculus - multivariable)
## DBchapter(Concepts for multivariable functions)
## DBsection(Traces, contours, and level sets)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('12.4')
## Problem1('15')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('12.4')
## Problem2('15')
## KEYWORDS('linear', 'functions', 'multivariable', 'plane')

## Textbook tags
## HHChapter1('Functions of Several Variables')

$refreshCachedImages = 1;

Context("Numeric");
$showPartialCorrectAnswers = 1;

## the cost of a cd
$p = random(6,10,2);
## the cost of a dvd
$q = $p + random(2,6,2);

$p = 10;
$q = 14;

## then the revenue is given by
##    r = p c + q d,
## so the contour lines are the lines
##    d = r/q - (p/q) c 
$gr = init_graph(0,0,400,400, axes=>[0,0], grid=>[8,8], size=>[300,300]);
$gr->lb('reset');
foreach my $v ( 100, 200, 300, 400 ) {
    $gr->lb( new Label( $v, 0, "$v", 'black', 'right', 'bottom' ) );
    $gr->lb( new Label( 0, $v, "$v", 'black', 'left', 'top' ) );
}
$gr->lb( new Label( 350, 0, "c", 'black', 'right', 'bottom' ) );
$gr->lb( new Label( 0, 350, " d", 'black', 'left', 'top' ) );

for ( my $i=1; $i<9; $i++ ) {
    my $r = 1000*$i;
    add_functions( $gr, "($r - $p*x)/$q for x in <0,400> using color:" .
		   "blue and weight:2" );

    ## put the contour label on the line y=x
    my $y1 = $r/($p+$q);
    $gr->lb( new Label( $y1, $y1, "$r", 'black', 'right', 'bottom' ) );
}

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

A store sells CDs at one price and DVDs at another
price.  The figure below shows the revenue (in dollars)
of the music store as a function of the number, \( c \),
of CDs and the number, \( d \), of DVDs that it sells.  The
values of the revenue are shown on each line.
$PAR
$BCENTER
\{ image( insertGraph( $gr ), tex_size=>350, height=>300, width=>300,
	  extra_html_tags=>'alt="graph of contours"' ) \}
$ECENTER
$PAR
${BBOLD}(a)$EBOLD
What is the price of a CD? \{ ans_rule(25) \} dollars
$PAR
${BBOLD}(b)$EBOLD
What is the price of a DVD? \{ ans_rule(25) \} dollars

END_TEXT
Context()->normalStrings;

ANS(Compute("$p")->cmp() );
ANS(Compute("$q")->cmp() );

## nice intersection points are given by
%rpoints = ( 6 => { 8 => [ [ 200, 100, 2000 ],
			   [ 100, 300, 3000 ] ],
		    10 => [ [ 250, 50, 2000 ],
			    [ 250, 150, 3000 ] ],
		    12 => [ [ 100, 200, 3000 ],
			    [ 200, 150, 3000 ] ] },
	     8 => { 10 => [ [ 250, 100, 3000 ],
			    [ 250, 200, 4000 ] ],
		    12 => [ [ 100, 100, 2000 ],
			    [ 100, 350, 5000 ] ],
		    14 => [ [ 200, 100, 3000 ],
			    [ 100, 300, 5000 ] ] },
	     10 => { 12 => [ [ 100, 250, 4000 ],
			     [ 200, 250, 5000 ] ],
		     14 => [ [ 150, 250, 5000 ],
			     [ 250, 250, 6000 ] ] } );
($c0, $d0, $r0) = @{$rpoints{$p}->{$q}->[0]};
($c1, $d1, $r1) = @{$rpoints{$p}->{$q}->[1]};

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR


The revenue
function, \(R\), is linear and so we may write it as:
\[
R = (p_1)c + (p_2)d
\]
where \(p_1\) is the price of CDs and \(p_2\) is the price of DVDs, in
dollars.
From the diagram, we can pick two points, such as \(c = $c0\), \(d=$d0\)
on the contour \(R=$r0\), and \(c = $c1\), \(d = $d1\) on the contour
\(R = $r1\).  These
points give the following system of linear equations:
\[
$r0 = $c0 p_1 + $d0 p_2, \mbox{ and }
$r1 = $c1 p_1 + $d1 p_2.
\]
Solving gives \(p_1 = $p\) dollars and \(p_2 = $q\) dollars.

END_SOLUTION
Context()->normalStrings;


COMMENT('MathObject version');
ENDDOCUMENT();
