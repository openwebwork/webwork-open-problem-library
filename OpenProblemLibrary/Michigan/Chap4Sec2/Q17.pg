# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Increasing/decreasing functions and local extrema)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## Level(4)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('4.2')
## Problem1('17')
## KEYWORDS('concavity', 'increasing and decreasing functions', 'maxima', 'minima')

## Textbook tags
## HHChapter('Using the Derivative')

DOCUMENT();
loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
# "hhAdditionalMacros.pl",
"MathObjects.pl",
"extraAnswerEvaluators.pl",
);
 
Context("Numeric");

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$which = random(0,3,1);
if ( $which == 0 ) {
    $p = "x^3 - a x";
    $ans = "(-1*sqrt(a/3),max), (sqrt(a/3),min)";
    $xans1 = "left";
    $yans1 = "up";
    $xans2 = "right";
    $yans2 = "down";
# solution vars
    $pprime = "3x^2 - a";
    @x = ( '-\sqrt{a/3}', '\sqrt{a/3}' );
    $pdprime = "6x";
    $whichsign = 'positive or negative';
    $whichconc = 'concave up or down';
    $whichextr = 'minimum or maximum';
    $cpmovex = 'away from';
    $cpmovey = 'away from';
} elsif ( $which == 1 ) {
    $p = "a x^3 - x";
    $ans = "(-1*sqrt(1/(3*a)),max), (sqrt(1/(3*a)),min)";
    $xans1 = "right";
    $yans1 = "down";
    $xans2 = "left";
    $yans2 = "up";
# solution vars
    $pprime = "3 a x^2 - 1";
    @x = ( '-\sqrt{1/3a}', '\sqrt{1/3a}' );
    $pdprime = "6ax";
    $whichsign = 'positive or negative';
    $whichconc = 'concave up or down';
    $whichextr = 'minimum or maximum';
    $cpmovex = 'towards';
    $cpmovey = 'towards';
} elsif ( $which == 2 ) {
    $p = "x^2(a - x)";
    $ans = "(0,min), (2*a/3,max)";
    $xans1 = "right";
    $yans1 = "up";
    $xans2 = "none";
    $yans2 = "none";
# solution vars
    $pprime = "2ax - 3x^2 = x(2a - 3x)";
    @x = ( '0', '2a/3' );
    $pdprime = "2a - 6x";
    $whichsign = 'positive or negative';
    $whichconc = 'concave up or down';
    $whichextr = 'minimum or maximum';
    $cpmovex = 'away from (for \(x=2a/3\) only)';
    $cpmovey = 'away from (for \(x=2a/3\) only)';
} else {
    $p = "x^2(x - a)";
    $ans = "(0,max), (2*a/3,min)";
    $xans1 = "none";
    $yans1 = "none";
    $xans2 = "right";
    $yans2 = "down";
# solution vars
    $pprime = "3x^2 - 2ax = x(3x - 2a)";
    @x = ( '0', '2a/3' );
    $pdprime = "6x - 2a";
    $whichsign = 'negative or positive';
    $whichconc = 'down or up';
    $whichextr = 'maximum or minimum';
    $cpmovex = 'towards (for \(x=2a/3\) only)';
    $cpmovey = 'towards (for \(x=2a/3\) only)';
}

Context()->texStrings;
BEGIN_TEXT

Let \( p(x)=$p \), where \( a \) is constant and \( a>0 \).
$PAR
Find the local maxima and minima of \( p \).
$BR
$BITALIC(Enter your maxima and minima as comma-separated
xvalue,classification pairs.  For example, if you found that
$EITALIC
\( x = -2 \) 
${BITALIC}was a local minimum and$EITALIC
\( x = 3 \)
${BITALIC}was a local maximum, you should enter$EITALIC  
${BBOLD}(-2,min), (3,max)$EBOLD.
${BITALIC}If there were no maximum, you ${BBOLD}must$EBOLD drop the
parentheses and enter$EITALIC
${BBOLD}-2,min$EBOLD${BITALIC}.)$EITALIC
$PAR
maxima and minima: \{ ans_rule(45) \}

$PAR
What effect does increasing the value of \(a\) have on
the \(x\)-position of the maximum(s) you found? 
(Enter ${BBOLD}left$EBOLD, ${BBOLD}none$EBOLD or
${BBOLD}right$EBOLD if it moves left, has no effect, or moves
right.)
\{ ans_rule(15) \}

$PAR
What effect does increasing the value of \(a\) have on
the \(x\)-position of the minimum(s) you found? 
(Enter ${BBOLD}left$EBOLD, ${BBOLD}none$EBOLD or
${BBOLD}right$EBOLD if it moves left, has no effect, or moves
right.) 
\{ ans_rule(15) \}

$PAR
What effect does increasing the value of \(a\) have on
the \(y\)-coordinate of the maximum(s) you found? 
(Enter ${BBOLD}up$EBOLD, ${BBOLD}none$EBOLD or ${BBOLD}down$EBOLD
if it moves up, has no effect, or moves down.)
\{ ans_rule(15) \}

$PAR
What effect does increasing the value of \(a\) have on
the \(y\)-coordinate of the minimum(s) you found? 
(Enter ${BBOLD}up$EBOLD, ${BBOLD}none$EBOLD or ${BBOLD}down$EBOLD
if it moves up, has no effect, or moves down.)
\{ ans_rule(15) \}

END_TEXT
Context()->normalStrings;

# imported interval checker, copied from extraAnswerEvaluators, 
# to allow using a variable in the answer
sub my_interval_cmp {
        my $correct_ans = shift;

        my %opts = @_;

        my $mode          = $opts{mode} || 'std';
        my %options       = (debug => $opts{debug});
        my $ans_type = ''; # set to List, Union, or String below

        #
        #  Get an appropriate context based on the mode
        #
        my $oldContext = Context();
        my $context = mode2context($mode, %opts);

        if(defined($opts{unions}) and $opts{unions} eq 'no' ) {
                # This is really a list of points, not intervals at all
                $ans_type = 'List';
                $context->parens->redefine('(');
                $context->parens->redefine('[');
                $context->parens->redefine('{');
                $context->operators->redefine('u',using=>',');
                $context->operators->set(u=>{string=>", ", TeX=>',\,'});
        } else {
                $context->parens->redefine('(', from=>'Interval');
                $context->parens->redefine('[', from=>'Interval');
                $context->parens->redefine('{', from=>'Interval');

                $context->constants->redefine('R',from=>'Interval');
                $context->operators->redefine('U',from=>"Interval");
                $context->operators->redefine('u',from=>"Interval",using=>"U");
                $ans_type = 'Union';
        }
        # Take optional arguments intended for List, or Union
        for my $o (qw( showCoordinateHints showHints partialCredit showLengthHints )) {
                $options{$o} = $opts{$o} || 0;
        }
        $options{showUnionReduceWarnings} = $opts{showUnionReduceWarnings};
        $options{studentsMustReduceUnions} = $opts{studentsMustReduceUnions};
        if(defined($opts{ordered}) and $opts{ordered}) {
                $options{ordered} = 1;
                # Force this option if the the union must be ordered
                $options{studentsMustReduceUnions} = 1;
        }
        if (defined($opts{'sloppy'}) && $opts{'sloppy'} eq 'yes') {
                 $options{requireParenMatch} = 0;
        }
        # historically we allow more infinities
        $context->strings->add(
                'i' => {alias=>'infinity'},
                'infty' => {alias=>'infinity'},
                'minfinity' => {infinite=>1, negative=>1},
                'minfty' => {alias=>'minfinity'},
                'minf' => {alias=>'minfinity'},
                'mi' => {alias=>'minfinity'},
        );
        # Add any strings
        if ($opts{strings}) {
                foreach my $string (@{$opts{strings}}) {
                        $string = uc($string);
                        $context->strings->add($string) unless
                                defined($context->strings->get($string));
                        $ans_type = 'String' if $string eq uc($correct_ans);
                }
        }
# add the variable a
	$context->variables->add(a=>'Real');

        my $ans_eval;
        Context($context);
	Context()->flags->set(limits=>[0,1]);
        if($ans_type eq 'List') {
                $ans_eval = List($correct_ans)->cmp(%options);
        } elsif($ans_type eq 'Union') {
                $ans_eval = Union($correct_ans)->cmp(%options);
        } elsif($ans_type eq 'String') {
                $ans_eval = List($correct_ans)->cmp(%options);
        } else {
                warn "Bug -- should not be here in interval_cmp";
        }

        Context($oldContext);
        return($ans_eval);
}

# Context("Interval")->variables->add(a=>'Real');
# Context("LegacyNumeric")->variables->add(a=>'Real');

ANS( my_interval_cmp( $ans, 'unions'=>'no', 'limits'=>[0,1],
		      'strings'=>['none','min','max','neither'] ) );
ANS( str_cmp( $xans1 ) );
ANS( str_cmp( $xans2 ) );
ANS( str_cmp( $yans1 ) );
ANS( str_cmp( $yans2 ) );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

We have \(p'(x)=$pprime\), so critical points are at 
\( x = $x[0] \) and \( x = $x[1] \).  Then 
\( p''(x) = $pdprime \), so that plugging in \(x = $x[0]\) or
\(x = $x[1]\) we find that \(p''\) is 
$whichsign, respectively, indicating that \( p \) is concave
$whichconc, so that the critical points give a $whichextr,
respectively. 
$PAR

Then, increasing the value of \(a\) moves the critical points
$cpmovex the \(y\)-axis, and the values of \(p\) $cpmovey the
\(x\)-axis.

END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version');

ENDDOCUMENT();
