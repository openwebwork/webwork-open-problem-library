# DESCRIPTION
# Problem from Calculus, multi-variable, Hughes-Hallett et al.,
# originally from 5ed (with updates)
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 12/02/09

## DBsubject(Calculus - multivariable)
## DBchapter(Differentiation of multivariable functions)
## DBsection(Differentiability, linearization and tangent planes)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## MLT(linapprox)
## Level(3)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('5')
## Section1('14.4')
## Problem1('75')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('6')
## Section2('14.4')
## Problem2('78')
## KEYWORDS('gradient', 'directional derivative', 'derivatives')

## Textbook tags
## HHChapter1('Differentiating Functions of Several Variables')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Vector2D");
Context()->flags->set( ijk=>1 );
$showPartialCorrectAnswers = 1;

@squares = ( 0, 1, 4, 9, 16, 25, 36, 49, 64 );
$x0 = random(1,5,1);
$y0 = random(1,5,1);
$y0 = ( $y0 == 1 ? 2 : $y0 - 1 ) if ( $x0 == $y0 );

$a = random(1,5,1);

## make the square root nice
my $i=0;  $val0 = $x0*$x0 + $a*$y0;
while ( $val0 > $squares[$i] ) { $i++; }
$b = $squares[++$i] - $val0;
$val0 = $i;

$g = Compute( "sqrt(x^2 + $a*y + $b)" )->reduce();

$gr = Vector( ( "$x0/$val0", "$a/(2*$val0)" ) );
$lin = Compute( "$val0 + ($x0/$val0)*(x - $x0) + ($a/(2*$val0))*(y - $y0)" );

$x1 = $x0 + non_zero_random(-.03,.03,.01);
$y1 = $y0 + non_zero_random(-.03,.03,.01);
$linval = $lin->eval( x=>$x1, y=>$y1 );

Context()->texStrings;
TEXT(beginproblem());
BEGIN_TEXT

${BBOLD}(a)$EBOLD
For \( g(x,y) = $g \),$BR
\( \nabla g($x0,$y0) = \) \{ ans_rule(35) \}

$PAR
${BBOLD}(b)$EBOLD
Find the best linear approximation of \( g(x,y) \) for \( (x,y) \)
near \( ($x0,$y0) \).$BR
Linear approximation = \{ ans_rule(35) \}

$PAR
${BBOLD}(c)$EBOLD
Use the approximation in part (b) to estimate \( g($x1, $y1) \).
$BR
\( g($x1,$y1) \approx \) \{ ans_rule(35) \}

END_TEXT
Context()->normalStrings;

ANS( $gr->cmp() );
ANS( $lin->cmp() );
ANS( $linval->cmp() );

## this is kludgy.  there should be a routine to do this
##    for us.
sub redfrac {
    my ( $n, $d ) = @_;
    ( $n, $d ) = reduce( $n, $d );

    if ( $n == 1 && $d == 1 ) {
        return 1;
    } elsif ( $n == 1 ) {
        return "\frac{1}{$d}";
    } elsif ( $d == 1 ) {
        return "$n";
    } else {
        return "\frac{$n}{$d}";
    }
}

$grx = redfrac( $x0, $val0 );
$gry = redfrac( $a, 2*$val0 );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

${BBOLD}(a)$EBOLD
We have
\[ g_x = \frac{x}{$g}, \quad \hbox{ so } g_x($x0, $y0) = $grx \]
and
\[ g_y = \frac{$a}{2 $g}, \quad \hbox{ so } g_y($x0, $y0) = $gry. \]
Thus
\[ \nabla g($x0,$y0) = $grx\, \vec i + $gry\, \vec j.\]

$PAR
${BBOLD}(b)$EBOLD
Using the value \(g($x0, $y0) = $val0\) and the partial derivatives
in part (a) we have
\[ g(x, y) = $g \approx  $val0 + $grx (x-$x0) + $gry (y-$y0).\]

$PAR
${BBOLD}(c)$EBOLD
Using the linearization in part (b), we have
\[ g($x1, $y1) \approx $val0 + $grx ($x0 - $x1) + $gry ($y0 - $y1) = $linval.\]

END_SOLUTION
Context()->normalStrings;

;

ENDDOCUMENT();
