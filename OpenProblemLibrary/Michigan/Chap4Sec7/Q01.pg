# DESCRIPTION
# Problem from Calculus, single variable, Hughes-Hallett et al., 4th ed.
# WeBWorK problem written by Gavin LaRose, <glarose@umich.edu>
# ENDDESCRIPTION

## Tagged by glr 12/19/08

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Indeterminate forms and L'Hopital's rule)
## Institution(University of Michigan)
## Author(Gavin LaRose)
## MLT(Indeterminate-LimitsFromGraphs)
## MLTleader(1)
## Level(4)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('4.7')
## Problem1('1')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('4.7')
## Problem2('1')
## TitleText3('Calculus')
## AuthorText3('Hughes-Hallett')
## EditionText3('6')
## Section3('4.7')
## Problem3('17')
## KEYWORDS('calculus','derivative','limits','lhopitals rule')

## Textbook tags
## HHChapter1('Using the Derivative')
## HHChapter2('Using the Derivative')


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGgraphmacros.pl",
"parserPopUp.pl",
# "parserNumberWithUnits.pl",
# "parserFormulaWithUnits.pl", 
# "parserFormulaUpToConstant.pl",
# "PGcourse.pl",
);

Context("Numeric");
$showPartialCorrectAnswers = 0;
# $refreshCachedImages = 1;

$gr1 = init_graph(0,-2,4,2,axes=>[0,0],size=>[250,250]);
$gr2 = init_graph(0,-2,4,2,axes=>[0,0],size=>[250,250]);
$gr1->lb('reset');
$gr2->lb('reset');
$gr1->moveTo(2,-0.15);  $gr1->lineTo(2,0.15,"black");
$gr2->moveTo(2,-0.15);  $gr2->lineTo(2,0.15,"black");
$gr1->lb( new Label(2,-0.17,"a","black","top","center") );
$gr2->lb( new Label(2,-0.17,"a","black","top","center") );

## pick four functions to graph; these are lines with positive or
##    negative slope, or parabolas.  This code allows us to reuse
##    one of the functions in the second graph.
# @whichf = ();
# $whichf[0] = random(1,5,1);
# $whichf[1] = $whichf[0] + non_zero_random( 1-$whichf[0], 5-$whichf[0], 1);
# $whichf[2] = random(1,5,1);
# $whichf[3] = $whichf[2] + non_zero_random( 1-$whichf[2], 5-$whichf[2], 1);
# if ( ( $whichf[0] == $whichf[2] && $whichf[1] == $whichf[3] ) ||
#      ( $whichf[0] == $whichf[3] && $whichf[1] == $whichf[2] ) ) {
#     ## then we got the same graphs
#     $whichf[2] = ( $whichf[2] == 5 ) ? 1 : $whichf[2] + 1;
#     $whichf[3] = ( $whichf[3] == 5 ) ? 1 : $whichf[3] + 1;
# }
## this is simpler, but doesn't allow the reuse.  This reduces variation
##    some, but whatever.
@whichf = (1..5)[shuffle(5)];

@f = ();
@df = ();
@d2f = ();
@desc = ();
foreach my $i ( 0, 1, 2, 3 ) {
    if ( $whichf[$i] == 1 ) {
	$f[$i] = Compute("x-2");
	$desc[$i] = "a COL line with positive slope passing through (a,0)";
    } elsif ( $whichf[$i] == 2 ) {
	$f[$i] = Compute("2-x");
	$desc[$i] = "a COL line with negative slope passing through (a,0)";
    } elsif ( $whichf[$i] == 3 ) {
	$f[$i] = Compute("4-2*x");
	$desc[$i] = "a COL line with a large negative slope passing through " .
	    "(a,0)";
    } elsif ( $whichf[$i] == 4 ) {
	$f[$i] = Compute("(x-2)^2");
	$desc[$i] = "a COL parabola opening upward with vertex (a,0)";
    } else {
	$f[$i] = Compute("-(x-2)^2");
	$desc[$i] = "a COL parabola opening downward with vertex (a,0)";
    }
    $df[$i] = $f[$i]->D();
    $d2f[$i] = $df[$i]->D();
}

add_functions( $gr1, "$f[0] for x in <0,4> using color:blue and weight:2",
	       "$f[1] for x in <0,4> using color:black and weight:2" );
add_functions( $gr2, "$f[2] for x in <0,4> using color:blue and weight:2",
	       "$f[3] for x in <0,4> using color:black and weight:2" );

@lim = ();
@l = ();
@grDesc = ();
@sol = ();
foreach my $i ( 0, 2 ) {
    $d0 = $df[$i]->eval(x=>2);
    $d1 = $df[$i+1]->eval(x=>2);
    $d20 = $d2f[$i]->eval(x=>2);
    $d21 = $d2f[$i+1]->eval(x=>2);
    if ( $d1 == 0 && $d0 != 0 ) {
	push( @l, "undefined" );
	push( @sol, "since \(f'(a) \ne 0\) and \(g'(a) = 0\), the " .
	      "limit is undefined." );
    } elsif ( $d1 == 0 ) {
	push( @l, ( $d20*$d21 > 0 ) ? "positive" : "negative" );
	$s1 = ( $d20 > 0 ) ? ">" : "<";
	$s2 = ( $d21 > 0 ) ? ">" : "<";
	push( @sol, "since \(f''(a) $s1 0\) and \(g''(a) $s2 0\), the " .
	      "limit is $l[-1]." );
    } elsif ( $d0 == 0 ) {
	push( @l, "zero" );
	push( @sol, "since \(f'(a) = 0\) and \(g'(a) \ne 0\), the " .
	      "limit is zero." );
    } else {
	push( @l, ( $d0*$d1 > 0 ) ? "positive" : "negative" );
	$s1 = ( $d0 > 0 ) ? ">" : "<";
	$s2 = ( $d1 > 0 ) ? ">" : "<";
	push( @sol, "since \(f'(a) $s1 0\) and \(g'(a) $s2 0\), the " .
	      "limit is $l[-1]." );
    }
    push( @lim, PopUp( ["?", "positive", "negative", "zero", "undefined"],
		       $l[-1] ) );

    $desc[$i] =~ s/COL/blue/;
    $desc[$i+1] =~ s/COL/black/;
    push( @grDesc, "$desc[$i], and $desc[$i+1]." );
}


TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

For the figures below, determine the nature of
\(\displaystyle \lim_{x\to a}\,\frac{f(x)}{g(x)}\),
if \(f(x)\) is shown as the blue curve and \(g(x)\)
as the black curve.
$PAR
$BCENTER
\{ begintable(2) \}
\{ row( image( insertGraph( $gr1 ), height=>250, width=>250, tex_size=>250,
	       extra_html_tags=>'alt="' . $grDesc[0] . '"' ),
	image( insertGraph( $gr2 ), height=>250, width=>250, tex_size=>250,
	       extra_html_tags=>'alt="' . $grDesc[1] . '"' ) ) \}
\{ row( "\(\displaystyle \lim_{x\to a}\,\frac{f(x)}{g(x)} =\)" .
	$lim[0]->menu(),
	"\(\displaystyle \lim_{x\to a}\,\frac{f(x)}{g(x)} =\)" .
	$lim[1]->menu() ) \}
\{ endtable() \}
$ECENTER

END_TEXT
Context()->normalStrings;

ANS( $lim[0]->cmp() );
ANS( $lim[1]->cmp() );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR

In either case, we use l'Hopital's rule,
\[ \lim_{x\to a} \frac{f(x)}{g(x)} = \frac{f'(a)}{g'(a)}. \]
$PAR
For the left graph, $sol[0].
$PAR
For the right graph, $sol[1].

END_SOLUTION
Context()->normalStrings;

COMMENT( 'MathObject version' );

ENDDOCUMENT();
