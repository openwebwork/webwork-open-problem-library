
## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Span)
## Date(10/5/2013)
## Institution(NAU)
## Author(Nandor Sieben)
## Level(2)
## MO(1)
## KEYWORDS('linear algebra','span')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"AnswerFormatHelp.pl",
"PGcourse.pl",
"MatrixReduce.pl",
"rank.pl",
);
$showPartialCorrectAnswers = 1;
TEXT(beginproblem()); 

Context('Matrix');

{
$a11= random(-5,5,1);
$a12= random(-5,5,1);
$a22= random(-5,5,1);
$b11= random(-5,5,1);
$b12= random(-5,5,1);
$b22= random(-5,5,1);
$A = Matrix([[$a11,$a12],[$a12,$a22]]);
$B = Matrix([[$b11,$b12],[$b12,$b22]]);
redo if(rank(Matrix([[$a11,$a12,$a22],[$b11,$b12,$b22],[0,0,0]]))<2);
}

$answer = $A+$B;
$answer = $A-$B if (rank($answer) == 0);

{
$answer2=Matrix([[random(-2,2,1),1],[1,random(-2,2,1)]]);
redo if (rank(Matrix([$a11,$a12,$a22],[$b11,$b12,$b22],
      [$answer2->element(1,1),$answer2->element(1,2),$answer2->element(2,2)])) == 2);
}

sub mycheck {
  my ($correct, $student, $ansHash) = @_;
  if ( ! $student->is_symmetric )
    { return 0; } 
  if ( rank($student) == 0 )
    { return 0; } 
  if (rank(Matrix([$a11,$a12,$a22],[$b11,$b12,$b22],
      [$student->element(1,1),$student->element(1,2),$student->element(2,2)])) == 2) {
    return 1;
  }
  return 0;
}

sub mycheck2 {
  my ($correct, $student, $ansHash) = @_;
  if ( ! $student->is_symmetric )
    { return 0; } 
  if (rank(Matrix([$a11,$a12,$a22],[$b11,$b12,$b22],
      [$student->element(1,1),$student->element(1,2),$student->element(2,2)]))==3) {
    return 1;
  }
  return 0;
}


Context()->texStrings;
BEGIN_TEXT
Let \(V\) be the vector space of symmetric \(2\times 2\) matrices and  
\(W\) be the subspace \[W=\text{span} \lbrace $A,$B \rbrace .\]
$BR
a. Find a nonzero element \(X\) in \( W \).

$BR
$BR

\( X = \)
\{ $answer->ans_array(2,2,5) \}

$BR
$BR

b. Find an element \(Y\) in \( V \) that is not in  \( W \).
$BR
\( Y = \)
\{ $answer2->ans_array(2,2,5) \}


END_TEXT
Context()->normalStrings;

ANS( $answer->cmp( checker=>~~&mycheck ) );
ANS( $answer2->cmp( checker=>~~&mycheck2 ) );

COMMENT('MathObject version.');

ENDDOCUMENT();


