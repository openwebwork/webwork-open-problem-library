##DESCRIPTION
## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(Diagonalization)
## Institution(NAU)
## Author(Nandor Sieben)
## MLT(diag3x3)
## MLTleader(1)
## Level(3)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('6.4')
## Problem1('')

##ENDDESCRIPTION

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",

  "PGcourse.pl"
);

TEXT(beginproblem());

Context('Matrix');

$showPartialCorrectAnswers = 0;

do {
$e1 = non_zero_random(-2,2);
$e2 = non_zero_random(-3,3);
$e3 = $e2;
} while ($e1 == $e2);

$D = Matrix([[$e1,0,0],[0,$e2,0],[0,0,$e3]]);

# do {

do {
  $a = random(-9,9);
  $b = random(-3,3);
  $c = random(-3,3);
  $d = random(-3,3);
  $e = random(-3,3);
  $f = random(-3,3);
  $g = random(-3,3);
  $h = random(-3,3);
  $i = random(-3,3);
  $P = Matrix([[$a,$b,$c],[$d,$e,$f],[$g,$h,$i]]);
} while (abs($P->det) != 1 );

$PI = $P->inverse();
$A= $P*$D*$PI;

# } while ($A->element(2,1)==0 and $A->element(3,1)==0 and $A->element(3,2)==0 and $A->element(1,2)==0 and $A->element(1,3)==0 and $A->element(2,3)==0);

$multians = MultiAnswer($P, $D)->with(
singleResult => 1,
checker => sub {
my ( $correct, $student, $self ) = @_;
my @s = @{$student};
my @c = @{$correct};
$sP = Matrix($s[0]);
if ($sP->det == 0) {
  $self->setMessage(1,"Not invertible.");
  return 0;
}

$sPI = $sP->inverse;
$sD = Matrix($s[1]);
if ($sD->element(1,2)!=0 or
    $sD->element(1,3)!=0 or
    $sD->element(2,1)!=0 or
    $sD->element(2,3)!=0 or
    $sD->element(3,1)!=0 or
    $sD->element(3,2)!=0
) {
  $self->setMessage(2,"Not diagonal.");
  return 0;
}
# warn $sP*$sD*$sPI;
return 0 if ($A != $sP*$sD*$sPI);
return 1;
}
);

Context()->texStrings;
BEGIN_TEXT

Let \(A = $A \). Find an invertible matrix \( P \) and a diagonal matrix \( D \) such that \( D = P^{-1}AP \).
$BR
\(P=\) \{$multians->ans_array(5)\}, \(D=\) \{$multians->ans_array(5)\}
END_TEXT

ANS($multians->cmp());

COMMENT('Eigenvalues are small integers, lambda1 != lambda2 = lambda3 ');
ENDDOCUMENT();

