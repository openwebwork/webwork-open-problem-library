# DESCRIPTION
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Examples)
## Institution(NAU)
## Author(Nandor Sieben)
## Level(3)
## MO(1)
## KEYWORDS('vector space')
## date 10/4/2013

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
);

COMMENT('');

Context("Numeric");
Context()->variables->add(a=>'Real');
Context()->variables->add(y=>'Real');

{
$c1=non_zero_random(-3,3,1);
$c2=non_zero_random(-3,3,1);
redo if ($c1==$c2);
}
{
$u1=random(-9,9,1);
$v1=random(-9,9,1);
$a=random(-9,9,1);
redo if ($u1==$c1 or $v1==$c1 or $a==$c1);
}
{
$u2=random(-9,9,1);
$v2=random(-9,9,1);
$a=random(-9,9,1);
redo if ($u2==$c2 or $v2==$c2);
}

$zero1 = Compute("$c1");
$zero2 = Compute("$c2");
$inverse1 = Formula("2*$c1-x")->reduce;
$inverse2 = Formula("2*$c2-y")->reduce;

$sum1 = Formula("$u1+$v1-$c1")->reduce;
$sum2 = Formula("$u2+$v2-$c2")->reduce;

$product1 = Formula("$a*$u1-$a*$c1+$c1")->reduce;
$product2 = Formula("$a*$u2-$a*$c2+$c2")->reduce;

$ca1= Formula("$c1*a")->reduce;
$ca2= Formula("$c2*a")->reduce;

TEXT(beginproblem());

Context()->texStrings;
BEGIN_TEXT
Let \( V={\mathbb R}^2\). For \( (u_1,u_2),(v_1,v_2) \in V\) and \(a\in{\mathbb R}\) 
define vector addition by \((u_1,u_2) \boxplus (v_1,v_2) := (u_1+v_1-$c1,u_2+v_2-$c2)\) and 
scalar multiplication by \( a \boxdot (u_1,u_2) := (au_1-$ca1+$c1,au_2-$ca2+$c2)\). 
It can be shown that \( (V,\boxplus,\boxdot) \) is a vector space over the scalar field \(\mathbb R \).
Find the following:
$PAR
the sum:
$PAR
\( ($u1,$u2)\boxplus ($v1,$v2) =\)(\{ans_rule(10)\},\{ans_rule(10)\})
$PAR
the scalar multiple:
$PAR
\( $a\boxdot ($u1,$u2) =\)(\{ans_rule(10)\},\{ans_rule(10)\})
$PAR
the zero vector:
$PAR 
\( \underline{0}_V =\)(\{ans_rule(10)\},\{ans_rule(10)\})
$PAR
the additive inverse of \(( x,y) \):
$PAR
\( \boxminus (x,y)= \)(\{ans_rule(20)\},\{ans_rule(20)\})


END_TEXT
Context()->normalStrings;

ANS( $sum1->cmp() );
ANS( $sum2->cmp() );
ANS( $product1->cmp() );
ANS( $product2->cmp() );
ANS( $zero1->cmp() );
ANS( $zero2->cmp() );
ANS( $inverse1->cmp() );
ANS( $inverse2->cmp() );

ENDDOCUMENT();
