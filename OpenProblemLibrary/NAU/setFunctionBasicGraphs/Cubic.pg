##DESCRIPTION
## DBsubject(Algebra)
## DBchapter(Polynomial equations and functions)
## DBsection(Zeros and multiplicities)
## Institution(NAU)
## Author(Nandor Sieben)
## MLT(MLT03)
## Level(3)
## MO(1)
## KEYWORDS('function','transformation','cubic')
##ENDDESCRIPTION

DOCUMENT();
loadMacros("PGstandard.pl",
	   "Parser.pl",
	   "PGnauGraphics.pl"
	  );

COMMENT("Plots the graphs of the answer and goal functions.");

TEXT(&beginproblem) ;

Context('Numeric');

$a = non_zero_random(-1,1,1);
$x1 = random(-3,1,1);
$x2 = random(-1,1,1);
$x3 = random(-1,3,1);


$dom = 8;
@gr_lab=(-$dom+1,$dom-1);

@opts = (-$dom, -$dom, $dom, $dom, 'axes'=>[0,0],'grid'=>[$dom, $dom],size=>[250,250]);

$f = Formula("$a(x-$x1)(x-$x2)(x-$x3)")->reduce;
$f->{limits} =[-$dom, $dom];

$graphf = init_graph(@opts);
# $fr = new Fun( sub {my $x = shift; $f->perl});
$fr = new Fun($f->perlFunction);
$fr->domain(-$dom,$dom);
$fr->steps(500);
$graphf->fn($fr);
$labelf = new Label(@gr_lab, 'f', 'blue' , 'center', 'center');
$graphf->lb($labelf);

#####################################################

$graph_eval = sub{
  my ($orig_in) = @_;
  
  my ($h, $view, $intex, $score, $ans_hash);
  
  $myeval = $f->cmp;    
  $ans_hash = $myeval->evaluate($orig_in);

  if ($orig_in ne ''){
    $h = Formula($orig_in)->reduce;
    $h->{limits} =[-$dom, $dom];
    $hr = new Fun($h->perlFunction);
    $hr->domain(-$dom,$dom);
    $hr->steps(500);
    $graph = init_graph(@opts);
    $graph->new_color('dkgreen',0,102,0);
    $hr->color('dkgreen');
    $graph->fn($fr);
    $graph->fn($hr);
    $tm = time;
    $graph->gifName($graph->gifName()."-$tm");
    $view = Plot($graph);
    $$ans_hash{student_ans} = $view;
  }
  $ans_hash;	      
};

#####################################################
BEGIN_TEXT
\{ Plot($graphf) \}
$PAR
Find the formula for \(f\).
$PAR
\(f(x)=\) \{ ans_rule(30) \}

$PAR
$BBOLD Hint: $EBOLD
You may write the function as \(f(x) = a(x-b)(x-c)(x-d)\) where \(a\), \(b\), \(c\), and \(d\), are integers.

END_TEXT
ANS($graph_eval);
ENDDOCUMENT();
