##DESCRIPTION
## DBsubject(Graph theory)
## DBchapter(Walks)
## DBsection(Eulerian)
## Institution(NAU)
## Author(Edgar Fisher)
## Level(2)
## KEYWORDS('graph', 'Euler', 'trail')
##ENDDESCRIPTION

# File Created: 6/14/05
# Location: Northern Arizona University

DOCUMENT();

loadMacros("PGstandard.pl",
	   "PGnauGraphtheory.pl",
          );      

TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;

$size        = random(5,7,1);  # number of vertices
$graph       = GReulertrail_size($size);
$letters     = join '', 'A'..'Z';
$offset      = random (0, 26 - $size, 1);
$labels      = substr $letters, $offset, $size ;
$vertices    = GRvertices_labels_size($labels, $size);
$graph       = GRshuffledgraph_graph($graph);

do {
  @slice = NchooseK($size,2);
  $new = ChangeWeight(@slice, 0, $graph);
} while ($new eq $graph);

$graph = $new;

$pic         = GRpic_graph_labels($graph,$labels);
$GoodFirstAns= 0;

######################################

$evaledge = sub {
  my $orig_in = shift;

  my ($poss, @vert, $intex, $score, $message, @vertlables);

  @vertlabels = GRvertexlist_edgesstr_labels($orig_in, $labels);

  $understood_in = join ', ', @vertlabels;

  foreach $val (@vertlabels){
    push @vert, GRvertex_label_labels($val, $labels);
  }

  $intex = join ',', @vertlabels;

  if ($orig_in eq '' || scalar @vertlabels < 2){
    $score = 0;
  } else {
    $score = 1;
    @matrix = GRmatrix_graph($graph);

    if ($matrix[$vert[0]][$vert[1]] != 0){
      $score = 0;
      $message = 'Edge already exists there.';
    } else {
      $poss = ChangeWeight(@vert, 1, $graph);
    }

    if ($score != 0){
      ($GoodFirstAns, $message) = GRhaseulertrail_graph($poss);
      if ($GoodFirstAns != 0){
        $graph = $poss;
      }  else {
      $score = 0;
      $message = 'No Euler trail possible.';
      }
    }
  }
  my $ans_hash = { score => $score,
                 correct_ans => '',
                 student_ans => "$understood_in",
		 preview_latex_string => $intex,
 		 original_student_ans => $orig_in,
                 ans_message => ($score) ? '' : $message
                };
};

######################################

$evalgraph = sub {
  my $orig_in = shift;

  my ($poss, @vert, $intex, $score, $message, @vertlables);

  @vertlabels = GRvertexlist_edgesstr_labels($orig_in, $labels);

  $understood_in = join ', ', @vertlabels;

  foreach $val (@vertlabels){
    push @vert, GRvertex_label_labels($val, $labels);
  }

  $intex = join ',', @vertlabels;

  if ($orig_in eq '' || scalar @vertlabels < 2){
    $score = 0;
    $message = '';
  }elsif ($GoodFirstAns != 1){
    $score = 0;
    $message = 'Incorrect answer to first part of question';
  } else {
    ($score, $message) = GRiseulertrail_graph_vertices($graph, @vert);
  }

  my $ans_hash = { score => $score,
                 correct_ans => '',
                 student_ans => "$understood_in",
		 preview_latex_string => $intex,
 		 original_student_ans => $orig_in,
                 ans_message => ($score) ? '' : $message
                };
};

######################################

BEGIN_TEXT
$PAR
\{Plot($pic)\}

$PAR
Consider the graph given above.  Add an edge so the resulting graph has an 
Euler trail (without repeating an existing edge).
\{ ans_rule(15) \}
$PAR
Now give an Euler trail through the graph with this new edge by listing 
the vertices in the order visited.$BR
\{ ans_rule(40) \} $BR
END_TEXT

ANS($evaledge);
ANS($evalgraph);


ENDDOCUMENT();
