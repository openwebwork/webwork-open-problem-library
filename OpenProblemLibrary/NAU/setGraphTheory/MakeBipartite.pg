##DESCRIPTION
## DBsubject(Graph theory)
## DBchapter(Terminology)
## Institution(NAU)
## Author(Edgar Fisher)
## Level(2)
## KEYWORDS('graph', 'tree', 'bipartite')
##ENDDESCRIPTION

# File Created: 6/16/05
# Location: Northern Arizona University

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGnauGraphtheory.pl",
  "PGcourse.pl"
);

COMMENT('Plots the graph in the answer.');

TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;

$size = random(5,7,1);  # number of vertices
$letters = join '', 'A'..'Z';
$offset = random(0, 25 - $size, 1);
$degree = random(3, $size-1,1);
$labels = substr $letters, $offset, $size ;     
$vertices = GRvertices_labels_size($labels,$size);
$vert = random(0, $size - 1, 1);
$vertlabel = GRlabel_vertex_labels($vert, $labels);

##########################################

$Bipartconnect = sub {
  my ($orig_in) = shift @_;
  
  my ($in, $pic, $tmp, $comp, $Tree, $view, $intex, $score, $graphin, $message, $Bipartite, @vertlabels);

  @vertlabels = GRvertexlist_edgesstr_labels($orig_in, $labels);

  if (scalar @vertlabels < 2){
    $score = 0;
    $view = '';
    $message = '';
  } else {
    $score = 1;
    $graphin = GRgraph_size_labels_edgesstr($size, $labels, $orig_in);
    $in = GRedgesstr_graph_labels($graphin, $labels);
    $intex = GRtex_braces($in);
    $pic = GRpic_graph_labels($graphin, $labels);
    $pic->gifName($pic->gifName()."-$in");
    $view = Plot($pic);
    ($Tree, $tmp) = GRistree_graph($graphin);
    $Bipartite = GRisbipartite_graph($graphin);
    $comp = GRncomponents_graph($graphin);

    if ($Tree == 1){
      $score = 0;
      $message = 'Is a tree.';

    } elsif ($comp > 1){
      $score = 0;
      $message = 'Not connected.';
    } elsif ($Bipartite == 0){
      $score = 0;
      $message = 'Is not bipartite.';
    }
  }
  my $ans_hash = new AnswerHash;
  $ans_hash->setKeys(
  score => $score,
  correct_ans => '',
  student_ans => $view,
  preview_latex_string => $intex,
  # original_student_ans => $orig_in,
  ans_message => ($score) ? '' : $message
  );
  return $ans_hash;
};

##########################################

$Bipartdegree = sub {
  my ($orig_in) = shift @_;

  my ($in, $pic, $view, $intex, $score, $graphin, $message, $actdegree, $Bipartite, @vertlabels);

  @vertlabels = GRvertexlist_edgesstr_labels($orig_in, $labels);

  if (scalar @vertlabels < 2){
    $score = 0;
    $view = '';
    $message = '';
  } else{
    $score = 1;
    $graphin = GRgraph_size_labels_edgesstr($size, $labels, $orig_in);
    $in = GRedgesstr_graph_labels($graphin,$labels);
    $intex = GRtex_braces($in);
    $pic = GRpic_graph_labels($graphin, $labels);
    $pic->gifName($pic->gifName()."-$in");
    $view = Plot($pic);
    $Bipartite = GRisbipartite_graph($graphin);
    $actdegree = GRdegree_graph_vertex($graphin,$vert);
    if ($actdegree != $degree){
      $score = 0;
      $message = 'Incorrect degree.';
    } elsif ($Bipartite == 0){
      $score = 0;
      $message = 'Not bipartite.';
    }
  }
  my $ans_hash = new AnswerHash;
  $ans_hash->setKeys(
  score => $score,
  correct_ans => '',
  student_ans => $view,
  preview_latex_string => $intex,
  # original_student_ans => $orig_in,
  ans_message => ($score) ? '' : $message
  );
  return $ans_hash;
};

##########################################

BEGIN_TEXT
$PAR
Construct a connected bipartite graph that is not a tree with vertices  \( $vertices \).
$PAR
What is the edge set?
\{ ans_rule(70) \}
$PAR
Construct a bipartite graph with vertices  \( $vertices \) such that
the degree of \($vertlabel\) is $degree.

$PAR
What is the edge set?
\{ ans_rule(70) \} 



END_TEXT

ANS($Bipartconnect);
ANS($Bipartdegree);

ENDDOCUMENT();
