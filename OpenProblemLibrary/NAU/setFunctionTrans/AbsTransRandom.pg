##DESCRIPTION
## DBsubject(Algebra)
## DBchapter(Transformations of functions and graphs)
## DBsection(Three or more transformations)
## Institution(NAU)
## Author(Edgar Fisher)
## Level(3)
## MO(1)
## KEYWORDS('function' , 'transformation')
##ENDDESCRIPTION


DOCUMENT();
loadMacros("PGstandard.pl",
	   "Parser.pl",
	   "parserFunction.pl",
	   "PGnauGraphics.pl"
	  );

COMMENT("Plots the graphs of the answer and goal functions.");

TEXT(&beginproblem) ;

Context('Numeric');

$s1 = random(-1,1,2);
$s2 = random(-1,1,2);
$type = random (0,1,1);
if ($type){
  $hor = 2;
  $vert = 2;
  $adj = 1/5;
  $x_adj = 2;
  parserFunction(f => "$s1 * (|x| * $adj * ($s2*x + $hor)**3 - 6 * $adj * ($s2*x + $hor)**2 + $vert)");
} else {
  $hor = 3;
  $vert = -8;
  parserFunction(f => "$s1 * (|$s2 * x + $hor| - 1/4 * |$s2 * x - 1 + $hor|
		    + 5/4 * |$s2 * x - 5 + $hor| + $vert)");
}

$dom = 12;
@def = (0,0);
$shift = random (0,1,1);
$val = non_zero_random(-3,3,1);
$def[$shift] = $val;

@a= ('','','','','','');
$rnd = random (0,1,1);
$a[$rnd] = '|';

if ($rnd == 0){
  $rnd = random(0,1,1);
  $a[$rnd + 4] = '|';
} else {
  $rnd = random(0,1,1);
  $a[$rnd + 2] = '|';
  if ($rnd == 0){
    $def[$shift] = -abs($val);
  }
}
$g = Formula("$a[0] f( $a[1] x $a[2] + $def[0] $a[3])$a[4] + $def[1] $a[5]")->reduce; # af(bx+c)+d
$g->{limits} =[-$dom, $dom];
@opts = (-$dom, -$dom, $dom, $dom, 'axes'=>[0,0],'grid'=>[$dom, $dom],size=>[250,250]);
@gr_lab = (-$dom + 1, $dom -1);

$graphf = init_graph(@opts);
$fr = new Fun( sub {my $x = shift; f($x)});
$fr->domain(-$dom,$dom);
$fr->steps(500);
$graphf->fn($fr);
$labelf = new Label(@gr_lab, 'f', 'blue' , 'center', 'center');
$graphf->lb($labelf);

$graphg = init_graph(@opts);
$gr = new Fun( $g->perlFunction);
$gr->domain(-$dom,$dom);
$gr->color('red');
$gr->steps(500);
$graphg->fn($gr);
$labelg = new Label(@gr_lab, 'g', 'red' , 'center', 'center');
$graphg->lb($labelg);

#####################################################

$graph_eval = sub{
  my ($orig_in) = @_;
  my ($h, $view, $intex, $score, $ans_hash);
  $myeval = $g->cmp;
  $ans_hash = $myeval->evaluate($orig_in);
  $formula = $$ans_hash{student_ans};
  if ($$ans_hash{ans_message} eq '' && $formula =~ /x/ && $formula =~ /f/){
    $h = Formula($formula)->reduce;
    $graph = init_graph(@opts);
    $graph->new_color('dkgreen',0,102,0);
    ($g,$h) = plot_functions($graph,                                                                                                              
       "$g for x in <-$dom,$dom> using color:red",                                                                                                 
       "$h for x in <-$dom,$dom> using color:dkgreen",                                                                                             
     );                                                                                                                                            
     $g->steps(250); $h->steps(250);   

#    $graph->gifName($graph->gifName().crypt($orig_in,"salt"));
    $tm = time;
    $graph->gifName($graph->gifName()."-$tm");
    $view = Plot($graph);
    $ans_hash->{student_ans} = $view;
  }
  else {
    $ans_hash->{ans_message}="Your answer must be a funtion containing f";
  }
  $ans_hash;
};

#####################################################
BEGIN_TEXT
\{BeginTable(center=>0).
Row([Plot($graphf), Plot($graphg)]).
EndTable()\}

$PAR
Find the formula for \(g\) in terms of \(f\).
$PAR
\(g(x)=\) \{ ans_rule(30) \}

END_TEXT
ANS($graph_eval);
ENDDOCUMENT();
