##DESCRIPTION
## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Newton's method)
## Institution(NAU)
## Author(Jim Swift)
## Level(3)
## KEYWORDS('derivatives', 'Newton's method')

## by Jim.Swift@nau.edu
## based on the problems in pl/setDerivatives11Newton
## Approximate a solution of an equation using Newton's method
## Newton's method converges in 6 to 19 iterates.
##ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(&beginproblem);
$showPartialCorrectAnswers = 1;

sub f1 {
	my ($z) = @_;
	exp($a*$z) - $m*$z -$b;
	}

sub fp {
	my ($z) = @_;
	$a*exp($a*$z)-$m;
	}

# Make a big loop, so that newton's method converges in 
# something from 6 to 19 steps.
do{
$a = non_zero_random(-3,3,1);
$m = non_zero_random(-5,5,1);
$b = non_zero_random(-10,8)+1; # $b = 1 gives x = 0 as a solution.

$exponent = nicestring([$a],['x']);
$lin = nicestring([$m,$b],['x','']);


$x1 = random(-5,5);

# newtons method starting from original $x1
$errorTol=.0000000001;
$x= $x1;
$count = 1;
$delta= 100;
# iterate
while ( (abs( $delta) > $errorTol && $count < 20) )  {
        $count++;
        if(fp($x) == 0){$count = 20}; # won't converge
	$delta = fp($x) == 0 ? 1 :f1($x)/fp($x); # check for zero tangents
	$x = $x-$delta;
        if($count == 2){$x2 = $x};
        if($count == 3){$x3 = $x};
	} # quit if the answer doesn't change much or
	  # the iteration has gone one too long.

} while($count < 6 || $count > 19);
TEXT(EV2(<<EOT));
Use Newton's method to approximate a solution of the equation
 \(  e^{$exponent} = $lin  \), starting with the initial guess
indicated.
$BR
\( x_1 = $x1 \). $BR
\( x_2 = \) \{ans_rule(10) \} .$BR
\( x_3 = \) \{ans_rule(10) \} .$BR
The solution to the equation found by Newton's method is \(x = \) \{ans_rule(10) \} .
EOT

# I decided to take out relTol, and make sure that Newton's method took at least
# 6 iterations to converge.  The default accuracy is used.
#ANS(num_cmp($x2, relTol => .01));
ANS(num_cmp($x2));
ANS(num_cmp($x3));
ANS(num_cmp($x));

ENDDOCUMENT();        # This should be the last executable line in the problem.
