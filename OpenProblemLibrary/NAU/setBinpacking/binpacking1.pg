##DESCRIPTION
## DBsubject(Operations research)
## DBchapter(Algorithms)
## DBsection(Bin packing)
## Institution(NAU)
## Author(N.Spencer Sitton)
## MLT(or-bin-mixed)
## Level(2)
## KEYWORDS('bin packing')
##ENDDESCRIPTION

# File Created: 06/13/05
# Location: Northern Arizona University
# Course: MAT 114

DOCUMENT();     
loadMacros("PGbasicmacros.pl",     
           "PGchoicemacros.pl",     
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl", 
           "PGnauBinpacking.pl",   
);     

TEXT(&beginproblem) ;
$showPartialCorrectAnswers = 1;
do{
  @list = ();
  @newlist1 = ();  
  $min = random( 5, 10, 1 );
  $max = random( 29, 25, 1 );;
  $n = random( 10, 15, 1);
  for( $i = 0; $i < $n; $i++ ){
    push @list, random( $min, $max, 1 );
  }
  $time = random( 2, 5, 1 );
  $binsize = random( 150, 360, 30 );
  $minutes = $binsize / 60;

  foreach $val( @list ){ $newval = $val * $time;
   push @newlist1, $newval; 
  }

  @alg = ( 'next-fit', 'first-fit', 'worst-fit',' next-fit-decreasing', ' worst-fit-decreasing', 'first-fit-decreasing' ); 
  @ans = ( max( PGnextfit( $binsize, @newlist1) ), max( PGfirstfit( $binsize, @newlist1) ), max( PGworstfit( $binsize, @newlist1 ) ), 
           max( PGdnextfit( $binsize, @newlist1) ), max( PGdworstfit( $binsize, @newlist1) ), max( PGdfirstfit($binsize,@newlist1) ) );

  @slice = NchooseK( 6, 2 );

  $ans1 = $ans[$slice[0]];
  $ans2 = $ans[$slice[1]];
} until( $ans1 != $ans2 );

for( $i = 0; $i < ( $n -  2 ); $i++ ){ $num = $list[ $i ];
push @newlist2, $num;}
push @newlist2,  $list[ $n - 2 ].' and '.$list[$n - 1]; 

BEGIN_TEXT

It takes $time seconds to print one page. Reports of  \{join ", ", @newlist2;\} pages are to be printed. 
$PAR
(a) How many printers 
would be required, using the $alg[$slice[0]] algorithm, to guarantee that all reports are printed in $minutes minutes or less?
$BR
Answer: \{ans_rule(15)\}$PAR
(b) How many printers would be required if the $alg[$slice[1]] algorithm  were used?
$BR
Answer: \{ans_rule(15)\}
$BR

END_TEXT

ANS( num_cmp( $ans1 ) );
ANS( num_cmp( $ans2 ) );

ENDDOCUMENT();
 

