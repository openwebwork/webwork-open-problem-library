## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## KEYWORDS('vector' 'double integral' 'multivariable' 'surface integral')
## Tagged by tda2d

## DBsubject('Calculus')
## DBchapter('Vector Calculus')
## DBsection('Surface Integrals')
## Date('')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('16.5')
## Problem1('')

DOCUMENT();

# Load whatever macros you need for the problem
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
          );
##################################
## Begin the code section
Context("Numeric")->variables->
are(x=>'Real',y=>'Real',z=>'Real',u=>'Real',v=>'Real');

## The parameterized surface
$a = random(2,6);
($p,$q) = reduce(2,$a);
$umin = Real(0);
$umax = Real(random(3,7));
$vmin = Real(0);
$vmax = Real($p*pi/$q);
$x = Formula("u*cos($a*v)")->reduce;
$y = Formula("u*sin($a*v)")->reduce;
$z = Formula("v")->reduce;


# the function f
$f = Formula("x^2+y^2+z^2")->reduce;
$fuv = $f->substitute(x=>$x,y=>$y,z=>$z)->reduce;

# The volume element
Context("Vector");
Context("Vector")->variables->are(x=>'Real',y=>'Real',u=>'Real',v=>'Real');
$r = Vector("$x","$y","$z");
$ru = $r->D('u')->reduce;
$rv = $r->D('v')->reduce;
$prod = Vector("$ru >< $rv");

Context()->texStrings;
BEGIN_TEXT

Suppose that surface \(\sigma\) is parameterized by
$BCENTER
\(r(u,v) = $r\), \($umin\leq u\leq $umax\) and \($vmin \leq v\leq \frac {$p\pi}{$q}\)
$ECENTER
and \(f(x,y,z) = $f\). Then the surface integral 
\[\int\limits_\sigma\!\!\int f(x,y,z)dS = \int\limits_R\!\!\int f\left(x(u,v),y(u,v),z(u,v)\right)\left\Vert\frac{\partial r}{\partial u}\times\frac{\partial r}{\partial v}\right\Vert dA=\int_a^b\int_c^d F(u,v)\left\Vert G(u,v)\right\Vert dudv\] 
$BR
where
$BR
a = \{ans_rule()\}
$BR
b = \{ans_rule()\}
$BR
c = \{ans_rule()\}
$BR
d = \{ans_rule()\}
$BR
F(u,v) = \{ans_rule()\}
$BR
G(u,v) = \{ans_rule()\}
END_TEXT
Context()->normalStrings;
ANS($vmin->cmp);
ANS($vmax->cmp);
ANS($umin->cmp);
ANS($umax->cmp);
ANS($fuv->cmp);
ANS($prod->cmp);

ENDDOCUMENT();
