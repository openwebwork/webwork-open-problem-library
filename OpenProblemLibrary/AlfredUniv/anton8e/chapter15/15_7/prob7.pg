## DESCRIPTION
##   Identify Level Curves
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Calculus - multivariable)
## DBchapter(Integration of multivariable functions)
## DBsection(Triple integrals in cylindrical and spherical)
## Institution(Alfred University)
## Author(Darwyn Cook)
## MLT(VolumeBetweenConeAndSphere)
## Level(2)
## TitleText1('Calculus: with Early Transcendentals')
## AuthorText1('Anton')
## EditionText1('8')
## Section1('15.7')
## Problem1('')
## KEYWORDS('Multivariable','Triple Integral','Spherical','Cylindrical')
## RESOURCES('snowcone.gif')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "Parser.pl",
  "unionTables.pl",
  "Alfredmacros.pl",
  "MathObjects.pl",
  "PGcourse.pl"
);


TEXT(beginproblem());
BEGIN_PROBLEM();
$showPartialCorrectAnswers = 1;
Context()->variables->are(
       x=>'Real',
       y=>'Real',
       z=>'Real',
       r=>'Real',
       theta=>'Real',
       phi=>'Real',
       rho=>'Real'
); 

$r= random(2,5);
$i = $r/sqrt(2);

### Set limits for the answer checkers, so that for example sqrt(r^2)=r
Context()->variables->set(r=>{limits=>[0,$r]},
                          theta=>{limits=>[0,2*pi]},
                          phi=>{limits=>[0,pi]},
                          rho=>{limits=>[0,$r]} );
##############################################
# GIF Setup

$size = [150,150];   # the size of the images
$tsize = 300;        # tex size of images

#
#  The GIF
#

$graph = Image('snowcone.gif',size=>$size,tex_size=>$tsize,tex_center=>1);

#######################################################
# Prevent students from being able to double click in
# an answer box. In these problems that will show them
# the code for the answer blank in a pop up, not harmful
# but disruptive.


##############################################
#  Main text
Context()->texStrings;
BEGIN_TEXT
\{  BeginTable().
    AlignedRow([$graph]).
  EndTable();\}
$PAR
A solid is bounded below by the cone, \(z=\sqrt{x^2+y^2}\), and bounded above by the sphere of radius $r centered at the origin. Find integrals that compute its volume  using Cartesian, cylindrical, and spherical coordinates. For your answers \(\theta = \) theta, \(\phi = \) phi, and \(\rho = \) rho.
$BR
$BR
Cartesian
$BR
\{ BeginTable(center=>0).
     Row(['\(\displaystyle\int_a^b\int_c^d\int_e^f p(x,y,z) \,dz\,dy\,dx = \)',tableintegral(width=>10),tableintegral(width=>10),tableintegral(width=>10),ans_rule,'\(\hspace{5pt}dz\,dy\,dx \)',
     ],separation=>2).
   EndTable();
\}
$BR
Cylindrical
$BR
\{ BeginTable(center=>0).
     Row(['\(\displaystyle\int_a^b\int_c^d\int_e^f f(r,\theta,z) \,dz\,dr\,d\theta =  \)',tableintegral(width=>10),tableintegral(width=>10),tableintegral(width=>10),ans_rule,'\(\hspace{5pt}dz\,dr\,d\theta\)',
     ],separation=>2).
   EndTable();
\}
$BR
Spherical
$BR
\{ BeginTable(center=>0).
     Row(['\(\displaystyle\int_a^b\int_c^d\int_e^f g(\rho,\theta,\phi) \,d\rho \,d\theta \,d\phi =\)',tableintegral(width=>5),tableintegral(width=>10),tableintegral(width=>10),ans_rule,'\(\hspace{5pt}d\rho \,d\theta\ \,d\phi\)',
     ],separation=>2).
   EndTable();
\}
$BR

END_TEXT
Context()->normalStrings;
##################################################
#  Answers - using formula instead of compute gives the student less hints with # their answers, it won't tell them if their answers should be a number.

# Cartesian
ANS(Formula("-$i")->cmp);
ANS(Formula("$i")->cmp);
ANS(Formula("-sqrt($i^2-x^2)")->cmp);
ANS(Formula("sqrt($i^2-x^2)")->cmp);
ANS(Formula("sqrt(x^2+y^2)")->cmp);
ANS(Formula("sqrt($r^2-x^2-y^2)")->cmp);
ANS(Formula("1")->cmp);
# Cylindrical
ANS(Formula("0")->cmp);
ANS(Formula("2*pi")->cmp);
ANS(Formula("0")->cmp);
ANS(Formula("$i")->cmp);
ANS(Formula("r")->cmp);
ANS(Formula("sqrt($r^2-r^2)")->cmp);
ANS(Formula("r")->cmp);
# Spherical
ANS(Formula("0")->cmp);
ANS(Formula("pi/4")->cmp);
ANS(Formula("0")->cmp);
ANS(Formula("2*pi")->cmp);
ANS(Formula("0")->cmp);
ANS(Formula("$r")->cmp);
ANS(Formula("rho^2*sin(phi)")->cmp);

##################################################

END_PROBLEM();
ENDDOCUMENT();        # This should be the last executable line in the problem.
