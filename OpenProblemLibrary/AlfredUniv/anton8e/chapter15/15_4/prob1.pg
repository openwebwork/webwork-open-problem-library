## DESCRIPTION
##   Use Level Curves to Identify Critical Points
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Calculus - multivariable)
## DBchapter(Concepts for multivariable functions)
## DBsection(Parameterized surfaces)
## Institution(Alfred University)
## Author(Cook)
## MLT(MatchParametricSurfaceWithDescription)
## Level(4)
## TitleText1('Calculus: with Early Transcendentals')
## AuthorText1('Anton')
## EditionText1('8')
## Section1('15.4')
## Problem1('')
## KEYWORDS('Graph', 'Critical Point', 'Multivariable', 'Level Curve', 'Saddle')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "Parser.pl",
  "MathObjects.pl",
  "PGcourse.pl"
);


TEXT(beginproblem());
BEGIN_PROBLEM();
Context("Numeric");
Context()->strings->are(
  'A' => {},
  'B' => {},
  'C' => {},
  'D' => {},
  'E' => {},
);

$a = random(2,10);
$b = random(2,10); if ($b == $a){$b = 2*$b}

##############################################
#  Setup


##############################################
#  Main text
Context()->texStrings;
BEGIN_TEXT
  Match the parametric curve or surface with the correct description.
$BR
\(x = \cos($a\theta), y = \sin($a\theta), z = $b\) \{ans_rule(10)\}
$BR
\(x = $a\cos(\theta), y = $a\sin(\theta), z = $b\) \{ans_rule(10)\}
$BR
\(x = \cos(t), y = \sin(t), z = t\) \{ans_rule(10)\}
$BR
\(x = \cos($b t), y = \sin($b t), z = s\) \{ans_rule(10)\}
$BR
\(x = $a\sin(-\theta), y = $a\cos(\theta),z = $b\) \{ans_rule(10)\}
$PAR
A) A curve on the cylinder \(x^2 + y^2 = 1\).
$BR
B) A curve on the cylinder \(x^2 + z^2 = 1\).
$BR
C) A curve on the cylinder \(x^2 + y^2 = $a^2\).
$BR
D) The cylinder \(x^2 + y^2 = 1\).
$BR
E) A curve on the cylinder \(x^2 + z^2 = $a^2\).
  
END_TEXT
Context()->normalStrings;
##################################################
#  Answers

$showPartialCorrectAnswers = 0;

ANS(Compute("A")->cmp);
ANS(Compute("C")->cmp);
ANS(Compute("A")->cmp);
ANS(Compute("D")->cmp);
ANS(Compute("C")->cmp);

##################################################

END_PROBLEM();
ENDDOCUMENT();        # This should be the last executable line in the problem.
