##DESCRIPTION
#
# File Created: 7/10/2008
# Last Modified: 7/10/2008
# Problem Author: Darwyn Cook
# WeBWorK Entry: 
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS('limits' 'epsilon' 'delta' 'rigorous')
##

## DBsubject('Calculus')
## DBchapter('Limits and Derivatives')
## DBsection('Limits Rigorously')
## Date('7/10/2008')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('2.4')
## Problem1('')


DOCUMENT();        # This should be the first executable line in the problem.
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl");

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

TEXT($BEGIN_ONE_COLUMN);
$refreshCashedImages= 1;

Context()->strings->are(blue=>{},red=>{},black=>{},green=>{});
Context()->{format}{number} = "%.8g";
$answertolerance = 0.000003;
$functioncolor = String(black);
$epsiloncolor = String(red);
$epsilon = random(.001, .01,.0001);
$a = random(-3,3,.01);

##############################################################
# Check for student input
if (defined $inputs_ref->{'xmin'} ) {
     $xmin = $inputs_ref->{'xmin'};
}
elsif (defined $in{'xmin'} ) {
	$xmin = $in{'xmin'};
}
else {
	 $xmin = $a-1;
}
# set increment value for y
if (defined $inputs_ref->{'xmax'} ) {
     $xmax = $inputs_ref->{'xmax'};
}
elsif (defined $in{'xmax'} ) {
	$xmax = $in{'xmax'};
}
else {
	 $xmax = $a+1;
}
if (defined $inputs_ref->{'ymin'} ) {
     $ymin = $inputs_ref->{'ymin'};
}
elsif (defined $in{'ymin'} ) {
	$ymin = $in{'ymin'};
}
else {
	 $ymin = -20;
}
# set increment value for y
if (defined $inputs_ref->{'ymax'} ) {
     $ymax = $inputs_ref->{'ymax'};
}
elsif (defined $in{'ymax'} ) {
	$ymax = $in{'ymax'};
}
else {
	 $ymax = 20;
}

#####################################################
## This code allows the student to input an arithmetic
## expression, which we reduce to a number. Otherwise
## the graph object will complain in an unfriendly way.
$xmin=Real("$xmin")->reduce;
$xmax=Real("$xmax")->reduce;
$ymin=Real("$ymin")->reduce;
$ymax=Real("$ymax")->reduce;
$xmin->with(
  tolType=>'absolute', tolerance=>'.0000001');
$xmax->with(
  tolType=>'absolute', tolerance=>'.0000001');
$ymin->with(
  tolType=>'absolute', tolerance=>'.0000001');
$ymax->with(
  tolType=>'absolute', tolerance=>'.0000001');

#####################################################
## Better check the student input, they won't like the 
## result if they input the coordinates backwards
if ($xmin > $xmax){
    $xmin = $xmax-1;
    BEGIN_TEXT
    $BBOLD XMIN MUST BE LESS THEN XMAX!$EBOLD
    $BR 
    END_TEXT
} 
if ($ymin >= $ymax){
    $ymin = $ymin-1;
    BEGIN_TEXT
    $BBOLD YMIN MUST BE LESS THEN YMAX!$EBOLD
    $BR 
    END_TEXT
} 

#####################################################
## Define the functions

$f = Formula("sin(pi*(x^2))");
$dfdx = $f->D('x');
$m = $dfdx->eval(x=>$a)->with(
  tolType=>'absolute', tolerance=>$answertolerance);
while ($m == 0){
     $a = random(-3,3,.01);
     $m = $dfdx->eval(x=>$a);}
$y = $f->eval(x=>$a)->with(
  tolType=>'absolute', tolerance=>$answertolerance);
$fplusepsilon = Formula("$y+$epsilon");
$fminusepsilon = Formula("$y-$epsilon");


######################################################
## Now we are going to use the quadratic Taylor series approximation
## to f to estimate delta. Close enough for this application.
## First we define the coefficients $a0+$a1x+$a2x^2
$dfdxdx = $dfdx->D('x');
$c = $dfdxdx->eval(x=>$a);
#$a1 = Real("$m-$a*$c");
#$a2 = Real("$a^2*$c/2");
#$delta = Real("
#(-(2*$a2*$x+$a1)+sqrt((2*$a2*$x+$a2)^2+4*$a2*$epsilon))/(2*$a2)")->with(tolType=>'absolute', #tolerance=>'.00001');
######################################################
## This would be the tangent line approximation
$delta = Real(abs($epsilon/$m))->with(
  tolType=>'absolute', tolerance=>'0.000003');;

######################################################
## Generate the graphs

$size = [200,250];
$tex_size = 350;

## initialize the graph and add the functions in
$gr = init_graph($xmin,$ymin,$xmax,$ymax,axes=>[$a,$y],size=>[400,400]);
add_functions($gr, 
  "$f for x in <$xmin,$xmax> using color:$functioncolor and weight:2");
add_functions($gr, 
  "$fplusepsilon for x in <$xmin,$xmax> using color:$epsiloncolor and weight:1");
add_functions($gr, 
  "$fminusepsilon for x in <$xmin,$xmax> using color:$epsiloncolor and weight:1");
$gr->stamps( closed_circle($a,$y,'black') );
$in=time();
$gr->gifName($gr->gifName()."$in");

#######################################################
## The code to generate student input boxes

$len = 1;
$INPUTSPACEXMIN = M3( qq! \\rule{${len}in}{.01in}!,
               qq!\begin{rawhtml}<INPUT TYPE = "TEXT" NAME="xmin"
                  VALUE="$xmin">\end{rawhtml}!,
              qq!<INPUT TYPE = "TEXT" NAME="xmin" VALUE="$xmin">!
              );
$INPUTSPACEXMAX = M3( qq! \\rule{${len}in}{.01in}!,
               qq!\begin{rawhtml}<INPUT TYPE = "TEXT" NAME="xmax"
                  VALUE="$xmax">\end{rawhtml}!,
              qq!<INPUT TYPE = "TEXT" NAME="xmax" VALUE="$xmax">!
              );
$INPUTSPACEYMIN = M3( qq! \\rule{${len}in}{.01in}!,
               qq!\begin{rawhtml}<INPUT TYPE = "TEXT" NAME="ymin"
                  VALUE="$ymin">\end{rawhtml}!,
              qq!<INPUT TYPE = "TEXT" NAME="ymin" VALUE="$ymin">!
              );
$INPUTSPACEYMAX = M3( qq! \\rule{${len}in}{.01in}!,
               qq!\begin{rawhtml}<INPUT TYPE = "TEXT" NAME="ymax"
                  VALUE="$ymax">\end{rawhtml}!,
              qq!<INPUT TYPE = "TEXT" NAME="ymax" VALUE="$ymax">!
              );

########################################################
## The problem
Context()->texStrings;
BEGIN_TEXT
\{ image( insertGraph($gr),, width=>400, height=>400,tex_size=>250) \}
$PAR
Use the graph of f to find \(\delta\) so that \(\vert f(x) - f(a)\vert <$epsilon\) when \(\vert x-a\vert < \delta\) if \(a = $a\) and \(f(a) = $y\). 
$BR
\(\delta = \) \{ans_rule(20)\}
$BR
To change the graph enter values for 
$PAR
x min = $INPUTSPACEXMIN      x max= $INPUTSPACEXMAX 
$PAR
y min = $INPUTSPACEYMIN      y max= $INPUTSPACEYMAX 
$BR and then press the Submit Answer button.
$PAR
$BBOLD Note: $EBOLD \(f(a) + \epsilon\) and \(f(a)-\epsilon\) are graphed in red to help you find \(\delta\). Mathematically speaking, once you have found \(\delta\) any smaller number will also work for \(\delta\). Since that would make the problem rather easy, you could just put in a very small number, for this problem you will need to find the largest delta that will work. Your answer must be within $answertolerance of the correct answer.
END_TEXT
BEGIN_HINT
$BR
$BR
$BBOLD HINT $EBOLD
$BR
\(\epsilon\) determines the vertical size of the window, you want it at \($y-\epsilon\) and \($y+\epsilon\). The horizontal spacing you will have to guess at, how will you know when you have it right.
END_HINT
BEGIN_SOLUTION
$BR
$BR
$BBOLD SOLUTION $EBOLD
$BR
You have the correct horizontal window when the graph exits the corners of the windows.
END_SOLUTION
Context()->normalStrings;
ANS($delta->cmp);
ENDDOCUMENT();        # This should be the last executable line in the problem.
