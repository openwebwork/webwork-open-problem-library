## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## KEYWORDS ('differential equation reduction constant coefficient LRC')
## Tagged by cmd6a 4/26/06

## DBsubject('Calculus')
## DBchapter('Differential Equations')
## DBsection('Reduction of Order')
## Date('2/19/10')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Differential Equations: with Boundary Value Problems')
## EditionText1('6')
## AuthorText1('Zill')
## Section1('4.2')
## Problem1('')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "MathObjects.pl",
           "contextFraction.pl",
           "answerHints.pl");

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###########################################################################
##
## We will generate the coefficients on the equation so that the auxiliary 
## equation will have the form (m-a)(m-b). After we get the coefficients 
## a and b computed we will try write everything after that in terms of 
## a and b when possible, making the problem customizable in terms of the roots 
##

Context("Fraction");
$Lden = Compute(random(1,9));
$L = Compute("1/$Lden");
$p = Compute(random(-9,-2));
$q = Compute(random(1,3));
if ( ($p)**2 == ($q)**2 ){$q++;};
$R = Compute("-2*$p*$L");
$Cnum = Compute("$L*(($p)^2-($q)^2)");
$C = Compute("1/($Cnum)");
$a = Compute($p-$q);
$b = Compute($p+$q);
$ab = Compute($a*$b);
$aandb = Compute(-($a+$b));
$aminusb = Compute($a-$b);

## We need to do a little work to get fractions to print. We could do this 
## with Latex, but latex won't reduce the coefficients, which are randomly
## generated.

Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->add("q"=>"Real","q'"=>"Real","q''"=>"Real");
Context()->variables->set("q'" => {TeX => '\frac{dq}{dt}'},"q''" => {TeX => '\frac{d^2q}{dt^2}'});
$diffeqn = Formula("$L*q''+$R*q'+$Cnum*q")->reduce;

#########################################################
##
## Set up the context to allow ' in variable names
##
Context("Numeric");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are("u'"=>"Real","u''"=>"Real","t"=>"Real","E"=>"Real");
Context()->{error}{msg}{"Variable 'u' is not defined in this context"} 
= "You need to reduce this equation to proceed, there should not be any u terms present, only u' and u''.";
$newequation = Context()->copy;
Context()->variables->add("q"=>"Real","q'"=>"Real","q''"=>"Real","u"=>"Real","m"=>"Real");
Context()->variables->set("q'" => {TeX => '\frac{dq}{dt}'},"q''" => {TeX => '\frac{d^2q}{dt^2}'});

##########################################################################
##
## Formulas working up to the reduced equation
##

$standard = Formula("q''-($a+$b)q' + $ab*q")->reduce;
$auxeqn = Formula("m^2-($a+$b)m+$ab")->reduce;
$factors = List($a,$b);
$y1 = Formula("e^($a*t)")->reduce;
$y2 = Formula("e^($b*t)")->reduce;
$y3 = Formula("e^(-$a*t)")->reduce;
$homogeneous = List($y1,$y2);

$dyp = Formula("$y1*($a*u+u')");
$d2yp = Formula("$y1*(($a)^2*u+2*$a*u'+u'')");


$reducedequation = Formula($newequation,"$y1*(u''+($a-$b)*u')");


$left = Formula($newequation,"u''+$aminusb*u'")->reduce;
$right = Formula("$Lden*E*$y3")->reduce;

$int = Formula("e^($aminusb*t)"); # integrating factor for both examples
######################################################################
##
## E is a constant
##
Context()->variables->add(b=>"Real");

$dcright = Formula("-$Lden*E*$y3/$a");
$dcu = Formula("$Lden*E/$ab*$y3+b*e^(-($aminusb)t)");
$dcsolution = Formula("$Lden*E/$ab+b*$y2");


######################################################################
##
## E =sin(pt)
##
Context()->variables->add(p=>"Real");
$acright = Formula("$Lden*(-p/(($a)^2+p^2)*exp(-$a*t)*cos(p*t)-$a/(($a)^2+p^2)*exp(-$a*t)*sin(p*t))");
$yp = Formula("$Lden/((($a)^2+p^2)(($b)^2+p^2))*($a*p*cos(p*t)+$b*$a*sin(p*t)+$b*p*cos(p*t)-p^2*sin(p*t))");
$acu = Formula("$y3*(b*e^(($b)*t)+$yp)")->reduce;
$acsolution = Formula("b*e^(($b)*t)+$yp")->reduce;

Context()->texStrings;
BEGIN_TEXT
Consider the equation for the charge on a capacitor in an LRC circuit
\[$diffeqn = E\]
which is linear with constant coefficients.
$BR
$BR
First we will work on solving the corresponding homogeneous equation. Divide through the equation by the coefficient on \(\frac{d^2q}{dt^2}\),
and find the auxiliary equation (using m as your variable) \{$auxeqn->ans_rule(25)\} \(= 0\) which has roots \{$factors->ans_rule(15)\}.
$BR
$BR
The solutions of the homogeneous equation are \{$homogeneous->ans_rule\}
$BR
$BR
Now we are ready to solve the nonhomogeneous equation  \($standard = $Lden E\).
We will use \($y1\) to do reduction of order (it doesn't matter which one of the homogenous solutions we choose), which will give us a particular solution of the nonhomogeneous equation. With this choice the particular solution has the form 
$BR
\(y_p = ue^{$a t}\).
$BR
Then (using the prime notation for the derivatives)
$BR
\(y_p^\prime = \) \{$dyp->ans_rule(25)\}
$BR
\(y_p^{\prime\prime} = \)  \{$d2yp->ans_rule(30)\}
$BR
So, plugging \(y_p\) into the left side of the differential equation, and reducing, we get
$BR
$BCENTER \(y_p^{\prime\prime}+$aandb y_p^\prime + $ab y_p = \) \{$reducedequation->ans_rule(30)\} $ECENTER
$BR
$BR

Using this reduced form, moving the term \($y1\) to the right side of the equation, we can rewrite \(y_p^{\prime\prime}+$aandb y_p^\prime + $ab y_p= $Lden E\)  in terms of \(u^{\prime\prime}\) and \(u^\prime\) as 
$BR
$BCENTER \{$left->ans_rule\} \(=\) \{$right->ans_rule\} $ECENTER
$BR
$BR
At this point to solve for u we want to integrate both sides, but to do that we need to integrate E. We will look at two special cases for E so that you get the idea how to proceed.
$BR
$BR
$BBOLD Case 1: E is a constant $EBOLD(DC voltage).
$BR
Then integrating both sides
$BR
\(u'+$aminusb u = \) \{$dcright->ans_rule\} (we don't use a constant when we do this integration, it turns out to be redundant)
$BR
This is a linear equation with integrating factor \{$int->ans_rule\}
$BR
Solving this equation, using b as our constant, we get that 
$BR
\(u = \) \{$dcu->ans_rule\}
$BR 
Plugging this back into \(y_p\) we finally find that 
$BR 
\(y_p =\) \{$dcsolution->ans_rule\}
$BR
Making the general solution \(y = a $y1 + y_p = a $y1 + b $y2 + \frac{$Lden E}{$ab}\). Notice that we already knew that \($y1\) and \($y2\) where solutions to the homogeneous equation, we just did all that work to figure out that the constant \(\frac{$Lden E}{$ab}\) is a solution of the nonhomogeneous equation, which is kind of obvious when you look at it. Now lets do an example where the answer will not be so obvious. 
$BR
$BR
$BBOLD Case 2:  E = sin(pt) $EBOLD (AC voltage). 
$BR
You might want to break out your TI-89, Maple, Mathematica, etc for this one. Or you can practice up your integration by parts, a lot.
$BR
Starting with the equation from above, \($left = $right\),
integrating both sides (again without using a constant) we get
$BR
\(u'+$aminusb u = \) \{$acright->ans_rule(70)\}
$BR
This is a linear equation with integrating factor \{$int->ans_rule\}, just like the example above. Solving this equation, using b as our constant, we get
$BR
\(u = \) \{$acu->ans_rule(90)\}
$BR 
Plugging this back into \(y_p\) we finally find that 
$BR 
\(y_p =\) \{$acsolution->ans_rule(60)\}
$BR
Making the general solution \(y = a $y1 + y_p = a $y1 + $acsolution\)
$BR
Since we already knew that \($y1\) and \($y2\) were solutions to the homogeneous equation, what we really worked out here is that the particular solution is \($yp\). Going back to look at our calculations, we could have done the integrations above without using constants, and pieced the solution together using superposition.

END_TEXT
Context()->normalStrings;
# Homogeneous equation solution
ANS($auxeqn->cmp);
ANS($factors->cmp);
ANS($homogeneous->cmp);
# Reduction of order
ANS($dyp->cmp);
ANS($d2yp->cmp);
ANS($reducedequation->cmp);
ANS($left->cmp);
ANS($right->cmp);
## DC voltage example
ANS($dcright->cmp);
ANS($int->cmp);
ANS($dcu->cmp);
ANS($dcsolution->cmp);
## AC voltage example
ANS($acright->cmp()
->withPostFilter(AnswerHints( 
  $dcright => "E is NOT a constant in this case.",
))
);
ANS($int->cmp);
ANS($acu->cmp);
ANS($acsolution->cmp);
ENDDOCUMENT();        # This should be the last executable line in the problem.