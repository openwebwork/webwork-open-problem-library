##DESCRIPTION
##  classify separable differential equations
##ENDDESCRIPTION

##KEYWORDS('partial', 'differential', 'equation', 'separable')

## DBsubject('Calculus')
## DBchapter('Partial Differential Equations')
## DBsection('Separable')
## Date('7/21/2011')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Differential Equations: with Boundary Value Problems')
## EditionText1('6')
## AuthorText1('Zill')
## Section1('12.1')
## Problem1('')



DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "MathObjects.pl",
           "answerHints.pl",);

TEXT(beginproblem());
#########################################################
##
## Set up the context to allow ' in variable names
##
Context()->variables->are("x"=>"Real","alpha"=>"Real","a"=>"Real",b=>"Real");
Context()->variables->set(alpha => {TeX => '{\alpha}'});
$contextx = Context()->copy;

Context()->variables->are("t"=>"Real","k"=>"Real","alpha"=>"Real","c"=>"Real","d"=>"Real");
Context()->variables->set(alpha => {TeX => '{\alpha}'});
$contextt = Context()->copy;

Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are("x"=>"Real","y"=>"Real","t"=>"Real","X"=>"Real","X'"=>"Real","X''"=>"Real","T"=>"Real","T'"=>"Real","T''"=>"Real","Y'"=>"Real","Y''"=>"Real","k"=>"Real","lambda"=>"Real","alpha"=>"Real","a"=>"Real",b=>"Real","c"=>"Real","d"=>"Real");
Context()->variables->set(lambda => {TeX => '{\lambda}'});
$context = Context()->copy;

$Xdiff1 = Formula("X''/X")->reduce;
$Tdiff1 = Formula("T''/(k^2*T)")->reduce;

$Xdiff2 = Formula("X''+lambda*X")->reduce;
$Tdiff2 = Formula("T''+k^2*lambda*T")->reduce;

## Sturm-Louiville problem
$Xequal = Formula($contextx,"a+bx");
$Tequal = Formula($contextt,"c+dt");
$uequal = Formula($context,"$Xequal*$Tequal");

$Xless = Formula($contextx,"a*cosh(alpha*x)+b*sinh(alpha*x)");
$Tless = Formula($contextt,"c*cosh(alpha*t*k)+d*sinh(alpha*t*k)");
$uless = Formula($context,"$Xless*$Tless");

$Xgreater =  Formula($contextx,"a*cos(alpha*x)+b*sin(alpha*x)");
$Tgreater = Formula($contextt,"c*cos(alpha*t*k)+d*sin(alpha*t*k)");
$ugreater = Formula($context,"$Xgreater*$Tgreater");

Context()->texStrings;
BEGIN_TEXT
\(\lambda\) is typed as alpha, \(\alpha\) as alpha.
$PAR
The PDE \[k^2\frac{\partial^2 u}{\partial x^2}=\frac{\partial^2 u}{\partial t^2}\]
is separable, so we look for solutions of the form \(u(x,t) = X(x)T(t)\)
$BR
The PDE can be rewritten using this solution as (placing constants in the DE for T) into 
$BR
\{$Xdiff1->ans_rule\} = \{$Tdiff1->ans_rule\} = \(-\lambda\)
$BR
$BR
$BBOLD Note: $EBOLD Use the prime notation for derivatives, so the derivative of \(X\) is written as \(X^\prime\). Do NOT use \(X^\prime(x)\)
$BR
$BR
Since these differential equations are independent of each other, they can be separated 
$BR
DE in X: \{$Xdiff2->ans_rule\} \( = 0\)
$BR
DE in T: \{$Tdiff2->ans_rule\} \( = 0\)
$BR
$BR
This leads us to a Sturm-Louiville problem. In each case the general solution in X is written with constants a and b and the general solution in Y is written with constants c and d.
$BR
$BBOLD Case 1: $EBOLD \(\lambda = 0\)
$BR
\(X(x) = \) \{$Xequal->ans_rule(70)\}
$BR
\(T(t) = \) \{$Tequal->ans_rule(70)\}
$BR
\(u = \) \{$uequal->ans_rule(70)\}
$BR
$BBOLD Case 2: $EBOLD \(\lambda = -\alpha^2\)
$BR
\(X(x) = \) \{$Xless->ans_rule(70)\}
$BR
\(T(t) = \) \{$Tless->ans_rule(70)\}
$BR
\(u = \) \{$uless->ans_rule(70)\}
$BR
$BBOLD Case 3: $EBOLD \(\lambda = \alpha^2 \)
$BR
\(X(x) = \) \{$Xgreater->ans_rule(70)\}
$BR
\(T(t) = \) \{$Tgreater->ans_rule(70)\}
$BR
\(u = \) \{$ugreater->ans_rule(70)\}
$BR
END_TEXT
Context()->normalStrings;

ANS($Xdiff1->cmp);
ANS($Tdiff1->cmp);
ANS($Xdiff2->cmp);
ANS($Tdiff2->cmp);
## Sturm-Louiville
ANS($Xequal->cmp);
ANS($Tequal->cmp->withPostFilter(AnswerHints(Formula("a+bt")=>"Use c and d for T")));
ANS($uequal->cmp);
ANS($Xless->cmp);
ANS($Tless->cmp);
ANS($uless->cmp);
ANS($Xgreater->cmp);
ANS($Tgreater->cmp);
ANS($ugreater->cmp);

ENDDOCUMENT();        # This should be the last executable line in the problem.