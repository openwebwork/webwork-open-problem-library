## DESCRIPTION
## Introduction to WeBWorK
## ENDDESCRIPTION

## KEYWORDS('functions', 'algebra', 'numerical answers')
## Tagged by XW

## DBsubject('WeBWorK')
## DBchapter('WeBWorK Tutorial')
## DBsection('WeBWorK Tutorial')
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$a = random(-10,-1,1);
$b = random(1,11,1);
$c = random(1,11,1);
$d = random(1,11,1);

BEGIN_TEXT
This problem demonstrates how to enter numerical answers into WeBWorK. $PAR
Evaluate the expression \($d ($a )($b -$c -2($d ))\) and enter the simplified answer:
 \{ ans_rule(10) \}
$BR

END_TEXT


$ans = ($d)*($a)*($b-$c-2*($d));

ANS(num_cmp($ans, mode=>"strict"));

BEGIN_TEXT
$PAR
$HR
$PAR
For most problems, you will be able to get WeBWorK to
do some of the work for you.  For example,
$BR
calculate \(($a) * ($b)\) by typing it exactly as written or by copying and pasting it into the answer blank: \{ ans_rule()\}
$BR

END_TEXT


$ans = $a*$b;

ANS(num_cmp($ans));

BEGIN_TEXT
$PAR
The asterisk is used to denote multiplication in WeBWorK, but parentheses can also be used. 
Try entering each of the following answers: \($a * $b\), \(\{$a*$b\}\), and \(($a)($b)\).  
$PAR
$HR
$PAR
Now try calculating the square root of \(7\).
You can enter this as sqrt\((7)\) or as \(7\)$CARET \((1/2)\).   Note that exponents can be entered with either
a $CARET (caret) or ** (two asterisks).
Try both.
$BR  \( \sqrt{7} = \) \{ ans_rule(20) \}
$PAR
$HR
$PAR
END_TEXT

BEGIN_TEXT
WeBWorK knows most of the standard mathematical functions.  It can compute base
10 logarithms with log and natural logarithms with ln.  Note that for trig functions, WeBWorK
always uses radian mode.
 Here's the 
\{ htmlLink(qq!http://webwork.asu.edu/webwork_system_html/docs/availableFunctions.html!,"list of the functions") \}
 which WeBWorK understands.
 $PAR

END_TEXT

ANS(num_cmp("sqrt(7)"));

BEGIN_TEXT

You can also use juxtaposition to denote multiplication.
	E.g. enter \( 2\ln(5e/3) \).
You can enter this as 2*ln(5*e/3) or more simply as 2ln(5e/3).  Try it:
$BR 
\{ ans_rule(20) \}$PAR

END_TEXT

$pi = 4*atan(1);
ANS(num_cmp("2*ln(5*e/3)") );

BEGIN_TEXT
$PAR
$HR
$PAR
Sometimes you need to use ( )'s to make your meaning clear. E.g., 1/2+3 is 3.5, but  1/(2+3) is 0.2 Why?
Try entering both and use the ${LQ}Preview${RQ} button below to see the difference.  In addition to
( )'s, you can also use [ ]'s and \(\lbrace \rbrace\).  $BR
\( (1/2) + 3 = \)\{ ans_rule(20) \}$PAR


END_TEXT

ANS(num_cmp(3.5));

BEGIN_TEXT
$PAR
$HR
$PAR
When entering numbers, leave off units (or dollar signs for money) unless the
problem directs to to do otherwise.  For example, if we want to know how much money you
will have if you collect $DOLLAR 100 from 200 people, the answer is $DOLLAR 20,000.
When entering this value, you should just give 20000 (or 100*200, or anything else
which evaluates to 20000).
$BR
$DOLLAR 100 from 200 people yields $DOLLAR \{ ans_rule(20) \}
$PAR
$HR
$PAR
You can always try to enter answers and let WeBWorK do the calculating.
	Or, if you have trouble with the syntax of entering expressions, you
	can compute most answers on your calculator and then type the answer into
	WeBWorK.  If you do, just be sure to include lots of decimal places
	(including the first 5 non-zero places should be safe).
	$PAR
In general, there is no penalty for getting an answer wrong.  If you
are limited in the number of attempts you get for a problem, you will
be warned by the problem itself (this could happen, for example, on a
true/false question).  What counts is that you get the answer right
eventually (before the due date).
	
  $PAR
	
Rembember, for complicated answers you should use the ${LQ}Preview${RQ}
button to check for syntax errors and also to check that the answer
you enter is really what you think it is.


END_TEXT

ANS(num_cmp("100*200"));

ENDDOCUMENT();        # This should be the last executable line in the problem.
