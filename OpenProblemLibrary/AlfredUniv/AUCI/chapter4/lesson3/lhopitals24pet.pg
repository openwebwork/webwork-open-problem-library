##DESCRIPTION
##  Oblique or slant asymptote
##ENDDESCRIPTION

##KEYWORDS('long division','asymptote','slant','oblique')
## lcao tagged and PAID on 2-20-2004

## DBsubject('Calculus')
## DBchapter('Applications of Differentiation')
## DBsection('Indeterminate Forms and L'Hospital's Rule')
## Date('10/9/2011')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('AUCI')
## EditionText1('')
## AuthorText1('')
## Section1('4.3')
## Problem1('')



DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"MathObjects.pl",
"Alfredmacros.pl",
"contextFraction.pl"
);
jsmathmode();

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Fraction-NoDecimals");
$an = Compute(non_zero_random(-8,8,1));
$bn = Compute(non_zero_random(-8,8,1));
$cn = Compute(non_zero_random(-8,8,1));
$dn = Compute(non_zero_random(-8,8,1));

$ad = Compute(non_zero_random(-8,8,1));
$bd = Compute(non_zero_random(-8,8,1));
$cd = Compute(non_zero_random(-8,8,1));

if(($an/$ad) > 0){
$limit = Compute("infinity");
}
else{
$limit = Compute("-infinity");
};

Context("Numeric");
Context()->reduction->set('(-x)+y'=>0,'(-x)-y'=>0);

$num = Formula("$an*x^3+$bn*x^2+$cn*x+$dn")->reduce;
$den = Formula("$ad*x^2+$bd*x+$cd")->reduce;

$LH1num = $num->D('x');
$LH1den = $den->D('x');

$LH2num = $LH1num->D('x');
$LH2den = $LH1den->D('x');

Context()->texStrings;
BEGIN_TEXT
$BR
Use L'Hopital's rule to compute the given limit. Note that one application of L'Hopital's rule yields another indeterminate form, so you will need to apply the rule two times. 
$BR
$BR
\(
\begin{aligned}
\lim\limits_{x\rightarrow\infty}\frac{$num}{$den} =& \lim\limits_{x\rightarrow\infty}\frac{\hbox{\{ans_rule\}}}{\hbox{\{ans_rule\}}}\\
&\\
=& \lim\limits_{x\rightarrow\infty}\frac{\hbox{\{ans_rule\}}}{\hbox{\{ans_rule\}}}\\
&\\
=& \hbox{\{ans_rule\}}\\
\end{aligned} \)
$BR
$BR
(Enter a number if the limit exists, enter '-inf' if your answer is \(-\infty\), enter 'inf' if your answer is
\(\infty\), and enter 'DNE' if the limit does not exist.) 


END_TEXT
Context()->normalStrings;

ANS($LH1num->cmp() );
ANS($LH1den->cmp() );

ANS($LH2num->cmp() );
ANS($LH2den->cmp() );

ANS($limit->cmp() );
ENDDOCUMENT(); 
