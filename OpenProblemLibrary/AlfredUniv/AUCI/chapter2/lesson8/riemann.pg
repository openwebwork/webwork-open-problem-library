##DESCRIPTION
#
# File Created: 10/29/2008
# Last Modified: 10/29/2008
# Problem Author: Darwyn Cook
# WeBWorK Entry: 
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS()
##

## DBsubject('Calculus')
## DBchapter('Techniques of Integration')
## DBsection('Approximating Integrals')
## Date('5/13/2008')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('')
## Problem1('')

DOCUMENT();

# Load the macro file to create graphs.
loadMacros("PGgraphmacros.pl");

# Load whatever macros you need for the problem
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
           "Alfredmacros.pl");
 
## Show partial correct answers
$showPartialCorrectAnswers = 1;
## Display the problem information
TEXT(beginproblem());
$refreshCachedImages=1;

## Function definition. We want f to pass through the points (x0,y0),(x1,y1),(x2,y2),(x3,y3),(x4,y4)
$deltax = random(.5,2,.5);
$x0 = random(-8,8);
$x1 = $x0 + $deltax;
$x2 = $x1 + $deltax;
$x3 = $x2 + $deltax;
$x4 = $x3 + $deltax;
$y0 = non_zero_random(-4,4);
$y1 = non_zero_random(-4,4);
$y2 = random(-4,4);
$y3 = 0;
$y4 = non_zero_random(-4,4);
$f0 = Formula("$y0*(x-$x1)*(x-$x2)*(x-$x3)*(x-$x4)/(($x0-$x1)*($x0-$x2)*($x0-$x3)*($x0-$x4))");
$f1 = Formula("$y1*(x-$x0)*(x-$x2)*(x-$x3)*(x-$x4)/(($x1-$x0)*($x1-$x2)*($x1-$x3)*($x1-$x4))");
$f2 = Formula("$y2*(x-$x0)*(x-$x1)*(x-$x3)*(x-$x4)/(($x2-$x0)*($x2-$x1)*($x2-$x3)*($x2-$x4))");
$f3 = Formula("$y3*(x-$x0)*(x-$x1)*(x-$x2)*(x-$x4)/(($x3-$x0)*($x3-$x1)*($x3-$x2)*($x3-$x4))");
$f4 = Formula("$y4*(x-$x0)*(x-$x1)*(x-$x2)*(x-$x3)/(($x4-$x0)*($x4-$x1)*($x4-$x2)*($x4-$x3))");
$f = Compute($f0+$f1+$f2+$f3+$f4);
##  Graph size
##  xmin, xmax, ymin, ymax set the ranges on the axes, $size sets the actual 
## size of the image to be displayed. 

($xmin,$xmax) = ($x0-$deltax,$x4+$deltax);

# the lazy programmers method for a find max and mins on an interval
@yvalues = ();
$n = ceil(($x4-$x0)/0.1);
for ($i = 0; $i <= $n;$i++){
    push(@yvalues,$f->substitute(x=>"$x0+$i*0.1"));
};

($ymin,$ymax) = (floor(&min(@yvalues))-1,ceil(&max(@yvalues))+1);
$size = [550,500];
$xgrid = 2*($xmax-$xmin);
## create the graph.


$gr = init_graph($xmin,$ymin,$xmax,$ymax,axes=>[$xmin,0],size=>$size,grid=>[6,$ymax-$ymin]);
add_functions($gr, 
  "$f for x in <$xmin,$xmax> using color:blue and weight:2");
$xlabel = $xmin;
$gr->lb( new Label($xlabel+0.2,$ymax-0.2,$ymax,
    'black','left','middle'));
$gr->lb( new Label($xlabel+0.2,$ymin+0.2,$ymin,
    'black','left','middle'));
$gr->stamps( closed_circle($x0,$y0,'black') );
$gr->stamps( closed_circle($x1,$y1,'black') );
$gr->stamps( closed_circle($x2,$y2,'black') );
$gr->stamps( closed_circle($x3,$y3,'black') );
$gr->stamps( closed_circle($x4,$y4,'black') );
Context()->texStrings;
BEGIN_TEXT
Estimate \(\int_{$x0}^{$x4} f(x) dx\) from the graph using 
$BR
\{ image( insertGraph($gr),tex_size=>450 ) \}
$BR
\(L_4 = \) \{ans_rule()\}
$BR
\(R_4 = \) \{ans_rule()\}
$BR
$BBOLD Note: $EBOLD Clicking on the graph will produce a larger version.
$BR
$BBOLD Hint $EBOLD Look at the scale on the x-axis and how many division there are, that should tell you what \(\Delta x\) is.
END_TEXT
Context()->normalStrings;
ANS(Compute("$deltax*($y0+$y1+$y2+$y3)")->cmp());
ANS(Compute("$deltax*($y1+$y2+$y3+$y4)")->cmp());
ENDDOCUMENT();
 
