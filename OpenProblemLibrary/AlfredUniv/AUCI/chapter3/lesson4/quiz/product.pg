##DESCRIPTION
#
# File Created: 6/26/2012
# Last Modified: 6/26/2012
# Problem Author:Darwyn Cook
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS('Derivative','Product','rule')
##

## DBsubject('Calculus')
## DBchapter('Differentiation')
## DBsection('The Product and Quotient Rules')
## Date('6/26/2012')
## TitleText1('AUCI')
## EditionText1('1')
## AuthorText1('Petrillo')
## Section1('3.4')
## Problem1('1')
## Author('Darwyn Cook')
## Institution('Alfred University')


DOCUMENT();

# Load whatever macros you need for the problem
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "MathObjects.pl",
           "contextFraction.pl",
           "parserMultiAnswer.pl",
           "PGcourse.pl",
           "Alfredmacros.pl");
jsmathmode();
## Show partial correct answers
$showPartialCorrectAnswers = 1;

## Display the problem information
TEXT(beginproblem());

## Declare Variables
Context("Numeric");
Context()->reduction->set('(-x)+y'=>0,'(-x)-y'=>0);





## coefficients for polynomial functions
$a0 = Compute(non_zero_random(-10,10));
$a1 = Compute(random(2,9));
$a2 = Compute(non_zero_random(-10,10));
$b0 = Compute(non_zero_random(-10,10));
$b1 = Compute(random(2,9));
$b2 = Compute(non_zero_random(-10,10));

$c0 = Compute(random(1,10));
$c1 = Compute(random(1,9));
$c2 = Compute(random(1,10));

## exponents for polynomial functions
$n = Compute(random(3,11,2)); #we want an odd exponent
$n1= Compute(random(0,3));
$n2 = Compute(random(4,6));
$n3 = Compute(random(7,9));




# The code following assumes that there are least two functions of each type in the following list, even if they are redundant, 
$f = Formula("$a0+$a1*x+$a2*x^2")->reduce;
$g = Formula("$b0*x^($n1)+$b1*x^($n2)+$b2*x^($n3)")->reduce;

$h = $f*$g;
$df = $f->D('x');
$dg = $g->D('x');
$dh = $h->D('x');

#### And now we check for all of the myriad ways they may have plugged these functions in
$productrulechecker = MultiAnswer($df,$g,$f,$dg)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => ~~&product_Rule_cmp #Found in Alfredmacros.pl
);

Context()->texStrings;
BEGIN_TEXT
If \(h(x) = $h\), then \(h(x)=f(x)g(x)\) where
$BR 
$BR
\(f(x)\) = \{ans_rule(30)\}
$BR
$BR
and
$BR
$BR
\(g(x)\) = \{ans_rule(30)\}.
$BR
$BR
By the product rule,
$BR
$BR\(
\begin{aligned}
 \>h'(x)\> &= \hbox{\{$productrulechecker->ans_rule(30)\}} * \hbox{\{$productrulechecker->ans_rule(35)\}}+ \hbox{\{$productrulechecker->ans_rule(35)\}}* \hbox{\{$productrulechecker->ans_rule(35)\}}\\
\end{aligned}
\)
$BR
END_TEXT
Context()->normalStrings;
ANS($f->cmp);
ANS($g->cmp);

ANS($productrulechecker->cmp());

ENDDOCUMENT();
