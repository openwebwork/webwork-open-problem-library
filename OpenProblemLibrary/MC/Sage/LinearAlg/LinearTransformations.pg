## BEGIN_DESCRIPTION
## embedding Sage in WW
##
##
## This problem gives the student an "original" graph and a "transformed"
## graph and asks the student for the correct linear transformations to perform
## in order to morph the first into the other
## END_DESCRIPTION

## KEYWORDS('sage', 'sagelet', 'linear transformations')

## DBsubject('Linear algebra')
## DBchapter('Linear transformations')
## DBsection('Associated matrices')
## Date('June 2012')
## Author('John Travis')
## Institution('Mississippi College')


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"problemRandomize.pl",
"sage.pl",
);

TEXT(beginproblem());

ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

###########################################################
##
##  pg initializations and regular WeBWorK code


# The list of possible transformations (in order)
#  First choice:  'Identity', 'Reflect x-axis', 'Reflect y-axis', 'Rotate Origin'
#  Second choice:  'Skew to the right if above and to the left if below',
#             'Skew to the left if above and to the right if below', 'Skew out vertically', 
#             'Skew in vertically'
#  Third choice:  'Horizontal Contraction','Horizontal Expansion',
#             'Vertical Contraction','Vertical Expansion'

$t1 = random(1,4,1);
$t2 = random(5,8,1);
$t3 = random(9,12,1);

#  These are the various scale factors used through this problem.  Things look best if
#  not too large or small but also if the denominators are multiples of 2.
$a = 3/2;
$b = 3/4;
$c = 5/4;

# Choice One
if ($t1==1) {
  $A1 = Matrix([[1,0],[0,1]]);   
}
elsif ($t1==2) {
  $A1 = Matrix([[1,0],[0,-1]]);
}
elsif ($t1==3) {
  $A1 = Matrix([[-1,0],[0,1]]);
}
else {
  $A1 = Matrix([[-1,0],[0,-1]]);
}

# Choice Two
if ($t2==5) {
  $A2 = Matrix([[1,$a],[0,1]]);   
}
elsif ($t2==6) {
  $A2 = Matrix([[1,-$a],[0,1]]);
}
elsif ($t2==7) {
  $A2 = Matrix([[1,0],[$a,1]]);
}
else {
  $A2 = Matrix([[1,0],[-$a,1]]);
}

#Choice Three
if ($t3==9) {
  $A3 = Matrix([[$b,0],[0,1]]);   
}
elsif ($t3==10) {
  $A3 = Matrix([[$c,0],[0,1]]);
}
elsif ($t3==11) {
  $A3 = Matrix([[1,0],[0,$b]]);
}
else {
  $A3 = Matrix([[-1,0],[0,$c]]);
}

$A = $A3*$A2*$A1;


$ansList = List("$A");


####################################################
##
## Upper WeBWorK text
##
## Problem display preceding the Sage cell
##

Context()->normalStrings;

BEGIN_TEXT
Below, two pentagons are shown.  The goal is to choose the correct linear transformations and in the correct order so that the blue/green pentagon is transformed to the red pentagon.

END_TEXT


###########################################################
##
## single cell server code
##


$SageCode = <<SAGE_CODE;

Aexact = matrix($A)

N=2 
choices = ['Identity', 'Reflect x-axis', 'Reflect y-axis', 'Rotate Origin', 'Skew to the right if above and to the left if below','Skew to the left if above and to the right if below', 'Skew out vertically', 'Skew in vertically','Horizontal Contraction','Horizontal Expansion','Vertical Contraction','Vertical Expansion']

~~@interact
def _(transform1=('Select:',list(choices)),transform2=('Select:',list(choices)),transform3=('Select:',list(choices)) ):
    
    def getA(transform):
        A = identity_matrix(N)
        if transform=='Reflect x-axis':
            A = matrix(QQ,[[1,0],[0,-1]])
        if transform=='Reflect y-axis':
            A = matrix(QQ,[[-1,0],[0,1]])
        if transform=='Rotate Origin':
            A = matrix(QQ,[[-1,0],[0,-1]])
        if transform=='Skew to the right if above and to the left if below':
            A = matrix(QQ,[[1,$a],[0,1]])
        if transform=='Skew to the left if above and to the right if below':
            A = matrix(QQ,[[1,-$a],[0,1]])
        if transform=='Skew out vertically':
            A = matrix(QQ,[[1,0],[$a,1]])
        if transform=='Skew in vertically':
            A = matrix(QQ,[[1,0],[-$a,1]])
        if transform=='Horizontal Contraction':
            A = matrix(QQ,[[$b,0],[0,1]])
        if transform=='Horizontal Expansion':
            A = matrix(QQ,[[$c,0],[0,1]])
        if transform=='Vertical Contraction':
            A = matrix(QQ,[[1,0],[0,$b]])
        if transform=='Vertical Expansion':
            A = matrix(QQ,[[1,0],[0,$c]])
        return A
    A1 = identity_matrix(N)    
    A2 = identity_matrix(N)    
    A3 = identity_matrix(N)    
        
    A1 = getA(transform1)  
    A2 = getA(transform2)  
    A3 = getA(transform3)  
    BigA = A3*A2*A1

    
    StartBox = line2d([(0,0),(0,1)],thickness=10)+line2d([(0,1),(1,2)],thickness=10)+line2d([(1,2),(2,1)],thickness=10)+line2d([(2,1),(2,0)],thickness=10)+line2d([(2,0),(0,0)],thickness=10)
    BoxCorners = matrix([[0, 0, 1, 2, 2],[0, 1, 2, 1, 0]])
        
    NewCorners = (BigA*BoxCorners).transpose()   #  switch result matrix to rows for easier extraction of A*B columns.
    EndBox = Graphics()
    Goal = (Aexact*BoxCorners).transpose()   #  this is the final answer that is being sought
    GoalBox = Graphics()
    for col in range(5):
        c1 = NewCorners[Mod(col,5)]
        c2 = NewCorners[Mod(col+1,5)]
        EndBox += line2d([c1,c2],thickness=5, rgbcolor=(0.5,1,0.5))   

        g1 = Goal[Mod(col,5)]
        g2 = Goal[Mod(col+1,5)]
        GoalBox += line2d([g1,g2],thickness=5, rgbcolor=(1,0,0))   
           
    show(StartBox+EndBox+GoalBox,aspect_ratio=True)
    html('\['+str(latex(BigA))+' = '+str(latex(A3))+str(latex(A2))+str(latex(A1))+'\]')

    B = [list(BigA[0]),list(BigA[1])]

    record_answer((B))

SAGE_CODE

Sage(
  SageCode=>$SageCode,
  AutoEvaluateCell=>'true'
);

#   TEXT($input_ref->{sageAnswer});



####################################################
##
## Lower WeBWorK text
##
## Problem display following the Sage cell
##

BEGIN_TEXT
When you are comfortable with the coefficients that you have chosen, press
the submit button below.
END_TEXT

Context()->normalStrings;

#######################
##### Answer Evaluation

$showPartialCorrectAnswers = 1;
NAMED_ANS( sageAnswer => $ansList->cmp   );

###########################################################
##
## Hint(s), delete or comment if not used
##

Context()->texStrings;

$showHint = 4;
BEGIN_HINT
First consider performing one of the first four transformations.  Consider how the final image relates to the original image with respect to the x and y axes.
END_HINT

$showHint = 10;
BEGIN_HINT
Once you get the reflection transformations correct in the first step, consider one of the skew transformations as the second transformation.
END_HINT

Context()->normalStrings;

###########################################################
##
## Solution, delete or comment if not used
##

Context()->texStrings;

BEGIN_SOLUTION
$PAR
The correct transformations first includes \[A_1 = $A1\] which is a reflection.
$PAR
Then, \[A_2 = $A2\] which is a skew.
$PAR
Finally, \[A_3 = $A3\] which is an expansion or contraction.
$PAR
and the total transformation matrix is given by
\[A = $A\]

END_SOLUTION

Context()->normalStrings;

ENDDOCUMENT();        # This should be the last executable line in the problem.