## BEGIN_DESCRIPTION
## Sample problem embedding Sage in WW
##
## This problem shows a method of passing the student's
## answer from the work they've done in the SCS
## back to WW for grading transparently to the student.
## The method used here is not robust.  It requires hard coding
## of the input boxes AnSwEr0001 etc.  which is certainly bad
## WW coding practice.
##
## This problem asks the student to determine experimentally
## the appropriate coefficients (stored in the vector x) so that
## b lies in the span of the columns of A.  That is, Ax = b. 
## END_DESCRIPTION

## KEYWORDS('sage', 'sagelet', 'span','linear combination')

## DBsubject('Calculus - multivariable')
## DBchapter('Calculus of Vector-Valued Functions')
## DBsection('Vector-Valued Functions')
## Date('June 2012')
## Author('John Travis')
## Institution('Mississippi College')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"problemRandomize.pl",
"sage.pl"
);

TEXT(beginproblem());
Context("Numeric");
ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

###########################################################
##
##  pg initializations and regular WeBWorK code

$a11 = random(2,3,1/2);
$a12 = 1;
$a21 = random(-3,-1,1/2);
$a22 = non_zero_random(-2,5,1/20);
$A = Matrix([[$a11,$a12],[$a21,$a22]]); 
$A1 = Vector($a11,$a21);

$x1 = non_zero_random(-2,2,1/20);
$x1ans = Compute("$x1");
$x2 = non_zero_random(-2,2,1/10);
$x2ans = Compute("$x2");
$x = Vector($x1,$x2);

$b1 = $a11*$x1+$a12*$x2;
$b2 = $a21*$x1+$a22*$x2;
$b = Vector($b1,$b2);

$ansList = List("($x1ans,$x2ans)");

####################################################
##
## Upper WeBWorK text
##
## Problem display preceding the Sage cell
##

Context()->texStrings;

BEGIN_TEXT
Solve A x= b by finding coefficients for the columns of A which show b lies in their span.
$PAR
When solving \[Ax=b\]the solution \(x\) can be determined by determining the linear combination of the columns of A which equal b.  In the interactive cell below <font color=blue><b>\(A_1\)</b></font> represents the first column of A while <font color=green><b>\(A_2\)</b></font> represents the second column of A.  Determine values of \(x_1\) and \(x_2\) so that 
\[x_1 A_1 + x_2 A_2 =  b \]</b></font>.
$PAR

END_TEXT

Context()->normalStrings;

###########################################################
##
## single cell server code
##


$SageCode = <<SAGE_CODE;

b = matrix([[$b1],[$b2]])
bt = b.transpose()
A=matrix([[$a11,$a12],[$a21,$a22]])
At =A.transpose()
#   Notice the correct exact answer is given by x = A\b

var('A1')
#  Finding when a vector b is in the span of other vectors in 2-space
~~@interact
def _(x1=slider(-3,3,1/20,1), x2=slider(-3,3,1/20,1),zoomin=checkbox(default=false,label='Zoom In')): 

    (b1,b2,a11,a12,a21,a22) = ($b1,$b2,$a11,$a12,$a21,$a22)   # Convert WeBWorK variables to normal Sage variables
    
    G = Graphics()
    if zoomin==false:
        G += arrow((0,0),At[0],color='lightgray') 
        G += arrow(At[0],At[0]+At[1],color='lightgray')     
    G += arrow((0,0),x1*At[0],rgbcolor=(0,0,1)) 
    G += arrow(x1*At[0],x1*At[0]+x2*At[1],rgbcolor=(0,1,0)) 
    G += arrow((0,0),(b1,b2),rgbcolor=(1,0,0),width=5) 
    G += text("A1",(x1*At[0][0]/2,x1*At[0][1]/2),fontsize=15,color='purple')
    G += text("A2",(x1*At[0][0]+x2*At[1][0]/2,x1*At[0][1]+x2*At[1][1]/2),fontsize=15,color='purple')
    G += text("b",(b1/2,b2/2),fontsize=20,color='purple')
    G += point(x1*At[0],color='blue',pointsize=40)
    G += point((b1,b2),color='red',pointsize=30)
    G += point(x1*At[0]+x2*At[1],color='green',pointsize=40)
    G += point((b1,b2),color='red',pointsize=20)
#  Add fixed originals and dashed modified version of these
    if zoomin:
        show(G,frame=False)
        scalex = 2
        scaley = 2
    else:
        scalex = 2*max(abs(a11),abs(a12),abs(b1))
        scaley = 2*max(abs(a21),abs(a22),abs(b2))

    show(G,frame=False,xmin=-1*scalex,xmax=scalex,ymin=-1*scaley,ymax=scaley)

    record_answer((x1, x2))

SAGE_CODE

Sage(
  SageCode=>$SageCode,
  ButtonText=>'Click to run (or reset) vector display.',
  AutoEvaluateCell=>'true',
);

TEXT($input_ref->{sageAnswer});

####################################################
##
## Lower WeBWorK text
##
## Problem display following the Sage cell
##

Context()->texStrings;

BEGIN_TEXT
When you are comfortable with the coefficients that you have chosen, press
the submit button below.
END_TEXT

Context()->normalStrings;

#######################
# Answer Evaluation

$showPartialCorrectAnswers = 1;
NAMED_ANS( sageAnswer => $ansList->cmp   );


###########################################################
##
## Hint(s), delete or comment if not used
##

Context()->texStrings;

$showHint = 2;
BEGIN_HINT
By adjusting the sliders, you are changing the length of the corresponding vector.  Remember that a negative 
coefficient makes the vector point in the opposite direction.
END_HINT

$showHint = 4;
$x1low = $x1-1/3;
$x1high = $x1+1/5;
BEGIN_HINT
Consider choosing a value for the first coefficient somewhere between $x1low and $x1high.
END_HINT

Context()->normalStrings;

###########################################################
##
## Solution, delete or comment if not used
##

Context()->texStrings;

BEGIN_SOLUTION

Notice that \(($x1) *A_1 + ($x2) *A_2 = $b\) 
END_SOLUTION

Context()->normalStrings;

ENDDOCUMENT();        # This should be the last executable line in the problem.