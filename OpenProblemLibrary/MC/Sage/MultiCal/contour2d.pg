## BEGIN_DESCRIPTION
## Using the Sage single cell server, determine a range
## value by interpreting values from a contour plot.
## END_DESCRIPTION

## KEYWORDS('sage', 'sagelet', 'contour', 'multivariate')

## DBsubject('Calculus - multivariable')
## DBchapter('Partial Derivatives')
## DBsection('Functions of Several Variables')
## Date('January 2012')
## Author('John Travis')
## Institution('Mississippi College')
## TitleText1('Calculus')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"problemRandomize.pl",
"sage.pl",
);

Context()->strings->add(none=>{});
Context()->variables->add(y=>'Real');

TEXT(beginproblem());

ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

$x0 = non_zero_random(-2,2,1);  
$y0 = non_zero_random(-2,2,1);  
$a = random(2,3,0.2);
$c = random(1.1,1.4,0.03);

$fin = "$a*(x**3-y**3+$c)/(x**2+y**2+1)";
$fww = Compute($fin);
$f0 = $fww->eval(x=>$x0,y=>$y0);

$ansList = List("()");

$showHint = 1;

####################################################

$SageCode = <<SAGE_CODE;

var('x,y,z')

~~@interact(layout=dict(left=[["x0"],["y0"]], 
    bottom=[["N"],["zoom_in"]]) 
    )
def _(N=slider(5,100,1,15,label="Number of Contours"),
        zoom_in=checkbox(false,label="Zoom in"),
        x0=input_box(0,width=5,label="\({x_0}\)"),
        y0=input_box(0,width=5,label="\({y_0}\)")):

    f=$fww
    offset = floor(10*random())/40

    if zoom_in:
        surface = contour_plot(f,(x,x0-offset-1/20,x0+1/20),(y,y0-1/20,y0+offset+1/20), cmap=True,colorbar=True,fill=False,contours=N)    
    else:
        surface = contour_plot(f,(x,-3,3),(y,-3,3),cmap=True,colorbar=True,fill=False,contours=N)    
    limit_point = point((x0,y0),color='red',size=30)

    (surface+limit_point).show()
    
SAGE_CODE

Sage(
  SageCode=>$SageCode
);


Context()->texStrings;
BEGIN_TEXT

$PAR
 
Using the contour plot above, estimate the range value for the illustrated function at 
\( ($x0,$y0) \).
$BR $BR
\( f($x0,$y0) = \)\{ ans_rule(15) \} 
$PAR
END_TEXT
Context()->normalStrings;

#  need to add reasonable approximation error of about 0.1 or so.
ANS( Compute($f0)->with(tolerance=>0.015)->cmp() );

# NAMED_ANS( sageAnswer => $ansList->cmp   );
NAMED_ANS( sageAnswer=>str_cmp("")   );            # Dummy for no return from Sage

BEGIN_HINT
$BR
Move the red dot to the point of interest \( x_0=$x0 \) and \( y_0=$y0 \).
$BR
Adjust the number of contours untill one of the contours lands "on" the point
of interest.  Check the z-value of that contour using the colored legend.  You can click on the "Zoom in" box to decrease the range of values shown. 
$BR
If you are pretty certain you are close, look again at the graph to see if slight numerical adjustments in your answer will do the trick.
END_HINT

BEGIN_SOLUTION
$PAR
$BBOLD SOLUTION $EBOLD
$BR
By following the hint you should find that the best contour corresponds to z-value of $f0.
END_SOLUTION

ENDDOCUMENT();        # This should be the last executable line in the problem.