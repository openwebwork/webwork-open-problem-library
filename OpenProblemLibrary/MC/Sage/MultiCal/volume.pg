## BEGIN_DESCRIPTION
## Using the Sage single cell server, determine the volume of a region
## where the student must only determine the correct order and limits of integration
## END_DESCRIPTION

## KEYWORDS('sage', 'sagelet', 'integration', 'multiple')

## DBsubject('Calculus')
## DBchapter('Multiple Integraion')
## DBsection('Volumes')
## Date('January 2012')
## Author('John Travis')
## Institution('Mississippi College')
## TitleText1('Calculus')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"problemRandomize.pl",
);

Context()->strings->add(none=>{});
Context()->variables->add(y=>"Real",z=>"Real");

TEXT(beginproblem());

ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

#  Requirements:  a>0, b<0, c>1
$a = random(2,4,1);
$b = random(-4,-1,1);
$c = random(1,5,1);

@VARS = ('x','y','z');
@V = @VARS[ NchooseK(3, 3) ];

# Using the following boundaries
$invar = $V[0];
$inleft = Compute("-$V[2]");
$inright = Compute("$V[2]+$V[1]+$c");

$midvar = $V[1];
$midleft = Compute("$b");
$midright = Compute("$V[2]**2");

$outvar = $V[2];
$outleft = Compute("0");
$outright = Compute("$a");

$volume = (3*$a**4 + 15*$a**3 + 10*$a**2*$c - 30*$a*$b - 15*$b**2 - 30*$b*$c)*$a/30;

$showHint = 3;

TEXT(MODES(TeX=>"", HTML=><<SAGE_CODE));

<div id="sagecell">
<script type="text/code">
 
# Sage Python Code

html('<h3 align="middle">Enter the endpoints and appropriate order of integration.</h3>')

html('<h2 align="middle">\( \int_{a_1}^{a_2} \int_{b_1}^{b_2} \int_{c_1}^{c_2} dV \)</h2>')

var('x,y,z,t,u,integ')
global integ 

V = $volume

dV = 'dz dy dx'

~~@interact(layout=dict(top=[['a2','b2','c2'],['a1','b1','c1'],['dV']]))
def _(
    dV = selector(['dz dy dx','dz dx dy','dx dy dz','dx dz dy','dy dx dz','dy dz dx'],buttons=False,label='\({dV=}\)'),
    a1=input_box(0,label='\(a_{1}=\)',width=5),
    a2=input_box(2,label='\(a_{2}=\)',width=5),
    b1=input_box(0,label='\(b_{1}=\)',width=10),
    b2=input_box(2,label='\(b_{2}=\)',width=10),
    c1=input_box(0,label='\(c_{1}=\)',width=15),
    c2=input_box(2,label='\(c_{2}=\)',width=15)):

    b1 = b1 + 0*x
    b2 = b2 + 0*x
    c1 = c1 + 0*x
    c2 = c2 + 0*x
        
    var('u,v,w')
    def triple(u1,u2,v1,v2,w1,w2):
        vlow = min(v1.find_minimum_on_interval(u1,u2)[0],v2.find_minimum_on_interval(u1,u2)[0])
        vhigh= max(v1.find_maximum_on_interval(u1,u2)[0],v2.find_maximum_on_interval(u1,u2)[0])
        assume(u>u1,u<u2,v>vlow,v<vhigh)
        integ = integrate(1,w,w1,w2)
        integ = integrate(integ,v,v1,v2)
        integ = integrate(integ,u,u1,u2)
        forget(u>u1,u<u2,v>vlow,v<vhigh)
        return integ

    if dV == 'dz dy dx':
        integ = triple(a1,a2,b1(x=u),b2(x=u),c1(x=u,y=v),c2(x=u,y=v))
    elif dV == 'dz dx dy':
        integ = triple(a1,a2,b1(y=u),b2(y=u),c1(y=u,x=v),c2(y=u,x=v))
    elif dV == 'dx dz dy':
        integ = triple(a1,a2,b1(y=u),b2(y=u),c1(y=u,z=v),c2(y=u,z=v))
    elif dV == 'dx dy dz':
        integ = triple(a1,a2,b1(z=u),b2(z=u),c1(z=u,y=v),c2(z=u,y=v))
    elif dV == 'dy dx dz':
        integ = triple(a1,a2,b1(z=u),b2(z=u),c1(z=u,x=v),c2(z=u,x=v))
    else:   # dV == 'dy dz dx'
        integ = triple(a1,a2,b1(x=u),b2(x=u),c1(x=u,z=v),c2(x=u,z=v))

# Print the final integral out nicely with its computed value.  
    html('The volume of the indicated region is given by:')
    I1 = '\int_{%s'%str(a1)+'}^{%s}'%str(a2)
    I2 = '\int_{%s'%str(b1)+'}^{%s}'%str(b2)
    I3 = '\int_{%s'%str(c1)+'}^{%s}'%str(c2)
    html('<h3 align="middle">\('+I1+'\) \('+I2+'\) \('+I3+'\) \('+str(dV)+' = %s \)</h3>'%str(integ))

 </script>
 </div>
SAGE_CODE

TEXT(MODES(TeX=>"", HTML=><<'SAGE_SCRIPT'));

<script src="http://aleph.sagemath.org/static/jquery.min.js"></script>
<script src="http://aleph.sagemath.org/embedded_sagecell.js"></script>

<script>
$(function () {
   sagecell.makeSagecell({inputLocation:  '#sagecell',
                          template:       sagecell.templates.minimal,
                          autoeval:        true, 
                          evalButtonText: 'Start/Restart'});
});
</script>


SAGE_SCRIPT


TEXT(MODES(TeX =>"",HTML=>EV3(<<'EOT')));

$PAR
Using the interactive tool above, determine the order of integration and endpoints that give the volume of the region bounded by:
$BR
$BCENTER
\( $midvar \) between \( $midleft \) and \( $midright \)
$BR
\(  $outvar \) between \( $outleft \) and \( $outright \)
$BR
\( $invar \) between \( $inright \) and \( $inleft \).
$ECENTER
$PAR
\( V = \) \{ ans_rule(15) \} .

$PAR

$PAR
EOT

Context()->normalStrings;

ANS( Compute($volume)->cmp() );

BEGIN_HINT
$BR
For the given boundary equations, choose 
\[dV = d$invar d$midvar d$outvar \]
Plug in the given limits of integration correspondingly.
$PAR

END_HINT

BEGIN_SOLUTION
$PAR
$BBOLD SOLUTION $EBOLD
$BR
For the given boundary equations, choose 
\[dV = d$invar d$midvar d$outvar \]
and limits of integration
\[$inleft \le $invar \le $inright \]
\[$midleft \le $midvar \le $midright \]
\[$outleft \le $outvar \le $outright \]
yields
\[\int_{$outleft}^{$outright} \int_{$midleft}^{$midright} \int_{$inright}^{$inright} d$invar d$midvar d$outvar \]

END_SOLUTION

ENDDOCUMENT();        # This should be the last executable line in the problem.
