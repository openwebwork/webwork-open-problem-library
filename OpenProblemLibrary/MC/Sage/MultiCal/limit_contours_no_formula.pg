## BEGIN_DESCRIPTION
## Using the Sage single cell server, determine an estimate for the limit 
## of f(x,y) by looking at a contour plot of the surface. 
## If around the limit point there is a dramatic change in colors, there is no limit.  
## END_DESCRIPTION

## KEYWORDS('sage', 'sagelet', 'limits', 'multivariate')

## DBsubject('Calculus - multivariable')
## DBchapter('Differentiation')
## DBsection('Limits and Continuity in Several Variables')
## Date('January 2012')
## Author('John Travis')
## Institution('Mississippi College')
## TitleText1('Calculus')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGunion.pl",
"problemRandomize.pl",
"sage.pl",
);

TEXT(beginproblem());

Context("Numeric")->variables->add(y=>"Real",term=>"Real",t=>"Real",r=>"Real");

ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

$pow = random(2,8,2);
$powp1 = $pow + 1;
$b = random(2,5,0.5);
$bpow = $b*$pow;
$c1 = random(2,8,2);
$c2 = random(3,9,2);
$c3 = $c2/$c1;
$d = $c2*pi;

#  Would be nice if these formulas were in some random order 
#  and perhaps (say) only four of the six used. 
#  The sagelet cannot handle transcendental functions passed using the Formula mathobject
#  Therefore, any formula using one of these will need two defn.

$f1 = Formula("$pow*(x**$powp1 - y**$powp1)/(x**$pow + y**$pow)");
$f2 = Formula("(x**$pow - $powp1*y**$pow)/(x**$pow + y**$pow)");
$f3 = Formula("$bpow*(x**$pow - y**$pow)/($c1*x**$pow + $c1*y**$pow)");
$f4 = Formula("$c1*sin(x*y)/(x + y)**2");
$f4a = "$c1*sin(x*y)/(x + y)**2";
$f5 = Formula("sin($b*(x**2+y**2+$c2*pi))/(x**2+y**2)");
$f5a = "sin($b*(x**2+y**2+$c2*pi))/(x**2+y**2)";
$f6 = Formula("((x-$c1)**$pow + (y-$c2)**$pow + $c2)/((x-$c1)**$pow + (y-$c2)**$pow + $c1)");
$f6a = "((x-$c1)**$pow + (y-$c2)**$pow + $c2)/((x-$c1)**$pow + (y-$c2)**$pow + $c1)";

$p1 = Point((0,0));
$p2 = Point((0,0));
$p3 = Point((1,0));
$p4 = Point((0,0));
$p5 = Point((0,0));
$p6a = "($c1,$c2)";
$p6 = Point(($c1,$c2));

$ans1 = Compute(0);
$ans2 = Compute("NONE");
$ans3 = Compute("$bpow/$c1");
$ans4 = Compute("NONE");
$ans5 = Compute("-$b");
$ans6 = Compute("$c3");


$SageCode = <<SAGE_CODE;

var('x,y')
~~@interact
def _(num=selector(["f1","f2","f3","f4","f5","f6"],label="f(x,y)= "),
      show_surface=checkbox(default=false,label='Show in 3D'),
      zoom1 = checkbox(default=false,label='Zoom In'),
      zoom2 = checkbox(default=false,label='Really Zoom In'),
      zoom3 = checkbox(default=false,label='Hugh Zoom In')
      ):
    if num=="f1":
        f(x,y) = $f1
        [x0,y0] = $p1
    elif num=="f2":
        f(x,y) = $f2
        [x0,y0] = $p2
    elif num=="f3":
        f(x,y) = $f3
        [x0,y0] = $p3
    elif num=="f4":
        f(x,y) = $f4a
        [x0,y0] = $p4
    elif num=="f5":
        f(x,y) = $f5a
        [x0,y0] = $p5
    else:
        f(x,y) = $f6a
        [x0,y0] = $p6

    if zoom3:
        xrange=(x,x0-0.0001,x0+0.0001)
        yrange=(y,y0-0.0001,y0+0.0001)
    elif zoom2:
        xrange=(x,x0-0.01,x0+0.01)
        yrange=(y,y0-0.01,y0+0.01)
    elif zoom1:
        xrange=(x,x0-0.1,x0+0.1)
        yrange=(y,y0-0.1,y0+0.1)
    else:
        xrange=(x,x0-1,x0+1)
        yrange=(y,y0-1,y0+1)

    html('\[\lim_{(x,y) \\to  (%s'%str(x0)+',%s)'%str(y0)+' }f(x,y) = ?\]')

    if show_surface:
        p=plot3d(f,xrange,yrange, opacity=0.6,plot_points=75)
        show(p, xmin=xrange[1],xmax=xrange[2],ymin=yrange[1], ymax=yrange[2])
    else:
        print html('A surface probably has a limit at the point if there is not a sudden change in color there.')    
        surface = contour_plot(f,xrange, yrange,cmap='jet',colorbar=True,contours=50)
        limit_point = point((x0,y0),color='red',size=30,zorder=3)
        show(limit_point+surface)

SAGE_CODE

Sage(
  SageCode=>$SageCode,
  ButtonText=>'Click Here to Evaluate/Reload',
  AnswerReturn => 0
);

TEXT(beginproblem());

TEXT(MODES(TeX =>"",HTML=>EV3(<<'EOT')));

$PAR

Determining 
\[ \lim_{(x,y)\rightarrow(x_0,y_0)} f(x,y) \] 
by definition can often be very difficult.  The interactive worksheet above allows the user to visualize this problem using a polar coordinates approach.  Such an approach allows one to squeeze the domain values \((x,y)\) about the point of interest \((x_0,y_0)\).  If the range values on the surface are then subsequently squeezed to a point, the function has a limit of this common value.  If not, then no limit will exist.
$PAR
Determine an appropriate value for each limit or (if no limit exists) enter NONE.  (For these problems, presume any points not in the domain of the given function are not of interest.)
$PAR
\{ 
BeginTable(border=>0,padding=>0,spacing=>0) .
row( "\[ \lim_{(x,y)\rightarrow $p1} f_1(x,y) = \]", ans_rule(10) ).
row( "\[ \lim_{(x,y)\rightarrow $p2} f_2(x,y) = \]", ans_rule(10) ).
row( "\[ \lim_{(x,y)\rightarrow $p3} f_3(x,y) = \]", ans_rule(10) ).
row( "\[ \lim_{(x,y)\rightarrow $p4} f_4(x,y) = \]", ans_rule(10) ).
row( "\[ \lim_{(x,y)\rightarrow $p5} f_5(x,y) = \]", ans_rule(10) ).
row( "\[ \lim_{(x,y)\rightarrow $p6} f_6(x,y) = \]", ans_rule(10) ).
EndTable() 
\}
$PAR

$BR
EOT

## Need to allow lower case NONE answers.  
## Also, need to make these even more interesting and perhaps a different
## limit point in x and y.

ANS(Compute($ans1)->cmp());
ANS(Compute($ans2)->cmp());
ANS(Compute($ans3)->cmp());
ANS(Compute($ans4)->cmp());
ANS(Compute($ans5)->cmp());
ANS(Compute($ans6)->cmp());

BEGIN_HINT
$PAR
A limit will exist provided the surface about the limit point 
\( (x_0,y_0) \) reduces to a single point as the radius \{ R \} approaches 0. If the surface does not reduce to a single point, then the limit does not exist.
$PAR
Also, limits along particular paths in space may exist around \( (x_0,y_0) \) but all of these have to agree for the multivariate limit to exist.  One can't possibly check all of the possible paths but if limits do not agree for some two paths approaching \( (x_0,y_0) \) , then there is no limit.  To see a couple interesting paths, click on "Show curves".
END_HINT

BEGIN_SOLUTION
$PAR
$BBOLD SOLUTION $EBOLD
$BR
For \[f(x,y)\], the shrinking region is determined by performing a the polar substitution:
$BR
\[ x = x_0 + r*cos(t) \]
\[ y = y_0 + r*sin(t) \]
$BR
simplifying and then taking the limit as\( R \rightarrow 0\).
$PAR
Answers:
$BR
\( L_1 = $ans1 \)
$BR
\( L_2 = $ans2 \)
$BR
\( L_3 = $ans3 \)
$BR
\( L_4 = $ans4 \)
$BR
\( L_5 = $ans5 \)
$BR
\( L_6 = $ans6 \)


END_SOLUTION

ENDDOCUMENT();        # This should be the last executable line in the problem.