## BEGIN_DESCRIPTION
## Using the Sage single cell server, determine the value of a vector
## in a vector field by using only a graph of the field
## END_DESCRIPTION

## KEYWORDS('sage', 'sagelet', 'vector', 'field')

## DBsubject('Calculus')
## DBchapter('Vector Fields')
## DBsection('Graphs')
## Date('January 2012')
## Author('John Travis')
## Institution('Mississippi College')
## TitleText1('Calculus')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
# "PGchoicemacros.pl",
"MathObjects.pl",
"problemRandomize.pl",

# "parserVectorUtils.pl",
);

Context("Numeric");
Context()->variables->add(y=>'Real');

TEXT(beginproblem());

ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

Context('Vector');

$x0 = non_zero_random(-3,3,0.5);
$y0 = non_zero_random(-3,3,0.5);

$b = random(1.1,1.4,0.03);
$c = random(3,9,1);
$M = Formula("$b*sin(x-$c)*cos(y+$c)");
$N = Formula("cos(x*y/(4*$c))");

#  $N = Formula("(x**2+$c*y**2)/($c*x**2+y**2+1)");  #  another option

$mx = $M->eval(x=>$x0,y=>$y0);
$my = $N->eval(x=>$x0,y=>$y0);

$v_exact = Vector("<$mx,$my>");
# $v_exact = Vector("<$mx,$my>");


TEXT(MODES(TeX=>"", HTML=><<SAGE_CODE));

<div id="sagecell">
<script type="text/code">
 
var('x,y,t,s')

#  These should be passed in from above and not explicitly re-entered.
M1=$M
N1=$N
      
~~@interact(layout=dict(left= [["x0"],["y0"],["delx"],["dely"]]))
def _(  x0 = input_box(0,width=5,label='\(x_0\)'),
    y0 = input_box(0,width=5,label='\(y_0\)'),
    delx = input_box(1,width=5,label='\(\Delta{x}\)'),
    dely = input_box(1,width=5,label='\(\Delta{y}\)')):
            
    G = plot_vector_field((M1,N1),(x,x0-1,x0+1),(y,y0-1,y0+1),plot_points=9,aspect_ratio=true)
    G += arrow((x0,y0),(x0+delx,y0+dely))
    show(G) 

 </script>
 </div>

SAGE_CODE

TEXT(MODES(TeX=>"", HTML=><<'SAGE_SCRIPT'));

<script src="http://aleph.sagemath.org/static/jquery.min.js"></script>
<script src="http://aleph.sagemath.org/embedded_sagecell.js"></script>

<script>
$(function () {
   sagecell.makeSagecell({inputLocation:  '#sagecell',
                          template:       sagecell.templates.minimal,
                          autoeval:        true, 
                          evalButtonText: 'Start/Restart'});
});
</script>

SAGE_SCRIPT


TEXT(MODES(TeX =>"",HTML=>EV3(<<'EOT')));

$PAR

At the point \(($x0,$y0)\), determine

\[ f(x,y) = <\Delta{x},\Delta{y}> \] 
$BCENTER
= \{ ans_rule(15) \}
$ECENTER
$BR
for the indicated vector field.  Write your answer using bracket notation.
$BR
EOT

Context()->normalStrings;

#  Due to the vector field being scaled automatically, any vector parallel to the actual vector 
#  is acceptable.

sub parallel_vector_cmp {
  my ($correct, $student, $ansHash) = @_;
  return $correct->isParallel($student);
}
ANS( $v_exact->cmp( checker=>~~&parallel_vector_cmp, 
               tolerance=>0.1,
               tolType=>"relative",
               showCoordinateHints => 0 ) );

BEGIN_HINT
$PAR
If the vector field at the point of interest tends to the left, make \(\Delta{x}\) negative.  If to the right, make \(\Delta{x}\) positive.  
$BR
Similarly, if the vector field at the point of interest tends to point up, make \(\Delta{y}\) positive.  If down, make \(\Delta{y}\) negative.
END_HINT

BEGIN_SOLUTION
$PAR
$BBOLD SOLUTION $EBOLD
$BR
For this problem, since vector fields are often displayed with scaled lengths, we accept any solution parallel to the actual vector formula vector.  So, we accept any vector parallel to the vector
\( <\Delta{x}, \Delta{y} > = <$mx, $my >\). 
END_SOLUTION
ENDDOCUMENT();        # This should be the last executable line in the problem.
