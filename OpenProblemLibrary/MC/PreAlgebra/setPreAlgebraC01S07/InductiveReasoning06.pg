##DESCRIPTION
##  Middle School problem:
##ENDDESCRIPTION

##KEYWORDS('prealgebra','common core')

## DBsubject('Middle School')
## DBchapter('Algebraic Expressions and Integers')
## DBsection('Inductive Reasoning')
## Date('9/2/2012')
## Author('John Travis')
## Institution('Mississippi College')
## ProblemTester('Laura Travis')
## TitleText1('Pre-Algebra')
## Publisher('Prentice Hall')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGchoicemacros.pl",
   "problemRandomize.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

#  Allow for the user to try another version of the problem once they get it correct.
ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
#
#  You manually define the answers
#

#  a fibonacci-like progression with decreasing seeds each row
$a[1] = random(2,5,1);
$a[2] = $a[1];
$a[3] = $a[1]+$a[2];
$a[4] = $a[2]+$a[3];
$a[5] = $a[3]+$a[4];
$a[6] = $a[4]+$a[5];
$a[7] = $a[5]+$a[6];
$a[8]= $a[6]+$a[7];

$r[1] = List("$a[1]");
foreach my $i (2..8) {
  $r[$i] = $r[$i-1] . List("$a[$i]");
}

@answers = ();
$answers[1] = $r[6];
$answers[2] = $r[7];
$answers[3] = $r[8];

#
#  Automatic configuration for answer evaluation
#
@ans_eval = ();
@scores = ();
foreach my $i (1..$#answers) {
  $ans_eval[$i] = $answers[$i] ->cmp();
  $ans_hash[$i] = $ans_eval[$i]->evaluate($inputs_ref->{ANS_NUM_TO_NAME($i)});
  $scores[$i]   = $ans_hash[$i]->{score};
}


###########################################
#  Main text and answer evaluation part 1

Context()->texStrings;
BEGIN_TEXT
${BBOLD}This is a three part problem.  Determine the next row and click on Submit.  Once you determine the correct answer for that row then you will get the chance to enter another row.${EBOLD}
$PAR
Consider the pattern suggested by the 5 given rows.  Enter successive rows (separating each value with a comma):
$PAR
$BCENTER
\($r[1]\) $BR
\($r[2]\) $BR
\($r[3]\) $BR
\($r[4]\) $BR
\($r[5]\) $BR
\{ ans_rule(20) \}
$ECENTER
$BR

END_TEXT
Context()->normalStrings;

ANS( $ans_eval[1] );


##########################################
#  Main text and answer evaluation part 2

if ($scores[1]==1) {

Context()->texStrings;
BEGIN_TEXT
$BCENTER
\{ ans_rule(25) \}
$ECENTER
$BR

END_TEXT
Context()->normalStrings;

ANS( $ans_eval[2] );

}  # end if

 
##########################################
#  Main text and answer evaluation part 3

if ( ($scores[1]==1) && ($scores[2]==1) ) {

Context()->texStrings;
BEGIN_TEXT
$BCENTER
\{ ans_rule(30) \}
$ECENTER
$BR

END_TEXT
Context()->normalStrings;

ANS( $ans_eval[3] );


}  # end if

 
##########################################
#  Problem concluding statement

if ( ($scores[1]==1) && ($scores[2]==1)  && ($scores[3]==1) ) {

Context()->texStrings;


Context()->texStrings;
BEGIN_TEXT
${BBOLD}Final Answer!${EBOLD} - Putting all of these together makes a nice "Fibonacci-style" triangle of numbers:
$PAR
$BCENTER
\($r[1]\) $BR
\($r[2]\) $BR
\($r[3]\) $BR
\($r[4]\) $BR
\($r[5]\) $BR
\($r[6]\) $BR
\($r[7]\) $BR
\($r[8]\) $BR
$ECENTER
$BR

END_TEXT

}  # end if



ENDDOCUMENT();        