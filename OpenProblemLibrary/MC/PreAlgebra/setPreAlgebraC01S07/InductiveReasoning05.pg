##DESCRIPTION
##  Middle School problem:
##ENDDESCRIPTION

##KEYWORDS('prealgebra','common core')

## DBsubject('Middle School')
## DBchapter('Algebraic Expressions and Integers')
## DBsection('Inductive Reasoning')
## Date('8/30/2012')
## Author('John Travis')
## Institution('Mississippi College')
## ProblemTester('Laura Travis')
## TitleText1('Pre-Algebra')
## Publisher('Prentice Hall')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGchoicemacros.pl",
   "problemRandomize.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

#  Allow for the user to try another version of the problem once they get it correct.
ProblemRandomize(when=>"Correct",onlyAfterDue=>0);

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
#
#  You manually define the answers
#

$a1 = random(2,5,1);
$step = random(2,3,1);
$a2 = $a1+$step;
$a3 = $a1+2*$step;
$a4 = $a1+3*$step;
$a5 = $a1+4*$step;
$a6 = $a1+5*$step;
$a7 = $a1+6*$step;
$a8 = $a1+7*$step;

$row1 = List("$a1-0");
$row2 = List("$a1-1,$a2-1");
$row3 = List("$a1-2,$a2-2,$a3-2");
$row4 = List("$a1-3,$a2-3,$a3-3,$a4-3");
$row5 = List("$a1-4,$a2-4,$a3-4,$a4-4,$a5-4");
$row6 = List("$a1-5,$a2-5,$a3-5,$a4-5,$a5-5,$a6-5");
$row7 = List("$a1-6,$a2-6,$a3-6,$a4-6,$a5-6,$a6-6,$a7-6");
$row8 = List("$a1-7,$a2-7,$a3-7,$a4-7,$a5-7,$a6-7,$a7-7,$a8-7");


@answers = ();
$answers[1] = $row6;
$answers[2] = $row7;
$answers[3] = $row8;

#
#  Automatic configuration for answer evaluation
#
@ans_eval = ();
@scores = ();
foreach my $i (1..$#answers) {
  $ans_eval[$i] = $answers[$i] ->cmp();
  $ans_hash[$i] = $ans_eval[$i]->evaluate($inputs_ref->{ANS_NUM_TO_NAME($i)});
  $scores[$i]   = $ans_hash[$i]->{score};
}


###########################################
#  Main text and answer evaluation part 1

Context()->texStrings;
BEGIN_TEXT
${BBOLD}This is a three part problem.  Determine the next row and click on Submit.  Once you determine the correct answer for that row then you will get the chance to enter another row.${EBOLD}
$PAR
Consider the pattern suggested by the 5 given rows.  Enter successive rows (separating each value with a comma):
$PAR
$BCENTER
\($row1\) $BR
\($row2\) $BR
\($row3\) $BR
\($row4\) $BR
\($row5\) $BR
\{ ans_rule(20) \}
$ECENTER
$BR

END_TEXT
Context()->normalStrings;

ANS( $ans_eval[1] );


##########################################
#  Main text and answer evaluation part 2

if ($scores[1]==1) {

Context()->texStrings;
BEGIN_TEXT
$BCENTER
\{ ans_rule(25) \}
$ECENTER
$BR

END_TEXT
Context()->normalStrings;

ANS( $ans_eval[2] );

}  # end if

 
##########################################
#  Main text and answer evaluation part 3

if ( ($scores[1]==1) && ($scores[2]==1) ) {

Context()->texStrings;
BEGIN_TEXT
$BCENTER
\{ ans_rule(30) \}
$ECENTER
$BR

END_TEXT
Context()->normalStrings;

ANS( $ans_eval[3] );


}  # end if

 
##########################################
#  Problem concluding statement

if ( ($scores[1]==1) && ($scores[2]==1)  && ($scores[3]==1) ) {

Context()->texStrings;


Context()->texStrings;
BEGIN_TEXT
${BBOLD}Final Answer!${EBOLD} - Putting all of these together makes a nice triangle of numbers:
$PAR
$BCENTER
\($row1\) $BR
\($row2\) $BR
\($row3\) $BR
\($row4\) $BR
\($row5\) $BR
\($row6\) $BR
\($row7\) $BR
\($row8\) $BR
$ECENTER
$BR

END_TEXT

}  # end if



ENDDOCUMENT();        