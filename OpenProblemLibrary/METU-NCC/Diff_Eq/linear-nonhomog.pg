## DESCRIPTION
## Systems of ODEs: Nonhomogeneous Systems
## ENDDESCRIPTION

## DBsubject(Differential equations)
## DBchapter(Higher order differential equations)
## DBsection(Variation of parameters)
## Date(24/11/2015)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(4)
## MO(1)


##################################
#  Initialization

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGmatrixmacros.pl",
  "parserMultiAnswer.pl",
  "answerHints.pl",
  "extraAnswerEvaluators.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

#####################################
#  Setup

Context("Numeric");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are(
   t=>"Real",
   r=>"Real",
   y=>"Real", "y'"=>"Real", "y''"=>"Real",
   "c1"=>"Real", "c2"=>"Real"
);


############################
# setup differential equation 

my $a = random(-3,3,1);     my $b;        # roots of char. eqn.

if ( random(0,1,1) == 1)    { $b = $a; }  # raise chance of repeat
else                        { $b = random(-3,3,1); }

if (($a == 0) && ($b == 0)) { $a = non_zero_random(-3,3,1); }

my $char_eqn = Formula("r^2 - ($a+$b) r  + ($a*$b)  ")->reduce;
          $L = Formula("y'' - ($a+$b) y' + ($a*$b) y")->reduce;  # DE

my $c = ($a == $b) ? 2*non_zero_random(-3,3,1) : ($a-$b)*non_zero_random(-3,3,1);
   $g = Formula("$c*e^{$a*t}")->reduce;   # forcing function

#############################
# answer evaluators

# A -- accept any multiple of char. eqn (rounding error => only small multiples)

# B -- fundamental solutions and wronskian

my $y1 = Formula("e^{$a*t}");   
my $y2, $Wronskian;
if ($a != $b) { 
  $y2 = Formula("e^{$b*t}");   
  $Wronskian = Formula("($b-$a)*e^{($a+$b)*t}")->reduce; 
} else        { 
  $y2 = Formula("t*e^{$b*t}"); 
  $Wronskian = Formula("e^{2*$a*t}");
}

my @S_fund = ($y1, $y2);       # record student solutions
my $S_wron = $Wronskian;  # record student wronskian 

$multiansB = MultiAnswer($y1, $y2, $Wronskian)->with(
    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>
    "<table border='0' cellspacing='0'>
     <tr><td>\(y_1 = \) %s </td></tr>
     <tr><td>\(y_2 = \) %s </td></tr>
     <tr><td>\(W = \) %s </td></tr>
    </table>",
    tex_format =>
    "\begin{array}{l} y_1 = %s \\ y_2 = %s \\ W = %s
     \end{array}",

    checker => sub {
        my ($correct, $student, $answerHash ) = @_;
        my @c = @{$correct};
        my @s = @{$student};
        my $msg = "";   my @flag = (0,0,0);   my @S=(0,0);

        if ($c[0]->typeMatch($s[0]) &&
            $c[1]->typeMatch($s[1])) {  
          if ((Formula("$s[0]")->usesOneOf("c1","c2") || 
               Formula("$s[1]")->usesOneOf("c1","c2")) && 
             !(Formula("$s[2]")->usesOneOf("c1","c2"))) {
            Value::Error("If \(y_1\) and \(y_2\) use \(c_1\) and \(c_2\), then so does \(W(y_1,y_2)\)!${BR}(Easier if \(y_1\) and \(y_2\) don't have \(c_1\) and \(c_2\)...)");
          } 
          @S = ( Formula("$s[0]"),
                    Formula("$s[1]") );
          my @dS = ( Formula("$s[0]")->D('t'),
                     Formula("$s[1]")->D('t') );
          my @ddS = ( Formula("$s[0]")->D('t','t'),
                      Formula("$s[1]")->D('t','t') );
          $S_wron = Formula("$S[0]*$dS[1] - $S[1]*$dS[0]");
	  # Compare nonzero expressions (following GeneralSolutionODE1 in wiki)
          if (Formula("$S[0]*$dS[1]") == Formula("$S[1]*$dS[0]")) {
            Value::Error("Fundamental solutions not independent!");
          }
          my @L = ( Formula("$ddS[0] - ($a+$b)*$dS[0] + ($a*$b)*$S[0]")->reduce, 
                    Formula("$ddS[1] - ($a+$b)*$dS[1] + ($a*$b)*$S[1]")->reduce );
          if ($L[0] == Formula("0")) { $flag[0] = 1; $msg = "\(y_1\) is fine$BR"; }
          else  { $msg = "\(y_1\) is not a fundamental solution$BR"; }

          if ($L[1] == Formula("0")) { $flag[1] = 1; $msg = $msg . "\(y_2\) is fine$BR"; }
          else  { $msg = $msg . "\(y_2\) is not a fundamental solution$BR"; }
        }
  
        if ($flag[0]*$flag[1] == 1) {
          $S_fund[0] = $S[0];
          $S_fund[1] = $S[1];
        }

        if ($c[2]->typeMatch($s[2]) && 
           ($S_wron == Formula("$s[2]"))) { $flag[2]=1; }
        else { Value::Error($msg . " Wronskian is incorrect!"); }

        if ($flag[0]*$flag[1]*$flag[2] == 1) {
          return 1;
        } else {
          if (length($msg) > 1) { Value::Error($msg); }
          return 0;
        }
    }
);

# C - int fund * g / wronskian dt

my @iFg;

if ($a != $b) {
 @iFg = (Formula("-$c/(($a-$b)^2)*e^(($a-$b)*t)")->reduce,
         Formula("-$c/($a-$b)*t")->reduce);
} else {
 @iFg = (Formula("$c*t")->reduce,
         Formula("($c/2)*t^2")->reduce);
}

$multiansC = MultiAnswer($iFg[0], $iFg[1])->with(
    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>
    "<table border='0' cellspacing='0'>
     <tr><td>\(\int \frac{y_1 g}{W} dt = \) %s </td></tr>
     <tr><td>\(\int \frac{y_2 g}{W} dt = \) %s </td></tr>
    </table>",
    tex_format =>
    "\begin{array}{l} 
        \displaystyle \int \frac{y_1 g}{W} dt  = %s \\ 
        \displaystyle \int \frac{y_2 g}{W} dt  = %s 
     \end{array}",

    checker => sub {
        my ($correct, $student, $answerHash ) = @_;
        my @c = @{$correct};
        my @s = @{$student};
        my $msg = "";    my @flag = (0,0); 
        if ($c[0]->typeMatch($s[0]) &&
            $c[1]->typeMatch($s[1])) {  
          my @dS = (Formula("$s[0]")->D('t'),
                    Formula("$s[1]")->D('t'));
          if (Formula("$dS[0]*$S_wron") == Formula("$S_fund[0]*$g")) { 
            $flag[0] = 1;
            $msg = "First integral is correct $BR";
          } else {
            $msg = "First integral is incorrect! $BR";
          } if (Formula("$dS[1]*$S_wron") == Formula("$S_fund[1]*$g")) { 
            $flag[1] = 1;
            $msg = $msg . "Second integral is correct";
          } else {
            $msg = $msg . "Second integral is incorrect!";
          } 
        }
        if ($flag[0]*$flag[1] == 1) { return 1; }
        else { if (length($msg) > 1) { Value::Error($msg); } }

        return 0;
    }
);

# D - general solution

$gen_soln = Formula("($iFg[0] + c2)*$y2 - ($iFg[1] + c1)*$y1")->reduce;

$multiansD = MultiAnswer($gen_soln)->with(
    singleResult => 1,
    checkTypes => 1,
    allowBlankAnswers => 0,
 
    checker => sub{
       my ($correct, $student, $answerHash ) = @_;
       my @s = @{$student};
       my $msg = "";    my @flag = (0,0,0);  

       my @S_h = (Formula("$s[0]")->D("c1"),
                  Formula("$s[0]")->D("c2"));
       my @dS_h = ($S_h[0]->D('t'),
                   $S_h[1]->D('t'));
       my @ddS_h = ($S_h[0]->D('t','t'),
                    $S_h[1]->D('t','t'));
       if (Formula("$S_h[0]*$dS_h[1]") == Formula("$S_h[1]*$dS_h[0]")) {
          Value::Error("Not the most general answer...");
       } 
       if (Formula("$ddS_h[0] - ($a+$b)*$dS_h[0] + ($a*$b)*$S_h[0]") == Formula("0")) {
          $msg = "\(y_1\) is okay$BR";
          $flag[0] = 1;
       } else {
          $msg = "\(y_1\) is wrong$BR";
       }
       if (Formula("$ddS_h[1] - ($a+$b)*$dS_h[1] + ($a*$b)*$S_h[1]") == Formula("0")) {
          $msg = $msg . "\(y_2\) is okay$BR";
          $flag[1] = 1;
       } else {
          $msg = $msg . "\(y_2\) is wrong$BR";
       }

       my $S_p = Formula("$s[0]")->substitute("c1"=>"0","c2"=>"0");
       my $dS_p = $S_p->D('t');
       my $ddS_p = $S_p->D('t','t');
       if (Formula("$ddS_p - ($a+$b)*$dS_p + ($a*$b)*$S_p") == Formula("$g")) {
          $msg = $msg . "Particular solution is okay";
          $flag[2] = 1;
       } else {
          $msg = $msg . "Not a solution to the DE!";
       }
      
       if ($flag[0]*$flag[1]*$flag[2] != 1) {
         if (length($msg) > 1) { Value::Error($msg); }
       } else {
         return 1;
       }
       return 0;
    }
);


#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
In this problem you will use variation of parameters to solve the nonhomogeneous equation 
\[ $L = $g \]

$PAR
$HR
$PAR

$BBOLD A. $EBOLD
Write the characteristic equation for the associated homogeneous equation.
(Use ${BKBD}r${EKBD} for your variable.)
\{ mbox([
 "\(\quad\)",
 ans_rule(10),
]) \}

$PAR

$BBOLD B. $EBOLD
Write the fundamental solutions for the associated homogeneous equation
and their Wronskian.
\{ mbox([
  "\( \quad \phantom{\mathrm{W}(y_1,\,)} y_1 = \)",
  $multiansB->ans_rule(10),
  "\(\qquad y_2 = \)",
  $multiansB->ans_rule(10)
]) \}
\{ mbox([
  "\(\quad \mathrm{W}\bigl(y_1, y_2\bigr) = \)",
  $multiansB->ans_rule(10)
]) \}

$PAR

$BBOLD C. $EBOLD
Compute the following integrals.
\{ mbox ([
  "\( \quad \displaystyle \int \frac{y_1 g}{W} dt = \)",
  $multiansC->ans_rule(10)
]) \}
\{ mbox ([
  "\( \quad \displaystyle \int \frac{y_2 g}{W} dt = \)",
  $multiansC->ans_rule(10)
]) \}

$PAR

$BBOLD D. $EBOLD
Write the general solution.
(Use ${BKBD}c1${EKBD} and ${BKBD}c2${EKBD} for \(c_1\) and \(c_2\)).
\{ mbox ([
  "\( \quad y = \)",
  $multiansD->ans_rule(50)
]) \}
$BR
(Note: Your general solution will only be correct if it is a general
solution to the differential equation.)



END_TEXT

Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( equation_cmp("$char_eqn = 0", vars=>['r']) );
ANS( $multiansB->cmp() );
ANS( $multiansC->cmp() );
ANS( $multiansD->cmp() );

COMMENT('MathObject version. Randomized -- roots REPEATED or DISTINCT.');

ENDDOCUMENT(); 
