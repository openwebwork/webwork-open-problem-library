## DESCRIPTION
## Systems of ODEs: Nonhomogeneous Systems
## ENDDESCRIPTION

## DBsubject(Differential equations)
## DBchapter(Higher order differential equations)
## DBsection(Variation of parameters)
## Date(24/11/2015)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(4)
## MO(1)


##################################
#  Initialization

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGmatrixmacros.pl",
  "parserMultiAnswer.pl",
  "answerHints.pl",
  "extraAnswerEvaluators.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

#####################################
#  Setup

Context("Numeric");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->are(
   t=>["Real", limits=>[1,3]], 
   n=>"Real",
   y=>"Real", "y'"=>"Real", "y''"=>"Real",
   "c1"=>"Real", "c2"=>"Real"
);
Context()->flags->set(
   zeroLevel=>0.001,
   limits=>[0,2],
   zeroLevelTol=>0.001
);



############################
# setup differential equation 

my $a1, $a2, $b1, $b2, $c, $d;  #  roots are a1/b1 and a2/b2
my @coeff;

$b1 = 1; # random(1,3,1);  
$b2 = 1;

# $b1,$b2 never change but leaving them as they are 
# might make it easier to modify the code later to introduce fractions 

$a1 = non_zero_random($b1-4, 4-$b1, 1)*$b1 
     + (($b1 == 1) ? 0 : non_zero_random(1-$b1,$b1-1,1));
do { $a2 = non_zero_random(-3,3,1); }
until ( $a2/$b2 != $a1/$b1 );

$c = non_zero_random(-3,3,1);  $d = random(-3,3,1);

@coef = (Formula("$b1*$b2"), 
         Formula("$b1*$b2-$a1*$b2-$a2*$b1"),
         Formula("$a1*$a2"));

$L = Formula("$coef[0]*t^2*y'' + $coef[1]*t*y' + $coef[2]*y")->reduce;  # DE

$g = Formula("$coef[0]*$c*t^3 + $coef[0]*$d*t^2")->reduce;   # forcing function
$real_g = Formula("$c*t+$d")->reduce;

#############################
# answer evaluators

# A -- accept any multiple of eqn (rounding error => only small multiples)

$eqn = Formula("(t^n)*($b1*n-$a1)*($b2*n-$a2)")->reduce;
$eqn_hint1 = Formula("$coef[0]*t^2*(n*(n-1)*t^(n-2)) + $coef[1]*t*(n*t^(n-1)) + $coef[2]*(t^n)")->reduce;
$eqn_hint2 = Formula("t^n($coef[0]*n*(n-1) + $coef[1]*n + $coef[2])")->reduce;
$eqn_hint25 = Formula("($coef[0]*n*(n-1) + $coef[1]*n + $coef[2])")->reduce;
$eqn_hint3 = Formula("$coef[0]*n^2 + ($coef[1]-$coef[0])*n + $coef[2]")->reduce;
$eqn_hint4 = Formula("($b1*n-$a1)*($b2*n-$a2)")->reduce;

# B -- fundamental solutions and wronskian

$y1 = Formula("t^($a1/$b1)")->reduce;   
$y2 = Formula("t^($a2/$b2)")->reduce;
my $Wcoef = Formula("(($a2*$b1-$a1*$b2)/($b1*$b2))");
my $Wronskian = Formula("$Wcoef*t^(($a2*$b1+$a1*$b2-$b1*$b2)/($b1*$b2))")->reduce;

## Combine part B,C and D into one MultiAnswer

my $iFgt1, $iFgt2, $iFgt3, $iFgt4;

$iFgt1=(($a2/$b2 == 3) ? Formula("ln|t|") : Formula("($b2/(3*$b2-$a2))*t^((3*$b2-$a2)/$b2)"));
$iFgt2=(($a2/$b2 == 2) ? Formula("ln|t|") : Formula("($b2/(2*$b2-$a2))*t^((2*$b2-$a2)/$b2)"));
$iFgt3=(($a1/$b1 == 3) ? Formula("ln|t|") : Formula("($b1/(3*$b1-$a1))*t^((3*$b1-$a1)/$b1)"));
$iFgt4=(($a1/$b1 == 2) ? Formula("ln|t|") : Formula("($b1/(2*$b1-$a1))*t^((2*$b1-$a1)/$b1)"));

my @iFg = ( Formula("($c*$iFgt1+$d*$iFgt2)/($Wcoef)")->reduce,
            Formula("($c*$iFgt3+$d*$iFgt4)/($Wcoef)")->reduce );

$multiansBCD = MultiAnswer($y1, $y2, $Wronskian, $real_g, $iFg[0], $iFg[1])->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
    my ($correct, $student, $self ) = @_;
    my ( $y1cor, $y2cor, $Wcor, $real_gstu, $iFg1cor, $iFg2cor ) = @{$correct};
    my ( $y1stu, $y2stu, $Wstu, $real_gcor, $iFg1stu, $iFg2stu ) = @{$student};
    my @res = (0,0,0,0,0,0);  # default result 
    # will be computed from student's y1 and y2:
    my $dy1stu; my $dy2stu;
    my $ddy1stu; my $ddy2stu;
    my $wron; 

    # Part C: doesn't depend on anything else so check it first
    if ( ref($real_gstu) == ref($real_gcor) ){ $res[3] = ( $real_gstu == $real_gcor ); }
    
    # Part B:
    # check student's y1, y2
    if ( $y1cor->typeMatch($y1stu) ) {
      $dy1stu = $y1stu->D('t');
      $ddy1stu = $dy1stu->D('t');
      my $Ly1stu = Formula("$coef[0]*t^2*$ddy1stu + $coef[1]*t*$dy1stu + $coef[2]*$y1stu"); 
      if ( $Ly1stu == Formula("0") ){
        $res[0] = 1;
      }
      else {
        $self->setMessage(1,"\(y_1\) is not a fundamental solution.");
      }
    }
    if ( $y2cor->typeMatch($y2stu) ) {
      $dy2stu = $y2stu->D('t');
      $ddy2stu = $dy2stu->D('t');
      my $Ly2stu = Formula("$coef[0]*t^2*$ddy2stu + $coef[1]*t*$dy2stu + $coef[2]*$y2stu"); 
      if ( $Ly2stu == Formula("0") ){
        $res[1] = 1;
      }
      else {
        $self->setMessage(2,"\(y_2\) is not a fundamental solution.");
      }
    }
    # check for independence
    if ( $res[0] && $res[1]) { 
      # compute the wronskiaan from student's y1 and y2
      $wron = $y1stu*$dy2stu - $y2stu*$dy1stu;
      if ( $wron == Formula("0")){
        $res[1]=0;
        $self->setMessage(2,"Your fundamental solutions are not independent.");
      }  
      ## check the Wronskiian
      if ( $Wcor->typeMatch($Wstu) ) {
        if ( $Wstu == $wron ) { $res[2] = 1; }
        else { $self->setMessage(3,"Wronskian is wrong.");}
      }

      ## Part D
      ## check the integrals
      if ( $iFg1cor->typeMatch($iFg1stu) ) {
        if ( $iFg1stu->D('t') == $y1stu*$real_g/$wron ){ $res[4] = 1; }
        else { $self->setMessage(4, "\(\displaystyle \int \frac{y_1g}{W}dt\) is wrong."); }
      }
      if ( $iFg2cor->typeMatch($iFg2stu) ) {
        if ( $iFg2stu->D('t') == $y2stu*$real_g/$wron ){ $res[5] = 1;}
        else { $self->setMessage(5, "\(\displaystyle \int \frac{y_2g}{W}dt\) is wrong."); }
      }
    }
    return [ @res ];
  }
);

# E - general solution

$gen_soln = Formula("($iFg[0]+c2)*$y2 - ($iFg[1]+c1)*$y1")->reduce;

$multiansE = MultiAnswer($gen_soln)->with(
    singleResult => 1,
    checkTypes => 1,
    allowBlankAnswers => 0,
    checker => sub{
       my ($correct, $student, $answerHash ) = @_;
       my @s = @{$student};
       my $msg = "";    my @flag = (0,0,0);  

       my @S_h = (Formula("$s[0]")->D("c1"),
                  Formula("$s[0]")->D("c2"));
       my @dS_h = ($S_h[0]->D('t'),
                   $S_h[1]->D('t'));
       my @ddS_h = ($S_h[0]->D('t','t'),
                    $S_h[1]->D('t','t'));
       if (Formula("$S_h[0]*$dS_h[1]") == Formula("$S_h[1]*$dS_h[0]")) {
          Value::Error("Not the most general answer...");
       } 
       if (Formula("$coef[0]*t^2*$ddS_h[0] + $coef[1]*t*$dS_h[0] + $coef[2]*$S_h[0]") == Formula("0")) {
          $msg = "\(y_1\) is okay$BR";
          $flag[0] = 1;
       } else {
          $msg = "\(y_1\) is wrong$BR";
       }
       if (Formula("$coef[0]*t^2*$ddS_h[1] + $coef[1]*t*$dS_h[1] + $coef[2]*$S_h[1]") == Formula("0")) {
          $msg = $msg . "\(y_2\) is okay$BR";
          $flag[1] = 1;
       } else {
          $msg = $msg . "\(y_2\) is wrong$BR";
       }

       my $S_p = Formula("$s[0]")->substitute("c1"=>"0","c2"=>"0");
       my $dS_p = $S_p->D('t');
       my $ddS_p = $S_p->D('t','t');
       my $P = Formula("$coef[0]*t^2*$ddS_p + $coef[1]*t*$dS_p + $coef[2]*$S_p");
       if ($P == Formula("$g")) {
          $msg = $msg . "Particular solution is okay";
          $flag[2] = 1;
       } else {
          $msg = $msg . "Not a solution to the DE!";
       }
      
       if ($flag[0]*$flag[1]*$flag[2] != 1) {
         if (length($msg) > 1) { Value::Error($msg); }
       } else {
         return 1;
       }
       return 0;
    }
);


#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

$Message
$PAR
In this problem you will use variation of parameters to solve the nonhomogeneous equation 
\[ $L = $g \]

$PAR
$HR
$PAR

$BBOLD A. $EBOLD
Plug \(y=t^n\) into the associated ${BBOLD}homogeneous${EBOLD} equation (with
"\(0\)" instead of "\($g\)") to get an equation with only \(t\) and \(n\).
\{ mbox([
 "\(\quad\)",
 ans_rule(40),
]) \}
(Note: Do not cancel out the \(t\), or webwork won't accept your answer!)

$PAR

$BBOLD B. $EBOLD
Solve the equation above for \(n\) (use \(t\neq 0\) to cancel out the \(t\)).
$BR $SPACE $SPACE 
You should get two values for \(n\), which give two fundamental solutions 
of the form \(y = t^n\).
\{ mbox([
  "\( \quad \phantom{\mathrm{W}(y_1,\,)} y_1 = \)",
  $multiansBCD->ans_rule(10),
  "\(\qquad y_2 = \)",
  $multiansBCD->ans_rule(10)
]) \}
\{ mbox([
  "\(\quad \mathrm{W}\bigl(y_1, y_2\bigr) = \)",
  $multiansBCD->ans_rule(20)
]) \}

$PAR

$BBOLD C. $EBOLD
To use variation of parameters, the linear differential equation must be written in 
standard form \(y'' + py' + qy = g\).  
$BR $SPACE $SPACE 
What is the function \(g\)?
\{ mbox ([
  "\( \qquad g(t) = \)",
  $multiansBCD->ans_rule(10)
]) \}

$PAR

$BBOLD D. $EBOLD
Compute the following integrals.
\{ mbox ([
  "\( \quad \displaystyle \int \frac{y_1 g}{W} dt = \)",
  $multiansBCD->ans_rule(35)
]) \}
\{ mbox ([
  "\( \quad \displaystyle \int \frac{y_2 g}{W} dt = \)",
  $multiansBCD->ans_rule(35)
]) \}

$PAR

$BBOLD E. $EBOLD
Write the general solution.
(Use ${BKBD}c1${EKBD} and ${BKBD}c2${EKBD} for \(c_1\) and \(c_2\)).
\{ mbox ([
  "\( \quad y = \)",
  $multiansE->ans_rule(70)
]) \}


END_TEXT

$showHint = 3;

BEGIN_TEXT
$HR
$PAR
If you don't get this in $showHint tries, you can get a hint to help you 
find the fundamental solutions.
END_TEXT

BEGIN_HINT
$PAR
$SPACE $SPACE \(\bullet\) The first two parts go as follows:
\[ \begin{array}{lrl}
  \text{homogeneous } \rlap{\text{equation:}} 
         & $L  &= \ \ 0  \\
  \text{plug in }y=t^n: \quad 
         & $eqn_hint1 &= \ \ 0 \\
  \text{factor out }t^n: 
         & $eqn_hint2 &= \ \ 0 \\
  \text{cancel }t^n: 
         & $eqn_hint25 &= \ \ 0 \\
  \text{simplify}: 
         & $eqn_hint3 &= \ \ 0 \\
  \text{factor}: 
         & $eqn_hint4 &= \ \ 0 \\
  \end{array} \]
\[ \text{fundamental solutions:}
   \quad y_1 = $y1, \quad y_2 = $y2  \]
$PAR
$SPACE $SPACE \(\bullet\) You are on your own for the rest. ;)

END_HINT


Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( equation_cmp("$eqn = 0", vars=>['t','n']) );
ANS( $multiansBCD->cmp() );
ANS( $multiansE->cmp() );

COMMENT("MathObject version. Randomized -- currently integer powers (rational powers don't check right).");

ENDDOCUMENT(); 
