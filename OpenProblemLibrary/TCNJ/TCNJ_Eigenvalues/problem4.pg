## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Eigenvalues and eigenvectors)
## DBsection(Computing eigenvalues and eigenvectors)
## Institution(TCNJ)
## Level(2)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('6.1')
## Problem1('')
## KEYWORDS('eigenvalues' 'eigenvectors')


DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl"
);
 
TEXT(beginproblem());    
# Do not show which answers are incorrect.
$showPartialCorrectAnswers = 0;

Context("Matrix");

# FIRST MATRIX


$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = random(-1,1,2);
$a22 = $mult * $a12 + $b1;

$a = Matrix([[$a11, $a12],[$a21,$a22]]);
$b = $a->inverse();

$e1 = non_zero_random(-8,8,1);
do { $e2 = non_zero_random(-8,8,1); } until ( $e2 != $e1 );

$e = Matrix([[$e1,0],[0,$e2]]);

$ans1 = $e1;
$matrix = $a * $e *$b;

# SECOND MATRIX

$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = random(-1,1,2);
$a22 = $mult * $a12 + $b1;

$a = Matrix([[$a11,$a12],[$a21,$a22]]);
$b = $a->inverse();

$e1 = non_zero_random(-8,8,1);
do { $e2 = non_zero_random(-8,8,1);} until ($e2 != $e1);

$e = Matrix([[$e1,0],[0,$e2]]);

do { $ans2 = random(-8,8,1); } until ( $ans2 != $e1 && $ans2 != $e2 );

$matrix2 = $a * $e *$b;

# THIRD MATRIX

$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = random(-1,1,2);
$a22 = $mult * $a12 + $b1;

$a = Matrix([[$a11,$a12],[$a21,$a22]]);
$b = $a->inverse();

$e1 = non_zero_random(-8,8,1);
do { $e2 = non_zero_random(-8,8,1); } until ($e2 != $e1);
$e = Matrix([[$e1,0],[0,$e2]]);

$ans3 = $e1;
$matrix3 = $a * $e *$b;

# FOURTH MATRIX

#$a= new Matrix(2,2);

$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = random(-1,1,2);
$a22 = $mult * $a12 + $b1;

$a = Matrix([[$a11,$a12],[$a21,$a22]]);
$b = $a->inverse();

$e1 = non_zero_random(-8,8,1);
do { $e2 = non_zero_random(-8,8,1); } until ( $e2 != $e1 );
do { $ans4 = random(-8,8,1); } until ( $ans4 != $e1 and $ans4 != $e2 );

$matrix4 = $a * $e *$b;

# Make a new checkbox multiple choice

$tf = new_pop_up_select_list();
$tf->ra_pop_up_list(["?"=>"Select an Answer", "Yes" => "Yes", "No" => "No"]);

# $cmc now "contains" the checkbox multiple choice object.

# Insert some  questions and matching answers in the q/a list

$tf -> qa ( '\( A = $matrix\) and \( \lambda = $ans1\)' , "Yes",
            '\( A = $matrix2\) and \( \lambda = $ans2\)' , "No",
            '\( A = $matrix3\) and \( \lambda = $ans3\)' , "Yes",
            '\( A = $matrix4\) and \( \lambda = $ans4\)' , "No",            
);

$tf->choose(3);

# Insert some incorrect answers

# Print the text using $mc->print_q for the questions and
# $mc->print_a to print the answers.

Context()->texStrings;
BEGIN_TEXT

Determine if \( \lambda \) is an eigenvalue of the matrix \(A\).

$BR

 \{ $tf -> print_q \}

END_TEXT
Context()->normalStrings;

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;

ENDDOCUMENT();
