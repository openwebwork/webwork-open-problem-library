## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter('Matrices')
## DBsection(Elementary matrices)
## Institution('TCNJ')
## KEYWORDS('matrix' 'inverse')
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('3.4')
## Problem1('')
# Description
# The first example using match lists
# EndDescription


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGnumericalmacros.pl",
           "PGmatrixmacros.pl"
           );


TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

$a = new Matrix(2,2);
$b = new Matrix(3,3);

$c = non_zero_random(2, 6, 1);
$d = non_zero_random(-6, -2, 1);
$e = non_zero_random(3, 7, 1);

$f = non_zero_random(2, 6, 1);
$g = non_zero_random(-6, -2, 1);
$h = non_zero_random(3, 7, 1);

$a->assign(1,1,non_zero_random(-5,5,1) );
$a->assign(1,2,non_zero_random(-5,5,1) );
$a->assign(2,1,non_zero_random(-5,5,1) );
$a->assign(2,2,non_zero_random(-5,5,1) );

$b->assign(1,1,non_zero_random(-5,5,1) );
$b->assign(1,2,non_zero_random(-5,5,1) );
$b->assign(1,3,non_zero_random(-5,5,1) );
$b->assign(2,1,non_zero_random(-5,5,1) );
$b->assign(2,2,non_zero_random(-5,5,1) );
$b->assign(2,3,non_zero_random(-5,5,1) );
$b->assign(3,1,non_zero_random(-5,5,1) );
$b->assign(3,2,non_zero_random(-5,5,1) );
$b->assign(3,3,non_zero_random(-5,5,1) );

BEGIN_TEXT
Suppose that:
$BR
\{ mbox('A = ', display_matrix($a), 'and B = ', display_matrix($b)) \}
$BR
Given the following descriptions, determine the following elementary matrices and their inverses.
$BR$BR

a.  The elementary matrix \(E_1\) multiplies the first row of A by
1/\{$c\}.$BR
\{ mbox('\(E_1 =\)', answer_matrix(2,2,4),  ', ',  
        '\(E_1^{-1} =\)', answer_matrix(2,2,4))\}
$BR

b.  The elementary matrix \(E_2\) multiplies the second row of A by
\{$d\}.$BR
\{ mbox('\(E_2 =\)', answer_matrix(2,2,4),  ', ', 
        '\(E_2^{-1} =\)', answer_matrix(2,2,4))\}
$BR

c.  The elementary matrix \(E_3\) switches the first and second rows of A.$BR
\{ mbox('\(E_3 =\)', answer_matrix(2,2,4),  ', ', 
        '\(E_3^{-1} =\)', answer_matrix(2,2,4))\}
$BR

d.  The elementary matrix \(E_4\) adds \{$e\} times the first row of A to the second row of A.$BR
\{ mbox('\(E_4 =\)', answer_matrix(2,2,4),  ', ', 
        '\(E_4^{-1} =\)', answer_matrix(2,2,4))\}
$BR

e.  The elementary matrix \(E_5\) multiplies the second row of B by
1/\{$f\}.$BR
\{ mbox('\(E_5 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_5^{-1} =\)', answer_matrix(3,3,4))\}
$BR

f.  The elementary matrix \(E_6\) multiplies the third row of B by
\{$g\}.$BR
\{ mbox('\(E_6 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_6^{-1} =\)', answer_matrix(3,3,4))\}
$BR

g.  The elementary matrix \(E_7\) switches the first and third rows of B.$BR
\{ mbox('\(E_7 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_7^{-1} =\)', answer_matrix(3,3,4))\}
$BR

h.  The elementary matrix \(E_8\) adds \{$h\} times the third row of B to the second row of B.$BR
\{ mbox('\(E_8 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_8^{-1} =\)', answer_matrix(3,3,4))\}
END_TEXT

ANS(num_cmp(1/$c));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp($c));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp($d));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1/$d));

ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(1));
ANS(num_cmp(0));

ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(1));
ANS(num_cmp(0));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp($e));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(-$e));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1/$f));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp($f));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp($g));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1/$g));

ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));

ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp($h));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(-$h));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ENDDOCUMENT() ;
