## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter('Matrices')
## DBsection(Elementary matrices)
## Institution('TCNJ')
## KEYWORDS('matrix' 'inverse')
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('3.4')
## Problem1('')
# Description
# The first example using match lists
# EndDescription


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGnumericalmacros.pl",
           "PGmatrixmacros.pl"
           );


TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

$a11 = non_zero_random(-5,5,1);
$a12 = non_zero_random(-5,5,1);
$a21 = non_zero_random(-5,5,1);
$a22 = non_zero_random(-5,5,1);
if($a11*$a22- $a12*$a21==0){
   $a11 = non_zero_random(-5,5,1);
   $a12 = non_zero_random(-5,5,1);
}


$b11 = non_zero_random(-5,5,1);
$b12 = non_zero_random(-5,5,1);
$b13 = non_zero_random(-5,5,1);
$b21 = non_zero_random(-5,5,1);
$b22 = non_zero_random(-5,5,1);
$b23 = non_zero_random(-5,5,1);
if($b11*$b22- $b12*$b21==0){
   $b11 = non_zero_random(-5,5,1);
   $b12 = non_zero_random(-5,5,1);
}

$b31 = non_zero_random(-5,5,1);
$b32 = non_zero_random(-5,5,1);
$b33 = non_zero_random(-5,5,1);
## This ensures that the three rows are linearly independent)

while( $b11*$b22*$b33 + $b12*$b23*$b31 + $b13* $b21 * $b32 -  $b11*$b23*$b32 - $b12*$b21*$b33 - $b13* $b22 * $b31 == 0){
      $b33 = non_zero_random(-5,5,1);
}

$a = new Matrix(2,2);
$amult = new Matrix(2, 2);
$aswitch = new Matrix(2, 2);
$aadd = new Matrix(2, 2);
$b = new Matrix(3,3);
$bmult = new Matrix(3, 3);
$bswitch = new Matrix(3, 3);
$badd = new Matrix(3, 3);

$c = non_zero_random(2, 6, 1);
$e = non_zero_random(3, 7, 1);

$f = non_zero_random(2, 6, 1);
$h = non_zero_random(3, 7, 1);

$a->assign(1,1,$a11 );
$a->assign(1,2,$a12 );
$a->assign(2,1,$a21 );
$a->assign(2,2,$a22 );

$amult->assign(1,1,$a11*$c );
$amult->assign(1,2,$a12*$c );
$amult->assign(2,1,$a21 );
$amult->assign(2,2,$a22 );

$aswitch->assign(1,1,$a21 );
$aswitch->assign(1,2,$a22 );
$aswitch->assign(2,1,$a11 );
$aswitch->assign(2,2,$a12 );

$aadd->assign(1,1,$a11 + $a21*$e );
$aadd->assign(1,2,$a12 + $a22*$e );
$aadd->assign(2,1,$a21 );
$aadd->assign(2,2,$a22 );

$b->assign(1,1,$b11 );
$b->assign(1,2,$b12 );
$b->assign(1,3,$b13 );
$b->assign(2,1,$b21 );
$b->assign(2,2,$b22 );
$b->assign(2,3,$b23 );
$b->assign(3,1,$b31 );
$b->assign(3,2,$b32 );
$b->assign(3,3,$b33 );


$bmult->assign(1,1,$b11 );
$bmult->assign(1,2,$b12 );
$bmult->assign(1,3,$b13 );
$bmult->assign(2,1,$b21*$f );
$bmult->assign(2,2,$b22*$f );
$bmult->assign(2,3,$b23*$f );
$bmult->assign(3,1,$b31 );
$bmult->assign(3,2,$b32 );
$bmult->assign(3,3,$b33 );

$bswitch->assign(1,1,$b11 );
$bswitch->assign(1,2,$b12 );
$bswitch->assign(1,3,$b13 );
$bswitch->assign(2,1,$b31 );
$bswitch->assign(2,2,$b32 );
$bswitch->assign(2,3,$b33 );
$bswitch->assign(3,1,$b21 );
$bswitch->assign(3,2,$b22 );
$bswitch->assign(3,3,$b23 );

$badd->assign(1,1,$b11 );
$badd->assign(1,2,$b12 );
$badd->assign(1,3,$b13 );
$badd->assign(2,1,$b21 );
$badd->assign(2,2,$b22 );
$badd->assign(2,3,$b23 );
$badd->assign(3,1,$b31 + $b11*$h );
$badd->assign(3,2,$b32 + $b12*$h );
$badd->assign(3,3,$b33 + $b13*$h );

BEGIN_TEXT
a.  Suppose that:
\{ mbox('\(E_1\)', display_matrix($a), ' = ', display_matrix($amult))\}
Find \(E_1\) and \(E_1^{-1}\)$BR
\{ mbox('\(E_1 =\)', answer_matrix(2,2,4),  ', ', 
        '\(E_1^{-1} =\)', answer_matrix(2,2,4))\}

b.  Suppose that:
\{ mbox('\(E_2\)', display_matrix($a), ' = ', display_matrix($aswitch))\}
Find \(E_2\) and \(E_2^{-1}\)$BR
\{ mbox('\(E_2 =\)', answer_matrix(2,2,4),  ', ', 
        '\(E_2^{-1} =\)', answer_matrix(2,2,4))\}
$BR

c.  Suppose that:
\{ mbox('\(E_3\)', display_matrix($a), ' = ', display_matrix($aadd))\}
Find \(E_3\) and \(E_3^{-1}\)$BR
\{ mbox('\(E_3 =\)', answer_matrix(2,2,4),  ', ', 
        '\(E_3^{-1} =\)', answer_matrix(2,2,4))\}
$BR

d.  Suppose that:
\{ mbox('\(E_4\)', display_matrix($b), ' = ', display_matrix($bmult))\}
Find \(E_4\) and \(E_4^{-1}\)$BR
\{ mbox('\(E_4 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_4^{-1} =\)', answer_matrix(3,3,4))\}
$BR

e.  Suppose that:
\{ mbox('\(E_5\)', display_matrix($b), ' = ', display_matrix($bswitch))\}
Find \(E_5\) and \(E_5^{-1}\)$BR
\{ mbox('\(E_5 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_5^{-1} =\)', answer_matrix(3,3,4))\}
$BR

f.  Suppose that:
\{ mbox('\(E_6\)', display_matrix($b), ' = ', display_matrix($badd))\}
Find \(E_6\) and \(E_6^{-1}\)$BR
\{ mbox('\(E_6 =\)', answer_matrix(3,3,4),  ', ', 
        '\(E_6^{-1} =\)', answer_matrix(3,3,4))\}
$BR

END_TEXT

ANS(num_cmp($c));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1/$c));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(1));
ANS(num_cmp(0));

ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(1));
ANS(num_cmp(0));

ANS(num_cmp(1));
ANS(num_cmp($e));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(-$e));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp($f));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1/$f));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp($h));
ANS(num_cmp(0));
ANS(num_cmp(1));

ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(0));
ANS(num_cmp(1));
ANS(num_cmp(0));
ANS(num_cmp(-$h));
ANS(num_cmp(0));
ANS(num_cmp(1));

ENDDOCUMENT() ;