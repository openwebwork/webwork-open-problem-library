## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(Diagonalization)
## Institution(TCNJ)
## Level(4)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('6.4')
## Problem1('')
## KEYWORDS('diagonalization' 'matrices')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGmatrixmacros.pl",
  "parserMultiAnswer.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

Context("Matrix");


$a11 = random(-1,1,2);
$a12 = non_zero_random(-3,3,1);
$mult = non_zero_random(-2,2,1);
$a21 = $mult * $a11;
$b1 = random(-1,1,2);
$a22 = $mult * $a12 + $b1;

$a = Matrix([[$a11, $a12],[$a21, $a22]]);
$M = Matrix([[0,1],[1,0]]);
$aa = $a*$M;

$b = $a->inverse;

# two distinct eigenvalues

$eig1 = Real(non_zero_random(-8,8,1));
$eig2 = Real(non_zero_random(-8,8,1));

if ( $eig1 >= $eig2 ) {
    if ( $eig1 == 8 ) {
        $eig1 = 7;
        $eig2 = 8;
    } else {
        $eig2 = $eig1 + 1;
    }
}

$e = Matrix([[$eig1,0],[0,$eig2]]);
 
$matrix = $a * $e *$b;

## to check that we have a correct answer, just verify that
##    the appropriate matrix multiplication works

$ev = MultiAnswer($eig1, $eig2, $a, $eig2, $eig1, $aa )->with(
   singleResult => 0,
   checkTypes => 0,
   checker => sub{
     my ( $correct, $student, $self ) = @_;
     my ( $se00, $se01, $sa0, $se10, $se11, $sa1 ) = @{$student};
     my ( $ce00, $ce01, $ca0, $ce10, $ce11, $ca1 ) = @{$correct};
     @score = (0,0,0,0,0,0);
     #check first three answers
     if ( $se00->typeMatch($ce00) and $se01->typeMatch($ce01) and $sa0->typeMatch($ca0) ){
       if ( ($se00 == $ce00 and $se01 == $ce01) or ($se01 == $ce00 and $se00 == $ce01)){
         $score[0]=1; $score[1]=1;
         if ( not $sa0->det->isZero) {  
           $d0 = Matrix([[$se00,0],[0,$se01]]);
           $sa0inv = $sa0->inverse;
           if ($matrix == $sa0*$d0*$sa0inv) {
             $score[2] = 1;
           }
         }
       }
     }
     #check second three answers
     if ( $se00 == $se10 and $se01 == $se11 ){
       $self->setMessage(4,"Your diagonal matrices must be different");
       return @score;
     }
     if ( $se00->typeMatch($ce00) and $se01->typeMatch($ce01) and $sa0->typeMatch($ca0) ){
       if ( ($se10 == $ce10 and $se11 == $ce11) or ($se11 == $ce10 and $se10 == $ce11)){
         $score[3]=1; $score[4] = 1;
         if ( not $sa1->det->isZero) {  
           $d1 = Matrix([[$se10,0],[0,$se11]]);
           $sa1inv = $sa1->inverse;
           if ($matrix == $sa1*$d1*$sa1inv) {
             $score[5] = 1;
           }
         }
       }
     }
     return @score;
   }
);

Context()->texStrings;
BEGIN_TEXT
Let \(A = $matrix \).
$BR
Find two different diagonal matrices \(D\) and the corresponding matrix \(S\) such that \(A=SDS^{-1}\). 
$PAR

\{
mbox( '\(D_1 = \)', 
display_matrix( [[ $ev-> ans_rule(5), 0],
[0, $ev-> ans_rule(5)]]),
'\(\quad  S_1 = \)', 
$ev->ans_array(),'.')
\}
$PAR 
\{
mbox( '\( D_2 = \)', 
display_matrix( [[ $ev-> ans_rule(5), 0],
[0, $ev-> ans_rule(5)]]),
'\(\quad  S_2 = \)', 
$ev->ans_array, '.' )
\}

$BR
$BR
END_TEXT
Context()->normalStrings;
ANS($ev->cmp() );

ENDDOCUMENT();
