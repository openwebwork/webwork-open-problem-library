## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Linear independence)
## Institution('TCNJ')
## KEYWORDS('vectors' 'basis' 'linearly independent' 'dependent')
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('2.3')
## Problem1('')
DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl"
        );
 
TEXT(beginproblem());    
# Do not show which answers are incorrect.
$showPartialCorrectAnswers = 0;

foreach $i (1..4) { 
	$a1[$i] = non_zero_random(-5,5,1);
	$a2[$i] = non_zero_random(-5,5,1);

        $b1[$i] = non_zero_random(-5,5,1);

        $c1[$i] = non_zero_random(-5,5,1);
        
        $d1[$i] = non_zero_random(-10,10,1);
        $d2[$i] = non_zero_random(-10,10,1);
        $d3[$i] = (0);
        $d4[$i] = non_zero_random(-10,10,1);

	$e1[$i] = non_zero_random(-5,5,1);
   
        $f1[$i] = non_zero_random(-10,10,1);
	$f2[$i] = non_zero_random(-10,10,1);
	$f3[$i] = non_zero_random(-10,10,1);
	$f4[$i] = non_zero_random(-10,10,1);
	$f5[$i] = non_zero_random(-10,10,1);
}

$m = random(2,3,1)*random(-1,1,2);
$n = random(2,3,1)*random(-1,1,2);
$o = random(2,3,1)*random(-1,1,2);
$p = random(2,3,1)*random(-1,1,2);
$q = random(-1,1,2);
$r = random(2,3,1)*random(-1,1,2);
$s = random(2,3,1)*random(-1,1,2);
$t = random(2,3,1)*random(-1,1,2);
$u = random(-1,1,2);
$v = random(-1,1,2);
foreach $i (1..4) { 
        $a3[$i] = $m*$a1[$i] + $n*$a2[$i];
        $b2[$i] = $o*$b1[$i];
}

foreach $i (1..3) {
        $c2[$i] = $p*$c1[$i];
        $e2[$i] = $r*$e1[$i];
}

$e2[4] = $r*$e1[4]+$u;

foreach $i (2...4) {       
$e3[$i] = $s*$e1[$i]+$t*$e2[$i];
}

$c2[4] = $p*$c1[4]+$q;
$e3[1] = $s*$e1[1]+$t*$e2[1]+$v;

# Make a new checkbox multiple choice
$tf = new_pop_up_select_list();
$tf->ra_pop_up_list(["?"=>"Select an answer", "Linearly independent" => "Linearly independent",
                        "Linearly dependent" => "Linearly dependent"]);
# $cmc now "contains" the checkbox multiple choice object.

# Insert some  questions and matching answers in the q/a list

$tf -> qa( 
mbox( display_matrix([[$a1[1]], [$a1[2]], [$a1[3]], [$a1[4]]]), ', ', 
	 display_matrix([[$a2[1]], [$a2[2]], [$a2[3]], [$a2[4]]]),  ', ', 
         display_matrix([[$a3[1]], [$a3[2]], [$a3[3]], [$a3[4]]]),),
"Linearly dependent", 

mbox( display_matrix([[$b1[1]], [$b1[2]], [$b1[3]], [$b1[4]]]), ', ', 
      display_matrix([[$b2[1]], [$b2[2]], [$b2[3]], [$b2[4]]]),),
"Linearly dependent",

mbox( display_matrix([[$c1[1]], [$c1[2]], [$c1[3]], [$c1[4]]]), ', ', 
         display_matrix([[$c2[1]], [$c2[2]], [$c2[3]], [$c2[4]]]),),
"Linearly independent",
                   
mbox( display_matrix([[$d1[1]], [$d1[2]], [$d1[3]], [$d1[4]]]), ', ', 
	 display_matrix([[$d2[1]], [$d2[2]], [$d2[3]], [$d2[4]]]), ', ', 
         display_matrix([[$d3[1]], [$d3[2]], [$d3[3]], [$d3[4]]]), ', ',
         display_matrix([[$d4[1]], [$d4[2]], [$d4[3]], [$d4[4]]]),) ,
"Linearly dependent",

mbox( display_matrix([[$e1[1]], [$e1[2]], [$e1[3]], [$e1[4]]]), ', ', 
	 display_matrix([[$e2[1]], [$e2[2]], [$e2[3]], [$e2[4]]]),  ', ', 
         display_matrix([[$e3[1]], [$e3[2]], [$e3[3]], [$e3[4]]]),) ,
"Linearly independent", 

mbox( display_matrix([[$f1[1]], [$f1[2]], [$f1[3]], [$f1[4]]]), ', ', 
	 display_matrix([[$f2[1]], [$f2[2]], [$f2[3]], [$f2[4]]]), ', ', 
         display_matrix([[$f3[1]], [$f3[2]], [$f3[3]], [$f3[4]]]), ', ',
         display_matrix([[$f4[1]], [$f4[2]], [$f4[3]], [$f4[4]]]), ', ',
         display_matrix([[$f5[1]], [$f5[2]], [$d4[3]], [$f5[4]]]),) ,
"Linearly dependent",

);

$tf->choose(6);

# Insert some incorrect answers

# Print the text using $mc->print_q for the questions and
# $mc->print_a to print the answers.
BEGIN_TEXT

Determine which of the following sets of vectors are linearly independent and which are linearly dependent.

$BR

 \{ $tf -> print_q \}

END_TEXT

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;

ENDDOCUMENT();