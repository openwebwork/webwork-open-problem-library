## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter('Determinants')
## DBsection('Properties')
## Institution('TCNJ')
## KEYWORDS('matrix' 'determinant' 'independent')
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('5.1')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl"
        );
 
TEXT(beginproblem());    
# Do not show which answers are incorrect.
$showPartialCorrectAnswers = 0;
 
foreach $i (1..4) {
        $a1[$i] = non_zero_random(-5,5,1);
}
$a = random(2,4,1)*random(-1,1,2);
$b = non_zero_random(-3,3,1);
$c = non_zero_random(-3,3,1);
$a2[1] = $a*$a1[1];
$a2[2] = $a*$a1[2]+$b;
$a2[3] = $a*$a1[3]+$c;
$a2[4] = $a*$a1[4];
$d = non_zero_random(-3,3,1);
$e = non_zero_random(-3,3,1);
$f = non_zero_random(-3,3,1);
$a3[1] = $d*$a1[1]+$e*$a2[1];
$a3[2] = $d*$a1[2]+$e*$a2[2];
$a3[3] = $d*$a1[3]+$e*$a2[3]+$f;
$a3[4] = $d*$a1[4]+$e*$a2[4];
$g = non_zero_random(-2,2,1);
$h = non_zero_random(-3,3,1);
$i = non_zero_random(-3,3,1);
$a4[1] = $g*$a3[1];
$a4[2] = $g*$a3[2]+$h;
$a4[3] = $g*$a3[3]+$i;
$a4[4] = $g*$a3[4];

foreach $i (1..3) {
        $b1[$i] = non_zero_random(-5,5,1);
}
$l = random(2,4,1)*random(-1,1,2);
$m = non_zero_random(-3,3,1);
$n = non_zero_random(-3,3,1);
$b2[1] = $l*$b1[1];
$b2[2] = $l*$b1[2]+$m;
$b2[3] = $l*$b1[3]+$n;
$p = non_zero_random(-3,3,1);
$q = non_zero_random(-3,3,1);
$r = non_zero_random(-3,3,1);
$b3[1] = $p*$b1[1]+$q*$b2[1];
$b3[2] = $p*$b1[2]+$q*$b2[2];
$b3[3] = $p*$b1[3]+$q*$b2[3]+$r;

foreach $i (1..4) {
        $c1[$i] = non_zero_random(-5,5,1);
        $c2[$i] = non_zero_random(-5,5,1);
        $c4[$i] = non_zero_random(-5,5,1);
}
$x = non_zero_random(-3,3,1);
$y = non_zero_random(-3,3,1);
$c3[1] = $x*$c1[1]+$y*$c2[1];
$c3[2] = $x*$c1[2]+$y*$c2[2];
$c3[3] = $x*$c1[3]+$y*$c2[3];
$c3[4] = $x*$c1[4]+$y*$c2[4];

foreach $i (1..3) {
        $d1[$i] = non_zero_random(-5,5,1);
        $d2[$i] = non_zero_random(-5,5,1);
}
$t = non_zero_random(-3,3,1);
$u = non_zero_random(-3,3,1);
$d3[1] = $t*$d1[1]+$u*$d2[1];
$d3[2] = $t*$d1[2]+$u*$d2[2];
$d3[3] = $t*$d1[3]+$u*$d2[3];

# Make a new checkbox multiple choice
$tf = new_pop_up_select_list();
$tf->ra_pop_up_list(["?"=>"Select an Answer", "Linearly Dependent" => "Linearly Dependent", "Linearly Independent" => "Linearly Independent"]);
# $cmc now "contains" the checkbox multiple choice object.

# Insert some  questions and matching answers in the q/a list

$tf -> qa ( mbox( 
         display_matrix([[$a1[1]], [$a1[2]], [$a1[3]], [$a1[4]]]), ', ', 
         display_matrix([[$a2[1]], [$a2[2]], [$a2[3]], [$a2[4]]]), ', ',
         display_matrix([[$a3[1]], [$a3[2]], [$a3[3]], [$a3[4]]]), ', ',
	 display_matrix([[$a4[1]], [$a4[2]], [$a4[3]], [$a4[4]]]), ', ', ), 
"Linearly Dependent",
            
mbox(    
         display_matrix([[$b1[1]], [$b1[2]], [$b1[3]]]), ', ', 
         display_matrix([[$b2[1]], [$b2[2]], [$b2[3]]]), ', ', 
	 display_matrix([[$b3[1]], [$b3[2]], [$b3[3]]]), ', ', ),
"Linearly Independent",

mbox( 
         display_matrix([[$c1[1]], [$c1[2]], [$c1[3]], [$c1[4]]]), ', ', 
         display_matrix([[$c2[1]], [$c2[2]], [$c2[3]], [$c2[4]]]), ', ',
         display_matrix([[$c3[1]], [$c3[2]], [$c3[3]], [$c3[4]]]), ', ',
	 display_matrix([[$c4[1]], [$c4[2]], [$c4[3]], [$c4[4]]]), ', ', ),
"Linearly Dependent",

mbox(    
         display_matrix([[$d1[1]], [$d1[2]], [$d1[3]]]), ', ', 
         display_matrix([[$d2[1]], [$d2[2]], [$d2[3]]]), ', ',
	 display_matrix([[$d3[1]], [$d3[2]], [$d3[3]]]), ', ', ),
"Linearly Dependent",
                       
);

$tf->choose(4);

# Insert some incorrect answers

# Print the text using $mc->print_q for the questions and
# $mc->print_a to print the answers.
BEGIN_TEXT

Use determinants to determine whether each of the following sets of vectors is linearly dependent or independent.

$BR

 \{ $tf -> print_q \}

END_TEXT

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;

ENDDOCUMENT();