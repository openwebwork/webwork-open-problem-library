## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Date(July 2013)
## Institution(TCNJ and Hope College)
## Author(Paul Pearson)
## MLT(LikeThisE)
## MLTleader(1)
## Level(3)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('1.2')
## Problem1('')
## KEYWORDS('linear equations' 'system')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl"
        );
 
TEXT(beginproblem());    
# Do not show which answers are incorrect.
$showPartialCorrectAnswers = 0;

$variablenames=Matrix->new_from_array_ref( [['x'],['y'],['z']] );

# Variables for first and third problem
$a = random(1,7,2)*random(-1,1,2);
$b = random(1,7,2)*random(-1,1,2);
$c = random(1,7,2)*random(-1,1,2);
$d = random(1,7,2)*random(-1,1,2);
$e = random(1,5,1)*random(-1,1,2);
$f = random(1,5,1)*random(-1,1,2);
$g = random(1,5,1)*random(-1,1,2);
$h = random(1,5,1)*random(-1,1,2);
$mult1 = random(1,5,2)*random(-1,1,2);
$mult2 = random(2,4,2)*random(-1,1,2);
$i = $a*$mult1+$e*$mult2;
$j = $b*$mult1+$f*$mult2;
$k = $c*$mult1+$g*$mult2;
$l = $d*$mult1+$h*$mult2;
$alt = $l + random(-5,5,2);

$A1=Matrix->new_from_array_ref( [[$a, $b, $c],[$e, $f, $g],[$i, $j, $k]]);
$B1=Matrix->new_from_array_ref([[$d], [$h], [$l]]);
$C1=Mat2System($A1,$B1,$variablenames);

$B3=Matrix->new_from_array_ref([[$d], [$h], [$alt]]);
$C3=Mat2System($A1,$B3,$variablenames);

# Variables for second problem
$v1 = random(1,5,1)*random(-1,1,2);
$v2 = random(1,5,1)*random(-1,1,2);
$v3 = random(1,5,1)*random(-1,1,2);
$v4 = random(1,5,1)*random(-1,1,2);
$coeff1 = random(2,3,1)*random(-1,1,2);
$coeff2 = random(4,5,1)*random(-1,1,2);
$coeff3 = random(6,7,1)*random(-1,1,2);
$p1 = $v1*$coeff1;
$p2 = $v2*$coeff1;
$p3 = $v3*$coeff1;
$p4 = $v4*$coeff1;
$p5 = $v1*$coeff2;
$p6 = $v2*$coeff2;
$p7 = $v3*$coeff2;
$p8 = $v4*$coeff2;
$p9 = $v1*$coeff3;
$p10 = $v2*$coeff3;
$p11 = $v3*$coeff3;
$p12 = $v4*$coeff3;

$A2=Matrix->new_from_array_ref( [[$p1, $p2, $p3],[$p5, $p6, $p7],[$p9, $p10, $p11]]);
$B2=Matrix->new_from_array_ref([[$p4], [$p8], [$p12]]);
$C2=Mat2System($A2,$B2,$variablenames);

# Variables for fourth problem
$r11 = random(1,5,1)*random(-1,1,2);
$r21 = random(1,5,1)*random(-1,1,2);
$r31 = random(1,5,1);
$num1 = random(2,4,1);
$n = random(-1,1,2);
$r12 = $num1*$r11;
$r22 = $num1*$r21+$n;
$r32 = $num1*$r31;
$num2 = random(1,3,1);
$num3 = random(1,3,1);
$m = random(-1,1,2);
$r13 = $num2*$r11+$num3*$r12+$m;
$r23 = $num2*$r21+$num3*$r22;
$r33 = $num2*$r31+$num3*$r32;
$r14 = random(0,10,1);
$r24 = random(0,10,1);
$r34 = random(0,10,1);

$A4=Matrix->new_from_array_ref( [[$r11, $r12, $r13],[$r21, $r22, $r23],[$r31, $r32, $r33]]);
$B4=Matrix->new_from_array_ref([[$r14], [$r24], [$r34]]);
$C4=Mat2System($A4,$B4,$variablenames);


# Make a new checkbox multiple choice
$tf = new_pop_up_select_list();
$tf->ra_pop_up_list(["?"=>"Select Answer", "Unique Solution" => "Unique Solution", "Infinite Solutions" => "Infinite Solutions", "No Solution" => "No Solution" ]);
# $cmc now "contains" the checkbox multiple choice object.

# Insert some  questions and matching answers in the q/a list
$tf -> qa (

"\( $C1 \)", "Infinite Solutions",
                       
"\( $C2 \)", "Infinite Solutions",

"\( $C3 \)", "No Solution",

"\( $C4 \)", "Unique Solution",

);

$tf->choose(4);

# Insert some incorrect answers

# Print the text using $mc->print_q for the questions and
# $mc->print_a to print the answers.
BEGIN_TEXT

Determine whether the following system has no solution, an infinite number of solutions or a unique solution.

$BR

 \{ $tf -> print_q \}

END_TEXT

sub Mat2System{
    my $coeffs=shift();
    my $vec = shift();
    my $vname=shift();
    my ($srow,$scol) = $coeffs->dim();
    my ($vrow,$vcol) = $vec->dim();
    my ($vnamerow,$vnamecol) = $vname->dim();
    die "Wrong number of rows or columns" if (($vcol !=1) || ($vrow != $srow) || ($vnamecol !=1)  || ($vrow != $vnamerow));
    my $outstr="\left\lbrace\begin{array}";
    my $s;

$outstr = $outstr . '{r';
for(my $j=0; $j<$scol; $j++){
   $outstr = $outstr . 'rr';
}
$outstr = $outstr . 'r}';

for(my $j=0;$j<$srow;$j++){ 
     $s=0; 
for(my $i=0,my $vn=1;$i<$scol;$i++,$vn++){ 
my $varname=$vname->element($vn,1);
my $a=$coeffs->element($j+1,$i+1); 
if($a==0){ 
## if coefficient is 0 then goto the next column by putting 2 &&'s
$outstr = $outstr . '&&'; 
}elsif($a>0){ 
if($a==1){$a="";} 
if($s==0){$outstr = $outstr . "& $a \,$varname";$s=1;
} else{$outstr=$outstr . "&+& $a \, $varname";} 
}else{ 
if($s == 1){ 
$a=-$a; 
if($a==1){$a="";} 
$outstr= $outstr . "&- &$a \,$varname"; 
}else{
if($a==-1){$a="-";}
$outstr = $outstr . "& $a \, $varname";$s=1;}
 } 
} 
$outstr = $outstr . "&=&" . $vec->element($j+1,1). "\\"; 
} 
$outstr= $outstr . ' \end{array}\right.'; 
return $outstr; }

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;
;
ENDDOCUMENT();