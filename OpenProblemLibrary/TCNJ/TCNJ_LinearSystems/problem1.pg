## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 2 variables)
## Date('July 2013')
## Author('Paul Pearson')
## Institution('TCNJ and Hope College')
## MLT(multsystems3eqs)
## MLTleader(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('1.2')
## Problem1('')
## KEYWORDS('linear equations' 'system')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl"
        );
 
TEXT(beginproblem());    
# Do not show which answers are incorrect.
$showPartialCorrectAnswers = 0;

# Variables for first problem
$a = random(2,5,1)*random(-1,1,2);
$b = random(2,5,1)*random(-1,1,2);
$c = random(-4,4,1);
$m = random(4,5,1)*random(-1,1,2);
$n = random(2,3,1)*random(-1,1,2);
$o = random(6,7,1)*random(-1,1,2);
$m1 = $m*$a;
$m2 = $m*$b;
$m3 = $m*$c;
$n1 = $n*$a;
$n2 = $n*$b;
$n3 = $n*$c;
$o1 = $o*$a;
$o2 = $o*$b;
$o3 = $o*$c;

# Variables for second and third problem
$h = random(3,7,2)*random(-1,1,2);
$i = random(3,7,2)*random(-1,1,2);
$j = random(2,6,2)*random(-1,1,2);
$k = random(2,7,1)*random(-1,1,2);
## ensure that these do not result in parallel equations
if ( $h/$j == $i/$k ) {
    $h = ( $h > 0 ) ? $h+1 : $h-1;
}

$e1 = random(1,9,2);
$e2 = random(1,10,1);
$mult1 = random(1,3,2)*random(-1,1,2);
$mult2 = random(2,4,2)*random(-1,1,2);
# make sure x & y are nonzero
if ( $mult1*$h+$mult2*$j == 0 || $mult1*$i+$mult2*$k == 0 ) {
    $mult1 = ( $mult1 > 0 ) ? $mult1+2 : $mult1-2;
}
$x = $mult1*$h+$mult2*$j;
$y = $mult1*$i+$mult2*$k;
$z = $mult1*$e1+$mult2*$e2;

$other = $z + random(1,3,1)*random(-1,1,2);

# Make a new checkbox multiple choice
$tf = new_pop_up_select_list();
$tf->ra_pop_up_list(["?"=>"Select Answer", "No Solution" => "No Solution", "Infinite Solutions" => "Infinite Solutions", "Unique Solution" => "Unique Solution"]);
# $cmc now "contains" the checkbox multiple choice object.

# Insert some  questions and matching answers in the q/a list
$tf -> qa (
"\( \left\lbrace\begin{array}{r${NO_SPACE}l${NO_SPACE}l${NO_SPACE}r${NO_SPACE}r${NO_SPACE}r}
$m1 x &+ $m2 y  &= &$m3 \cr
$n1 x &+ $n2 y &= &$n3 \cr
$o1 x &+ $o2 y &= &$o3
\end{array} \right. \)", "Infinite Solutions",

"\( \left\lbrace\begin{array}{r${NO_SPACE}l${NO_SPACE}l${NO_SPACE}r${NO_SPACE}r${NO_SPACE}r}
$h x &+ $i y &= &$e1 \cr
$j x &+ $k y &= &$e2 \cr
$x x &+ $y y &= &$z
\end{array} \right.\)", "Unique Solution",

"\( \left\lbrace\begin{array}{r${NO_SPACE}l${NO_SPACE}l${NO_SPACE}r${NO_SPACE}r${NO_SPACE}r}
$h x &+ $i y &= &$e1 \cr
$j x &+ $k y &= &$e2 \cr
$x x &+ $y y &= &$other
\end{array} \right.\)", "No Solution",
);

$tf->choose(3);

# Insert some incorrect answers

# Print the text using $mc->print_q for the questions and
# $mc->print_a to print the answers.
BEGIN_TEXT

Determine whether the following system has no solution, an infinite number of solutions or a unique solution.

$BR

 \{ $tf -> print_q \}

END_TEXT

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;
COMMENT('MathObject version');
ENDDOCUMENT();