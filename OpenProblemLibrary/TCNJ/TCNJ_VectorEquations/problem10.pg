## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection('Span')
## Institution('TCNJ')
## KEYWORDS('vector' 'linear' 'combination' 'span')
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('2.2')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl"
        );
 
TEXT(beginproblem());    
# Do not show which answers are incorrect.
$showPartialCorrectAnswers = 0;

foreach $i (1..3) { 
	$a1[$i] = non_zero_random(-3,3,1);
        $a2[$i] = (0);
}
$m = non_zero_random(-2,2,1);
$n = random(3,4,1)*random(-1,1,2);
foreach $i (1..3) { 
        $a3[$i] = $m*$a1[$i];
        $a4[$i] = $n*$a1[$i];
}

foreach $i (1..3) {
        $b1[$i] = non_zero_random(-3,3,1);
}
$o = random(2,4,1)*random(-1,1,2);
$p = random(-1,1,2);
foreach $i (1..2) {
        $b2[$i] = $o*$b1[$i];
}
$b2[3] = $o*$b1[3]+$p;
$q = non_zero_random(-2,2,1);
$r = non_zero_random(-2,2,1);
$s = non_zero_random(-2,2,1);
$t = random(3,4,1)*random(-1,1,2);
foreach $i (1..3) {
        $b3[$i] = $q*$b1[$i]+$r*$b2[$i];
        $b4[$i] = $s*$b1[$i]+$t*$b2[$i];
}

foreach $i (1..3) {
        $c1[$i] = non_zero_random(-3,3,1);
        $c2[$i] = random(5,7,2)*random(-1,1,2);
}
$e = non_zero_random(-2,2,1);
$f = non_zero_random(-2,2,1);
$g = random(-1,1,2);
foreach $i (2..3) {
        $c3[$i] = $e*$c1[$i]+$f*$c2[$i];
        $c4[$i] = non_zero_random(-3,3,1);
}
$c3[1] = $e*$c1[1]+$f*$c2[1]+$g;
$c4[1] = (0);

# Make a new checkbox multiple choice
$tf = new_pop_up_select_list();
$tf->ra_pop_up_list(["?"=>"Select an Answer", "Line" => "Line",
                        "Plane" => "Plane", "R�" => "R�"]);
# $cmc now "contains" the checkbox multiple choice object.

# Insert some  questions and matching answers in the q/a list

$tf -> qa ( mbox( '\(v_1 = \)',display_matrix([[$a1[1]], [$a1[2]], [$a1[3]]]), ', ', 
	 '\(v_2 = \)',display_matrix([[$a2[1]], [$a2[2]], [$a2[3]]]), ', ', 
         '\(v_3 = \)',display_matrix([[$a3[1]], [$a3[2]], [$a3[3]]]), ', ', 
	 '\(v_4 = \)',display_matrix([[$a4[1]], [$a4[2]], [$a4[3]]]), ),
"Line",            
mbox( '\(v_1 = \)',display_matrix([[$b1[1]], [$b1[2]], [$b1[3]]]), ', ', 
	 '\(v_2 = \)',display_matrix([[$b2[1]], [$b2[2]], [$b2[3]]]), ', ', 
         '\(v_3 = \)',display_matrix([[$b3[1]], [$b3[2]], [$b3[3]]]), ', ', 
	 '\(v_4 = \)',display_matrix([[$b4[1]], [$b4[2]], [$b4[3]]]), ),
"Plane",
mbox( '\(v_1 = \)',display_matrix([[$c1[1]], [$c1[2]], [$c1[3]]]), ', ', 
	 '\(v_2 = \)',display_matrix([[$c2[1]], [$c2[2]], [$c2[3]]]), ', ', 
         '\(v_3 = \)',display_matrix([[$c3[1]], [$c3[2]], [$c3[3]]]), ', ', 
	 '\(v_4 = \)',display_matrix([[$c4[1]], [$c4[2]], [$c4[3]]]), ),
"R�",
                       
);

$tf->choose(3);

# Insert some incorrect answers

# Print the text using $mc->print_q for the questions and
# $mc->print_a to print the answers.
BEGIN_TEXT

Let \(  H= span\left\{"\{"\} v_1, v_2, v_3, v_4\right\} \).  For each of the following sets of vectors determine whether \(H\) is a line, plane, or \( {\mathbb R}^3\).

$BR

 \{ $tf -> print_q \}

END_TEXT

# Enter the correct answers to be checked against the answers to the students.
ANS(str_cmp( $tf->ra_correct_ans )   ) ;

ENDDOCUMENT();