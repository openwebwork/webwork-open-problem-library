DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
# "compoundProblem.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
#"contextLeadingZero.pl",
#"contextFraction.pl",
#"contextString.pl",
#"answerHints.pl",
#"problemPanic.pl",

#"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");

($WIDTH,$HEIGHT,$TEXSIZE)=(360,80,150);
# now initialize the graph
$graph = init_graph(0,0, 3.6,.8,size=>[$WIDTH,$HEIGHT]);
         $circle_object1 = closed_circle(.1 ,.3 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(.1 ,.6 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.3 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.6 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(.9 ,.3 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(.9 ,.6 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(1.1 ,.6 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(3.3 ,.3 ,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(3.3 ,.6 ,'red' );
         $graph -> stamps($circle_object1);

$a=.55;
         $label1=  new Label(.6 , $a , '+','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label(1.4 ,$a  , '=','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label(2.2 , $a , '?','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label(3, $a , '+','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);
$graph->moveTo(2.7,.2);
$graph->lineTo(1.7 ,.2 ,'green');
$graph->lineTo(1.7 ,.65 ,'green');
$graph->lineTo(2.7 ,.65 ,'green');
$graph->lineTo(2.7 ,.2 ,'green');


($WID,$HEI)=(100,120);
 $gra = init_graph(0,-.4, 1,.8,size=>[$WID,$HEI]);
         $circle_object1 = closed_circle(.1 ,.3 ,'red' );
         $gra -> stamps($circle_object1);
         $circle_object1 = closed_circle(.1 ,.6 ,'red' );
         $gra -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.6 ,'red' );
         $gra -> stamps($circle_object1);
         $label3=  new Label(.5 , -.2 , 'Set W','blue',('center','center'));
         $label3->font(GD::Font->Giant);
         $gra -> lb($label3);
$grb = init_graph(0,-.4, 1,.8,size=>[$WID,$HEI]);
         $circle_object1 = closed_circle(.1 ,.3 ,'red' );
         $grb -> stamps($circle_object1);
         $circle_object1 = closed_circle(.1 ,.6 ,'red' );
         $grb -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.3 ,'red' );
         $grb -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.6 ,'red' );
         $grb -> stamps($circle_object1);
         $circle_object1 = closed_circle(.5 ,.3 ,'red' );
         $grb -> stamps($circle_object1);
         $circle_object1 = closed_circle(.5 ,.6 ,'red' );
         $grb -> stamps($circle_object1);
         $circle_object1 = closed_circle(.7 ,.6 ,'red' );
         $grb -> stamps($circle_object1);
 
          $label3=  new Label(.5 , -.2 , 'Set X','blue',('center','center'));
         $label3->font(GD::Font->Giant);
         $grb -> lb($label3);
        $grc = init_graph(0,-.4, 1,.8,size=>[$WID,$HEI]);
         $circle_object1 = closed_circle(.1 ,.3 ,'red' );
         $grc -> stamps($circle_object1);
         $circle_object1 = closed_circle(.1 ,.6 ,'red' );
         $grc -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.3 ,'red' );
         $grc -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.6 ,'red' );
         $grc -> stamps($circle_object1);
         $circle_object1 = closed_circle(.5 ,.6 ,'red' );
         $grc -> stamps($circle_object1);

         $label3=  new Label(.5 , -.2 , 'Set Y','blue',('center','center'));
         $label3->font(GD::Font->Giant);
         $grc -> lb($label3);
        $grd = init_graph(0,-.4, 1,.8,size=>[$WID,$HEI]);
         $circle_object1 = closed_circle(.1 ,.3 ,'red' );
         $grd -> stamps($circle_object1);
         $circle_object1 = closed_circle(.1 ,.6 ,'red' );
         $grd -> stamps($circle_object1);
         $circle_object1 = closed_circle(.3 ,.3 ,'red' );
         $grd -> stamps($circle_object1); 
         $circle_object1 = closed_circle(.3 ,.6 ,'red' );
         $grd -> stamps($circle_object1);
         $circle_object1 = closed_circle(.5 ,.3 ,'red' );
         $grd -> stamps($circle_object1); 
         $circle_object1 = closed_circle(.5 ,.6 ,'red' );
         $grd -> stamps($circle_object1);
         $circle_object1 = closed_circle(.7 ,.3 ,'red' );
         $grd -> stamps($circle_object1); 
         $circle_object1 = closed_circle(.7 ,.6 ,'red' );
         $grd -> stamps($circle_object1);
         $circle_object1 = closed_circle(.9 ,.6 ,'red' );
         $grd -> stamps($circle_object1); 


         $label3=  new Label(.5 , -.2 , 'Set Z','blue',('center','center'));
         $label3->font(GD::Font->Giant);
         $grd -> lb($label3);

#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
$radio=new_multiple_choice();
$radio->qa("Which set of circles belongs in the box to make this number sentence true? ", "Set Y ");
#FIRST PAREN IS QUESTION, SECOND PAREN IS CORRECT ANSWER
$radio->extra("Set W ", "Set X", "Set Z ");
BEGIN_TEXT
Look at this model of a number sentence?
$BR
\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
$PAR
\{$radio->print_q()\}
\{$radio->print_a()\}
$PAR
$BR
\{ image( insertGraph($gra), tex_size=>$TEXSIZE,
    height=>$HEI, width=>$WID
    ) \}
\{ image( insertGraph($grb), tex_size=>$TEXSIZE,
    height=>$HEI, width=>$WID
    ) \}
\{ image( insertGraph($grc), tex_size=>$TEXSIZE,
    height=>$HEI, width=>$WID
    ) \}
\{ image( insertGraph($grd), tex_size=>$TEXSIZE,
    height=>$HEI, width=>$WID
    ) \}
$PAR
END_TEXT
ANS(radio_cmp($radio->correct_ans()));
BEGIN_SOLUTION
$PAR Solution $PAR
Translated to number, the equation is \(4+3 = ?+2\).  The left side $BR
adds up to 7 so \(?=5\).
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject('NECAP')
## DBchapter('Grade 4')
## DBsection('2008')

