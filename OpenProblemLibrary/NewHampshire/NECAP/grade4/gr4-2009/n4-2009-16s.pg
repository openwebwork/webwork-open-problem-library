DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");

($WIDTH,$HEIGHT,$TEXSIZE)=(500,575,150);
# now initialize the graph
$graph = init_graph(-.25,-1, 4.75,4.75,size=>[$WIDTH,$HEIGHT]);
$scale=100;
  $poly3 = new GD::Polygon;
foreach $pt ([.85,1.75], [.85,2.95], [2.35,2.95], [2.35,1.75])
   {$poly3->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$red = $graph->im->colorAllocate(255,100,0);
$graph->im->filledPolygon($poly3,$red);

  $poly3 = new GD::Polygon;
foreach $pt ([3.25,1.75], [3.25,3.25], [4.15,3.25], [4.15,1.75])
   {$poly3->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly3,$blue);

for($x=1;$x<15;$x++)
{$y=$x*.3;
$graph->moveTo($y,0);
$graph->lineTo($y ,4.5 ,'black');
$graph->moveTo(0,$y);
$graph->lineTo(4.5 ,$y ,'black');
}

$graph->moveTo(0,0);
$graph->lineTo(0 ,4.5 ,'black',2);
$graph->lineTo(4.5 ,4.5 ,'black',2);
$graph->lineTo( 4.5,0 ,'black',2);
$graph->lineTo(0 ,0 ,'black',2);
$graph->moveTo(4,-.2);
$graph->lineTo(.5 ,-.2 ,'black');
$graph->lineTo(.5 ,-.9 ,'black');
$graph->lineTo(4 ,-.9 ,'black');
$graph->lineTo(4 ,-.2 ,'black');
$graph->moveTo(.7,-.8);
$graph->lineTo(1 ,-.8 ,'black');
$graph->lineTo(1 ,-.5 ,'black');
$graph->lineTo( .7,-.5 ,'black');
$graph->lineTo(.7 ,-.8 ,'black');
         $label1=  new Label(1.4 ,1.75  , 'Room 1','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label(3.45 ,1.45  , 'Room 2','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label(2.4 ,-.25  , 'Key','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label(2.4 ,-.6  , 'represents 1 square yard','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);
   
#NOTE  Actual size of box is in the image below
TEXT(beginproblem());

BEGIN_TEXT
Room 1 and Room 2 are each shaped like a rectangle.  $BR
A model of each room is shown below.
$BR
\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
$PAR
\{ans_rule(1)\}
END_TEXT
ANS(Real(5)->cmp);
BEGIN_SOLUTION
$PAR Solution $PAR
You could do this two different ways.$PAR
One way is to just count the orange (20) and blue (15) rectangles and$BR
subtract to get 5 yards.$PAR
Another way is to notice that Room 1 is \(5\times 4=20\) square yards and $BR
Room 2 is \(3\times 5=15\) square yards.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject(NECAP)
## DBchapter(Grade 4)
## DBsection(2009)
## MO(1)

$graph->moveTo(,);
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');

$graph->moveTo(,);
$graph->lineTo( , ,'black');
$graph->arrowTo( , ,'black',2);
         $label1=  new Label( ,  , '','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label( ,  , '','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label( ,  , '','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label( ,  , '','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);
         $label5=  new Label( ,  , '','black',('center','center'));
         $label5->font(GD::Font->Giant);
         $graph -> lb($label5);
         $label6=  new Label( ,  , '','black',('center','center'));
         $label6->font(GD::Font->Giant);
         $graph-> lb($label6);
         $label7=  new Label( ,  , '','black',('center','center'));
         $label7->font(GD::Font->Giant);
         $graph -> lb($label7);
         $label8=  new Label( ,  , '','black',('center','center'));
         $label8->font(GD::Font->Giant);
         $graph -> lb($label8);
         $label9=  new Label( ,  , '','black',('center','center'));
         $label9->font(GD::Font->Giant);
         $graph -> lb($label9);
         $label10=  new Label( ,  , '','black',('center','center'));
         $label10->font(GD::Font->Giant);
         $graph -> lb($label10);
         $label11=  new Label( ,  , '','black',('center','center'));
         $label11->font(GD::Font->Giant);
         $graph -> lb($label11);
         $label12=  new Label( ,  , '','black',('center','center'));
         $label12->font(GD::Font->Giant);
        $graph -> lb($label12);
         $label13=  new Label( ,  , '','black',('center','center'));
         $label13->font(GD::Font->Giant);
         $graph -> lb($label13);
         $label14=  new Label( ,  , '','black',('center','center'));
         $label14->font(GD::Font->Giant);
         $graph -> lb($label14);
         $label15=  new Label( ,  , '','black',('center','center'));
         $label15->font(GD::Font->Giant);
         $graph -> lb($label15);
         $label16=  new Label( ,  , '','black',('center','center'));
         $label16->font(GD::Font->Giant);
         $graph -> lb($label16);
         $label17=  new Label( ,  , '','black',('center','center'));
         $label17->font(GD::Font->Giant);
         $graph -> lb($label17);
         $label18=  new Label( ,  , '','black',('center','center'));
         $label18->font(GD::Font->Giant);
         $graph -> lb($label18);
         $label19=  new Label( ,  , '','black',('center','center'));
         $label19->font(GD::Font->Giant);
         $graph -> lb($label19);
         $label20=  new Label( ,  , '','black',('center','center'));
         $label20->font(GD::Font->Giant);
         $graph -> lb($label20);

--More--(57%)

#TWO HALVES OF A CIRCLE
$func = Compute("2+sqrt{1-(x-3)**2}");
$fund = Compute("2-sqrt{1-(x-3)**2}");
plot_functions( $graph, "$func for x in " .
"<2,4> using color:blue " .
"and weight:3");
plot_functions( $graph, "$fund for x in " .
"<$2,4> using color:blue " .
"and weight:1");

         $circle_object1 = closed_circle( , ,'black' );
         $graph -> stamps($circle_object1);
 the domain is
$xmin = -2;
$xmax = $root2 + 1;
# and the number of gridlines we graph
$xgrid = $xmax + 2;
$ygrid = $ymax - int($ymin) + 2;

$graph = init_graph($xmin, int($ymin)-1, $xmax,
$ymax+1, axes=>[0,0], grid=>[$xgrid,$ygrid],
size=>[150,150]);
$scale=100;
$poly = new GD::Polygon;
foreach $pt ([3,5], [4,5], [5,4], [5,3], [4,2], [3,2], [2,3], [2,4])
   {$poly->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly,$graph->{colors}{black});
$graph->im->setThickness(1);

#arrow
$poly2 = new GD::Polygon;
foreach $pt ([3.75,1.23], [3.7,1.20], [3.7,1.26])
   {$poly2->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$black = $graph->im->colorAllocate(0,0,00);
$graph->im->filledPolygon($poly2,$black);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly2,$graph->{colors}{black});
$graph->im->setThickness(1);

IF YOU ARE PRACTICING FOR THE NECAP EXAMINATION, DO THIS WITHOUT$BR A CALCULATO
 THIS IS A NECAP PROBLEM FOR WHICH A  CALCULATOR $BR WOULD NOT BE ALLOWED.$PAR 
 

IN THIS PROBLEM ON THE NECAP EXAM YOU WERE EXPECTED $BR
 TO SHOW YOUR WORK.  SOMETHING SIMILAR TO THE SOLUTION $BR
 ABOVE WOULD BE APPROPRIATE.