DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
# "compoundProblem.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
#"contextLeadingZero.pl",
#"contextFraction.pl",
#"contextString.pl",
#"answerHints.pl",emacs n3-2008-1s.pg &

#"problemPanic.pl",
#"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");

($WIDTH,$HEIGHT,$TEXSIZE)=(510,360,150);
# now initialize the graph
$graph = init_graph(-.1,-1.5, 5,2.1,size=>[$WIDTH,$HEIGHT]);

for($x=0;$x<11;$x++)
{$y=.2*$x;
$graph->moveTo($y,0);
$graph->lineTo($y ,2 ,'red');
$graph->moveTo(0,$y);
$graph->lineTo(2 ,$y ,'red');
}
$graph->moveTo(2,0);
$graph->lineTo(2 ,2 ,'red');
$graph->moveTo(2.3,0);
$graph->lineTo(2.3,2 ,'red');
$graph->moveTo(2.5,0);
$graph->lineTo(2.5 ,2 ,'red');

for($x=0;$x<11;$x++)
{$y=.2*$x;
$graph->moveTo(2.3,$y);
$graph->lineTo(2.5 ,$y ,'red');
}


$graph->moveTo(2.8,0);
$graph->lineTo(2.8 ,.2 ,'red');
$graph->lineTo(3 ,.2 ,'red');
$graph->lineTo(3 ,0 ,'red');
$graph->lineTo(2.8 ,0 ,'red');

$graph->moveTo(3.3,0);
$graph->lineTo(3.3 ,.2 ,'red');
$graph->lineTo(3.5 ,.2 ,'red');
$graph->lineTo(3.5 ,0 ,'red');
$graph->lineTo(3.3 ,0 ,'red');

$graph->moveTo(3.79,0);
$graph->lineTo(3.79 ,.2 ,'red');
$graph->lineTo(3.99 ,.2 ,'red');
$graph->lineTo(3.99 ,0 ,'red');
$graph->lineTo(3.79 ,0 ,'red');

$graph->moveTo(2.8,.4);
$graph->lineTo(2.8 ,.6 ,'red');
$graph->lineTo(3 ,.6 ,'red');
$graph->lineTo(3 ,.4 ,'red');
$graph->lineTo(2.8 ,.4 ,'red');

$graph->moveTo(3.3,.4);
$graph->lineTo(3.3 ,.6 ,'red');
$graph->lineTo(3.5 ,.6 ,'red');
$graph->lineTo(3.5 ,.4 ,'red');
$graph->lineTo(3.3 ,.4 ,'red');

$graph->moveTo(3.79,.4);
$graph->lineTo(3.79 ,.6 ,'red');
$graph->lineTo(3.99 ,.6 ,'red');
$graph->lineTo(3.99 ,.4 ,'red');
$graph->lineTo(3.79 ,.4 ,'red');

$graph->moveTo(2.8,.8);
$graph->lineTo(2.8 ,1 ,'red');
$graph->lineTo(3 ,1 ,'red');
$graph->lineTo(3 ,.8 ,'red');
$graph->lineTo(2.8 ,.8 ,'red');

$graph->moveTo(3.3,.8);
$graph->lineTo(3.3 ,1 ,'red');
$graph->lineTo(3.5 ,1 ,'red');
$graph->lineTo(3.5 ,.8 ,'red');
$graph->lineTo(3.3 ,.8 ,'red');

$graph->moveTo(3.79,.8);
$graph->lineTo(3.79 ,1 ,'red');
$graph->lineTo(3.99 ,1 ,'red');
$graph->lineTo(3.99 ,.8 ,'red');
$graph->lineTo(3.79 ,.8 ,'red');

$graph->moveTo(4.4,.4);
$graph->lineTo(4.4 ,.6 ,'red');
$graph->lineTo(4.2 ,.6 ,'red');
$graph->lineTo(4.2 ,.4 ,'red');
$graph->lineTo(4.4 ,.4 ,'red');

$graph->moveTo(4.7,.4);
$graph->lineTo(4.7 ,.6 ,'red');
$graph->lineTo(4.9 ,.6 ,'red');
$graph->lineTo(4.9 ,.4 ,'red');
$graph->lineTo(4.7 ,.4 ,'red');

$graph->moveTo(4.4,1);
$graph->lineTo(4.4 ,.8 ,'red');
$graph->lineTo(4.2 ,.8 ,'red');
$graph->lineTo(4.2 ,1 ,'red');
$graph->lineTo(4.4 ,1 ,'red');

$graph->moveTo(4.7,1);
$graph->lineTo(4.7 ,.8 ,'red');
$graph->lineTo(4.9 ,.8 ,'red');
$graph->lineTo(4.9 ,1 ,'red');
$graph->lineTo(4.7 ,1 ,'red');
$graph->moveTo(1.7,-.5);
$graph->lineTo(1.7 ,-1.2 ,'black');
$graph->lineTo(3.4 ,-1.2 ,'black');
$graph->lineTo(3.4 ,-.5 ,'black');
$graph->lineTo(1.7 ,-.5 ,'black');
$graph->moveTo(1.8,-1);
$graph->lineTo(2 ,-1 ,'red');
$graph->lineTo(2 ,-.8 ,'red');
$graph->lineTo(1.8 ,-.8 ,'red');
$graph->lineTo(1.8 ,-1 ,'red');

         $label1=  new Label(2.5 ,-.51  , 'Key','blue',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label(2.7 ,-.81  , 'represents 1','red',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);

#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
$radio=new_multiple_choice();
$radio->qa("What is the total value of these blocks ", " 1 hundred + 2 tens + 3 ones ");
#FIRST PAREN IS QUESTION, SECOND PAREN IS CORRECT ANSWER
$radio->extra("2 hundreds + 1 ten + 3 ones ", "2 hundred + 2 tens + 13 ones ", "1 hundred + 1 ten + 3 ones  ");
BEGIN_TEXT
Look at these blocks. 

$BR
\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}


$PAR
\{$radio->print_q()\}
\{$radio->print_a()\}

END_TEXT
ANS(radio_cmp($radio->correct_ans()));
BEGIN_SOLUTION
$PAR Solution $PAR
At the left are a square containg 100 small squares and a rectangle containing
$BR 10 small squares.  At the right are 13 small squares for a total of 123 small $BR squares which is 1 hundred +2 tens +3 ones.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject('NECAP')
## DBchapter('Grade 3')
## DBsection('2008')
