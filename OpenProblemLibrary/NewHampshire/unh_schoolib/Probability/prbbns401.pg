#DESCRIPTION
##Type of
#ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
#"PGgraphmacros.pl",
 "MathObjects.pl",
# "compoundProblem.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
#"contextLeadingZero.pl",
#"contextFraction.pl",
"answerHints.pl",
"problemPanic.pl",

);
#for currency use Context("Currency") then Currency($A);
#Then, in the text use $DOLLAR $a
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
Context("Numeric");

$ans=C(10,4);
 

BEGIN_TEXT
How many ways can 4 CD's be chosen from a case of 10 CDs?
\{ans_rule(5)\}
$PAR
\{Panic::Button(label => " Ask for a Hint", penalty => .00)\}
END_TEXT
ANS(Real($ans)->cmp);
if ($panicked) {
BEGIN_TEXT
   Hint: Although there is a formula for doing this, lets just think it through.$BR  If you wanted to choose them in the order  then there are 10 ways of choosing $BR the first CD.  After doing
this there are 9 left  so there are 9 ways$BR of choosing the second CD. Similarly, there are 8 ways to choose the third CD $BR and 7 ways to choose the fourth.But you will get the same collection if you choose the $BR same CDs in any order
so you must divide by the number of ways that these four CDs could be put in order.

END_TEXT
};
BEGIN_SOLUTION
$PAR Solution $PAR
There are 10 ways to choose the first CD, 9 ways to choose the second CD (once the first $BR has been removed, 8 ways to choose the third, and 7 ways to choose the fourth.$BR  But each set of 4 CD's can be chosen in many different orders.
$PAR We can use the same idea to see how many orders 4 CD's can be chosen in.
The first$BR of the four can be chosen in 4 ways, the second in 3 ways,the third in 2 ways $BR and then there is only one way to choose the last. 
$PAR
That means that there are \(\frac{10\times 9\times 8 \times 7}{4\times 3\times 2\times 1}=210 \) ways of choosing 4 CD's. $PAR
You may have learned this as C(10,4). 
END_SOLUTION	

;
ENDDOCUMENT();
## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Combinations)
## Level(2)
## MO(1)


