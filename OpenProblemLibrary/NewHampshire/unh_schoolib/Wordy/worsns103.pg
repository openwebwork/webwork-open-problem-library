#DESCRIPTION
##Type of
#ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
#"PGgraphmacros.pl",
 "MathObjects.pl",
# "compoundProblem.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
#"contextLeadingZero.pl",
#"contextFraction.pl",
#"contextString.pl",
#"answerHints.pl",
#"problemPanic.pl",

#"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);
#for currency use Context("Currency") then Currency($A);
#Then, in the text use $DOLLAR $a
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
Context("Numeric");
Context()->texStrings;

BEGIN_TEXT
Lucy uses 4 round beads and 5 cube head beads to make a special necklace.  Lucy bought $BR one package of 56 triangular beads, one package of 30 round beads, six bananas, $BR one package of 24 cube head beads, and three fish sandwiches.  She usually $BR makes her necklaces in the living room, but today she plans to make them 
in her bedroom.$PAR
She can make \{ans_rule(1)\} special necklaces with her purchases. 

END_TEXT
Context()->normalStrings;

ANS(Real(4)->cmp);
BEGIN_SOLUTION
$PAR Solution $PAR
She has only 24 cube head beads and must use 5 in each special necklace.  Thus she$BR can't make more than four necklaces (since for that she would need to use
20 cube $BR head beads.  Since she has 30 round beads she can use 16 of them to
complete 4 necklaces.$BR  Whether she eats a fish sandwich or a banana before or after $BR making the necklaces is up to her.  The triangular beads can be used for her$BR next project.  Her mother will probably ask her to clean up her bedroom after $BR she makes the necklaces.
END_SOLUTION

;
ENDDOCUMENT();
## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Combinations)
## Level(2)
## Static(1)
## MO(1)


\{Panic::Button(label => " Ask for a Hint", penalty => .00)\}
END_TEXT
if ($panicked) {
BEGIN_TEXT
   Hint: 

END_TEXT
};
BEGIN_TEXT
$PAR

	ANS(Real( )->cmp->withPostFilter(AnswerHints(
		"" => " ",
		sub {
			my ($correct,$student,$ans) = @_;
			return $correct . $student == 0;
		}
	
	)));


