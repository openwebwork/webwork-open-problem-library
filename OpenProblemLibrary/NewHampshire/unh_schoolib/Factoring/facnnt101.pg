##DESCRIPTION
## powers extended
##ENDDESCRIPTION


########################################################################

DOCUMENT();

loadMacros(
 "PGstandard.pl", # Standard macros for PG language
 "MathObjects.pl",
 "compoundProblem.pl",
# "unionLists.pl",
"PGgraphmacros.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
#"contextLeadingZero.pl",
#"contextFraction.pl",
#"answerHints.pl",
#"problemPanic.pl",
#PGauxiliaryFunctions.pl, #for lcm, gcd,etc
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################

$isProfessor = ($studentLogin eq 'kia' || $studentLogin eq 'professor');

#
# Start a compound problem. See the compoundProblem.pl
# file for more details about the parameters you
# can supply.
#
$cp = new compoundProblem(
 parts => 10, # the total number of parts in this problem
 totalAnswers => 4, # total answers in all parts combined
 parserValues => 1, # make parser objects from student answers
 allowReset => $isProfessor, # professors get Reset button for testing
);



$n=2**3*3**2*7*11;
$n2=$n/2;
$n22 = $n2/2;
$n222=$n22/2;
$n2223=$n222/3;
$n22233=$n2223/3;
$n222337=$n22233/7;
$fdigx = $n222%100;
$fdig=($n222-$fdigx)/100;
$tdig=$fdigx%10;
$sdig=($fdigx-$tdig)/10;
$sum=$fdig+$sdig+$tdig;
$part = $cp->part; # look up the current part



##############################################
#
# Part 1
#

if ($part == 1) {

##############################################
##############################################################
#
# Setup
#
#
Context("Numeric");
Context()->flags->set(reduceConstants=>0);



##############################################################
# 
# Text
#
#

Context()->texStrings;
BEGIN_TEXT
Factoring a positive integer into a product of primes.

This is a teaching problem with multiple parts.$BR  Its object is to show you how to factor positive integers. $BR When you complete a part and are told that  your answers are correct then$BR click to go on to the next part and resubmit your answer.$BR When you do this ignore the statement that there are unanswered questions$BR and just answer the new questions.
  
$PAR
Suppose you want to factor the number $n. $BR
How would you start?  $PAR
An approach that will always work is to check for prime factors one at a time, $BR starting with the smallest prime 2.  If a integer is divisible by 2 it ends
with either 0, 2, 4, 6, or 8.$PAR
If $n is divisible by 2 then put a 2 in the first answer box and $n divided by 2 in the second, $BR
otherwise put a 1 in the first answer box and $n in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}  
END_TEXT


Context()->normalStrings;

##############################################################
#
# Answers
#
#
Context("LimitedNumeric");

 ANS(Real(2)->cmp );
 ANS(Real($n2)->cmp );


} # End of Part 1

##############################################
#
# Part 2
#


if ($part == 2) {
Context()->texStrings;
BEGIN_TEXT
Part 2:
Now we start a list of primes that divide $n and the number of times each each
occurs.$BR  We know that 2 is a divisor and so our list starts with 2 so our list starts like this$PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ \ 1\) $PAR
 We also know that the other divisors must all divide $n2.$PAR

If $n2 is divisible by 2 then put a 2 in the first answer box and $n2 divided by 2 in the second,$BR
otherwise put a 1 in the first answer box and $n2 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}  
END_TEXT
Context()->normalStrings;


##############################################################
#
# Answers
#
#
Context("Numeric");

ANS(Real(2)->cmp,Real($n22 )->cmp);

} # End of Part 2

##############################################
#
# Part 3
#


if ($part == 3) {
Context()->texStrings;
BEGIN_TEXT
Part 3:$BR
Now our list so far is $PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ \ 2\) $PAR
 We also know that the other divisors must all divide $n22.$PAR

If $n22 is divisible by 2 then put a 2 in the first answer box and $n22 divided by 2 in the second,$BR
otherwise put a 1 in the first answer box and $n22 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   

END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (2)-> cmp,Real($n222)->cmp);
} #end of part 3
##############################################
#
# Part 4
#

if ($part == 4) {  
Context()->texStrings;

BEGIN_TEXT
Part 4:$BR
Now our list so far is $PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \) $PAR
 We also know that the other divisors must all divide $n22.$PAR

If $n222 is divisible by 2 then put a 2 in the first answer box and $n222 divided by 2 in the second,$BR
otherwise put a 1 in the first answer box and $n222 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   

$PAR

END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (1)-> cmp,Real($n222)->cmp);

} #end of part 4
##############################################
#
# Part 5
#


if ($part == 5) {

Context()->texStrings;
BEGIN_TEXT
Part 5:$BR
Now our list so far is still$PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \) $PAR
 We also know that the other divisors must all divide $n2223 and that$BR
we should try the next prime which is 3.  You can either just divide $n222 by 3 $BR and see if it divides exactly, or, if you want to check first, use the fact
that$BR if you add up the digits in $n2223 $BR
\($fdig+$sdig+$tdig=$sum\)then  if $n2223 is divisible by 3 then that sum must be divisible by 3.$BR Knowing that, you can decide whether to divide by 3.
$PAR

If $n222 is divisible by 3 then put a 3 in the first answer box and $n222 divided by 3 in the second,$BR
otherwise put a 1 in the first answer box and $n222 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   
END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (3)-> cmp,Real($n2223)->cmp);
} #end of part 5

##############################################
#
# Part 6
#


if ($part == 6) {  

Context()->texStrings;
BEGIN_TEXT
Part 6:$BR
Now our list so far is $PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \)$BR 
\(\ \ 3\ \ | \ \ \ \ \ \ 1 \)


$PAR
 We also know that the other divisors must all divide $n2223 $BR
 
$PAR

If $n2223 is divisible by 3 then put a 3 in the first answer box and $n2223 divided by 3 in the second,$BR
otherwise put a 1 in the first answer box and $n2223 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   




END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (3)-> cmp,Real($n22233)->cmp);

} #end of part 6
##############################################
#
# Part 7
#

if ($part == 7) {  

Context()->texStrings;

BEGIN_TEXT
Part 7:$BR
Now our list so far is $PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \)$BR
\(\ \ 3\ \ | \ \ \ \ \ \ 2\) $PAR
 We also know that the other divisors must all divide $n2223.$PAR

If $n22233 is divisible by 3 then put a 3 in the first answer box and $n22233 divided by 3 in the second,$BR
otherwise put a 1 in the first answer box and $n22233 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   

$PAR

END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (1)-> cmp,Real($n22233)->cmp);

} #end of part 7
##############################################
#
# Part 8
#


if ($part == 8) {

Context()->texStrings;
BEGIN_TEXT
Part 8:$BR
Now our list so far is$PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \)$BR 
\(\ \ 3\ \ | \ \ \ \ \ \ 2 \)


$PAR
 We also know that the other divisors must all divide $n22233 $BR
 $PAR
Now you may already see how to complete the problem, but please continue$BR
 so that it will be easier for you to do other problems of this kind.
$PAR
To check whether a number is divisible by 5 you only have to look at the last
digit.$BR  A number is only divisible by 5 if its last digit is 5 or 0.$BR
If $n22233 is divisible by 5 then put a 5 in the first answer box and $n22233 divided by 5 in the second,$BR
otherwise put a 1 in the first answer box and $n22233 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   



END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (1)-> cmp,Real($n22233)->cmp);
} #end of part 8

##############################################
#
# Part 9
#
if ($part == 9) {

Context()->texStrings;
BEGIN_TEXT
Part 9:$BR
Now our list so far is still$PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \)$BR 
\(\ \ 3\ \ | \ \ \ \ \ \ 2 \)


$PAR
 Now we go on to the next prime which is 7. $BR
 
$PAR

If $n22233 is divisible by 7 then put a 7 in the first answer box and $n22233 divided by 7 in the second,$BR
otherwise put a 1 in the first answer box and $n22233 in the second. $PAR
 \{ans_rule(1)\}    \{ans_rule(3)\}   


$PAR

END_TEXT
##############################################################
#
# Answers

Context("Numeric");
ANS(Real (7)-> cmp,Real($n222337)->cmp);
} #end of part 9

##############################################
#
# Part 10
#


if ($part == 10) {  


Context()->texStrings;

BEGIN_TEXT
Part 10: $BR
Now our list so far is $PAR
Prime |  Number of Occurrences$BR
\(\ \ 2\ \ | \ \ \ \ \ \ 3 \)$BR 
\(\ \ 3\ \ | \ \ \ \ \ \ 2 \)$BR
\(\ \ 7\ \ | \ \ \ \ \ \ 1 \)$BR 

$PAR
 We also know that the other divisors must all divide $n222337 $BR
 
$PAR

But $n222337 is a prime.  So it is the last prime in our factorization and $PAR
\($n=2^3* 3^2* 7*11\)$PAR

Of course, once you understand how to do this, you can take shortcuts.$BR
If you recognize that $n is divisible by 11 then, if you divide by 11 first $BR the numbers you have to work with after that will be smaller than if you$BR
 followed the procedure we have just completed.  However, if you are stuck,
$BR the procedure you just used will always work.
 

END_TEXT
}

COMMENT('MathObject version');
ENDDOCUMENT();

## DBsubject(Middle school)
## DBchapter(Factoring)
## MO(1)
## KEYWORDS('Powers')

