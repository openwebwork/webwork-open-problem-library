# DESCRIPTION
# A simple sample problem that illustrates 
# how to include dynamically generated graphics
# in a problem.
# WeBWorK problem written by Gavin LaRose, 
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGchoicemacros.pl",
"problemPanic.pl",
"unionTables.pl",
);
# make sure we're in the context we want
Context("Numeric");

$func = Compute("(6-2*x)/3");

# the minimum and maximum y values this 
#    reaches on the domain [] are
$ymin = int($func->eval(x=>4))-1;
$ymax = int($func->eval(x=>-1))+1;

# the domain is
$xmin = -1;
$xmax = 4;
# and the number of gridlines we graph
$xgrid = $xmax -$xmin ;
$ygrid = int($ymax) - int($ymin)+1;
$xdim=50*$xgrid;
$ydim=50*$ygrid;

# now initialize the graph
$graph = init_graph($xmin, $ymin, $xmax,
$ymax+1, axes=>[0,0], grid=>[$xgrid,$ygrid]);

# and add the function to be graphed
plot_functions( $graph, "$func for x in " .
"<$xmin,$xmax> using color:blue " .
"and weight:2");

$fund = Compute("(-6+3*x)/2");
$ymind = int($fund->eval(x=>-1));
$ymaxd = int($fund->eval(x=>3));

# the domain is
$xmind = -1;
$xmaxd = 3;
# and the number of gridlines we graph
$xgridd = $xmaxd -$xmind ;
$iymaxd=int($ymaxd);if ($ymaxd >= 0){$imaxd+=1;}
$iymind=int($ymind);if($ymind<0){$iymind-=1;}
$ygridd = $iymaxd -$iymind ;

$xdimd=50*$xgridd;
$ydimd=50*$ygridd;
# now initialize the graph
$graphd = init_graph($xmind, $ymind, $xmaxd,
$ymaxd+1, axes=>[0,0], grid=>[$xgridd,$ygridd]);

# and add the function to be graphed
plot_functions( $graphd, "$fund for x in " .
"<$xmind,$xmaxd> using color:red " .
"and weight:2");

$fune= Compute("x");
$ymine= $fune->eval(x=>-1);
$ymaxe= $fune->eval(x=>3);

# the domain is
$xmine=-1;
$xmaxe= 3;
# and the number of gridlines we graph
$xgride= $xmaxe -$xmine ;
$iymaxe=int($ymaxe);
$iymine=int($ymine);
$ygride= $iymaxe -$iymine ;

$xdime=50*$xgride;
$ydime=50*$ygride;
# now initialize the graph
$graphe= init_graph($xmine, $ymine, $xmaxe,
$ymaxe, axes=>[0,0], grid=>[$xgride,$ygride]);

# and add the function to be graphed
plot_functions( $graphe, "$fune for x in " .
"<$xmine,$xmaxe> using color:green " .
"and weight:2");

# for use below: the y-intercept is 
#$yint = $func->eval(x=>0);
TEXT(beginproblem());
Context()->texStrings;
$ShowPartialCorrectAnswers = 1;

#Make a new match list
$ml= new_match_list();
#enter questions and matching answers
$ml-> qa (
"The equation of the function in the green graph is" , "x-y=0 ",
"The equation of the function in the red graph is" , "3x-2y=6 ",
"The equation of the function in the blue graph is",  "3x+2y=6 "

);
$ml->choose(3);
# to add extra answers that show up in the
  #    matching list, we would uncomment
  #    (remove the leading "# " from) the two
  #    lines below:
   $ml->extra("3y-2x=6", "x+y=6");
   $ml->choose_extra(2);
  
  $ml->makeLast("2y-3x=6 ");

BEGIN_TEXT 

$PAR
\{
   BeginTable().
      Row([
 image( insertGraph($graph), tex_size=>100,
    height=>$ydim, width=>$xdim ) ,

 image( insertGraph($graphd), tex_size=>100,
    height=>$ydimd, width=>$xdimd ), 
     
 image(insertGraph($graphe), tex_size=>100, height=>$ydime, width=>$xdime),
      ], separation => 50, valign => "BOTTOM").
      EndTable()
    \}





$PAR
\{Panic::Button(label => " Ask for a Hint", penalty => .00)\}
END_TEXT
if ($panicked) {
BEGIN_TEXT
   Hint: The grid lines are at integer values. $BR You can find the intercepts
and slopes from the graphs and use them to find the equations 
END_TEXT
};
BEGIN_TEXT

 
$PAR
  \{$ml->print_q() \}
  \{$ml->print_a() \}

END_TEXT
  ANS(str_cmp( $ml->ra_correct_ans ) );

BEGIN_SOLUTION
$PAR SOLUTION $PAR
 
END_SOLUTION



COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject(Middle school)
## DBchapter('Graphs')
## DBsection('')


$radio=new_multiple_choice();
$radio->qa("The equation of the graphed function is ", "y=$a-x^2");
$radio->extra("y=x^2-$a", "y=-x^2");
$radio->makeLast("y=$a+x");

\{$radio->print_q()\}
\{$radio->print_a()\}

ANS(radio_cmp($radio->correct_ans()));