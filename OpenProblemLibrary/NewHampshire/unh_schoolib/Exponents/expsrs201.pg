#DESCRIPTION
##Type of
#ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
#"PGgraphmacros.pl",
 "MathObjects.pl",
# "compoundProblem.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
#"contextLeadingZero.pl",
#"contextFraction.pl",
"contextString.pl",
#"answerHints.pl",
#"problemPanic.pl",

#"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);
#for currency use Context("Currency") then Currency($A);
#Then, in the text use $DOLLAR $a
Context()->texStrings;
TEXT(beginproblem());
# A custom checker that compares a student formula to the correct
# formula for identical structure.  Both must be two numberes
# separated by an operator.
#
$LimitedOperation = sub {
  my($correct,$student,$ans) = @_;
  my $f = $ans->{student_formula}{tree};
  return 0 if $ans->{message} || $ans->{isPreview} || !defined($f);
   #
   # Check that the form is correct:
   #
   Value->Error("Your answer should be two numbers with a ^ between them")
   unless $f->class eq 'BOP' && isNumber($f->{lop}) && isNumber($f->{rop});
   #
   # Get the student's operands:
   #
   my($a,$b)=($f->{lop}->eval, $f->{rop}->eval);
   #
   # Get the correct answer's formula and operands:
   #
   my $F = Parser::Formula($ans->{correct_ans})->{tree};
   my ($A,$B) =($F->{lop}->eval, $F->{rop}->eval);
   #
   #  Check that the operators are the same:
   #
   my $op = {'^'=>'exponentiation'}->{$F->{bop}}
 unless $f->{bop} eq $F->{bop};
   #
   # Check that the answers are equal and that the operands are the same:
   #
   return $correct == $student;
};
#
# Check if a node is a Number or a negative Number
#  (with no operations involved)
#
sub isNumber {
  my $n = shift;
  return $n->class eq 'Number' ||
      ($n->class eq 'UOP' && $n->{uop} eq 'u-' && $n->{op}->class eq 'Number');
}
$showPartialCorrectAnswers = 1;
Context("Numeric");
$m=random(3,7,1);
$z=join("\cdot ",("x")x $m). "=";
$a=random(3,9,1);
$c=random(2,4,1); $d=random(2,4,1);
$s=$c+$d;
$s1="(".join("\cdot",($a)x $c).")\cdot(".join("\cdot",($a)x $d).")";
$ansx=Compute("$a^$s"); 

BEGIN_TEXT
Write each expression using exponents. $BR
 Remember that the way to enter \(a^n\)in answer box is to type a^n.
$PAR
1.  \($z\) \{ans_rule(3)\}
$PAR
2. \($s1\) \{ans_rule(3)\}

END_TEXT
ANS(Formula("x^$m")->cmp);
ANS($ansx->cmp(checker=>$LimitedOperation));

BEGIN_SOLUTION
$PAR Solution $PAR
1. The answer is \(x^{$m}\) since $m is the number of x's that are multiplied together.
$PAR
2.$BR
 \($c1=$a^{$c}\).$BR  \($d1=$a^{$d}\).$BR \($c1  \cdot  $d1 =$a^{$c+$d}=$a^{$s}\)
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject(Middle school)
## DBchapter(Exponents)
## MO(1)


