#DESCRIPTION
##Type of mn+o5-4p57
#ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
#"PGgraphmacros.pl",
# "MathObjects.pl",
# "compoundProblem.pl",
#"contextCurrency.pl",
# "unionLists.pl",
#"unionMacros.pl",
"contextLeadingZero.pl",


);
Context()->texStrings;
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$a=random(14,16,1);
$ans2=random(60,80,10)*$a;
$c=random(11,13,1);
$d=random (60,64,4);
$ans4=$c*$d;
$b=random(28,36,4);

$ans6=random(140,160,10);
$e=$b*$ans6; 
BEGIN_TEXT
$PAR

a) In a dictionary $a pages are 1 millimeter thick.  To find the thickness of 1050 pages we must$BR 
(1) multiply or $BR
(2) divide $BR
Answer 1 or 2. \{ans_rule(1)\}.
$BR
The thickness is  \{ans_rule(4)\} mm..
$PAR
b) A book contains $c sections with $d pages each. 
 To find the total number of pages in the book we must $BR
(1) multiply or $BR
(2) divide 
$BR Answer 1 or 2. \{ans_rule(1)\}.$BR
The book has  \{ans_rule(4)\} pages.
$PAR
c) A book company has received an order for $e books. $BR
 If there are $b books in each box, to find out how many boxes are needed 

we must$BR
 (1) multiply or$BR (2) divide 
$BR Answer 1 or 2.\{ans_rule(1)\}.  $BRThe company needs  \{ans_rule(4)\} boxes. 

END_TEXT
Context("LeadingZero");
ANS(Real(2)->cmp);
ANS(Real($ans2)->cmp);
ANS(Real(1)->cmp);
ANS(Real($ans4)->cmp);
ANS(Real(2)->cmp);
ANS(Real($ans6)->cmp);
BEGIN_SOLUTION
$PAR Solution $PAR
a)  If we want to know how thick the dictionary is we want to find out how many
times $a pages make $BR 1050 pages.  Our answer will be that number times
1 millimeter.  Thus we must divide. $PAR
b)  If each section contains $d pages and we have $c such sections, then the 
total number of pages$BR will be the product of the number of pages in a section by the number of sections.  Thus we must multiply.$PAR
c)  If there are $b books in each box, then we split the $e books into groups of
$b to put them in boxes.$BR That means that we must divide.
END_SOLUTION	


COMMENT('MathObject version');
ENDDOCUMENT();

## DBsubject(Numbers)
## DBchapter(Integers)
## DBsection(Arithmetic)
## MO(1)

