#DESCRIPTION
##Type of
#ENDDESCRIPTION

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
#"PGgraphmacros.pl",
# "MathObjects.pl",
# "compoundProblem.pl",
#"contextCurrency.pl",
#"contextInequalities.pl",
#"unionTables.pl",
# "unionLists.pl",
#"unionMacros.pl",
"contextLeadingZero.pl",

);
#for currency use context("Currency") then currency($A);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$a=random(26,29,1);
$b=$a-25;
BEGIN_TEXT
$PAR
 U.S. coins be combined in  \{ans_rule(2)\}  ways to total $a cents.
END_TEXT

ANS(Real(13)->cmp);
BEGIN_SOLUTION
$PAR SOLUTION $PAR
The key to solving this problem is to organize things.
$PAR
The first thing that you might notice is that it is useful to think of $a cents
$BR as  25 cents plus $b cent(s).  The 25 cents can be obtained as a combinationof coins $BR while the rest must be in pennies. That means that the number of
ways of combining coins$BR to make $a cents is exactly the same as the number of ways of combining coins to make 25 cents.
$PAR
One approach is to thing of breaking your 25 cents into 5 cent units.$BR
A quarter is 5 units.$BR
A dime is 2 units. $BR
A nickel is 1 unit. $BR
Five pennies makes 1 unit. $BR
We will call a nickel or five pennies single units and quarters and dimes
multiple units.
$PAR
Now let us count how many combinations involve each choice of multiple units.$BR
A quarter is one such combination.$BR
Two dimes and one single unit is another.$BR
One dime and three single units is another.$BR
Five single units is the last.$BR
$PAR
Now we look at each of these cases.$BR
A quarter is one combination$BR
Two dimes and a single unit give two possibilities since the single unit can be either a nickel or 5 pennies.$BR
A dime and three single units give 4 possibilities since there could be 0, 1, 2,or 3 nickels.$BR
Five single units give 6 possiblities since there could be 0, 1, 2, 3, 4, or 5 nickels.$PAR
1+2+4+6=13.

END_SOLUTION 

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject(Middle school)
## DBchapter(Miscellaneous_Contest_Problems)
## MO(1)
