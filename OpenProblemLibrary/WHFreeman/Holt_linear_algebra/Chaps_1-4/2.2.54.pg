# DESCRIPTION
# ENDDESCRIPTION

##\{ textbook_ref_exact("Holt Linear Algebra", "2.2","54") \}
## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Span)
## Institution(Saint Louis University)
## Author(Mike May)
## Level(3)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('')
## Section1('2.2')
## Problem1('54')
## KEYWORDS('subspaces')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"parserPopUp.pl",
"MathObjects.pl",
"freemanMacros.pl",
);

# make sure we're in the context we want
Context("Numeric");
$v11=random(1,9,1)*random(-1,1,2);
$v12=random(1,9,1)*random(-1,1,2);
$v21=random(1,9,1)*random(-1,1,2);
$v22=random(1,9,1)*random(-1,1,2);
$a=random(2,6);
$b=-1-1*$a;

# the arguments of PopUp are [list of answers], 
#    correct answer
$mc = new_multiple_choice();
$mc->qa(
"", 
"If \(m<n\) then the \(m\) columns of \( A\) cannot span \({\mathbb R}^n\)."
);
$mc->extra(
"If \(m<n\) then the \(m\) columns of \( A\) must span \({\mathbb R}^n\)." ,
"If \(m<n\) then the \(m\) columns of \( A\)  span \({\mathbb R}^n\) as long as the columns are distinct." ,
"If \(m<n\) then the \(m\) columns of \( A\)  span \({\mathbb R}^n\) as long as no column is a scalar multiple of another column." ,
"If \(m<n\) then the \(m\) columns of \( A\)  span \({\mathbb R}^n\) as long as no column is is the zero vector." ,
"If \(m<n\) then the \(m\) columns of \( A\) can but do not have to span \({\mathbb R}^n\)." ,
);
$mc->makeLast("none of the above");

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
Context()->texStrings;
BEGIN_TEXT
\{ textbook_ref_exact("Holt Linear Algebra", "2.2","54") \} 
$PAR
Suppose a matrix \(A\) has \(n\) rows and \( m\) columns. 

$PAR
Select the best statement.
$BR
\{ $mc->print_a() \}

END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 0;

ANS( radio_cmp( $mc->correct_ans() ) );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR
SOLUTION
$PAR
If \(m<n\) then the \(m\) columns of \( A\) cannot span \({\mathbb R}^n\).
END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();