# DESCRIPTION
# Find the interpolating polynomial.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Applications)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.2')
## Problem1('58')
## KEYWORDS('linear equations', 'system', 'systems', 'matrices')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "contextFraction.pl",
  "PGchoicemacros.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction")->texStrings;
@x = num_sort(NchooseK(8,5));
@x = (1,2,3,random(4,5),random(6,8));
@y = NchooseK(9,5);
@y = ($y[0]+1,$y[1]+1,$y[2]+1,$y[3]+1,$y[4]+1,$y[5]+1);

for ($i = 0; $i <= 4; $i++) {
  for ($j = 0; $j <= 5; $j++) {
    $orig[$i][$j] = ($j != 5) ? ($x[$i])**(4-$j) : ($y[$i]); 
  }
}

sub rref_frac {
  my $m = shift(); # dimensions of matrix
  my $n = shift();
  my (@mat) = @_; 
  for (my $i = 0; $i < $m; $i++) {
    for ($j = 0; $j < $n; $j++) {
      $mat[$i][$j] = Fraction($mat[$i][$j]);
    }
  }
  my $lead = 0; 
  do {
    for (my $i = $lead; $i < $m; $i++) {
      my $tmp = $mat[$i][$lead];
      for (my $j = $lead; $j < $n; $j++) {
        $mat[$i][$j] = Fraction($mat[$i][$j]/$tmp - $mat[$lead][$j]) if ($tmp != 0 && $i != $lead);
        $mat[$i][$j] = Fraction($mat[$i][$j]/$tmp) if ($tmp != 0 && $i == $lead);
      }
    }
    $lead = $lead + 1;
  } until ($lead == $n);
  $lead = 0;
  do {
    for (my $i = $lead; $i < $m-1; $i++) {
      for (my $j = $lead + 1; $j < $m; $j++) {
        my $tmp = Fraction($mat[$i][$j]);
        for (my $k = $j; $k < $n; $k++) {
           $mat[$i][$k] = Fraction($mat[$i][$k] - $tmp*$mat[$j][$k]);
        }
      }
      $lead = $lead + 1;
    }
  } until ($lead == $m-1);
  return @mat;
}

for ($i = 0; $i < 5; $i++) {
  for ($j = 0; $j < 6; $j++) {
    $rr[$i][$j] = $orig[$i][$j];
  }
}
@rr = rref_frac(5,6,@rr);
($a,$b,$c,$d,$e) = ($rr[0][5], $rr[1][5], $rr[2][5], $rr[3][5], $rr[4][5]);
$poly = nicestring([$a,$b,$c,$d,$e],["x^4", "x^3", "x^2", "x",""]);

$dS = "\begin{array}{ccccccccccc}";
for ($i = 0; $i <= 4; $i++) {
    $dS = $dS.nicestring([$x[$i]**4],["a"])."& + &";
    $dS = $dS.nicestring([$x[$i]**3],["b"])."& + &";
    $dS = $dS.nicestring([$x[$i]**2],["c"])."& + &";
    $dS = $dS.nicestring([$x[$i]],["d"])."& + &";
    $dS = $dS.nicestring([1],["e"])."& = & $y[$i]";
    $dS = $dS."\\" if ($i != 4);
    $dS = $dS."\end{array}" if ($i == 4);
}


Context("Numeric");
$big = 10+1;
$p = 0.1*8/$big;
($maxx, $maxy, $minx, $miny, $gsize, $tickx, $ticky) = (9, $big, -0.8, 0.8*floor(-$big/8), 350, 2, 2);
$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
$graph->moveTo(-$p, 0);
$graph->lineTo($maxx, 0, 'black', 2);
$graph->lineTo(-$p, 0, 'black', 2);
$graph->moveTo(0, -0.1);
$graph->lineTo(0, $maxy, 'black', 2);
$graph->lineTo(0, -0.1, 'black', 2);

for ($i = 0; $i < $maxx; $i++) {
  if ($i % $tickx == 0) {
    $graph->lb(new Label($i,-0.1,$i, 'black', 'top','center'));
    $graph->moveTo($i,-0.2);
    $graph->lineTo($i,0.2,'black',2);
  }
}

for ($i = 0; $i < $maxy; $i++) {
  if ($i % $ticky == 0) {
    $graph->lb(new Label(-0.1,$i,$i, 'black', 'middle', 'right'));
    $graph->moveTo(-$p,$i);
    $graph->lineTo($p,$i,'black',2);
  }
}

for ($i = 0; $i <= 4; $i++) {
  $graph->stamps(new Circle($x[$i],$y[$i],5,'red','red'));
}

$scale = 0.8;
$fig = image(insertGraph($graph), width=>$gsize*$scale, height=>$gsize*$scale, tex_size=>500);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
$BCENTER
$BR
\{ $fig \}
$PAR
$ECENTER
The figure above shows the plot of the points \(($x[0],$y[0])\), \(($x[1],$y[1])\), \(($x[2],$y[2])\), \(($x[3],$y[3])\), and \(($x[4],$y[4])\). Find a polynomial of degree 4 of the form \(f(x) = a x^4 + b^3 + c x^2 + d + e\) whose graph passes through these points. 
$PAR
\(f(x) = \) \{ans_rule(60)\}
$PAR
Hint: You may want to consider using a computer algebra system to assist in the computation.
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
$polya = nicestring([$a,$b,$c,$d,$e],["x^4", "x^3", "x^2", "x",""]);
$answer = Formula("$polya");
ANS($answer->cmp());


###########################################################################
# solution
###########################################################################
Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} 
Evaluate \(f($x[0]) = $y[0]\), \(f($x[1]) = $y[1]\), \(f($x[2]) = $y[2]\), \(f($x[3]) = $y[3]\), and \(f($x[4]) = $y[4]\) to produce the system
\[
$dS
\]
and solve using the corresponding augmented matrix using a computer algebra system. We obtain
\[
a = $a, b = $b, c = $c, d = $d, \mbox{ and }e = $e
\]
so that
\[
f(x) = $poly.
\]
END_SOLUTION
Context()->normalStrings;

COMMENT('Created in 2013.
$BR
Desc: Find the interpolating polynomial.');
ENDDOCUMENT();