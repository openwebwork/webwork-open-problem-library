##DESCRIPTION
##
##ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Matrices)
## DBsection(Markov chains)
## Date(6/3/2013)
## Author(Darwyn Cook)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Holt')
## EditionText1('1')
## Section1('3.5')
## Problem1('55')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "freemanMacros.pl",
   "PGmatrixmacros.pl",
   "parserMultiAnswer.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Matrix");
$A = Matrix([[0.5,0,0,0.5],[0,1,0,0],[0,0,1,0.5],[0.5,0,0,0]]);

############################################################
##
## eigeninverse will give the representation of a vector in terms
## of the eigenvectors {0,0,1,0},{0,1,0,0},{(1+sqrt(5))/2,... 
## The first two have eigenvalue 1, so if the coefficients on those
## two vectors is different, they will converge to two different 
## steady-state vectors.

$eigeninverse = Matrix([[1,0,1,1],[0,1,0,0],[1/sqrt(5),0,0,(-1/2+sqrt(5)/2)/sqrt(5)],[-1/sqrt(5),0,0,(1/2+sqrt(5)/2)/sqrt(5)]]);

## The two eigenvectors with eigenvalue 1 are good candidates, but
## not the only ones.

$ans1 = Matrix([[0],[0],[1],[0]]);
$ans2 = Matrix([[0],[1],[0],[0]]);

$multians = MultiAnswer(0,0,1,0,0,1,0,0)->with(
  singleResult => 0,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $stuv11,$stuv12,$stuv13,$stuv14,$stuv21,$stuv22,$stuv23,$stuv24 ) = 
          @{$student};
      my ( $correctv11,$correctv12,$correctv13,$correctv14,
           $correctv21,$correctv22,$correctv23,$correctv24 ) = @{$correct};  
      if ($stuv11 + $stuv12 + $stuv13 + $stuv14 != 1){
         $self->setMessage(1,'Your first vector is not a state vector.');
       return [0,0,0,0,0,0,0,0];
      };
      if ($stuv21 + $stuv22 + $stuv23 + $stuv24 != 1){
         $self->setMessage(5,'Your second vector is not a state vector.');
         return [0,0,0,0,0,0,0,0];
      };
      $eig1 = $eigeninverse*Matrix([[$stuv11],[$stuv12],[$stuv13],[$stuv14]]);
      $eig2 = $eigeninverse*Matrix([[$stuv21],[$stuv22],[$stuv23],[$stuv24]]);
      if(($eig1->element(1,1)==$eig2->element(1,1))&& 
         ($eig1->element(2,1)==$eig2->element(2,1))){
         $self->setMessage(1,'These two vectors will converge to the same '.
                             'state vector.');
         $self->setMessage(1,$eig1->element(1,1));
$self->setMessage(2,$eig1->element(2,1));
$self->setMessage(3,$eig1->element(3,1));
$self->setMessage(4,$eig1->element(4,1));
$self->setMessage(5,$eig2->element(1,1));
$self->setMessage(6,$eig2->element(2,1));
$self->setMessage(7,$eig2->element(3,1));
$self->setMessage(8,$eig2->element(4,1));
         return [0,0,0,0,0,0,0,0];
      }
      else {
 $self->setMessage(1,$eig1->element(1,1));
$self->setMessage(2,$eig1->element(2,1));
$self->setMessage(3,$eig1->element(3,1));
$self->setMessage(4,$eig1->element(4,1));
$self->setMessage(5,$eig2->element(1,1));
$self->setMessage(6,$eig2->element(2,1));
$self->setMessage(7,$eig2->element(3,1));
$self->setMessage(8,$eig2->element(4,1));
         return [1,1,1,1,1,1,1,1];
      };
  }
);
##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT
\{ textbook_ref_exact("Holt Linear Algebra", "3.5","55") \}
$BR
Use computational experimentation to find two initial state vectors that lead to different steady-state vectors. (NOTE: Even if it is less computationally efficient, it may be easier to compute state vectors using powers of A instead of the recursive formula.)
\($A\)
$BR
$BR
\{mbox("\(x_0 = \) ", display_matrix([[$multians->ans_rule],[$multians->ans_rule],[$multians->ans_rule],[$multians->ans_rule]]),"\(y_0=\)",
display_matrix([[$multians->ans_rule],[$multians->ans_rule],[$multians->ans_rule],[$multians->ans_rule]]))\}
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#
ANS($multians->cmp());
$v1 = Matrix([0],[1],[0],[0]);
$v2 = Matrix([0],[0],[1],[0]);
Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} 
\(A $v1 = $v1\) so \($v1\) has itself as its steady-state vector. Also \(A $v2 = $v2\) so \($v2\) also has itself as its steady-state vector.
END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();        