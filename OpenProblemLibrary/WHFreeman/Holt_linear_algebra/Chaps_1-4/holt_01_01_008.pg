# DESCRIPTION
# Determine which free parameter points for a solution.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(2)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.1')
## Problem1('8')
## KEYWORDS('linear equations', 'system', 'systems')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Matrix")->variables->add(s1 => ["Real", TeX=>"s_1"]);
sub dispSyst {
  my $A = shift;
  my $b = shift;
  my @d = @_;
  my $dS = "\begin{array}{";
  for (my $i = 0; $i < $d[0]; $i++) {
    $dS = $dS."rc";
  }
  $dS = $dS."r}";
  for (my $i = 0; $i < $d[0]; $i++) {
    my $jnonzero = 0;
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j == 0) {
        if ($a[$i][$j] == 1) {
          $dS = $dS." x_1 ";   $jnonzero = 1;
        } elsif ($a[$i][$j] == -1) {
          $dS = $dS."-x_1 ";  $jnonzero = 1;
        } elsif ($a[$i][$j] != 0) {
          $dS = $dS."$a[$i][$j] x_1";  $jnonzero = 1;
        }
      } else {
        if ($a[$i][$j] == 0) {
          $dS = $dS." & & ";
        } else {
          my $pm = ($a[$i][$j] > 0) ? "+" : "-";
          if ($jnonzero == 0 && $a[$i][$j] > 0) { $pm = "" };
          my $tmp = ($a[$i][$j] < 0) ? -$a[$i][$j] : $a[$i][$j];
          my $subsc = $j+1;
          if ($tmp == 1) {
            $dS = $dS." & $pm & x_{$subsc}";
          } else {
            $dS = $dS." & $pm & $tmp x_{$subsc}";
          }
          $jnonzero = 1;
        }
        if ($j == $d[1] - 1 && $i != $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1)." \\";
        } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1);
        }
      }
    }
  }
  $dS = $dS."\end{array}";
  return $dS;
}

$b = non_zero_random(-10,10);
$c = non_zero_random(-5,5);
do {$d = -sgn($c)*random(1,5)} until (gcd($c,$d) == 1);
$a = $c*non_zero_random(-5,5);

$R = Matrix([1,0,$a,$b],[0,1,$c,$d]);
$E1 = Matrix([1,non_zero_random(-3,3)],[0,1]);
$E2 = Matrix([1,0],[non_zero_random(-3,3),1]);
$A = $E1*$E2*$R;

for ($i = 0; $i < 2; $i++) {
  for ($j = 0; $j < 3; $j++) {
    $a[$i][$j] = $A->element($i+1,$j+1);
  }
}
$b1 = $A->element(1,4); $b2 = $A->element(2,4);
$bm = Matrix([$b1],[$b2]);

$dS = dispSyst($A,$bm,(2,3));

Context()->texStrings;
@p[0] = [Formula("$b-$a s1")->reduce, Formula("$d-$c s1")->reduce, Formula("s1")->reduce];
$t1 = $b - $a*$d/$c;
$t2 = $a/$c;
@p[1] = [Formula("$t1 + $t2 s1")->reduce, Formula("s1")->reduce, Formula("($d - s1)/$c")->reduce];
do {
  ($c1,$c2,$c3,$c4) = (random(1,8), non_zero_random(-7,7), random(1,7), non_zero_random(-7,7));
  do {($d2, $d3, $d4, $d5, $d6) = (non_zero_random(-5,5), random(2,3)*$a[0][0], random(1,5), non_zero_random(-2,2), random(2,3)*$a[0][2])} until (gcd($d2,$d3) == 1 && gcd($d5,$d6) == 1);
  $d1 = 2*$d2;
  @p[2] = [Formula("$c1 + $c2 s1")->reduce, Formula("$c3 + $c4 s1")->reduce, Formula("s1")->reduce];
  @p[3] = [Formula("($d1 - $d2 s1)/$d3")->reduce,Formula("s1")->reduce, Formula("-($d4 - $d5 s1)/$d6")->reduce];
  $ev[0] = $a[0][0]*$p[2][0]; $ev[1] = $a[0][0]*$p[3][0];
  for ($i = 1; $i < 3; $i++) {
    $ev[0] = $ev[0] + $a[0][$i]*$p[2][$i];
    $ev[1] = $ev[1] + $a[0][$i]*$p[3][$i];
  }
} until ($ev[0] != $b1 && $ev[1] != $b1);

@answers = ("\( \left($p[0][0],$p[0][1],$p[0][2]\right)\)", "\( \left($p[1][0],$p[1][1],$p[1][2]\right)\)","\( \left($p[2][0],$p[2][1],$p[2][2]\right)\)", "\( \left($p[3][0],$p[3][1],$p[3][2]\right)\)");
@solns= (0..3);
$solns[0] = "A solution, since \($a[0][0]($p[0][0]) + $a[0][1]($p[0][1]) + $a[0][2]($p[0][2]) = $b1\) and \($a[1][0]($p[0][0]) + $a[1][1]($p[0][1]) + $a[1][2]($p[0][2]) = $b2\)";
$solns[1] = "A solution, since \($a[0][0]($p[1][0]) + $a[0][1]($p[1][1]) + $a[0][2]($p[1][2]) = $b1\) and \($a[1][0]($p[1][0]) + $a[1][1]($p[1][1]) + $a[1][2]($p[1][2]) = $b2\)";

$t11 = $a[0][0]*$c2+$a[0][1]*$c4+$a[0][2];
$t12 = $a[0][0]*$c1+$a[0][1]*$c3;
$ev0 = Formula("$t11 s1 + $t12")->reduce;
Context("Fraction");
$t21 = Fraction($a[0][0]*(-$d2)*$d6 + $d3*$d6*$a[0][1] + $a[0][2]*$d5*$d3, $d3*$d6)->reduce;
$t22 = Fraction($a[0][0]*$d1*$d6 - $d4*$d3,$d3*$d6)->reduce;
$ev1 = "$t21 s_1 + $t22";

Context()->texStrings;
$solns[2] = "Not a solution, since \($a[0][0]($p[2][0]) + $a[0][1]($p[2][1]) + $a[0][2]($p[2][2]) = $ev0 \neq  $b1\)";
$solns[3] = "Not a solution, since \($a[0][0]($p[3][0]) + $a[0][1]($p[3][1]) + $a[0][2]($p[3][2]) = $ev1 \neq $b2\)";

@swap = NchooseK(4,4);
for ($i = 0; $i < 4; $i++) {
  $disp[$swap[$i]] = $answers[$i];
  $dsolns[$swap[$i]] = $solns[$i];
} 
@letters = ("A","B","C","D");
Context()->strings->add(A=>{},B=>{},C=>{},D=>{});

if ($swap[0] < $swap[1]) {
  $ans = List(String($letters[$swap[0]]), String($letters[$swap[1]]));
} else {
  $ans = List(String($letters[$swap[1]]), String($letters[$swap[0]]));
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Determine which of A-D form a solution to the given system for any choice of the free parameter \(s_1\). List all letters that apply. If there is more than one answer, type them as a comma separated list. $PAR \[ $dS \] $PAR HINT: All of the parameters of a solution must cancel completely when substituted into each equation.
$PAR
$SPACE $SPACE A. $disp[0] $PAR
$SPACE $SPACE B. $disp[1] $PAR
$SPACE $SPACE C. $disp[2] $PAR
$SPACE $SPACE D. $disp[3] $PAR
Answer(s): \{ans_rule(10)\}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($ans->cmp());


###########################################################################
# solution
###########################################################################
Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} $PAR
A. $dsolns[0] $PAR
B. $dsolns[1] $PAR
C. $dsolns[2] $PAR
D. $dsolns[3]
END_SOLUTION
Context()->normalStrings;

COMMENT('Created in 2013.
$BR
Desc: Determine which free parameter points for a solution.');
ENDDOCUMENT();