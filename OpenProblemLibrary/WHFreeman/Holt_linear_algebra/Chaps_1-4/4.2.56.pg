# DESCRIPTION
# Problem from Holt Linear Algebra
# WeBWorK problem written by Richard Bayne, <rbayne@howard.edu>
# ENDDESCRIPTION

## Tagged by reb 05/28/13

## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Basis and dimension)
## Institution(Howard University)
## Author(Richard Bayne)
## Level(3)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('4')
## Section1('.')
## Problem1('56')
## KEYWORDS('linear algebra', 'subspaces', 'span')


## Textbook tags
## \{ textbook_ref_exact("Holt Linear Algebra", "4.3","56") \}



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",

#"freemanMacros.pl,
#"PGgraders.pl",
);

TEXT(beginproblem());
# Create and use pop up lists 
$tf = new_select_list();
$tf->rf_print_q(~~&pop_up_list_print_q);

# Specify choices presented to students

$tf->ra_pop_up_list( 
[ No_answer => "?", 1 =>"1", 2 =>"2", 3 =>"3", 4 =>"4", "1 or 2" =>"1 or 2", "1, 2, or 3", "1, 2, or 3", "1, 2, 3, or 4" =>"1, 2, 3, or 4" ] ); 

# Questions and answers
$tf -> qa ( 
"What are the possible dimensions of \(S_1\)?",
"1, 2, 3, or 4",
"If  \( \  S_1 \ne S_2 \),  then  what are the possible dimensions of \( S_1\) ?",
"1, 2, or 3",
);

# How many questions to use
$tf->choose(2);

BEGIN_TEXT
Suppose that \(S_1\) and \(S_2\) are nonzero subspaces, with \(S_1\) contained inside \(S_2\), and suppose that \(dim(S_2) = 4\)
$BR
\{ $tf-> print_q \}
END_TEXT

install_problem_grader(~~&std_problem_grader);
$showPartialCorrectAnswers = 0;

ANS(str_cmp($tf->ra_correct_ans));

SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
The dimension of \(S_1\) cannot exceed the dimension of \(S_2\), since \(S_1\) is contained in \(S_2\). \(S_1\) us non-zero, and thus the its dimension cannot be zero. Hence the possible dimensions of \(S_1\) are 1, 2, 3, and 4.
$BR$BR
b) If \(S_1 \ne S_2\), then \(S_1\) is properly contained in \(S_2\), and the dimension of \(S_1\) is strictly less than the dimension of \(S_2\). So the possible dimensions of \(S_1\) are 1, 2, and 3.
END_SOLUTION


ENDDOCUMENT();