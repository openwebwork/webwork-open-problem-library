# DESCRIPTION
# ENDDESCRIPTION

##\{ textbook_ref_exact("Holt Linear Algebra", "2.3","72") \}
## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Linear independence)
## Institution(Saint Louis University)
## Author(Mike May)
## Level(3)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('')
## Section1('2.3')
## Problem1('72')
## KEYWORDS('subspaces')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
"parserPopUp.pl",
"MathObjects.pl",
"freemanMacros.pl",
);

# make sure we're in the context we want
Context("Numeric");
# We start by producing the row reduced matrix.
# This is upper triangular
$red11=1;
$red12=random(1,5,1)*random(-1,1,2);
$red13=random(1,5,1)*random(-1,1,2);
$red21=0;
$red22=1;
$red23=random(1,5,1)*random(-1,1,2);
$red31=0;
$red32=0;
$red33=1;
# Next we produce the scalars that will be used in Gauss elimination.
# This is an lower triangular matrix
$m11=random(1,6,1)*random(-1,1,2);
$m12=0;
$m13=0;
$m21=random(1,5,1)*random(-1,1,2);
$m22=random(1,5,1)*random(-1,1,2);
$m23=0;
$m31=random(1,5,1)*random(-1,1,2);
$m32=random(1,5,1)*random(-1,1,2);
$m33=random(1,5,1)*random(-1,1,2);
$m31=random(1,5,1)*random(-1,1,2);
$m32=random(1,5,1)*random(-1,1,2);
$m33=random(1,5,1)*random(-1,1,2);

# We are ready to produce our matrix A.
$A11=$m11*$red11+$m12*$red21+$m13*$red31;
$A12=$m11*$red12+$m12*$red22+$m13*$red32;
$A13=$m11*$red13+$m12*$red23+$m13*$red33;
$A21=$m21*$red11+$m22*$red21+$m23*$red31;
$A22=$m21*$red12+$m22*$red22+$m23*$red32;
$A23=$m21*$red13+$m22*$red23+$m23*$red33;
$A31=$m31*$red11+$m32*$red21+$m33*$red31;
$A32=$m31*$red12+$m32*$red22+$m33*$red32;
$A33=$m31*$red13+$m32*$red23+$m33*$red33;


# the arguments of PopUp are [list of answers], 
#    correct answer
$mc = new_multiple_choice();
$mc->qa(
"",
"The equation has a unique solution for every \({\bf b}\in {\mathbb R}^3\) because after row reducing matrix \(A\) we get a matrix without a row of zeros."
);
$mc->extra(
"The equation does not have a unique solution for every \({\bf b}\in {\mathbb R}^3\) because after row reducing matrix \(A\) we get a matrix with a row of zeros.",
"The equation does not have a unique solution for every \({\bf b}\in {\mathbb R}^3\) because after row reducing matrix \(A\) we get a matrix without a row of zeros.",
"The equation has a unique solution for every \({\bf b}\in {\mathbb R}^3\) because after row reducing matrix \(A\) we get a matrix with a row of zeros.",
"The equation does not have a unique solution for every \({\bf b}\in {\mathbb R}^3\) because the number of rows and columns in \(A\) is the same.",
"The equation has a unique solution for every \({\bf b}\in {\mathbb R}^3\) because the number of rows and columns in \(A\) is the same.",
);
$mc->makeLast("We cannot tell if the equation has a unique solution for every \({\bf b}\in {\mathbb R}^3\).");

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;
Context()->texStrings;
BEGIN_TEXT
\{ textbook_ref_exact("Holt Linear Algebra", "2.3","72") \} 
$PAR
Let \(A=
\left[{\begin{matrix}
$A11 & $A12 & $A13 \cr $A21 & $A22 & $A23 \cr  
$A31 & $A32 & $A33 \cr \end{matrix}}\right]\), 
and \({\bf x}=\
\left[{\begin{matrix}
x_1 \cr x_2 \cr  x_3 \cr \end{matrix}}\right]\).
$PAR
We want to determine if \(A{\bf x}={\bf b}\) has a unique solution for every \({\bf b}\in {\mathbb R}^4\).
$PAR
Choose the best answer 
$PAR
\{ $mc->print_a() \}
$PAR

END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( radio_cmp( $mc->correct_ans() ) );


Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
Either by hand or with a computer algebra system, row reducing \(A\) shows us
$PAR
\[\left[{\begin{matrix}
$A11 & $A12 & $A13 \cr $A21 & $A22 & $A23 \cr  
$A31 & $A32 & $A33 \cr \end{matrix}}\right]\sim
\left[\begin{matrix}$red11 & $red12 & $red13 \cr $red21 & $red22 & $red23 \cr
 $red31 & $red32 & $red33 \cr \end{matrix}\right]
\]
$PAR
The set \(\lbrace{{\bf u}, {\bf v}, {\bf w}}\rbrace\) is linearly independent because after row reducing matrix \(A\) we get a matrix without a row of zeros.
END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();