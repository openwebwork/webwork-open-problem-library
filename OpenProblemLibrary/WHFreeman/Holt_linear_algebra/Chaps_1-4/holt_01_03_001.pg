# DESCRIPTION
# Use partial pivoting to solve the system.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 2 variables)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(2)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.3')
## Problem1('1')
## KEYWORDS('linear equations', 'system', 'systems', 'numerical', 'applications')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Matrix");
sub dispMat {
  my $A = shift;
  my @d = $A->dimensions;
  my @a = ();
  my $dA = "\left[\begin{array}{";
  for (my $i = 0; $i < $d[1]; $i++) {
    $dA = $dA."r";
  }
  $dA = $dA."}";
  for (my $i = 0; $i < $d[0]; $i++) {
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j != $d[1] - 1) {
        $dA = $dA." $a[$i][$j] & ";
      } elsif ($j == $d[1] - 1 && $i != $d[0] -1) {
        $dA = $dA." $a[$i][$j] \\";
      } else {
        $dA = $dA." $a[$i][$j]";
      }
    }
  }
  $dA = $dA."\end{array}\right]";
  return ($dA, @a);
}
sub dispSyst {
  my $A = shift;
  my $b = shift;
  my @d = @_;
  my $dS = "\begin{array}{";
  for (my $i = 0; $i < $d[0]; $i++) {
    $dS = $dS."rc";
  }
  $dS = $dS."r}";
  for (my $i = 0; $i < $d[0]; $i++) {
    my $jnonzero = 0;
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j == 0) {
        if ($a[$i][$j] == 1) {
          $dS = $dS." x_1 ";   $jnonzero = 1;
        } elsif ($a[$i][$j] == -1) {
          $dS = $dS."-x_1 ";  $jnonzero = 1;
        } elsif ($a[$i][$j] != 0) {
          $dS = $dS."$a[$i][$j] x_1";  $jnonzero = 1;
        }
        if ($d[1] == 1) {
          if ($j == $d[1] - 1 && $i != $d[0] - 1) {
            $dS = $dS." & = & ".$b->element($i+1,1)." \\";
          } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
            $dS = $dS." & = & ".$b->element($i+1,1);
          }
        }
      } else {
        if ($a[$i][$j] == 0) {
          $dS = $dS." & & ";
        } else {
          my $pm = ($a[$i][$j] > 0) ? "+" : "-";
          if ($jnonzero == 0 && $a[$i][$j] > 0) { $pm = "" };
          my $tmp = ($a[$i][$j] < 0) ? -$a[$i][$j] : $a[$i][$j];
          my $subsc = $j+1;
          if ($tmp == 1) {
            $dS = $dS." & $pm & x_{$subsc}";
          } else {
            $dS = $dS." & $pm & $tmp x_{$subsc}";
          }
          $jnonzero = 1;
        }
        if ($j == $d[1] - 1 && $i != $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1)." \\";
        } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1);
        }
      }
    }
  }
  $dS = $dS."\end{array}";
  return $dS;
}

Context("Fraction");
do {
  $a = random(4,8);
  do {$b = non_zero_random(-6,6)} until ($b < $a && gcd($a,$b) == 1);
  do {$m = random(7,12)} until (gcd($m,$a) == 1);
  $n = random(-1,1,2)*random(2,3)*$m;
  $ech = Matrix([$a,non_zero_random(-4,4), random(-1,1,2)], [0, $m/$a, $n/$a]);
  $E1 = Matrix([1,0],[$b/$a, 1]);
  $B1 = ($E1->inverse)*$ech;
  $E2 = Matrix([0,1],[1,0]);
  $B = ($E2->inverse)*$B1;
  ($dB,@b) = dispMat($B);
} until (abs($b[1][0]) > abs($b[0][0]) && floor($b[0][0]) == $b[0][0] && floor($b[0][1]) == $b[0][1] && floor($b[0][2]) == $b[0][2] && floor($b[1][0]) == $b[1][0] && floor($b[1][1]) == $b[1][1] && floor($b[1][2]) == $b[1][2] && gcd($b[0][0],$b[0][1]) == 1 && gcd($b[1][0],$b[1][1]) == 1);
($dEch,@e) = dispMat($ech);
($dB1, @b1) = dispMat($B1);

$dS = dispSyst(Matrix([$b[0][0],$b[0][1]],[$b[1][0],$b[1][1]]), Matrix([$b[0][2]],[$b[1][2]]), (2,2));
$x2 = $e[1][2]/$e[1][1];
$x1 = ($e[0][2] - $e[0][1]*$x2)/$e[0][0];


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Use partial pivoting with Gaussian elimination to find the solutions to the linear system
$PAR \[ $dS \] $PAR
\((x_1,x_2) = \) \{ans_rule(25)\}
$PAR
Help: To enter a solution \((a,b)\), type your answer as a point ${BBOLD}(a,b)${EBOLD}.
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
Context("Point");
ANS(Point("($x1,$x2)")->cmp());


###########################################################################
# solution
###########################################################################
Context("Fraction")->texStrings;
$f1 = Fraction($m,$a)->reduce;
$f2 = Fraction($n,$a)->reduce;
$aa = abs($a);
$ab = abs($b);
$f3 = (sgn($a) == sgn($b)) ? "($ab/$aa)" : "(-$ab/$aa)";

$x2d = Fraction($n,$m);
$x1d = Fraction($m*$e[0][2] - $n*$e[0][1], $m*$e[0][0]);
$dEch = "\left[\begin{array}{rrr} $a & $e[0][1] & $e[0][2] \\ 0 & $f1 & $f2 \end{array}\right]";
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} $PAR
\(\begin{array}{ccc} $dB & \overset{R_1 \Leftrightarrow R_2}{\sim} & $dB1 \\ & \overset{$f3 R_1 + R_2 \Rightarrow R_2}{\sim} & $dEch \end{array}\) $PAR
Row 2 \(\Rightarrow $f1 x_2 = $f2 \rightarrow x_2 = $x2d\). Row 1 \(\Rightarrow $e[0][0] x_1 + $e[0][1]($x2d) = $e[0][2]\Rightarrow x_1 = $x1d\).
END_SOLUTION
Context()->normalStrings;

COMMENT('Created in 2013.
$BR
Desc: Use partial pivoting to solve the system');
ENDDOCUMENT();