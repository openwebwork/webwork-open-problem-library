# DESCRIPTION
# Use a CAS to write the system in reduced echelon form and then solve.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Matrices)
## DBsection(Echelon form)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.2')
## Problem1('64')
## KEYWORDS('linear equations', 'system', 'systems', 'matrices')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "parserPopUp.pl", 
  "parserMultiAnswer.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
sub dispMat {
  my $A = shift;
  my @d = $A->dimensions;
  my @a = ();
  my $dA = "\left[\begin{array}{";
  for (my $i = 0; $i < $d[1]; $i++) {
    $dA = $dA."r";
  }
  $dA = $dA."}";
  for (my $i = 0; $i < $d[0]; $i++) {
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j != $d[1] - 1) {
        $dA = $dA." $a[$i][$j] & ";
      } elsif ($j == $d[1] - 1 && $i != $d[0] -1) {
        $dA = $dA." $a[$i][$j] \\";
      } else {
        $dA = $dA." $a[$i][$j]";
      }
    }
  }
  $dA = $dA."\end{array}\right]";
  return ($dA, @a);
}

sub rref_frac {
  my $m = shift(); # dimensions of matrix
  my $n = shift();
  my (@mat) = @_; 
  my $failed = 0;
  for (my $i = 0; $i < $m; $i++) {
    for ($j = 0; $j < $n; $j++) {
      $mat[$i][$j] = Fraction($mat[$i][$j]);
    }
  }
  
  my $lead = 0;
  while ($lead <= $m) {
    for (my $i = $lead; $i < $m; $i++) {
      my $tmp = $mat[$i][$lead]; 
      if ($tmp == 0) {
        $failed = 1; $i = $m; $lead = $m;
      } else {
        for (my $j = $lead; $j < $n; $j++) {
          $mat[$i][$j] = Fraction($mat[$i][$j]/$tmp);
        }
      }
    }
    
    for (my $i = $lead+1; $i < $m; $i++) {
      for (my $j = $lead; $j < $n; $j++) {
        $mat[$i][$j] = Fraction($mat[$i][$j] - $mat[$lead][$j]);
      }
    }
    $lead++;
  }
  if ($failed == 0) {
    $lead = 0;
    do {
      for (my $i = $lead; $i < $m-1; $i++) {
        for (my $j = $lead + 1; $j < $m; $j++) {
          my $tmp = Fraction($mat[$i][$j]);
          for (my $k = $j; $k < $n; $k++) {
             $mat[$i][$k] = Fraction($mat[$i][$k] - $tmp*$mat[$j][$k]);
          }
        }
        $lead = $lead + 1;
      }
    } until ($lead == $m-1);
  }
  return ($failed,@mat);
}

Context()->texStrings;
do {
  $A = Matrix([random(-1,1,2)*random(6,10), random(-1,1,2)*random(1,4), 0, random(-1,1,2)*random(2,4),random(-1,1,2)*random(6,10)], [random(-1,1,2)*random(6,10), random(-1,1,2)*random(1,4), 5, random(-1,1,2)*random(2,4),random(-1,1,2)*random(6,10)], [random(-1,1,2)*random(6,10), random(-1,1,2)*random(1,4), 7, random(-1,1,2)*random(2,4),random(-1,1,2)*random(6,10)]);
  Context("Fraction")->texStrings;
  ($dA, @a) = dispMat($A);

  ($failed,@a) = rref_frac(3,5,@a);
  ($s1,$s2,$s3) = ($a[0][3]->eval(), $a[1][3]->eval(), $a[2][3]->eval());
  ($t1,$t2,$t3) = ($a[0][4]->eval(), $a[1][4]->eval(), $a[2][4]->eval());
} until ($s1 != floor($s1) && $s2 != floor($s2) && $s3 != floor($s3) && $t1 != floor($t1) && $t2 != floor($t2) && $t3 != floor($t3) && !$failed);
($s[0],$s[1],$s[2]) = ($a[0][3], $a[1][3], $a[2][3]);
($x[0],$x[1],$x[2]) = ($a[0][4], $a[1][4], $a[2][4]);

$dEch = "\left[\begin{array}{rrrr}";
for ($i = 0; $i <= 2; $i++) {
  $dEch = $dEch."$a[$i][0] & $a[$i][1] & $a[$i][2] & $a[$i][3] & $a[$i][4]";
  $dEch = ($i != 2) ? $dEch."\\" : $dEch."\end{array}\right]";
}

Context("Matrix");
$ech = Matrix([1,0,0,$t1],[0,1,0,$t2],[0,0,1,$t3]);
$pop = PopUp(["select", "yes", "no"], "yes");
$soln = MultiAnswer($t1,-$s1,$t2,-$s2,$t3,-$s3,0,1)->with(
  singleResult=>0,
  allowBlankAnswers => 1,
  checker => sub {
    my ($cor, $stud, $self) = @_;
    my ($c1,$c2,$c3,$c4,$c5,$c6,$c7,$c8) = @{$cor};
    my ($s1,$s2,$s3,$s4,$s5,$s6,$s7,$s8) = @{$stud};
    my ($a1,$a2,$a3,$a4,$a5,$a6,$a7,$a8) = ($c1 == $s1, $c2 == $s2, $c3 == $s3, $c4 == $s4, $c5 == $s5, $c6 == $s6, $c7 == $s7, $c8 == $s8);
    return [$a1,$a2,$a3,$a4,$a5,$a6,$a7,$a8];
  }
);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Given that the matrix 
$PAR\[ $dA \]$PAR
is the augmented matrix for a linear system, use technology to perform the row operations needed to transform the matrix to reduced echelon form. Then determine if the system is consistent and if it is, find all solutions to the system.
$PAR
Reduced echelon form: \{ans_rule(50)\}
$PAR
Is the system consistent? \{$pop->menu()\}
$PAR
Solution: \((x_1,x_2,x_3,x_4) = \bigg(\) \{$soln->ans_rule(4)\} \(+\) \{$soln->ans_rule(4)\} \(s_1\), \{$soln->ans_rule(4)\} \(+\) \{$soln->ans_rule(4)\} \(s_1\), \{$soln->ans_rule(4)\} \(+\) \{$soln->ans_rule(4)\} \(s_1\), \{$soln->ans_rule(4)\} \(+\) \{$soln->ans_rule(4)\} \(s_1\bigg)\)
$PAR ${BBOLD}Help:${EBOLD} To enter a matrix use $BBOLD [[ ],[ ]] $EBOLD. For example, to enter the \(2\times 3\) matrix
$PAR\[
\left[\begin{array}{ccc}
1 & 2 & 3 \\ 6 & 5 & 4
\end{array}\right]
\]$PAR you would type [[1,2,3],[6,5,4]], so each inside set of [ ] represents a row. If there is no free variable in the solution, then type \(0\) in each of the answer blanks directly before each \(s_1\). For example, if the answer is \((x_1,x_2,x_3) = (5,-2,1)\), then you would enter \((5 + 0s_1, -2 + 0s_1, 1 + 0 s_1)\).  If the system is inconsistent, you do not have to type anything in the ${LQ}Solution${RQ} answer blanks.
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($ech->cmp());
ANS($pop->cmp());
ANS($soln->cmp());


###########################################################################
# solution
###########################################################################
Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} 
Using a computer algebra system, the row echelon form is
$PAR \[$dEch.\] $PAR
We have a free variable \(x_4 = s_1\). Thus \(x_1 = $x[0] - $s[0] s_1\), \(x_2 = $x[1] - $s[1] s_1\), and \(x_3 = $x[2] - $s[2] s_1\).
END_SOLUTION
Context()->normalStrings;

COMMENT('Created in 2013.
$BR
Desc: Use a CAS to write the system in reduced echelon form and then solve.');
ENDDOCUMENT();