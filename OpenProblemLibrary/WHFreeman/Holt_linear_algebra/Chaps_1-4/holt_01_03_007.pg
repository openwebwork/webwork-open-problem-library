# DESCRIPTION
# Solve using GE with 3 sig figs, and then solve again using PV.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.3')
## Problem1('7')
## KEYWORDS('linear equations', 'system', 'systems', 'numerical', 'applications')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "contextScientificNotation.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Matrix");
sub dispMat {
  my $A = shift;
  my @d = $A->dimensions;
  my @a = ();
  my $dA = "\left[\begin{array}{";
  for (my $i = 0; $i < $d[1]; $i++) {
    $dA = $dA."r";
  }
  $dA = $dA."}";
  for (my $i = 0; $i < $d[0]; $i++) {
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j != $d[1] - 1) {
        $dA = $dA." $a[$i][$j] & ";
      } elsif ($j == $d[1] - 1 && $i != $d[0] -1) {
        $dA = $dA." $a[$i][$j] \\";
      } else {
        $dA = $dA." $a[$i][$j]";
      }
    }
  }
  $dA = $dA."\end{array}\right]";
  return ($dA, @a);
}

sub dispSyst {
  my $A = shift;
  my $b = shift;
  my @d = @_;
  my $dS = "\begin{array}{";
  for (my $i = 0; $i < $d[0]; $i++) {
    $dS = $dS."rc";
  }
  $dS = $dS."r}";
  for (my $i = 0; $i < $d[0]; $i++) {
    my $jnonzero = 0;
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j == 0) {
        if ($a[$i][$j] == 1) {
          $dS = $dS." x_1 ";   $jnonzero = 1;
        } elsif ($a[$i][$j] == -1) {
          $dS = $dS."-x_1 ";  $jnonzero = 1;
        } elsif ($a[$i][$j] != 0) {
          $dS = $dS."$a[$i][$j] x_1";  $jnonzero = 1;
        }
        if ($d[1] == 1) {
          if ($j == $d[1] - 1 && $i != $d[0] - 1) {
            $dS = $dS." & = & ".$b->element($i+1,1)." \\";
          } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
            $dS = $dS." & = & ".$b->element($i+1,1);
          }
        }
      } else {
        if ($a[$i][$j] == 0) {
          $dS = $dS." & & ";
        } else {
          my $pm = ($a[$i][$j] > 0) ? "+" : "-";
          if ($jnonzero == 0 && $a[$i][$j] > 0) { $pm = "" };
          my $tmp = ($a[$i][$j] < 0) ? -$a[$i][$j] : $a[$i][$j];
          my $subsc = $j+1;
          if ($tmp == 1) {
            $dS = $dS." & $pm & x_{$subsc}";
          } else {
            $dS = $dS." & $pm & $tmp x_{$subsc}";
          }
          $jnonzero = 1;
        }
        if ($j == $d[1] - 1 && $i != $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1)." \\";
        } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1);
        }
      }
    }
  }
  $dS = $dS."\end{array}";
  return $dS;
}

Context("ScientificNotation");
Context()->flags->set(snDigits=>2, snTrimZeros=>1, snMinDigits=>0, snMaxDigits=>2);
$r = sprintf("%.2e",(-53/2)*975-81);
$q = ScientificNotation($r);

do {
  do {
    do {$A = Matrix([random(-1,1,2)*random(1,3), random(-1,1,2)*random(1,3), random(-1,1,2)*random(601,699)], [random(-1,1,2)*random(1,2), random(-1,1,2)*random(2,5), random(-1,1,2)*random(801,850)], [random(-1,1,2)*random(51,59), random(-1,1,2)*random(41,49), random(-1,1,2)*random(71,79)])} until ($A->det != 0 && gcd($A->element(1,1), $A->element(2,1)) == 1);

    $b = Matrix([random(5,15)], [random(5,15)], [random(5,15)]);
    $dS = dispSyst($A,$b,(3,3));
    ($dA,@a) = dispMat($A); ($db, @b) = dispMat($b);
    $M0 = Matrix([$a[0][0], $a[0][1], $a[0][2], $b[0][0]], [$a[1][0], $a[1][1], $a[1][2], $b[1][0]], [$a[2][0], $a[2][1], $a[2][2], $b[2][0]]);
    ($dM0,@m0) = dispMat($M0);

    $t1 = -$a[1][0]/$a[0][0];  $t2 = -$a[2][0]/$a[0][0];
    $m22_1 = sprintf("%.2e", $t1*$a[0][1] + $a[1][1]);
    $m23_1 = sprintf("%.2e", $t1*$a[0][2] + $a[1][2]);
    $m24_1 = sprintf("%.2e", $t1*$b[0][0] + $b[1][0]);
    $m32_1 = sprintf("%.2e", $t2*$a[0][1] + $a[2][1]);
    $m33_1 = sprintf("%.2e", $t2*$a[0][2] + $a[2][2]);
    $m34_1 = sprintf("%.2e", $t2*$b[0][0] + $b[2][0]);

    $gcdf11 = gcd($a[0][0], $a[0][1]);
    $num11 = abs($a[1][0]/$gcdf11);
    $den11 = abs($a[0][0]/$gcdf11);
    $df11 = ($t1 > 0) ? "$num11/$den11" : "-$num11/$den11";

    $gcdf12 = gcd($a[0][0], $a[0][2]);
    $num12 = abs($a[2][0]/$gcdf12);
    $den12 = abs($a[0][0]/$gcdf12);
    $df12 = ($t2 > 0) ? "$num12/$den12" : "-$num12/$den12";

    $m22_1sf = ScientificNotation($m22_1);
    $m23_1sf = ScientificNotation($m23_1);
    $m24_1sf = ScientificNotation($m24_1);
    $m32_1sf = ScientificNotation($m32_1);
    $m33_1sf = ScientificNotation($m33_1);
    $m34_1sf = ScientificNotation($m34_1);
    $dM1 = "\left[\begin{array}{rrrr}
    $a[0][0] & $a[0][1] & $a[0][2] & $b[0][0] \\ 0 & $m22_1sf & $m23_1sf & $m24_1sf \\ 0 & $m32_1sf & $m33_1sf & $m34_1sf
    \end{array}\right]";
  } until ($m22_1 != 0 && (-$m32_1/$m22_1)*$m23_1 + $m33_1 != 0);

  $t3 = -$m32_1/$m22_1;
  $m33_2 = sprintf("%.2e", $t3*$m23_1 + $m33_1);
  $m34_2 = sprintf("%.2e", $t3*$m24_1 + $m34_1);
  $m33_2sf = ScientificNotation($m33_2);
  $m34_2sf = ScientificNotation($m34_2);

  $num13 = abs($m32_1sf);
  $den13 = abs($m22_1sf);
  $df13 = ($t3 > 0) ? "$num13/$den13" : "-$num13/$den13";

  $m33_2sf = ScientificNotation($m33_2);
  $m34_2sf = ScientificNotation($m34_2);

  $dM2 = "\left[\begin{array}{rrrr}
  $a[0][0] & $a[0][1] & $a[0][2] & $b[0][0] \\ 0 & $m22_1sf & $m23_1sf & $m24_1sf \\ 0 & 0 & $m33_2sf & $m34_2sf
  \end{array}\right]";

  $x3 = sprintf("%.2e", $m34_2/$m33_2);
  $x2 = sprintf("%.2e", ($m24_1 - $m23_1*$x3)/$m22_1);
  $x1 = sprintf("%.2e", ($b[0][0] - $a[0][1]*$x2 - $a[0][2]*$x3)/$a[0][0]);

  $x1sf  = ScientificNotation($x1);
  $x2sf  = ScientificNotation($x2);
  $x3sf  = ScientificNotation($x3);

  $M1pv = Matrix([0,0,1],[0,1,0],[1,0,0])*$M0;
  ($dM1pv,@m1) = dispMat($M1pv);

  $t1pv = -$a[1][0]/$a[2][0];  $t2pv = -$a[0][0]/$a[2][0];
  $m22_1pv = sprintf("%.2e", $t1pv*$a[2][1] + $a[1][1]);
  $m23_1pv = sprintf("%.2e", $t1pv*$a[2][2] + $a[1][2]);
  $m24_1pv = sprintf("%.2e", $t1pv*$b[2][0] + $b[1][0]);
  $m32_1pv = sprintf("%.2e", $t2pv*$a[2][1] + $a[0][1]);
  $m33_1pv = sprintf("%.2e", $t2pv*$a[2][2] + $a[0][2]);
  $m34_1pv = sprintf("%.2e", $t2pv*$b[2][0] + $b[0][0]);
} until (abs($m22_1pv) < abs($m32_1pv));

$gcdf21 = gcd($a[1][0], $a[2][1]);
$num21 = abs($a[1][0]/$gcdf21);
$den21 = abs($a[2][0]/$gcdf21);
$df21 = ($t1pv > 0) ? "$num21/$den21" : "-$num21/$den21";

$gcdf22 = gcd($a[0][0], $a[0][2]);
$num22 = abs($a[0][0]/$gcdf22);
$den22 = abs($a[2][0]/$gcdf22);
$df22 = ($t2pv > 0) ? "$num22/$den22" : "-$num22/$den22";

$m22_1sfpv = ScientificNotation($m22_1pv);
$m23_1sfpv = ScientificNotation($m23_1pv);
$m24_1sfpv = ScientificNotation($m24_1pv);
$m32_1sfpv = ScientificNotation($m32_1pv);
$m33_1sfpv = ScientificNotation($m33_1pv);
$m34_1sfpv = ScientificNotation($m34_1pv);

$dM2pv = "\left[\begin{array}{rrrr}
$a[2][0] & $a[2][1] & $a[2][2] & $b[2][0] \\ 0 & $m22_1sfpv & $m23_1sfpv & $m24_1sfpv \\ 0 & $m32_1sfpv & $m33_1sfpv & $m34_1sfpv
\end{array}\right]";

$dM3pv = "\left[\begin{array}{rrrr}
$a[2][0] & $a[2][1] & $a[2][2] & $b[0][0]  \\ 0 & $m32_1sfpv & $m33_1sfpv & $m34_1sfpv\\  0 & $m22_1sfpv & $m23_1sfpv & $m24_1sfpv
\end{array}\right]";

$t3pv = -$m22_1pv/$m32_1pv;
$m33_2pv = sprintf("%.2e", $t3pv*$m33_1pv + $m23_1pv);
$m34_2pv = sprintf("%.2e", $t3pv*$m34_1pv + $m24_1pv);
$m33_2sfpv = ScientificNotation($m33_2pv);
$m34_2sfpv = ScientificNotation($m34_2pv);

$num23pv = abs($m22_1sfpv);
$den23pv = abs($m32_1sfpv);
$df23 = ($t3pv > 0) ? "$num23pv/$den23pv" : "-$num23pv/$den23pv";

$m33_2sfpv = ScientificNotation($m33_2pv);
$m34_2sfpv = ScientificNotation($m34_2pv);

$dM4pv = "\left[\begin{array}{rrrr}
$a[2][0] & $a[2][1] & $a[2][2] & $b[2][0] \\ 0 & $m32_1sfpv & $m33_1sfpv & $m34_1sfpv \\ 0 & 0 & $m33_2sfpv & $m34_2sfpv
\end{array}\right]";

$x3pv = sprintf("%.2e", $m34_2pv/$m33_2pv);
$x2pv = sprintf("%.2e", ($m34_1pv - $m33_1pv*$x3pv)/$m32_1pv);
$x1pv = sprintf("%.2e", ($b[2][0] - $a[2][1]*$x2pv - $a[2][2]*$x3pv)/$a[2][0]);

$x1sfpv  = ScientificNotation($x1pv);
$x2sfpv  = ScientificNotation($x2pv);
$x3sfpv  = ScientificNotation($x3pv);



###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
First solve the system 
$PAR \[ $dS \] $PAR
with Gaussian elimination with three significant digits of accuracy. Then solve the system again with three significant digits of accuracy, incorporating partial pivoting. To enter scientific notation, use ${BBOLD}x${EBOLD} and ${BBOLD}^${EBOLD}. For example, type ${BBOLD} 2.12 x 10^(-3) ${EBOLD} to enter \(2.12 \times 10^{-3}\). Note that you ${BITALIC}must${EITALIC} enter all answers in scientific notation, even if the power of \(10\) is zero.
$PAR
Gaussian Elimination: \((x_1,x_2) = \bigg(\) \{ans_rule(8)\}, \{ans_rule(8)\}, \{ans_rule(8)\} \(\bigg)\)
$PAR
Partial Pivoting: \((x_1,x_2) = \bigg(\) \{ans_rule(8)\}, \{ans_rule(8)\}, \{ans_rule(8)\} \(\bigg)\)
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($x1sf->cmp(tol => 0.001, tolType=>"relative"));
ANS($x2sf->cmp(tol => 0.001, tolType=>"relative"));
ANS($x3sf->cmp(tol => 0.001, tolType=>"relative"));
ANS($x1sfpv->cmp(tol => 0.001, tolType=>"relative"));
ANS($x2sfpv->cmp(tol => 0.001, tolType=>"relative"));
ANS($x3sfpv->cmp(tol => 0.001, tolType=>"relative"));


###########################################################################
# solution
###########################################################################
$r1 = nicestring([$a[0][0],$a[0][1],$a[0][2]],["x_1", "($x2sf)", "($x3sf)"]);
$r1pv = nicestring([$a[2][0],$a[2][1], $a[2][2]], ["x_1","($x2sfpv)", "($x3sfpv)"]);
Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} 
Using Gaussian elimination with three significant digits of accuracy:
\[\begin{array}{ccc}
$dM0 & \overset{\begin{align*}($df11)R_1 + R_2 &\Rightarrow R_2 \\ ($df12)R_1 + R_3 &\Rightarrow R_3 \end{align*}}{\sim} & $dM1 \\ 
& \overset{($df13) R_2 + R_3 \Rightarrow R_3}{\sim} & $dM2
\end{array}\]
Row 3 \(\Rightarrow x_3 = \frac{$m34_2sf}{$m33_2sf} = $x3sf \). Row 2 gives
\[
$m22_1sf x_2 + ($m23_1sf)($x3sf) = $m24_1sf
\]
so that \(x_2 = $x2sf\). Row 1 gives
\[
$r1 = $b[0][0]
\]
and hence \(x_1 = $x1sf\).
$PAR
Using partial pivoting with three significant digits:
\[
\begin{array}{ccc}
$dM0 & \overset{ R_1 \Leftrightarrow R_3 }{\sim} & $dM1pv \\
& \overset{\begin{align*}($df21)R_1 + R_2 &\Rightarrow R_2 \\ ($df22)R_1 + R_3 &\Rightarrow R_3 \end{align*}}{\sim} & $dM2pv \\
& \overset{R_2 \Leftrightarrow R_3}{\sim} & $dM3pv \\
& \overset{($df23)R_2 + R_3 \Rightarrow R_3}{\sim} & $dM4pv
\end{array}
\]
Row 3 \(\Rightarrow x_3 = \frac{$m34_2sfpv}{$m33_2sfpv} = $x3sfpv \). Row 2 gives 
\[
($m32_1sfpv)x_2 + ($m33_1sfpv)($x3sfpv) = $m34_1sfpv
\]
so that \(x_2 = $x2sfpv\). Finally, Row 1 implies
\[
$r1pv = $b[2][0]
\]
and hence \(x_1 = $x1sfpv\).
END_SOLUTION
Context()->normalStrings;

COMMENT('Created in 2013.
$BR
Desc: Solve using GE with 3 sig figs, and then solve again using PV.');
ENDDOCUMENT();