##DESCRIPTION
##
##ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(LU factorization)
## Date(6/3/2013)
## Author(Darwyn Cook)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Holt')
## EditionText1('1')
## Section1('3.4')
## Problem1('76')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "freemanMacros.pl",
   "parserMultiAnswer.pl",
   "PGchoicemacros.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Matrix");
$sample = Matrix([[2,3,-1],[-2,-5,6]]);

#####################################################
##
##  Define L
##

@sliceden = NchooseK(5,3); 
@den = (2,3,4,5,7);
$den1 = Compute("$den[$sliceden[0]]");
$den2 = Compute("$den[$sliceden[1]]");
$den3 = Compute("$den[$sliceden[2]]");

$num21 = Compute($den1*non_zero_random(-2,2)+1);
$num31 = Compute($den2*non_zero_random(-2,2)+1);
$num32 = Compute($den2*non_zero_random(-2,2)+1);
$num41 = Compute($den3*non_zero_random(-2,2)+1);
$num42 = Compute($den3*non_zero_random(-2,2)+1);
$num43 = Compute($den3*non_zero_random(-2,2)+1);


$L = Matrix([[1,0,0,0],
[$num21/$den1,1,0,0],
[$num31/$den1,$num32/$den2,1,0],
[$num41/$den1,$num42/$den2,$num43/$den3,1]]);

$U = Matrix([[Compute(non_zero_random(-3,3)*$den1),Compute(non_zero_random(-3,3)*$den1),Compute(non_zero_random(-3,3)*$den1)],
[0,Compute(non_zero_random(-3,3)*$den2),Compute(non_zero_random(-3,3)*$den2)],
[0,0,Compute(non_zero_random(-3,3)*$den3)],
[0,0,0]]);
 
$A = $L * $U;

$multians = MultiAnswer($L, $U)->with(
  singleResult => 0,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $Lstu, $Ustu ) = @{$student};
      my ( $Lcorrect, $Ucorrect ) = @{$correct};    
      $lower = 1;
      $upper = 1;
      #Check to see if the student L matrix is lower triangular
      unless (($Lstu->element(1,2)==0)&&($Lstu->element(1,3)==0)&&
              ($Lstu->element(1,4)==0)&&($Lstu->element(2,3)==0)&&
              ($Lstu->element(2,4)==0)&&($Lstu->element(3,4)==0)){
          $self->setMessage(1,'Your L matrix is not lower triangular');
          $self->setMessage(2,'The U matrix cannot be checked for accuracy '.
                              'since L does not have the correct format.');
          return[0,0];
          };
      #Check to see if the student L has 1's on the diagonal
      unless (($Lstu->element(1,1)==1)&&($Lstu->element(2,2)==1)&&
             ($Lstu->element(3,3)==1)&&($Lstu->element(4,4)==1)){
           $self->setMessage(1,'Your L matrix should have ones on the diagonal');
          $self->setMessage(2,'The U matrix cannot be checked for accuracy '.
                              'since L does not have the correct format.');
          return[0,0];
          };
      #Check to see if the student U matrix is upper triangular
      unless(($Ustu->element(2,1)==0)&&($Ustu->element(3,1)==0)&&
             ($Ustu->element(3,2)==0)&&($Ustu->element(4,1)==0)&&
             ($Ustu->element(4,2)==0)&&($Ustu->element(4,3)==0)){
          $self->setMessage(1,'The L matrix cannot be checked for accuracy '.
                              'since U is not in echelon form.');
          $self->setMessage(2,'Your U matrix is not in echelon form.');
          return[0,0];
          };
      #Check to see if they have the right product
      unless($Lstu*$Ustu == $Lcorrect*$Ucorrect){
          $self->setMessage(1,'Your matrix has the right format, but you have '.
                              'the wrong product.');
          $self->setMessage(2,'Your matrix is in echelon form, but you have '.
                              'the wrong product.');
           $lower = 0;
           $upper = 0;
          }
      return [$lower,$upper];
  }
);



##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT
\{ textbook_ref_exact("Holt Linear Algebra", "3.4","76") \}
$BR
For this problem enter matrices using bracket notation. So the matrix 
$BR \($sample\)
$BR
would be entered as [[2,3,-1],[-2,-5,6]].
$BR
$BR
Find an LU factorization for 
$BR
\($A\)
$BR
\(L = \)\{$multians->ans_rule(90)\}
$BR
 \(U = \)\{$multians->ans_rule(90)\}
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#
ANS( $multians->cmp() );

Context()->texStrings;
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} 
Using a computer algebra system, we determine that
\[
L = $L \quad \mbox{and} \quad U = $U.
\]
END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();        