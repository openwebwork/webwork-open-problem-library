# DESCRIPTION
# Use partial pivoting to solve the system.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Systems of linear equations)
## DBsection(Systems with 3 variables)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra')
## AuthorText1('Holt')
## EditionText1('1e')
## Section1('1.3')
## Problem1('4')
## KEYWORDS('linear equations', 'system', 'systems', 'numerical', 'applications')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Matrix");
sub dispMat {
  my $A = shift;
  my @d = $A->dimensions;
  my @a = ();
  my $dA = "\left[\begin{array}{";
  for (my $i = 0; $i < $d[1]; $i++) {
    $dA = $dA."r";
  }
  $dA = $dA."}";
  for (my $i = 0; $i < $d[0]; $i++) {
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j != $d[1] - 1) {
        $dA = $dA." $a[$i][$j] & ";
      } elsif ($j == $d[1] - 1 && $i != $d[0] -1) {
        $dA = $dA." $a[$i][$j] \\";
      } else {
        $dA = $dA." $a[$i][$j]";
      }
    }
  }
  $dA = $dA."\end{array}\right]";
  return ($dA, @a);
}

sub dispSyst {
  my $A = shift;
  my $b = shift;
  my @d = @_;
  my $dS = "\begin{array}{";
  for (my $i = 0; $i < $d[0]; $i++) {
    $dS = $dS."rc";
  }
  $dS = $dS."r}";
  for (my $i = 0; $i < $d[0]; $i++) {
    my $jnonzero = 0;
    for (my $j = 0; $j < $d[1]; $j++) {
      $a[$i][$j] = $A->element($i+1,$j+1);
      if ($j == 0) {
        if ($a[$i][$j] == 1) {
          $dS = $dS." x_1 ";   $jnonzero = 1;
        } elsif ($a[$i][$j] == -1) {
          $dS = $dS."-x_1 ";  $jnonzero = 1;
        } elsif ($a[$i][$j] != 0) {
          $dS = $dS."$a[$i][$j] x_1";  $jnonzero = 1;
        }
        if ($d[1] == 1) {
          if ($j == $d[1] - 1 && $i != $d[0] - 1) {
            $dS = $dS." & = & ".$b->element($i+1,1)." \\";
          } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
            $dS = $dS." & = & ".$b->element($i+1,1);
          }
        }
      } else {
        if ($a[$i][$j] == 0) {
          $dS = $dS." & & ";
        } else {
          my $pm = ($a[$i][$j] > 0) ? "+" : "-";
          if ($jnonzero == 0 && $a[$i][$j] > 0) { $pm = "" };
          my $tmp = ($a[$i][$j] < 0) ? -$a[$i][$j] : $a[$i][$j];
          my $subsc = $j+1;
          if ($tmp == 1) {
            $dS = $dS." & $pm & x_{$subsc}";
          } else {
            $dS = $dS." & $pm & $tmp x_{$subsc}";
          }
          $jnonzero = 1;
        }
        if ($j == $d[1] - 1 && $i != $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1)." \\";
        } elsif ($j == $d[1] - 1 && $i == $d[0] - 1) {
          $dS = $dS." & = & ".$b->element($i+1,1);
        }
      }
    }
  }
  $dS = $dS."\end{array}";
  return $dS;
}

do {
do {
  do {
    $b1[0][0] = non_zero_random(-1,1); $b1[0][1] = non_zero_random(-3,3); 
    $b1[0][2] = non_zero_random(-2,2); $b1[0][3] = non_zero_random(-4,4);

    $b1[1][0] = random(-2,2,4); $b1[1][1] = random(6,8)*random(-1,1,2);
    $b1[1][2] = non_zero_random(-1,1,2); $b1[1][3] = random(6,8)*random(-1,1,2);

    $b1[2][0] = random(3,5)*random(-1,1,2);
    $b1[2][1] = random(-1,1,2)*random(12,14);
    $b1[2][2] = random(-1,1,2)*random(6,8);
    $b1[2][3] = random(-1,1,2)*random(11,13);
  
    $A = Matrix([0,0,0],[0,0,0],[0,0,0])->wwMatrix;
    $b = Matrix([0],[0],[0])->wwMatrix;
    for ($i = 0; $i < 3; $i++) {
      for ($j = 0; $j < 4; $j++) {
        $A->assign($i+1,$j+1,$b1[$i][$j]) if ($j != 3);
        $b->assign($i+1,1,$b1[$i][3]) if ($j == 3);
      }
    }

    $A = Matrix($A);  $b = Matrix($b);
  } until ($A->det != 0);

  for ($i = 0; $i < 4; $i++) {
    $b2[0][$i] = $b1[2][$i];
    $b2[1][$i] = $b1[1][$i];
    $b2[2][$i] = $b1[0][$i];
  }

  Context("Fraction");
  $f11 = Fraction(-sgn($b2[1][0]/$b2[0][0])*abs($b2[1][0]),abs($b2[0][0]))->reduce;
  $f12 = Fraction(-sgn($b2[2][0]/$b2[0][0])*abs($b2[2][0]),abs($b2[0][0]))->reduce;
  for ($i = 0; $i < 4; $i++) {
    $b3[0][$i] = $b2[0][$i];
    $b3[1][$i] = Fraction($f11*$b2[0][$i] + $b2[1][$i]);
    $b3[2][$i] = Fraction($f12*$b2[0][$i] + $b2[2][$i]);
  }
  $failed = (abs($b3[2][1]) > abs($b3[1][1]) || $b3[2][1] == 0 || $b3[1][1] == 0) ? 1 : 0;

  if ($failed == 0) {
    $f21 = Fraction(-sgn($b3[2][1]/$b3[1][1])*abs($b3[2][1])/abs($b3[1][1]))->reduce;
    ($t1, $t2) = $f21->value;
    $failed = (abs($t2) >= 5 || abs($t1) >= 5) ? 1 : 0;
  }

  if ($failed == 0) {
    for ($i = 0; $i < 4; $i++) {
       $b4[0][$i] = $b3[0][$i];
       $b4[1][$i] = $b3[1][$i];
       $b4[2][$i] = Fraction($f21*$b3[1][$i] + $b3[2][$i]);
    }   
  }
} until ($failed == 0);

$tmp = floor(5.5);
$x = ($A->inverse)*$b;
$x1 = $x->element(1,1);
$x2 = $x->element(2,1);
$x3 = $x->element(3,1);
} until ($x1 == floor($x1) && $x2 == floor($x2) && $x3 == floor($x3));


$B1 = Matrix([0,0,0,0],[0,0,0,0],[0,0,0,0])->wwMatrix;
$B2 = Matrix([0,0,0,0],[0,0,0,0],[0,0,0,0])->wwMatrix;
$B3 = Matrix([0,0,0,0],[0,0,0,0],[0,0,0,0])->wwMatrix;
$B4 = Matrix([0,0,0,0],[0,0,0,0],[0,0,0,0])->wwMatrix;
for ($i = 0; $i < 3; $i++) {
  for ($j = 0; $j < 4; $j++) {
    $B1->assign($i+1,$j+1,$b1[$i][$j]);
    $B2->assign($i+1,$j+1,$b2[$i][$j]);
    $B3->assign($i+1,$j+1,$b3[$i][$j]);
    $B4->assign($i+1,$j+1,$b4[$i][$j]);
  }
}
$B1 = Matrix($B1);
$B2 = Matrix($B2);
$B3 = Matrix($B3);
$B4 = Matrix($B4);
$dS = dispSyst($A,$b,(3,4));



###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Use partial pivoting with Gaussian elimination to find the solutions to the linear system
$PAR \[ $dS \] $PAR
\((x_1,x_2,x_3) = \) \{ans_rule(35)\}
$PAR
Help: To enter a solution \((a,b,c)\), type your answer as a point ${BBOLD}(a,b,c)${EBOLD}.
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
Context("Point");
ANS(Point("($x1,$x2,$x3)")->cmp());


###########################################################################
# solution
###########################################################################
Context("Fraction")->texStrings;
($dB1, @b1) = dispMat($B1);
($dB2, @b2) = dispMat($B2);
($dB3, @b3) = dispMat($B3);
($dB4, @b4) = dispMat($B4);
$x3f = Fraction($b4[2][3]/$b4[2][2]);
$x2f = Fraction(($b4[1][3] - $b4[1][2]*$x3f)/$b4[1][1]);
$x1f = Fraction(($b4[0][3] - $b4[0][1]*$x2f - $b4[0][2]*$x3f)/$b4[0][0]);
BEGIN_SOLUTION
${BBOLD}SOLUTION:${EBOLD} $PAR
\(\begin{array}{ccc} $dB1 & \overset{R_1 \Leftrightarrow R_3}{\sim} & $dB2 \\ & \overset{\begin{align*} $f11 R_1 + R_2 &\Rightarrow R_2 \\ $f12 R_1 + R_3 &\Rightarrow R_3 \end{align*}}{\sim} & $dB3 \\
& \overset{$f21 R_2 + R_3 \Rightarrow R_3}{\sim} & $dB4 \end{array}\) $PAR
Row 3 \(\Rightarrow $b4[2][2] x_3 = $b4[2][3] \Rightarrow x_3 = $x3f\). Row 2 \(\Rightarrow $b4[1][1] x_2 + $b4[1][2]\left($x3f\right) = $b4[1][3] \Rightarrow x_2 = $x2f\). Row 1 \(\Rightarrow $b4[0][0] x_1  + $b4[0][1]\left($x2f\right) + $b4[0][2] \left($x3f\right) = $b4[0][3] \Rightarrow x_1 = $x1f\).
END_SOLUTION
Context()->normalStrings;

COMMENT('Created in 2013.
$BR
Desc: Use partial pivoting to solve the system.');
ENDDOCUMENT();