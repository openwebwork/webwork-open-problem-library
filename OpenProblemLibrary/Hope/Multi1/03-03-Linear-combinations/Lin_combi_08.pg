## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Linear combinations)
## Date(July 2013)
## Institution(Hope College)
## Author(Paul Pearson)
## KEYWORDS('linear algebra','vector space','subspaces')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"MatrixUnits.pl",
"parserMultiAnswer.pl",
"PGcourse.pl",
);

$showPartialCorrectAnswers = 0;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Numeric')->variables->are('x'=>'Real');
Context()->noreduce('(-x)-y');

do {

$Mred = Matrix([
[1,0,0,random(-5,5,1)],
[0,1,0,random(-5,5,1)],
[0,0,1,random(-5,5,1)],
]);

$U = GL3Z();

$M = $U * $Mred;

$b = Matrix([
[$M->element(1,4)],
[$M->element(2,4)],
[$M->element(3,4)],
]);

$A1 = $M->column(1);
$A2 = $M->column(2);
$A3 = $M->column(3);

$A = Matrix([
[$M->element(1,1),$M->element(1,2),$M->element(1,3)],
[$M->element(2,1),$M->element(2,2),$M->element(2,3)],
[$M->element(3,1),$M->element(3,2),$M->element(3,3)],
]);

$x1 = $Mred->element(1,4);
$x2 = $Mred->element(2,4);
$x3 = $Mred->element(3,4);

} until (($x1 != 0) and ($x2 != 0) and ($x3 != 0));

foreach my $i (1..3) {
  foreach my $j (1..3) {
    $a[$i][$j] = $A->element($i,$j);
  }
}

$b1 = $b->element(1,1);
$b2 = $b->element(2,1);
$b3 = $b->element(3,1);

$p1 = Formula("$a[1][1] + $a[2][1] * x + $a[3][1] * x^2")->reduce;
$p2 = Formula("$a[1][2] + $a[2][2] * x + $a[3][2] * x^2")->reduce;
$p3 = Formula("$a[1][3] + $a[2][3] * x + $a[3][3] * x^2")->reduce;

$q = Formula("$b1 + $b2 x + $b3 x^2")->reduce;

$multians = MultiAnswer($x1, $x2, $x3)->with(
  singleResult => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my @s = @{$student};
      my @c = @{$correct};
      return (($s[0] == $c[0]) and ($s[1] == $c[1]) and ($s[2] == $c[2]));
  }
);

Context()->texStrings;
BEGIN_TEXT
If possible, write \( $q \) as a linear combination of \( $p1, $p2 \) and \( $p3 \).
Otherwise, enter ${BITALIC}DNE${EITALIC} in all answer blanks.
$BR
$BR
\( $q = \) 
\{ $multians->ans_rule(5) \} \( ($p1) + \)
\{ $multians->ans_rule(5) \} \( ($p2) + \)
\{ $multians->ans_rule(5) \} \( ($p3).\)
END_TEXT
Context()->normalStrings;

ANS($multians->cmp);

COMMENT('MathObject version.  Answer is always unique.');
ENDDOCUMENT();