## DESCRIPTION
## The geometry of vectors in R^n
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Abstract vector spaces)
## DBsection(Linear combinations)
## Date(December 2015)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(2)
## MO(1)
## KEYWORDS('vectors','vector operations')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "contextLimitedVector.pl",

  "PGML.pl",
  "unionTables.pl",
  "scaffold.pl",
  "PGcourse.pl"
);
TEXT(beginproblem());
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;

Context("LimitedVector-coordinate")->variables->are(x=>'Real',y=>'Real');
Context()->flags->set( ijk=>0 );

# Construct graph canvases

$pixels = 300;
($xmin,$xmax) = (-1,9);
($ymin,$ymax) = (-5,5);

foreach my $g (0..1) {

  $gr[$g] = init_graph($xmin,$ymin,$xmax,$ymax, axes=>[0,0], size=>[$pixels,$pixels]);
  $gr[$g] -> lb('reset');

  #  manually draw the grid
  foreach my $x ($xmin..$xmax) {
    $gr[$g] -> moveTo($x,$ymin);
    $gr[$g] -> lineTo($x,$ymax,'gray',1);
  }
  foreach my $y ($ymin..$ymax) {
    $gr[$g] -> moveTo($xmin,$y);
    $gr[$g] -> lineTo($xmax,$y,'gray',1);
  }

  #  axes labels
  $gr[$g] -> lb(new Label ( $xmax-0.5,0,'t','black','left','bottom'));
  $gr[$g] -> lb(new Label ( 0.25,$ymax-0.5,'y','black','left','bottom'));
  foreach my $x (2,4,6,8) {
    $gr[$g] -> lb(new Label ( $x,$ymin+0.5, $x/8,'black','center','middle'));
  }
  foreach my $y (-4..-1,1..4) {
    $gr[$g] -> lb(new Label ( $xmin+0.5, $y, $y,'black','center','middle'));
  }

} # end construction of graph canvases

# generate the signal and plot it
@x = (0..8);
@f = ();
@g = ();
foreach my $i (@x) {
  $f[$i] = non_zero_random(-4,4,1);
  $gr[0]->moveTo($i,0);
  $gr[0]->lineTo($i,$f[$i],'red',3);
  $gr[0]->stamps( closed_circle($i,$f[$i],'red') );
}
foreach my $i (@x) {
  $g[$i] = non_zero_random(-4,4,1);
  $gr[1]->moveTo($i,0);
  $gr[1]->lineTo($i,$g[$i],'red',3);
  $gr[1]->stamps( closed_circle($i,$g[$i],'red') );
}

$F = Vector("<$f[0],$f[1],$f[2],$f[3],$f[4],$f[5],$f[6],$f[7],$f[8]>");
$G = Vector("<$g[0],$g[1],$g[2],$g[3],$g[4],$g[5],$g[6],$g[7],$g[8]>");

$FplusG = Vector("<$f[0]+$g[0],$f[1]+$g[1],$f[2]+$g[2],$f[3]+$g[3],$f[4]+$g[4],$f[5]+$g[5],$f[6]+$g[6],$f[7]+$g[7],$f[8]+$g[8]>");

$negG = Vector("<-1*$g[0],-1*$g[1],-1*$g[2],-1*$g[3],-1*$g[4],-1*$g[5],-1*$g[6],-1*$g[7],-1*$g[8]>");
$k = random(-1,1,2) * random(2,4,1);
$kF = Vector("<$k*$f[0],$k*$f[1],$k*$f[2],$k*$f[3],$k*$f[4],$k*$f[5],$k*$f[6],$k*$f[7],$k*$f[8]>");

$k1 = random(-5,-1,1);
$k2 = random(1,5,1);

$k1Fplusk2G = Vector("<
$k1*$f[0]+$k2*$g[0],
$k1*$f[1]+$k2*$g[1],
$k1*$f[2]+$k2*$g[2],
$k1*$f[3]+$k2*$g[3],
$k1*$f[4]+$k2*$g[4],
$k1*$f[5]+$k2*$g[5],
$k1*$f[6]+$k2*$g[6],
$k1*$f[7]+$k2*$g[7],
$k1*$f[8]+$k2*$g[8]
>");

@fig = ();
$fig[0] = image(insertGraph($gr[0]), width=>$pixels, height=>$pixels, tex_size=>450);
$fig[1] = image(insertGraph($gr[1]), width=>$pixels, height=>$pixels, tex_size=>450);

BEGIN_PGML
Consider the two discrete time signals [` y = f(t) `] and [` y = g(t) `] graphed below and each sampled 8 times per second for [` 0 \leq t \leq 1 `].

[@
BeginTable().
  AlignedRow([ $fig[0], $fig[1] ]).
  TableSpace(5,0).
  AlignedRow(["Graph of \\( y = f(t) \\)","Graph of \\( y = g(t) \\)"]).
EndTable()
@]***

a. Find the coordinate vector representations for the discrete time signals [`f(t)`] and [`g(t)`].

    + [`\vec{f}=`] [_______________________________________]{$F} [@ helpLink("vectors") @]*
    + [`\vec{g}=`] [_______________________________________]{$G} [@ helpLink("vectors") @]*

b. Draw the vector sum [` \vec{f} + \vec{f} `] as a discrete time signal.  Then, verify your answer using vector addition operations.

    + [` \vec{f} + \vec{g} = `] [_______________________________________]{$FplusG} [@ helpLink("vectors") @]*

c. Draw the scaled vector [` [$k] \vec{f} `] as a discrete time signal.  Then, verify your answer using vector addition operations.

    + [` [$k] \vec{f} = `] [_______________________________________]{$kF} [@ helpLink("vectors") @]*

d. Find the vector sum [` k_1 \vec{f} + k_2 \vec{g} `] when [`k_1 = [$k1] `] and [`k_2 = [$k2] `].

    + [` k_1 \vec{f} + k_2\vec{g} = `] [_______________________________________]{$k1Fplusk2G} [@ helpLink("vectors") @]*

e. Find the additive inverse of [`\vec{g}`].

    + [`\vec{g} + `] [_______________________________________]{$negG} [` = \mathbf{0}. `] [@ helpLink("vectors") @]*
END_PGML

ENDDOCUMENT();
