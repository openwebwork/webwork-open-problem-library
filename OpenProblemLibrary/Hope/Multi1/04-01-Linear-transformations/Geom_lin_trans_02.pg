## DESCRIPTION
## Linear transformations
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Linear transformations)
## DBsection(Properties)
## Date(February 2015)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## KEYWORDS('linear transformations')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "parserPopUp.pl",
  "PGML.pl",
  "unionTables.pl",
  "PGcourse.pl"
);
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Matrix');
Context()->constants->remove(i,j,k);
#Context()->variables->are(
#'a1'=>['Real',TeX=>'\mathbf{a_1}'],
#'a2'=>['Real',TeX=>'\mathbf{a_2}'],
#'a3'=>['Real',TeX=>'\mathbf{a_3}'],
#);
#parserFunction("f(x)" => "e * x + sin(pi*x) + pi * cos(4.23*x)");

#####################################
#  Construct vectors in the domain (matrix A)

do {
  ($a11,$a12, 
   $a21,$a22) = (
  non_zero_random(-3,3,1),non_zero_random(-3,3,1),
  non_zero_random(-3,3,1),non_zero_random(-3,3,1),
  );
  $a13 = $a11 + $a12;
  $a23 = $a21 + $a22;

} until ( # non-parallel vectors, make sure third column vector fits on graph
  $a11 * $a22 != $a21 * $a12 
  && abs($a13) <= 4
  && abs($a23) <= 4
);

$A = Matrix([
[$a11,$a12,$a13],
[$a21,$a22,$a23],
]);

$a1 = Vector("<$a11,$a21>");
$a2 = Vector("<$a12,$a22>");
$a3 = Vector("<$a13,$a23>");


######################################
#  Construct vectors in the codomain (matrix B)

do {
  ($b11,$b12, 
   $b21,$b22) = (
  non_zero_random(-3,3,1),non_zero_random(-3,3,1),
  non_zero_random(-3,3,1),non_zero_random(-3,3,1),
  );
  $b13 = $b11 + $b12;
  $b23 = $b21 + $b22;

} until ( # non-parallel vectors, make sure third column vector fits on graph
  $b11 * $b22 != $b21 * $b12 
  && abs($b13) <= 4
  && abs($b23) <= 4
);

# make ($b11,$b21)+($b12,$b22) != ($b13,$b23) and ($b13,$b23) != (0,0)

#if ($b13 >= 0) { $b13 = $b13 - 2; } else { $b13 = $b13 + 2; }
if ($b13 >= 0) { 
  if ($b13 == 2 && $b23 == 0) { $b13=-1; }
  else { $b13 = $b13 - 2; }
}
else { 
  if ($b13 == -2 && $b23 == 0) { $b13=1; }
  else { $b13 = $b13 + 2; }
}

$B = Matrix([
[$b11,$b12,$b13],
[$b21,$b22,$b23],
]);

$b1 = Vector("<$b11,$b21>");
$b2 = Vector("<$b12,$b22>");
$b3 = Vector("<$b13,$b23>");

$fa1 = Vector("<$b11,$b21>");
$fa2 = Vector("<$b12,$b22>");
$fa3 = Vector("<$b13,$b23>");


######################################
#  Construct graph canvases

@gr = ();

$pix = 200;

foreach my $k (0..1) {

  $gr[$k] = init_graph(-5,-5,5,5, axes=>[0,0], pixels=>[$pix,$pix]);

  foreach my $i (-4..-1,1..4) {
    $gr[$k]->moveTo($i,-5); $gr[$k]->lineTo($i,5,'gray',1);
    $gr[$k]->moveTo(-5,$i); $gr[$k]->lineTo(5,$i,'gray',1);
    $gr[$k] -> lb(new Label ($i,-4.5,$i,'black','center','middle'));
    $gr[$k] -> lb(new Label (-4.5,$i,$i,'black','center','middle'));
  }

  $gr[$k]->lb( new Label(4.5,0.1,'x','black', 'center' , 'bottom') );
  $gr[$k]->lb( new Label(0.1,4.5,'y','black', 'left' , 'middle') );

}

##############################################
#  Plot vectors in domain and codomain

$gr[0]->moveTo(0,0); $gr[0]->arrowTo($a11,$a21,'red',2);
$gr[0]->moveTo(0,0); $gr[0]->arrowTo($a12,$a22,'red',2);
$gr[0]->moveTo(0,0); $gr[0]->arrowTo($a13,$a23,'red',2);

$gr[0]->lb( new Label($a11,$a21,'a1','red', ($a11 < 0) ? 'left' : 'right' , ($a21 < 0) ? 'top' : 'bottom'));
$gr[0]->lb( new Label($a12,$a22,'a2','red', ($a12 < 0) ? 'left' : 'right' , ($a22 < 0) ? 'top' : 'bottom'));
$gr[0]->lb( new Label($a13,$a23,'a3','red', ($a13 < 0) ? 'left' : 'right' , ($a23 < 0) ? 'top' : 'bottom'));

$gr[1]->moveTo(0,0); $gr[1]->arrowTo($b11,$b21,'red',2);
$gr[1]->moveTo(0,0); $gr[1]->arrowTo($b12,$b22,'red',2);
$gr[1]->moveTo(0,0); $gr[1]->arrowTo($b13,$b23,'red',2);

$gr[1]->lb( new Label($b11,$b21,'b1','red', ($b11 < 0) ? 'left' : 'right' , ($b21 < 0) ? 'top' : 'bottom'));
$gr[1]->lb( new Label($b12,$b22,'b2','red', ($b12 < 0) ? 'left' : 'right' , ($b22 < 0) ? 'top' : 'bottom'));
$gr[1]->lb( new Label($b13,$b23,'b3','red', ($b13 < 0) ? 'left' : 'right' , ($b23 < 0) ? 'top' : 'bottom'));

$popup1 = PopUp(['choose','yes','no'],'yes');
$popup2 = PopUp(['choose','yes','no'],'no');
$popup3 = PopUp(['choose','is definitely a linear transformation','may or may not be a linear transformation','cannot be a linear transformation'],'cannot be a linear transformation');

$example = Matrix([[1,2],[3,4]]);

@fig = ();
$fig[0] = image( insertGraph($gr[0]), width=>$pix, height=>$pix, tex_size=>400 );
$fig[1] = image( insertGraph($gr[1]), width=>$pix, height=>$pix, tex_size=>400 );

$table = 
BeginTable().
  AlignedRow([$fig[0]," \( \Large \stackrel{f}{\to} \) ",$fig[1]]).
  TableSpace(5,0).
  AlignedRow(["Domain", " ", "Codomain"]).
EndTable();


#a. Find the following coordinate vectors.
#
#    + [`\mathbf{a_1} = `] [__________]{$a1}
#    + [`\mathbf{a_2} = `] [__________]{$a2}
#    + [`\mathbf{a_3} = `] [__________]{$a3}
#
#    + [`f(\mathbf{a_1}) = `] [__________]{$b1}
#    + [`f(\mathbf{a_2}) = `] [__________]{$b2}
#    + [`f(\mathbf{a_3}) = `] [__________]{$b3}


BEGIN_PGML
Suppose [` f : \mathbb{R}^2 \to \mathbb{R}^2 `] is a function and [` f(\mathbf{a_n}) = \mathbf{b_n} `] for [` n = 1, 2, 3 `].

>> [@ $table @]*** <<

a. Does [`\mathbf{a_3} = \mathbf{a_1} + \mathbf{a_2}`]? [_]{$popup1}  Does [`f(\mathbf{a_3}) = f(\mathbf{a_1}) + f(\mathbf{a_2})`]? [_]{$popup2}

b. Answer the following questions to determine whether [`f`] is a linear transformation.  Enter your answers as coordinate vectors of the form [| <1,2> |].

    + [`f(\mathbf{a_1}+\mathbf{a_2}) = `] [__________]{$fa3}

    + [`f(\mathbf{a_1}) + f(\mathbf{a_2}) = `] [__________]{$fa1} + [__________]{$fa2}

    + The function [`f`] [_]{$popup3}.  Be sure you can explain your answer.
    
END_PGML

ENDDOCUMENT();
