## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Linear transformations)
## DBsection(Associated matrices)
## Date(July 2013)
## Institution(Hope College)
## Author(Paul Pearson)
## Level(4)

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "MatrixUnits.pl",
  "unionLists.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix');

$I2 = Value::Matrix->I(2);
$I3 = Value::Matrix->I(3);

# Set a loop counter to prevent spending too long in the gen loop.
$loopC = 0;

do {
  $loopC++;

  $A = Matrix([
     [random(-5,5,1),random(-5,5,1)],
     [random(-5,5,1),random(-5,5,1)],
  ]);

  $B = GL2Z();
  $C = GL2Z();

  # To make sure the student understands the difference between
  # the two change of basis matrices, we want them to be different.
  # Compute them here, and check they are different in the "until"
  # conditions. Before this change, some seeds
  #   (such as 39, 89, 125, 1250, 1377, 1823,
  #            2073, 2130, 2181, 2601, 3078, 4259, 4720, 4619)
  # led to both being the same matrix.

  # First compute the inverses, just once (and not multiple times)
  $Binv = $B->inverse;
  $Cinv = $C->inverse;

  $CinvB = $Cinv * $B;
  $BinvC = $Binv * $C;

  # if ( $CinvB == $BinvC ) { warn "same COB trying again (loopC = $loopC) " . $BinvC ; }

} until (
  ( $loopC > 5 ) or
  ( ( $B != $I2 ) and
    ( $C != $I2 ) and
    ( $B != $C )  and
    ( $A != $I2)  and
    ( $CinvB != $BinvC ) )
);

if (
  ( $B == $I2 ) or
  ( $C == $I2 ) or
  ( $B == $C )  or
  ( $A == $I2)  or
  ( $CinvB == $BinvC )
) {
  # Emergency fallback
  # A specific case

  # warn "Triggered emergency fallback";

  $A = Matrix([
     [ -5,  2 ],
     [  1, -1 ]
  ]);

  $B = Matrix([
     [ -1,  2 ],
     [  1, -1 ]
  ]);

  $C = Matrix([
     [  1, -2 ],
     [  2, -5 ]
  ]);

  # First compute the inverses, just once (and not multiple times)
  $Binv = $B->inverse;
  $Cinv = $C->inverse;

  $CinvB = $Cinv * $B;
  $BinvC = $Binv * $C;

}

($n,$n) = $B->dimensions;
($m,$m) = $C->dimensions;

#$CinvAB = ($Cinv) * $A * $B;
$BinvAB = $Binv * $A * $B;
$CinvAC = $Cinv * $A * $C;

$b1 = Vector($B->column(1));
$b2 = Vector($B->column(2));

$c1 = Vector($C->column(1));
$c2 = Vector($C->column(2));


Context()->texStrings;
BEGIN_TEXT
Let \( f : \mathbb{R}^{$n} \to \mathbb{R}^{$m} \) be the linear transformation defined by
\[
f(\vec{x}) = $A \vec{x}.
\]
Let
\[
\begin{array}{lcl}
\mathcal{B} & = & \lbrace $b1, $b2 \rbrace, \\
\mathcal{C} & = & \lbrace $c1, $c2 \rbrace,
\end{array}
\]
be two different bases for \( \mathbb{R}^{$n} \).
\{ BeginList('OL',type=>'a') \}

$ITEM
Find the matrix \( \lbrack f \rbrack_{\mathcal{B}}^{\mathcal{B}} \) for \( f \) relative to the basis \( \mathcal{B} \).
$BR
$BR
\( \lbrack f \rbrack_{\mathcal{B}}^{\mathcal{B}} = \) \{ $BinvAB->ans_array(10) \}


$ITEMSEP
$ITEM
Find the matrix \( \lbrack f \rbrack_{\mathcal{C}}^{\mathcal{C}} \) for \( f \) relative to the basis \( \mathcal{C} \).
$BR
$BR
\( \lbrack f \rbrack_{\mathcal{C}}^{\mathcal{C}} = \) \{ $CinvAC->ans_array(10) \}

$ITEMSEP
$ITEM
Find the transition matrix \( \lbrack I \rbrack_{\mathcal{C}}^{\mathcal{B}} \)
such that \( [v]_{\mathcal{B}} = \lbrack I \rbrack_{\mathcal{C}}^{\mathcal{B}} [v]_{\mathcal{C}} \).
$BR
$BR
\( \lbrack I \rbrack_{\mathcal{C}}^{\mathcal{B}} = \) \{ $BinvC->ans_array(10) \}

$ITEMSEP
$ITEM
Find the transition matrix \( \lbrack I \rbrack_{\mathcal{B}}^{\mathcal{C}} \)
such that \( [v]_{\mathcal{C}} = \lbrack I \rbrack_{\mathcal{B}}^{\mathcal{C}} [v]_{\mathcal{B}} \).
$BR
${BBOLD}Reminder:${EBOLD} \( \lbrack I \rbrack_{\mathcal{B}}^{\mathcal{C}} = \left( \lbrack I \rbrack_{\mathcal{C}}^{\mathcal{B}} \right)^{-1} \).
$BR
$BR
\( \lbrack I \rbrack_{\mathcal{B}}^{\mathcal{C}} = \) \{ $CinvB->ans_array(10) \}

$ITEMSEP
$ITEM
On paper, check that
\(
\lbrack I \rbrack_{\mathcal{B}}^{\mathcal{C}}
\lbrack f \rbrack_{\mathcal{B}}^{\mathcal{B}}
\lbrack I \rbrack_{\mathcal{C}}^{\mathcal{B}}
=
\lbrack f \rbrack_{\mathcal{C}}^{\mathcal{C}}
\).

\{ EndList('OL') \}
END_TEXT
Context()->normalStrings;

ANS( $BinvAB->cmp );
ANS( $CinvAC->cmp );

ANS( $BinvC->cmp );
ANS( $CinvB->cmp );



ENDDOCUMENT();
