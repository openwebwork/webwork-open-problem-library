## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Subspaces)
## Date(July 2013)
## Institution(Hope College)
## Author(Paul Pearson)
## KEYWORDS('linear algebra','vector space','subspaces')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"unionLists.pl",
"unionTables.pl",
"PGgraphmacros.pl",
"parserPopUp.pl",
"PGcourse.pl",
);

$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Vector2D')->strings->add( 'CLOSED' => {caseSensitive=>0} );

do {
$a = random(-1,1,2) * random(2,4,1);
$b = random(-1,1,2) * random(2,4,1);
} until gcd($a,$b) == 1;

#
#  Graph canvas
#
$gr = init_graph(-5,-5,5,5,axes=>[0,0],pixels=>[200,200]);

#
#  Graph labels
#
$gr->lb('reset');
$gr->lb( new Label(4.5,0.35,'x','black','center','middle'));
$gr->lb( new Label(0.35,4.5,'y','black','center','middle'));


#
#  Define new graph colors
#
$gr->new_color("lightblue", 214,230,244); # RGB
$gr->new_color("darkblue",  100,100,255);
$gr->new_color("lightgreen", 187, 255, 153); 
$gr->new_color("darkgreen",    0, 208, 0);
$gr->new_color("lightred",  245,234,229); # light red-purple
$gr->new_color("darkred",   159, 64, 16); # red-brown


#
#  Choose colors
#
$light = "lightgreen";
$dark = "darkgreen";

#
#  Graph the function and the filled region
#
add_functions($gr, "$a*x for x in <-5,5> using color:red and weight:2");
add_functions($gr, "$b*x for x in <-5,5> using color:red and weight:2");

$zero = PopUp(['choose','H union K is empty','H union K is nonempty'],'H union K is nonempty');
$subspace = PopUp(['choose','H union K is a subspace of V','H union K is not a subspace of V'],'H union K is not a subspace of V');


$list1 = List(Vector(1,$a),Vector(1,$b));
$list2 = List("CLOSED");

Context()->texStrings;
BEGIN_TEXT
\{
ColumnTable(
"Let \( V = \mathbb{R}^2 \), let \( H \) be the subset of \( V \) 
of all points on the line \( y = $a x \), and let \( K \) be the 
subset of \( V \) of all points on the line \( y = $b x \).
Is \( H \cup K \) a subspace of the vector space \( V \)?
$BR
$BR".BeginList('OL')."
$ITEM Is \( H \cup K \) nonempty? $BR".$zero->menu()."
$ITEMSEP
$ITEM Is \( H \cup K \) closed under addition?  If it is, enter ${BITALIC}CLOSED${EITALIC}.
If it is not, enter two vectors in \( H \cup K \) whose sum is not in \( H \cup K \), 
using a comma separated list and syntax such as \( \verb+<1,2>, <3,4>+ \).
$BR".$list1->ans_rule(30)."
$ITEMSEP
$ITEM Is \( H \cup K \) closed under scalar multiplication?  If it is, enter ${BITALIC}CLOSED${EITALIC}.
If it is not, enter a scalar in \( \mathbb{R} \) and a vector in \( H \cup K \) whose product is not in \( H \cup K \),
using a comma separated list and syntax such as \( \verb+2, <3,4>+ \).
$BR".$list2->ans_rule(30)."
$ITEMSEP
$ITEM Is \( H \cup K \) a subspace of the vector space \( V \)? 
You should be able to justify your answer by writing a complete, coherent, and detailed proof 
based on your answers to parts 1-3.
$BR".$subspace->menu().EndList('OL')
,
image( insertGraph($gr),height=>200,width=>200,tex_size=>500 )
,
indent => 0, separation => 30, valign => "TOP"
);
\}
END_TEXT
Context()->normalStrings;

install_problem_grader(~~&std_problem_grader);

sub mycheck_add {

  my ($correct, $student, $ansHash, $value) = @_;
  my @s = @{$student};
  my $score = 0;
  my @errors = ();

  return 0 if !defined($s[1]);

  if ( ($s[0]->class eq 'Vector') and ($s[1]->class eq 'Vector') ) {
    my ($ux,$uy) = $s[0]->value;
    my ($vx,$vy) = $s[1]->value;
    my ($wx,$wy) = ($ux + $vx, $uy + $vy);
    my $z = Real(0);

    my $u_inside = 0;
    my $v_inside = 0;
    my $w_outside = 0;
    $u_inside = 1 if (($uy == $a * $ux) or ($uy == $b * $ux));
    $v_inside = 1 if (($vy == $a * $vx) or ($vy == $b * $vx));
    $w_outside = 1 if (($wy != $a * $wx) and ($wy != $b * $wx));
    if ( $u_inside and $v_inside and $w_outside ) { 
      $score = 2; 
    } 
  } 

  return ($score,@errors);

}


ANS($zero->cmp);
ANS($list1->cmp(list_checker=>~~&mycheck_add));
ANS($list2->cmp);
ANS($subspace->cmp);
COMMENT('MathObject version.  Randomly chooses the x- and y-intercepts of the line.  The line never goes through the origin.');
ENDDOCUMENT();