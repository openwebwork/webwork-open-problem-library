## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Linear transformations)
## DBsection(One-to-one and onto)
## Date(July 2013)
## Institution(Hope College)
## Author(Paul Pearson)
## MLT(InjSurMat)
## Level(3)

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"MatrixUnits.pl",
"VectorListCheckers.pl",
"parserRadioButtons.pl",
#"PGchoicemacros.pl",
"unionLists.pl",
"PGcourse.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix')->variables->are('x'=>'Real','y'=>'Real','z'=>'Real');

$U = GL2Z();

$Ared = Matrix([
[2,1,3],
[-1,3,2],
]);

$A = $U * $Ared;

($m,$n) = $A->dimensions;

@a = $A->value;

$f = Matrix([
["$a[0][0]*x+$a[0][1]*y+$a[0][2]*z"],
["$a[1][0]*x+$a[1][1]*y+$a[1][2]*z"],
]);

$k1 = Vector(-1,-1,1);

$i1 = Vector( $A->element(1,1), $A->element(2,1) );
$i2 = Vector( $A->element(1,2), $A->element(2,2) );

$kernel = List($k1);
$image = List($i1,$i2);


$mc = RadioButtons(
    [ "injective", "surjective", "bijective", "none of these" ],
    "surjective",
    last =>     [ "injective", "surjective", "bijective", "none of these" ],
#    labels => [ "injective", "surjective", "bijective", "none of these" ], 
);

Context()->texStrings;
BEGIN_TEXT
Let \( f : \mathbb{R}^{$n} \to \mathbb{R}^{$m} \) be the linear transformation determined by \( f(\vec{x}) = A \vec{x} \) where
\[A=$A\]
\{ BeginList('OL',type=>'a') \}
$ITEM 
Find a formula for \( f(\vec{x}) \).
$BR
$BR
\( \displaystyle f
\left(
\begin{array}{c}
x \\ y \\ z
\end{array}
\right) = 
\)
\{ $f->ans_array(30) \}

$ITEMSEP
$ITEM 
Find bases (i.e., minimal spanning sets) for the kernel and image of \( f \). 
\{helpLink('vector')\}
$BR
\( \mathrm{Kernel}(f) = \mathrm{span} \Big\lbrace \) \{ ans_rule(30) \} \( \Big\rbrace. \)
$BR
\( \mathrm{Image}(f) = \mathrm{span} \Big\lbrace \) \{ ans_rule(30) \} \( \Big\rbrace. \)

$ITEMSEP
$ITEM 
The linear transformation \( f \) is 
$BR
\{ $mc->buttons() \}
\{ EndList('OL') \}
END_TEXT
Context()->normalStrings;

ANS( $f->cmp() );

ANS( $kernel->cmp(list_checker=>~~&basis_checker_list_of_vectors) );
ANS( $image->cmp(list_checker=>~~&basis_checker_list_of_vectors) );

ANS( $mc->cmp());

COMMENT('Surjective.  Kernel is 1 dimensional and image is 2 dimensional.');

ENDDOCUMENT();
