## DESCRIPTION
## Jacobian matrix
## ENDDESCRIPTION

## KEYWORDS('Jacobian','Jacobian matrix')

## DBsubject('Calculus')
## DBchapter('Partial Derivatives')
## DBsection('Functions of Several Variables')
## Date('08/24/2012')
## Author('Paul Pearson')
## Institution('Hope College')
## TitleText1('Multivariable Mathematics')
## EditionText1('Version 3.0')
## AuthorText1('Darin Stephenson')
## Section1('10.2')
## Problem1('3b')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGmatrixmacros.pl",
"parserMultiAnswer.pl",
);

TEXT(beginproblem());

SRAND($psvn);


#############################
#  Setup

Context("Numeric")->variables->are(
x=>'Real',
y=>'Real',
);

# construct the function
$a = random(2,7,1);
do { $b = random(2,3,1); } until ($b != $a);
do { $c = random(2,7,1); } until ($c != $a && $c != $b);
do { $d = random(2,7,1); } until ($d != $a && $d != $b && $d != $c);

$f1 = Formula("$a x^2 + x y + $b y^3");
$f2 = Formula("$c x + $d y + sin(x y)");

# construct the Jacobian
$f1x = $f1->D('x');   $f1y = $f1->D('y');
$f2x = $f2->D('x');   $f2y = $f2->D('y');

# coordinates of the point
$i = random(0,1,1);
if ($i == 0) { 
  $Px = non_zero_random(-5,5,1);
  $Py = 0;
} else {
  $Px = 0;
  $Py = non_zero_random(-5,5,1);
}

# entries of Jacobian at the point
$f1Px = $f1x->eval(x=>$Px,y=>$Py);   $f1Py = $f1y->eval(x=>$Px,y=>$Py);
$f2Px = $f2x->eval(x=>$Px,y=>$Py);   $f2Py = $f2y->eval(x=>$Px,y=>$Py);


$multians1 = MultiAnswer($f1x, $f1y, $f2x, $f2y)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'>
  <tr><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td></tr>
  </table>",
  tex_format =>  "\left\lbrack\begin{array}{rr} %s & %s \\  %s & %s \end{array}\right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..3) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);


$multians2 = MultiAnswer($f1Px, $f1Py, $f2Px, $f2Py)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'>
  <tr><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td></tr>
  </table>",
  tex_format =>  "\left\lbrack\begin{array}{rr} %s & %s \\ %s & %s \end{array}\right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..3) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);


######################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Consider the function
$PAR
\[
f(x,y) = \left( \begin{array}{c} $f1 \\ $f2 \end{array} \right).
\]
$BR
(a) Find a general expression for the Jacobian matrix \( \displaystyle Jf  = \frac{\partial(f_1, f_2)}{\partial(x,y)}. \)
$BR
$BR
\{ 
mbox(
  "\( Jf = \)",
  display_matrix([ [$multians1->ans_rule(20),$multians1->ans_rule(20)], [$multians1->ans_rule(20),$multians1->ans_rule(20)] ], align=>'cc')
);
\}
$BR
(b) Evaluate \( Jf \) at the point \( \boldsymbol{\vec{a}} = \langle $Px, $Py \rangle. \)
$BR
$BR
\{ 
mbox(
  "\( Jf(\boldsymbol{\vec{a}}) = \)",
  display_matrix([ [$multians2->ans_rule(20),$multians2->ans_rule(20)], [$multians2->ans_rule(20),$multians2->ans_rule(20)] ], align=>'cc')
);
\}
END_TEXT
Context()->normalStrings;

########################
#  Answer evaluation

#install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 1;

ANS( $multians1->cmp() );
ANS( $multians2->cmp() );


COMMENT("MathObject version.  (Uses the same randomization as 10-02-Jacobian-06b.pg)");

ENDDOCUMENT();


