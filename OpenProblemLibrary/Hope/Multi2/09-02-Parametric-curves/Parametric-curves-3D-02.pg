## DESCRIPTION
## Parametric curve
## ENDDESCRIPTION

## KEYWORDS('parametric curve')

## DBsubject('Calculus')
## DBchapter('Vector Functions')
## DBsection('Vector Functions and Space Curves')
## Date('01/01/2013')
## Author('Paul Pearson')
## Institution('Hope College')
## TitleText1('Multivariable Mathematics')
## EditionText1('Version 3.0')
## AuthorText1('Darin Stephenson')
## Section1('9.2')
## Problem1('')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
);

TEXT(beginproblem());


#############################
#  Setup

Context("Vector")->variables->are(t=>'Real');

# make the limits larger than $a+1
# so that students who enter x=t, y=sqrt(...)
# or x=sqrt(...), y=t get marked incorrect.
Context()->variables->set(t=>{limits=>[-10,-8]}); 
# provide a meaningful error message
Context()->{error}{msg}{"Can't generate enough valid points for comparison"} 
  = "Hint: use sines and cosines.";

$a = random(2,9,1);
do { $b = random(2,9,1); } until ($b != $a);
do { $c = random(2,9,1); } until ($c != $a && $c != $b);
do { $r = random(2,9,1); } until ($r != $a && $r != $b && $r != $c);

$answer1 = Compute("< sqrt($r)*cos(t), 0, sqrt($r) sin(t)>");

$answer2 = Compute("< sqrt($r)*cos(t), (1-$a*sqrt($r)*cos(t)-$c*sqrt($r)*sin(t))/$b, sqrt($r) sin(t)>");


######################
#  Main text

Context()->texStrings;
BEGIN_TEXT
(a) Find a vector-parametric equation 
\( \vec{r}_1(t) = \langle x(t), y(t), z(t) \rangle \)
for the shadow of the circular cylinder \( x^2 + z^2 = $r \) 
in the \( xz \)-plane.
$BR
$BR
Shadow: \( \vec{r}_1(t) = \) 
\{ ans_rule(50) \}
for \( 0 \leq t \leq 2\pi \).
$BR
$BR
(b) Find a vector-parametric equation 
for intersection of the circular cylinder 
\( x^2 + z^2 = $r \) and the plane 
\( $a x + $b y + $c z = 1 \).
$BR
$BR
Intersection: \( \vec{r}_2(t) = \) 
\{ ans_rule(50) \}
for \( 0 \leq t \leq 2\pi \).
END_TEXT
Context()->normalStrings;


########################
#  Answer evaluation


$showPartialCorrectAnswers = 1;

sub mycheck1 {
  my ($correct, $student, $ansHash) = @_;
  $xstu = $student . i;
  $ystu = $student . j;
  $zstu = $student . k;
  return 0 unless $xstu->isFormula;
  return 0 unless $ystu == 0;
  return 0 unless $zstu->isFormula;
  return 0 unless $xstu->eval(t=>0) == $xstu->eval(t=>2*pi);
  return 0 unless $zstu->eval(t=>0) == $zstu->eval(t=>2*pi);
  return 0 unless ( $r-($xstu)**2 == ($zstu)**2 );
  return 1;
}

sub mycheck2 {
  my ($correct, $student, $ansHash) = @_;
  $xstu = $student . i;
  $ystu = $student . j;
  $zstu = $student . k;
  return 0 unless $xstu->isFormula;
  return 0 unless $ystu->isFormula;
  return 0 unless $zstu->isFormula;
  return 0 unless $xstu->eval(t=>0) == $xstu->eval(t=>2*pi);
  return 0 unless $ystu->eval(t=>0) == $ystu->eval(t=>2*pi);
  return 0 unless $zstu->eval(t=>0) == $zstu->eval(t=>2*pi);
  return 0 unless ( $r-($xstu)**2 == ($zstu)**2 );
  return 0 unless ( 1-($a*($xstu)) == $b*($ystu)+$c*($zstu) );
  return 1;
}

ANS($answer1->cmp( checker=>~~&mycheck1 ) );
ANS($answer2->cmp( checker=>~~&mycheck2 ) );

COMMENT("MathObject version");

ENDDOCUMENT();
