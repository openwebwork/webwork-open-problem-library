# DESCRIPTION
# Sigma notation
# ENDDESCRIPTION


## DBsubject(Calculus - single variable)
## DBchapter(Integrals)
## DBsection(Sigma notation)
## Date(11/01/2012)
## Institution(Hope College)
## Author(Paul Pearson)
## KEYWORDS('calculus', 'sigma notation')


###########################################
#  Initialization

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"PGunion.pl",
"PGcourse.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###########################################
#  Setup

Context("Numeric")->variables->are(k=>['Real', limits=>[1,20], resolution=>1]);


$start = 0; 
$stop = random(6,10,1);

$k1 = Real("$start");
$k2 = Real("$stop");
$f = Formula("(-1)^(k+1) * 2^k");

@terms = ();
$j = 0;
foreach my $k ($k1..$k2) {
  $terms[$j] = (-1)**($k + 1) * (2**($k));
  $j = $j + 1;
}

$sum = join('+',@terms);
$sum =~ s/^~~+//; # remove leading + if it exists

$multians = MultiAnswer($k2,$k1,$f)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  format =>  "<table cellspacing=10><tr>
    <td>
      <table cellpadding=5>
      <tr><td>%s</td></tr> 
      <tr><td>%s</td></tr>
      </table> 
    </td>
    <td>%s</td>
  </tr></table>",
  tex_format =>  "\displaystyle\sum^{%s}_{k=%s} \left( %s \right)",

  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my @c = ();
      my @s = ();
      ( $c[0], $c[1], $c[2] ) = @{$correct};
      ( $s[0], $s[1], $s[2] ) = @{$student};

      # warn $s[0], $s[1], $s[2]; # for debugging

      Value::Error('All answer blanks must be nonempty and have answers of the appropriate type') if 
      !( $c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) && $c[2]->typeMatch($s[2]) );

      Value::Error('Your sum does not have the correct number of terms') if ( ($c[0] - $c[1]) != ($s[0] - $s[1]) );

      my $j = 0;
      my @cor_terms = ();
      foreach my $i ($c[1]..$c[0]) {
         $cor_terms[$j] = $c[2]->eval(k=>$i);
         #warn $cor_terms[$j];
         $j = $j + 1;
      }

      my $j = 0;
      my @stu_terms = ();
      foreach my $i ($s[1]..$s[0]) {
         $stu_terms[$j] = $s[2]->eval(k=>$i);
         #warn $stu_terms[$j];
         $j = $j + 1;
      }

      foreach my $i (0..$#cor_terms) { 
          #warn $cor_terms[$i] != $stu_terms[$i];
          if ($cor_terms[$i] != $stu_terms[$i]) { return 0; }
      }
      return 1;
      
  }
);

# 
#  Display the fraction and answer blanks nicely
#
Context()->texStrings;
if ($displayMode eq 'TeX') {
  $sigma =
  "\( {\displaystyle\sum}^{".$multians->ans_rule(5)."}_{k =".$multians->ans_rule(5)."} ".$multians->ans_rule(20)." \)";
} else {
  $sigma =
  $BCENTER.ColumnTable(
  $multians->ans_rule(3).$BR."\(\displaystyle \sum\)".$BR."\(k=\)".$multians->ans_rule(3),
  $multians->ans_rule(20),
  indent => 0, separation => 10, valign => "MIDDLE"
  ).$ECENTER;
}
Context()->normalStrings;


###########################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Write the sum \( $sum \) using sigma notation.
The form of your answer will depend on your choice 
of the lower limit of summation.
$PAR
$sigma
END_TEXT
Context()->normalStrings;

###########################################
#  Answer evaluation

ANS( $multians->cmp() );

COMMENT('MathObject version.  Allows the student to choose the starting and ending values for the index k.  Uses parserMultiAnswer.pl.  Alternating sign with positive start value.');

ENDDOCUMENT();
