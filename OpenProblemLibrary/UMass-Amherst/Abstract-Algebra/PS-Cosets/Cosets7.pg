## DBsubject('Abstract Algebra')
## DBchapter('Groups')
## DBsection('Cosets, Lagrange theorem and Normality')
## KEYWORDS('cosets, coset representatives')
## Level(2)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Siman Wong and Patrick O'Brien')
## Institution('University of Massachusetts Amherst')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGstandard.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
#"parserRadioButtons.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

$r1 = random(0,28,1);
$r2 = random(0,28,1);
while($r1 == $r2){
    $r2 = random(0,28,1);
}

if($r1 == 0){
    @set1 = (33, 16,  1, 2, 5, 7);
}
elsif($r1 == 1){
    @set1 = (34, 13,  1, 3, 7, 9);
}
elsif($r1 == 2){
    @set1 = (35, 4,  1, 2, 3, 6);
}
elsif($r1 == 3){
    @set1 = (36, 25,  1, 5, 7, 11);
}
elsif($r1 == 4){
    @set1 = (37, 34,  1, 2, 3, 5);
}
elsif($r1 == 5){
    @set1 = (38, 11,  1, 3, 5, 9, 13, 27);
}
elsif($r1 == 6){
    @set1 = (39, 23,  1, 2, 4, 8);
}
elsif($r1 == 7){
    @set1 = (40, 17,  1, 3, 7, 13);
}
elsif($r1 == 8){
    @set1 = (41, 3,  1, 2, 4, 7, 8);
}
elsif($r1 == 9){
    @set1 = (42, 37,  1, 5, 11, 13);
}
elsif($r1 == 10){
    @set1 = (43, 41,  1, 2, 3, 6, 7, 9);
}
elsif($r1 == 11){
    @set1 = (44, 9,  1, 3, 7, 13);
}
elsif($r1 == 12){
    @set1 = (45, 34,  1, 2, 7, 11);
}
elsif($r1 == 13){
    @set1 = (48, 13,  1, 5, 7, 11);
}
elsif($r1 == 14){
    @set1 = (49, 22,  1, 2, 3, 4, 5, 6);
}
elsif($r1 == 15){
    @set1 = (50, 41,  1, 3, 7, 9);
}
elsif($r1 == 16){
    @set1 = (51, 8,  1, 5, 11, 19);
}
elsif($r1 == 17){
    @set1 = (52, 21,  1, 3, 7, 9, 27, 29);
}
elsif($r1 == 18){
    @set1 = (53, 44,  1, 2, 4, 5);
}
elsif($r1 == 19){
    @set1 = (54, 37,  1, 5, 7, 11, 13, 17);
}
elsif($r1 == 20){
    @set1 = (55, 51,  1, 2, 3, 4);
}
elsif($r1 == 21){
    @set1 = (56, 19,  1, 5, 11, 29);
}
elsif($r1 == 22){
    @set1 = (57, 26,  1, 2, 4, 5, 8, 10);
}
elsif($r1 == 23){
    @set1 = (58, 49,  1, 3, 5, 15);
}
elsif($r1 == 24){
    @set1 = (60, 43,  1, 11, 13, 23);
}
elsif($r1 == 25){
    @set1 = (61, 42,  1, 2, 3, 6);
}
elsif($r1 == 26){
    @set1 = (62, 57,  1, 3, 7, 9, 19);
}
elsif($r1 == 27){
    @set1 = (63, 20,  1, 2, 4, 5, 8, 10);
}
elsif($r1 == 28){
    @set1 = (64, 39,  1, 3, 9, 11);
}

$n1 = $set1[0];
$a1 = $set1[1];

@inter1 = ();
$count1 = 0;

for($i=2;$i<scalar(@set1);$i++){
    @inter1[$count1] = $set1[$i];
    $count1++;
}

$ans1 = join(", ",@inter1);
$ans1 = Compute("$ans1");


###########################################################


if($r2 == 0){
    @set2 = (33, 16,  1, 2, 5, 7);
}
elsif($r2 == 1){
    @set2 = (34, 13,  1, 3, 7, 9);
}
elsif($r2 == 2){
    @set2 = (35, 4,  1, 2, 3, 6);
}
elsif($r2 == 3){
    @set2 = (36, 25,  1, 5, 7, 11);
}
elsif($r2 == 4){
    @set2 = (37, 34,  1, 2, 3, 5);
}
elsif($r2 == 5){
    @set2 = (38, 11,  1, 3, 5, 9, 13, 27);
}
elsif($r2 == 6){
    @set2 = (39, 23,  1, 2, 4, 8);
}
elsif($r2 == 7){
    @set2 = (40, 17,  1, 3, 7, 13);
}
elsif($r2 == 8){
    @set2 = (41, 3,  1, 2, 4, 7, 8);
}
elsif($r2 == 9){
    @set2 = (42, 37,  1, 5, 11, 13);
}
elsif($r2 == 10){
    @set2 = (43, 41,  1, 2, 3, 6, 7, 9);
}
elsif($r2 == 11){
    @set2 = (44, 9,  1, 3, 7, 13);
}
elsif($r2 == 12){
    @set2 = (45, 34,  1, 2, 7, 11);
}
elsif($r2 == 13){
    @set2 = (48, 13,  1, 5, 7, 11);
}
elsif($r2 == 14){
    @set2 = (49, 22,  1, 2, 3, 4, 5, 6);
}
elsif($r2 == 15){
    @set2 = (50, 41,  1, 3, 7, 9);
}
elsif($r2 == 16){
    @set2 = (51, 8,  1, 5, 11, 19);
}
elsif($r2 == 17){
    @set2 = (52, 21,  1, 3, 7, 9, 27, 29);
}
elsif($r2 == 18){
    @set2 = (53, 44,  1, 2, 4, 5);
}
elsif($r2 == 19){
    @set2 = (54, 37,  1, 5, 7, 11, 13, 17);
}
elsif($r2 == 20){
    @set2 = (55, 51,  1, 2, 3, 4);
}
elsif($r2 == 21){
    @set2 = (56, 19,  1, 5, 11, 29);
}
elsif($r2 == 22){
    @set2 = (57, 26,  1, 2, 4, 5, 8, 10);
}
elsif($r2 == 23){
    @set2 = (58, 49,  1, 3, 5, 15);
}
elsif($r2 == 24){
    @set2 = (60, 43,  1, 11, 13, 23);
}
elsif($r2 == 25){
    @set2 = (61, 42,  1, 2, 3, 6);
}
elsif($r2 == 26){
    @set2 = (62, 57,  1, 3, 7, 9, 19);
}
elsif($r2 == 27){
    @set2 = (63, 20,  1, 2, 4, 5, 8, 10);
}
elsif($r2 == 28){
    @set2 = (64, 39,  1, 3, 9, 11);
}

$n2 = $set2[0];
$a2 = $set2[1];

@inter2 = ();
$count2 = 0;

for($i=2;$i<scalar(@set2);$i++){
    @inter2[$count2] = $set2[$i];
    $count2++;
}

$ans2 = join(", ",@inter2);
$ans2 = Compute("$ans2");


BEGIN_TEXT

Find a complete set of coset representatives of the subgroup \(\langle $a1 \rangle\) in \(U($n1)\). Enter your answer as a comma separated list; make sure that EACH coset representative you enter $BR $BR
\( \)\( \)\( \)  \(\ast\) is \(>0\) and \(< $n1\), and $BR
\( \)\( \)\( \)  \(\ast\) is the smallest possible value in this range, i.e. if you enter the value \(A\), there is not another value \(0<B<$n\)  with \(B<A\)  such that \(A, B\) represents the same coset. $BR $BR

\{ans_rule(10)\} $BR $BR

Find a complete set of coset representatives of the subgroup \(\langle $a2 \rangle\) in \(U($n2)\). Enter your answer as a comma separated list; make sure that EACH coset representative you enter $BR $BR
\( \)\( \)\( \)  \(\ast\) is \(>0\) and \(< $n2\), and $BR
\( \)\( \)\( \)  \(\ast\) is the smallest possible value in this range, i.e. if you enter the value \(A\), there is not another value \(0<B<$n\)  with \(B<A\)  such that \(A, B\) represents the same coset. $BR $BR

\{ans_rule(10)\} $BR $BR




END_TEXT

ANS( $ans1->cmp(unordered=>1) );
ANS( $ans2->cmp(unordered=>1) );



ENDDOCUMENT();    