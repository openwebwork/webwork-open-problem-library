## DBsubject('Abstract Algebra')
## DBchapter('Rings')
## DBsection('Quotient Rings and Polynomial Rings')
## KEYWORDS('polynomial rings, factorizations')
## Level(3)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Daniel Nichols and Siman Wong')
## Institution('University of Massachusetts Amherst')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"parserMultiAnswer.pl",
"algebraMacros.pl"
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

# for this version of the problem, we use nonrandom modulus 8
$modulus = 8;

# for this version of the problem, we don't randomize the polynomial; we just use x^2 - 1
$fB = 0;
$fC = -1;

$f = Compute( "x^2 + $fB x + $fC" )->reduce;

@roots = ( 1, 7, 3, 5 );


$ans[ 0 ] = List( @roots );
@factors = map{ Compute( "x - $_" ) } @roots;
push @factors, map{ Formula( "" ) } ( 1 .. 6 );

# multianswer checks the student's factorization
$factorsAnswer = MultiAnswer( @factors )->with(
	singleResult => 0,
	allowBlankAnswers => 1,
	checkTypes => 0,
	checker => sub {
		my ( $correct, $student, $self ) = @_;
	    	
		my @result = ( ( 0 ) x 10 );

		# check the number of factors and make sure no rows are skipped
		my @entries = grep { $$student[ $_ ] } ( 0 .. @$student - 1 );
		for ( 0 .. @entries - 1 )
		{
			if( $entries[ $_ ] != $_ )
			{
				$self->setMessage( $_ + 1, "Use the top rows to enter your factorizations; don't leave blanks" );
				return ~~@result;
			}
		}
		
		# make sure there factors come in pairs
		if( scalar @entries % 2 )
		{
			$self->setMessage( 1 + @entries, "Enter your factors in pairs" );
			return ~~@result;
		}
		
		# check each of the student's factors to make sure they're monic linear (or blank)
		for ( 0 .. @entries - 1 )
		{
			if( !Value::isFormula( $$student[ $_ ] ) || $$student[ $_ ]->D( 'x' ) != Formula( "1" ) )
			{
				$self->setMessage( $_ + 1, "at least one of your answers is not a monic linear function" );
				return ~~@result;
			}
		}

		
		# answer boxes after the first 4 are correct if they're blank
		@result[ 4 .. 9 ] = ( 1 ) x 6;
		
		my @studentRoots = map { $$student[ $_ ]->eval( x => 0 ) % $modulus } ( 0 .. @entries - 1 ); # extract roots from the student's factors

		
		# check to see which of the factorizations actually work
		# that is, sum and product match the coefficients of f
		foreach my $i ( 0 .. @entries / 2 - 1 )
		{
			if( ( $studentRoots[ 2*$i ] + $studentRoots[ 2*$i + 1 ] ) % $modulus == $fB && ( $studentRoots[ 2*$i ] * $studentRoots[ 2*$i + 1 ] ) % $modulus == $fC )
			{
				@result[ 2*$i .. 2*$i + 1 ] = ( 1, 1 );
			}
		}
		
		# make sure there are no duplicate factorizations
		for my $i ( 1 .. @entries / 2 - 1 )
		{
			for my $j ( 0 .. $i - 1 )
			{
				if( ( $studentRoots[ 2*$i ] == $studentRoots[ 2*$j ]
					&& $studentRoots[ 2*$i + 1 ] == $studentRoots[ 2*$j + 1 ] )
				||  ( $studentRoots[ 2*$i ] == $studentRoots[ 2*$j + 1 ]
					&& $studentRoots[ 2*$i + 1 ] == $studentRoots[ 2*$j ] ) )
				{
					$self->setMessage( 2*$i + 1, "Your factorizations must be different" );
					@result[ 2*$i .. 2*$i + 1 ] = ( 0, 0 );
				}
			}
		}
		
		return ~~@result;
	}
);


	

TEXT(EV3(<<'EOT'));

(a) Find all roots of \( $f \) in \( \{ cyclic( $modulus ) \} [x] \). $BR
\{ ans_rule( 15 ) \} $BR $BR

(b) Find all factorizations of \( $f \) of the form \( ( x - A )( x - B ) \) in the ring \( \{ cyclic( $modulus ) \} [x] \). There may be fewer than 5 distinct factorizations; enter your factorization(s) from the top row down, and leave blank row(s) below if you don't use all 5. $BR $BR
\( $f = ( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( )( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( ) \) $BR
\( \phantom{ $f } = ( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( )( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( ) \) $BR
\( \phantom{ $f } = ( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( )( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( ) \) $BR
\( \phantom{ $f } = ( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( )( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( ) \) $BR
\( \phantom{ $f } = ( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( )( \) \{ $factorsAnswer->ans_rule( 5 ) \} \( ) \) $BR


EOT


ANS( $ans[ 0 ]->cmp( checker => ~~&modChecker ) );

ANS( $factorsAnswer->cmp );


COMMENT( "NON-RANDOMIZED version of RingsQuotientsPolynomials4.pg" );


ENDDOCUMENT(); 
