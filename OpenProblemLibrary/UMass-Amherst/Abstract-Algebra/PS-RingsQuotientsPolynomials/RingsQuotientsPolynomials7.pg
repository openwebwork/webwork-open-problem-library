## DBsubject('Abstract Algebra')
## DBchapter('Rings')
## DBsection('Ideals and Homomorphisms')
## KEYWORDS('quotient rings, polynomial rings, integral domains')
## Level(3)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Daniel Nichols and Siman Wong')
## Institution('University of Massachusetts Amherst')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"parserPopUp.pl",
"parserMultiAnswer.pl",
"algebraMacros.pl"
);

sub residue
{
	my ( $q, $n ) = @_;
	for ( 0 .. $n - 1 )
	{
		return $_ if ( $_ ** 2 ) % $n == $q % $n;
	}
	return -1;
}


TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

# choose random small prime modulus
@chooseN = ( 3, 5, 7 );
$n = $chooseN[ random( 0, @chooseN - 1, 1 ) ];

# choose random coefficients, make quadratic
$a = random( 1, $n - 1, 1 );
$b = random( 1, $n - 1, 1 );
$f = Compute( "x^2 + $a x + $b" )->reduce;

# determine if the discriminant is a residue
$disc = $a ** 2 - 4 * $b;
$r = residue( $disc, $n );


if( $r < 0 )
{
	# it's a field if the discriminant is NOT a square
	$correct = "is a field";
	# inverse of x is -(b^-1)x - a*b^-1
	$answerA = -( $b ** ( $n - 2 ) ) % $n ;
	$answerB = $a * $answerA % $n;
}
else
{
	# it's not a field if the discriminant is a square
	# whether there's a nilpotent element or not is determined by whether the modulus divides the discriminant
	$correct = ( $disc ) % $n ? "is not a field and DOES NOT HAVE a nilpotent element" : "is not a field and HAS a nilpotent element";
	# monic linear zero-divisors are x - ( -a +/- d ) / 2
	$answerA = 1;
	$answerB = ( ( $a - $r ) * ( $n + 1 ) / 2 ) % $n;
	$answerB2 = ( ( $a + $r ) * ( $n + 1 ) / 2 ) % $n;
}

# pop-up menu for first question
$ringOrField = PopUp(
	[ "is a field", "is not a field and DOES NOT HAVE a nilpotent element", "is not a field and HAS a nilpotent element" ],
	$correct,
);

$ans[ 1 ] = Compute( "$answerA x + $answerB" )->reduce;


TEXT(EV3(<<'EOT'));

Consider the quotient ring \( \{ cyclic( $n ) \} [x] / $f \). $BR $BR

(a) This ring \{ $ringOrField->menu( ) \} $BR $BR


(b) In the answer box below, enter
<ul>
<li>the inverse of \( x \) (as a degree 1 polynomial) if the ring is a field</li>
<li>a degree 1 monic polynomial that is a zero divisor, if this ring is not a field</li>
</ul>
\{ ans_rule( 10 ) \} $BR


EOT

ANS( $ringOrField->cmp );
ANS( $ans[ 1 ]->cmp( checker => sub {
	my ( $correct, $student, $ansHash ) = @_;
	
	if( !Value::isFormula( $student ) || !$student->D( 'x' )->isConstant )
	{
		Value->Error( "your answer is not a degree 1 polynomial" );
		return 0;
	}
	
	my $studentA = $student->D( 'x' )->eval( x => 0 ) % $n;
	my $studentB = $student->eval( x => 0 ) % $n;
	
	return 0 if $studentA != $answerA || ( $studentB != $answerB && $studentB != $answerB2 );
	
	return 1;

} ) );


COMMENT( "" );


ENDDOCUMENT(); 
