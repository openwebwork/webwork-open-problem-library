## DBsubject(Number theory)
## DBchapter('Congruences')
## DBsection('Chinese remainder theorem')
## KEYWORDS('Chinese remainder theorem')
## Level(3)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Siman Wong and Patrick O'Brien')
## Institution('University of Massachusetts Amherst')



DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);




TEXT(beginproblem());
$showPartialCorrectAnswers = 0;


#
#  This Chinese remainder theorem problem deals with a system of three
#  linear congruences.  We make sure that one of the constants is not
#  prime to another one of the modulus -- this of course does not affect
#  the solvability of the system.
#


@set1 = (11,13,17,19);
@set2 = (3,5,7);

#
# pick a prime from each of the three lists
#

$r1 = random(0,3,1);
$p1 = $set1[$r1];
$b1 = random(1,$p1-1,1);

$r4 = random(1,2,1);

if ( $r4==1 ) {
  $r3 = random(0,2,1);
  $p3 = $set2[$r3];
  $n3 = 2 * $p3;
  $b3 = random(1,$n3-1,1) + random(-1,0,1)*$n3;

  $r2 = random(0,3,1);
  $n2 = $set1[$r2];
  $b2 = random(1,$n2-1,1);
  while( gcd($b2, $n3)>1 ) {
    $b2 = random(1,$n2-1,1);
  }
}
else {
  $r2 = random(0,2,1);
  $p2 = $set2[$r2];
  $n2 = 2 * $p2;
  $b2 = random(1,$n2-1,1) + random(-1,0,1)*$n2;

  $r3 = random(0,3,1);
  $n3 = $set1[$r3];
  $b3 = random(1,$n3-1,1);
  while( gcd($b3, $n2)>1 ) {
    $b3 = random(1,$n3-1,1);
  }
}


$m = $p1 * $n2 * $n3;

for($i=1; $i<$m; $i++) {
  if ( ($i % $p1 == $b1)  & ( ($i-$b2) % $n2 == 0)  & ( ($i-$b3) % $n3 == 0) ) {
    $answer = $i;
  }
}


TEXT(EV3(<<'EOT'));
Find the smallest positive integer solution to the following system of congruence:  $BR $BR


\(x \equiv $b1 \pmod{$p1}\) $BR $BR
\(\phantom{x } \equiv $b2 \pmod{$n2}\) $BR $BR
\(\phantom{x } \equiv $b3 \pmod{$n3}\) $BR $BR
\(x =\) \{ ans_rule(10) \}


EOT

ANS(str_cmp($answer) );



ENDDOCUMENT(); 
