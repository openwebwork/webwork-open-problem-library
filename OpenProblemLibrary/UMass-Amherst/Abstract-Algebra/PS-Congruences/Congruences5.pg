## DBsubject('Number theory')
## DBchapter('Congruences')
## DBsection('Linear congruences')
## KEYWORDS('linear congruences')
## Level(3)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Siman Wong')
## Institution('University of Massachusetts Amherst')



DOCUMENT();        

loadMacros(
"PG.pl",
"PGstandard.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"algebraMacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;


#
#  In this problem we solve two (separate) linear congruences with the same
#  modulus.  In the first problem the multiple is prime to the modulus, and
#  so there is a unique solution modulo M.  In the second problem it is not.
#

@set1 = (2, 3);
@set2 = (5, 7, 11);
@set3 = (13, 17, 19);

#
# pick a prime from each of the three lists
#

$r1 = random(0,1,1);
$r2 = random(0,2,1);
$r3 = random(0,2,1);

$p1 = $set1[$r1];
$p2 = $set2[$r2];
$p3 = $set3[$r3];

$m  = $p1 * $p2 * $p3;

#
# For part one we generate a scalar multiple that is prime to m
#

$a1  = random(1, $m-1 ,1);
while( gcd($a1, $m) > 1 ) {
 $a1  = random(1, $m-1 ,1);
}
$b1  = random(1, $n-1 ,1);

#
# solve   a1 x = b1 (mod m) using brute force search
#

for($i=1; $i<$m; $i++) {
  $t = ($a1*$i) % $m;
  if($t == $b1) {
    $answer1 = $i;
  }
}


#
# For part two we generate a scalar multiple a2  and a constant  b2 
# whose gcd with m are p1
#

$m23 = $p2 * $p3; 
$m13 = $p1 * $p3; 
$c2 = random(1, $m23 - 1, 1);
while( gcd($c2, $m13) > 1 ) {
  $c2 = random(1, $m23 - 1, 1);
}
$a2 = $c2 * $p1;

$d2 = random(1, $m23 - 1, 1);
while( gcd($c2, $m13) > 1 ) {
  $d2 = random(1, $m13 - 1, 1);
}
$b2 = $d2 * $p1;


#
# solve   a2 x = b2 (mod m) using brute force search
#

@ans2 = ();
$count = 0;

for($i=1; $i<$m; $i++) {
  $t = ($a2*$i) % $m;
  if($t == $b2) {
    @ans2[$count] = $i;
    $count++;
  }
}
$answer2 = join(",", @ans2);
$answer2 = Compute($answer2);


BEGIN_TEXT


Solve each of the following congruences. Make sure that the number you 
enter is in the range 
\(
  [0, M-1]
\)
where \(M\) is the modulus of the congruence.
If there is more than one solution, enter the answer as a list separated by 
commas. If there is no answer, enter N. 

$BR

(a) \( $a1 x = $b1 \pmod{ $m } \)

$BR

\( x = \)   \{ ans_rule(10) \} $BR $BR


(b) \( $a2 x = $b2 \pmod{ $m }  \)

$BR


\( x = \)  \{ ans_rule(10) \} $BR $BR

END_TEXT

ANS( str_cmp($answer1) );
ANS( $answer2 ->cmp(unordered=>1) );



COMMENT("The first part has a unique solution, and the second part has more
than one solution.");



ENDDOCUMENT();       