## DBsubject(Abstract algebra)
## DBchapter(Rings)
## DBsection(Units and zero divisors)
## Institution(University of Massachusetts Amherst)
## Author(Daniel Nichols and Siman Wong)
## Level(2)
## MO(1)
## KEYWORDS('units, zero divisors')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

Context("Numeric");

# here are the 3 lists of primes we'll use to make a composite modulus
#@choosePrimes = ( [ 2, 3 ], [ 2, 3, 5 ], [ 3, 5, 7 ] );
@choosePrimes = ( [ 2 ], [ 2, 3 ], [ 3, 5 ] );

# randomly pick one prime from each of the lists, store them in a list
@primes = map { $$_[ random( 0, -1 + @$_, 1 ) ] } @choosePrimes;

# modulus is product of the primes we picked
$modulus = 1;
$modulus *= $_ foreach @primes;

# sort ring into units (coprime) and zero divisors (not coprime)
@units = grep { my $n = $_; !scalar grep { !( $n % $_ ) } @primes } ( 1 .. $modulus - 1 );
@zeroDivisors = grep { my $n = $_; scalar grep { !( $n % $_ ) } @primes } ( 2 .. $modulus - 2 );
	
$ans[0] = List( @units );
$ans[1] = List( @zeroDivisors );

Context()->texStrings;
BEGIN_TEXT;

Denote by \( \{ ZmodnZ( $modulus ) \} \) the ring whose elements are the integers modulo \( $modulus \). $PAR

(a) Determine all units of \( \{ ZmodnZ( $modulus ) \} \). Enter them as a comma-separated list. $BR
\{ ans_rule( 40 ) \} $PAR

(b) Determine all nonzero* zero-divisors of \( \{ ZmodnZ( $modulus ) \} \). Enter them as a comma-separated list. $BR
\{ ans_rule( 40 ) \} $PAR

*(Some authors define zero to be a zero-divisor, others disagree.)

END_TEXT
Context()->normalStrings;

ANS($ans[0]->cmp());
ANS($ans[1]->cmp());


ENDDOCUMENT(); 
