## DBsubject('Abstract Algebra')
## DBchapter('Rings')
## DBsection('Units and zero divisors')
## KEYWORDS('commutativity, zero-divisors')
## Level(4)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Daniel Nichols and Siman Wong')
## Institution('University of Massachusetts Amherst')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"parserMultiAnswer.pl",
"unionTables.pl",
"algebraMacros.pl"
);

Context()->strings->add( Y => {} );
Context()->strings->add( N => {} );

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

# here are the 3 lists of primes we'll use to make a composite modulus
@choosePrimes = ( [ 2, 3 ], [ 2, 3, 5 ], [ 3, 5, 7 ] );

# randomly pick one prime from each of the lists, store them in a list
@primes = map { $$_[ random( 0, -1 + @$_, 1 ) ] } @choosePrimes;

# modulus is product of the primes we picked
$modulus = 1;
$modulus *= $_ foreach @primes;

# domain will be a 4-element subset of { -10, ..., 10 }
# choose domain by removing random elements from the set
@domain = ( -10 .. 10 );
splice( @domain, random( 0, @domain - 1, 1 ), 1 ) while @domain > 4;
$domainList = List( @domain );

# ring is commutative
$ans[ 0 ] = Compute( "Y" );

# number of units in R is ( #units in Z/n )^( #domain )
$unitsZn = 2 + grep { my $n = $_; !scalar grep { !( $n % $_ ) } @primes } ( 2 .. $modulus - 2 );
$ans[ 1 ] = Compute( $unitsZn ** @domain );


# this multiAnswer evaluates the student's function
# for it to be a zero-divisor, we need at least one (but not all) elements of the image to have
# nontrivial gcd with the modulus
# the "correct" answer passed here is just one example, there are many more correct answers
$ansZeroDivisor = MultiAnswer( Compute( $primes[ 0 ] ), Compute( 0 ), Compute( 0 ), Compute( 0 ) )->with(
	singleResult => 1,
	checker => sub{
		my ( $correct, $student, $self, $ansHash ) = @_;
		
		# fail if all values are congruent to 0 (function is trivial)
		@nonZero = grep{ $_ % $modulus } @$student;
		return 0 if !@nonZero;
		
		# determine number of elements with nontrivial gcd
		@zD = grep{ my $n = $_; scalar grep{ !( $n % $_ ) } @primes } @nonZero;
		
		# function is a zero-divisor if at least one f(a) is a zero-divisor
		return @zD ? 1 : 0;
    }
);


TEXT(EV3(<<'EOT'));

Denote by \( R \) the set of all functions from the set \( $LB $domainList $RB \)  to the ring \( \{ cyclic( $modulus ) \} \).  FACT: \( R \) becomes a ring under the following operations: $BR $BR

\[ f + g: a \mapsto f(a) + g(a) \] $BR
\[ f * g: a \mapsto f(a)g(a) \] $BR

(a) Is \( R \) a commutative ring? (Y/N) \{ ans_rule( 10 ) \} $BR $BR

(b) How many units are there in \( R \)? \{ ans_rule( 10 ) \} $BR $BR

(c) Give an example of a non-zero \( f \in R \) that is a zero-divisor by filling in the following table: $BR $BR

\{ 
BeginTable( border=>1, tex_border=>"1pt", spacing=>0, padding=>4 ) .
AlignedRow( [ "\( x \)", "\( f(x) \)" ], align=>CENTER, separation=>0 ) .
AlignedRow( [ "\( $domain[ 0 ] \)", $ansZeroDivisor->ans_rule( 5 ) ], align=>CENTER, separation=>0 ) .
AlignedRow( [ "\( $domain[ 1 ] \)", $ansZeroDivisor->ans_rule( 5 ) ], align=>CENTER, separation=>0 ) .
AlignedRow( [ "\( $domain[ 2 ] \)", $ansZeroDivisor->ans_rule( 5 ) ], align=>CENTER, separation=>0 ) .
AlignedRow( [ "\( $domain[ 3 ] \)", $ansZeroDivisor->ans_rule( 5 ) ], align=>CENTER, separation=>0 ) .
EndTable( )
\}

EOT

ANS( $ans[0]->cmp );
ANS( $ans[1]->cmp );
ANS( $ansZeroDivisor->cmp ); 

SOLUTION(EV3(<<'END_SOLUTION'));
$SOLUTION $BR

(b) A unit in \( R \) must be a function mapping each element of the domain to a unit in the range. \( \{ cyclic( $modulus ) \} \) has \( $unitsZn \) units. So we have \( \{ scalar @domain \} \) elements of the domain and \( $unitsZn \) choices for each one. Therefore the number of units in \( R \) is \( $unitsZn^{\{scalar @domain\}} = \{ $unitsZn ** @domain \}\). $PAR

(c) A zero divisor in \( R \) is a function that maps at least one element of the domain (but not all elements of the domain) to a zero-divisor in \( \{ cyclic( $modulus ) \} \). The "correct answer" shown is just an example, there are many other possible zero-divisors.

END_SOLUTION

COMMENT( "Complete solution included" );


ENDDOCUMENT(); 