## DBsubject('Abstract Algebra')
## DBchapter('Groups')
## DBsection('Product of groups')
## KEYWORDS('product of groups, generators')
## Level(4)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Siman Wong')
## Institution('University of Massachusetts Amherst')



DOCUMENT();        

loadMacros(
"PG.pl",
"PGstandard.pl",
"MathObjects.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"algebraMacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;


#
#  In this problem we take a cyclic group of composite order and ask
#  students to find two non-trivial elements that generate the whole 
#  group
#

@set = ( 2, 3, 4, 5, 7, 8, 9, 11, 13, 16, 17, 19, 25 );

#
# pick two coprime elements from the list with product > 10 and < 100
#

$r1 = random(0, @set-1, 1);
$n1 = $set[$r1];
$r2 = random(0, @set-1, 1);
$n2 = $set[$r2];
$m  = $n1 * $n2;
while( gcd($n1, $n2)>1 ||  $m < 20 )
{
  $r1 = random(0, @set-1, 1);
  $n1 = $set[$r1];
  $r2 = random(0, @set-1, 1);
  $n2 = $set[$r2];
  $m  = $n1 * $n2;
}





BEGIN_TEXT

Find a pair of NON-IDENTITY elements \(A, B\) in 
\( 
  \{ cyclic( $m ) \} 
\)
such that
\( 
  \{ cyclic( $m ) \} 
\)
is isomorphic to 
\(
  \langle A \rangle  \times  \langle B \rangle
\). $BR $BR

\(A, B=\) \{ ans_rule(20) \} $BR



END_TEXT

#
# Input:  modulus m
#         student's input sx
#         student's input sy
#
# Ouput:  Determine if 
#           (order of sx in Z_m) x (order of sx in Z_m) = m
#

ANS( List( $n1, $n2 )->cmp(
     list_checker => sub {
       my( $correct, $student, $anshash, $value ) = @_;  
       my( $sx, $sy ) = @$student;

       # make sure the student entered exactly two numbers, that they are real, and that they are integers

	   if( @$student != 2 || !Value::isReal( $sx ) || !Value::isReal( $sy ) || int( $sx ) != $sx || int( $sy ) != $sy )
	   {
		  return( 0, "enter exactly two integers." );
	   }
	   
	   # answer is wrong if either number is 0 ( mod m )
	   return 0 unless $sx % $m && $sy % $m;
       
       # find smallest positive integer multiple of sx divisible by m
       # find smallest positive integer multiple of sy divisible by m
	   
	   my $i = $j = 1;
	   $i++ while ( $sx * $i ) % $m > 0;
	   $j++ while ( $sy * $j ) % $m > 0;

       return ( $i * $j == $m ) ? 2 : 0;      
     }
   )
);





ENDDOCUMENT();       