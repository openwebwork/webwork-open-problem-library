## DBsubject('Abstract Algebra')
## DBchapter('Groups')
## DBsection('Subgroups')
## KEYWORDS('subgroups, generators')
## Level(4)
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Siman Wong and Patrick O'Brien')
## Institution('University of Massachusetts Amherst')





DOCUMENT();        

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserMultiAnswer.pl"
);

TEXT(beginproblem());

@chooseModulus = ( 5, 7, 9, 10, 12, 14 );

# for each modulus, we have precomputed the valid pairs of elements that satisfy the problem
%validPairs = (	5 =>	[ [ 1, 4 ] ],
				7 =>	[ [ 1, 2 ], [ 1, 4 ], [ 1, 6 ], [ 2, 4 ] ],
				9 => 	[ [ 1, 4 ], [ 1, 7 ], [ 4, 7 ] ],
				10 =>	[ [ 1, 9 ] ],
				12 =>	[ [ 1, 5 ], [ 1, 7 ], [ 1, 11 ] ],
				14 =>	[ [ 1, 9 ], [ 1, 11 ], [ 1, 13 ], [ 9, 11 ] ]
			);

# choose a random modulus
$n = $chooseModulus[ random( 0, @chooseModulus - 1, 1 ) ];

# make a hash that will be used to check and see if the student's answer is on the list of correct pairs. $modulusPairs{ x }{ y } = 1 iff <x,y> is a proper subgroup of U(n)
$modulusPairs{ $$_[ 0 ] }{ $$_[ 1 ] } = $modulusPairs{ $$_[ 1 ] }{ $$_[ 0 ] } = 1 foreach @{ $validPairs{ $n } };

# multiAnswer that checks the student's pair against the hash
$xyAnswer = MultiAnswer( map{ Compute( $_ ) } @{ $validPairs{ $n }[ 0 ] } )->with(
	singleResult => 1,
	checker => sub
	{
		my( $correct, $student, $self ) = @_;
		my $studentPair = [ map{ $_->value } @$student ];
		
		return $modulusPairs{ $$studentPair[ 0 ] }{ $$studentPair[ 1 ] } == 1 ? 1 : 0;
	}
);

Context()->texStrings;

BEGIN_TEXT

Find one pair of distinct elements \(x,\) \(y\) in \(U($n)\) such that \(\langle x,y \rangle\) is a proper subgroup of \(U($n)\). Be sure that \(1\leq x, y<n\).$BR $BR

\( (x,y) = ( \) \{ $xyAnswer->ans_rule(2) \} \( , \) \{ $xyAnswer->ans_rule( 2 ) \} \( ) \) $BR

END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $xyAnswer->cmp() );

ENDDOCUMENT();       
