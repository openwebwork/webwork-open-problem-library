# DESCRIPTION
# Sequences
# ENDDESCRIPTION

## Tagged by glr 02/08/09

## DBsubject(Algebra)
## DBchapter(Finite sequences and series)
## DBsection(Notation)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(RecurFormula)
## MLTleader(1)
## Level(2)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Hughes-Hallett')
## EditionText1('4')
## Section1('9.1')
## Problem1('1')
## TitleText2('Calculus')
## AuthorText2('Hughes-Hallett')
## EditionText2('5')
## Section2('9.1')
## Problem2('40')
## KEYWORDS('calculus', 'integral', 'sequences')

## Textbook tags
## HHChapter1('Sequences and Series')
## HHChapter2('Sequences and Series')

##################################
#  Initialization

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserFunction.pl",
);
TEXT(beginproblem());


##################################
#  Setup

Context("Numeric")->variables->are(n=>"Real");

$f1 = random(2,5,1);
$s = -1; #random(-1,1,2);

#if ($s == -1) {
parserFunction(f => "$f1 + 2^(n-1) - 1");
#} else {
#parserFunction(f => "$f1 + 3*2^(n) - 6");
#}

$fn = Formula("2*f(n-1) + $s")->reduce();
$fn->{test_at} = [[2],[3],[4],[5],[6],[7],[8]];

@seq = ("0","$f1");
foreach my $n (2..5) {
  $seq[$n] = 2*$seq[$n-1]+($s);
}

$printedseq = join(", ",@seq[1..5]);

##################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Find a recursive definition for the sequence $printedseq,...  
Assume the first term in the sequence is indexed by 1, 
and enter \( f_{n-1} \) as \( f(n-1) \).
$BR
$BR
\( f(1) = \) \{ ans_rule(5) \} and 
\( f(n) \) = \{ ans_rule(20) \} for \( n > 1 \).
END_TEXT
Context()->normalStrings;

##################################
#  Answer evaluation

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers=1;

ANS( Real($seq[1])->cmp() );
ANS( $fn->cmp(checker=>sub {
my ( $correct, $student, $ansHash ) = @_;
return (($student == $correct) or ($student == Formula("f(n-1)+2^n")));
}) );

COMMENT('MathObject version');

ENDDOCUMENT();
