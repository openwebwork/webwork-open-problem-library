## DESCRIPTION
## Perl math functions
## ENDDESCRIPTION


## DBsubject(WeBWorK)
## DBchapter(WeBWorK Tutorial)
## DBsection(Fort Lewis Tutorial 2011)
## Date(01/30/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('sample', 'WeBWorK')


#######################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGunion.pl",
);

# TEXT(beginproblem());


#######################
#  Escaped characters
#  Special formatting

$AT  = MODES( TeX => '\\@', HTML => '&#64;' );
$ATV = MODES( TeX => '@',   HTML => '&#64;' ); # inside verbatim environments

$DOL  = MODES( TeX => '\$',  HTML => '&#36;' );
$DOLV = MODES( TeX => '$',   HTML => '&#36;' );

$LT = MODES(TeX => '\ensuremath{<}', Latex2HTML => '\\lt ', HTML => '&lt;', HTML_tth => '<' );
$GT = MODES(TeX => '\ensuremath{>}', Latex2HTML => '\\gt ', HTML => '&gt;', HTML_tth => '>' );

#$GT = MODES(TeX => '\ensuremath{\symbol{62}}', Latex2HTML => '\\gt ', HTML => '&#62;', HTML_tth => '>' );

$BCODE = MODES(TeX => '\verb+', HTML => '<code>' );
$ECODE = MODES(TeX => '+', HTML => '</code>' );

$BPRE = MODES(TeX => '\begin{verbatim}', HTML => '<pre>' );
$EPRE = MODES(TeX => '\end{verbatim}', HTML => '</pre>' );

$BTITLE = MODES(TeX => '\begin{center}\textbf{', HTML => '<h2><center>');
$ETITLE = MODES(TeX => '}\end{center}', HTML => '</center></h2>');


#######################
#  Setup

Context("Numeric");


#######################
#  Main Text

Context()->texStrings;
BEGIN_TEXT
${BTITLE}Mathematical Functions in Perl${ETITLE}
$PAR

WebWork automatically loads the following mathematical Perl functions.
${BBOLD}We strongly recommend that you use these functions inside of MathObjects 
whenever possible.${EBOLD}  Later in the tutorial there will be an example
of how to define a new named function using MathObjects.

\{ BeginList('UL') \}

$ITEM ${BCODE}sqrt()${ECODE}, square root (there is no cbrt, use fractional exponents instead)

$ITEM ${BCODE}sin(), cos(), tan(), sec(), csc(), cot()${ECODE}, trig functions in radians

$ITEM ${BCODE}sinh(), cosh(), tanh(), sech(), csch(), coth()${ECODE}, hyperbolic trig functions

$ITEM ${BCODE}arcsin()${ECODE}, ${BCODE}arccos()${ECODE}, ${BCODE}arctan()${ECODE}, ${BCODE}arcsec()${ECODE}, ${BCODE}arccsc()${ECODE}, ${BCODE}arccot()${ECODE}, inverse trig functions in radians

$ITEM ${BCODE}asin(), acos(), atan(), asec(), acsc(), acot()${ECODE}, inverse trig functions in radians

$ITEM ${BCODE}exp();${ECODE}, natural exponential function

$ITEM ${BCODE}ln(), log()${ECODE}, natural logarithm function ${BBOLD}Caution: log is the natural logarithm in Perl and MathObjects.${EBOLD}

$ITEM ${BCODE}logten()${ECODE}, base 10 logarithm function

$ITEM ${BCODE}abs()${ECODE}, absolute value

$ITEM ${BCODE}sgn()${ECODE} sign function, either -1, 0, or 1

$ITEM ${BCODE}step()${ECODE} step function ${BCODE}(0 if x < 0, 1 if x >= 0)${ECODE}

$ITEM ${BCODE}fact()${ECODE} factorial function (defined only for non negative integers) 

\{ EndList('UL') \} 

$PAR
${BTITLE}Online References${ETITLE}
\{ BeginList('UL') \}
$ITEM \{ htmlLink('http://www.tizag.com/perlT/perlnumbers.php','Perl numbers (tizag.com)',"TARGET=~~"_new~~"") \}
\{ EndList('UL') \}
END_TEXT
Context()->normalStrings;


#######################
#  Answer Evaluation

$showPartialCorrectAnswers = 1;

#$answer = Compute("pi * $scalar^2");

#ANS( $answer->cmp() );

COMMENT('MathObject version');

ENDDOCUMENT();
