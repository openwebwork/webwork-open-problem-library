## DESCRIPTION
## Perl and PG
## ENDDESCRIPTION


## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(Fort Lewis tutorial 2011)
## Date(01/30/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('sample', 'WeBWorK')


#######################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGunion.pl",
);

# TEXT(beginproblem());

$HASHV = MODES( TeX => '#',   HTML => '#' );

$BCODE = MODES(TeX => '\verb+', HTML => '<code>' );
$ECODE = MODES(TeX => '+', HTML => '</code>' );

$BPRE = MODES(TeX => '\begin{verbatim}', HTML => '<pre>' );
$EPRE = MODES(TeX => '\end{verbatim}', HTML => '</pre>' );

$BTITLE = MODES(TeX => '\begin{center}\textbf{', HTML => '<h2><center>');
$ETITLE = MODES(TeX => '}\end{center}', HTML => '</center></h2>');


#######################
#  Setup

Context("Numeric");


#######################
#  Main Text

Context()->texStrings;
BEGIN_TEXT
${BTITLE}Perl and PG${ETITLE}
$PAR

This tutorial on Perl and PG will familiarize you with the basic constructs 
used most often when writing WebWork questions.  It is not comprehensive and
does not explain everything.  We will often provide links at the bottom
of each page in case you want to know more details.  You could also use Google 
to search for more details, or a textbook on Perl.  If part of this tutorial
is too difficult, has insufficient detail, or starts at too high a level, 
please let me know by emailing paulZwebZworkATgmail.com (remove the Z's 
-- they're to prevent spam). 

$PAR

PERL stands for Practical Extraction and Report Language.  PG stands 
for Problem Generation, and it is a language built on Perl to write
WebWork homework questions.  Each PG file is essentially a Perl 
script that produces output in HTML or PDF (via pdfLaTeX).  MathObjects are
a recently developed part of the PG language, and will be discussed 
separately.


$PAR
${BTITLE}Perl Basics${ETITLE}
$PAR

Perl has strings, which are enclosed by single quotes (which are straight up on your keyboard, not slanted to the left) or double quotes, and numbers.  If you enclose a number with quotes and perform mathematical operations on it, there will be no problems (Perl will treat the string like a number).
The comment character in Perl is ${BCODE}${HASHV}${ECODE}.  The semicolon ${BCODE};${ECODE} ends a line of code in Perl.  It is possible to concatenate strings in Perl using a period between them, as in ${BCODE}"War " . "and Peace";${ECODE} (notice the space between the quote and War).

$PAR
${BTITLE}Online References${ETITLE}
\{ BeginList('UL') \}
$ITEM \{ htmlLink('http://www.perl.org/','Perl Language (perl.org)',"TARGET=~~"_new~~"") \}
$ITEM \{ htmlLink('http://perldoc.perl.org/','Perl Documentation (perldoc.perl.org)',"TARGET=~~"_new~~"") \}
$ITEM \{ htmlLink('http://www.tizag.com/perlT/index.php','Perl tutorial (tizag.com)',"TARGET=~~"_new~~"") \}
\{ EndList('UL') \}
END_TEXT
Context()->normalStrings;


#######################
#  Answer Evaluation

$showPartialCorrectAnswers = 1;

#$answer = Compute("pi * $scalar^2");

#ANS( $answer->cmp() );

;

ENDDOCUMENT();
