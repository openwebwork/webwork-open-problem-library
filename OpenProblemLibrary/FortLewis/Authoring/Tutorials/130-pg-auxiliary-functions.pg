## DESCRIPTION
## PG special characters
## ENDDESCRIPTION


## DBsubject(WeBWorK)
## DBchapter(WeBWorK tutorial)
## DBsection(Fort Lewis tutorial 2011)
## Date(01/30/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('sample', 'WeBWorK')


#######################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGunion.pl",
);

# TEXT(beginproblem());

$AT  = MODES( TeX => '\\@', HTML => '&#64;' );
$ATV = MODES( TeX => '@',   HTML => '&#64;' ); # inside verbatim environments

$DOL  = MODES( TeX => '\$',  HTML => '&#36;' );
$DOLV = MODES( TeX => '$',   HTML => '&#36;' );

$LT = MODES(TeX => '\ensuremath{<}', Latex2HTML => '\\lt ', HTML => '&lt;', HTML_tth => '<' );
$GT = MODES(TeX => '\ensuremath{>}', Latex2HTML => '\\gt ', HTML => '&gt;', HTML_tth => '>' );

$US   = MODES( TeX => '\_', HTML => '&#95;' );
$USV  = MODES( TeX => '_',  HTML => '&#95;' );

$DOUBLETILDE   = MODES( TeX => '\(\sim\sim\)', HTML => '<code>&#126;&#126;</code>' );


$BCODE = MODES(TeX => '\verb!', HTML => '<code>' );
$ECODE = MODES(TeX => '!', HTML => '</code>' );

$BPRE = MODES(TeX => '\begin{verbatim}', HTML => '<pre>' );
$EPRE = MODES(TeX => '\end{verbatim}', HTML => '</pre>' );

$BPERL = MODES(TeX => '\ensuremath{\backslash\lbrace}', HTML => '&#92;&#123;' );
$EPERL = MODES(TeX => '\ensuremath{\backslash\rbrace}', HTML => '&#92;&#125;' );

$BPERLV = MODES(TeX => '\{', HTML => '&#92;&#123;' );
$EPERLV = MODES(TeX => '\}', HTML => '&#92;&#125;' );


$BTEX = MODES(TeX => '\ensuremath{\backslash(}', HTML => '&#92;&#40;' );
$ETEX = MODES(TeX => '\ensuremath{\backslash)}', HTML => '&#92;&#41;' );

$BTEXV = MODES(TeX => '\(', HTML => '&#92;&#40;' );
$ETEXV = MODES(TeX => '\)', HTML => '&#92;&#41;' );


$BTEXX = MODES(TeX => '\ensuremath{\backslash\lbrack}', HTML => '&#92;&#91;' );
$ETEXX = MODES(TeX => '\ensuremath{\backslash\rbrack}', HTML => '&#92;&#93;' );

$BTEXXV = MODES(TeX => '\[', HTML => '&#92;&#91;' );
$ETEXXV = MODES(TeX => '\]', HTML => '&#92;&#93;' );


$end = "END";
$doc = "DOCUMENT";
$pp = "();";

$ed = $end.$doc.$pp;

$BTITLE = MODES(TeX => '\begin{center}\textbf{', HTML => '<h2><center>');
$ETITLE = MODES(TeX => '}\end{center}', HTML => '</center></h2>');


#######################
#  Setup

Context("Numeric");


#######################
#  Main Text

Context()->texStrings;
BEGIN_TEXT
${BTITLE}Auxiliary Functions in PG${ETITLE}
$PAR

The macro file PGauxiliaryFunctions.pl, which is automatically loaded by PGstandard.pl, contains many useful numerical recipies.

\{ BeginList('OL') \}

$ITEM The max function ${BCODE}max(-1,4,2*pi,5);${ECODE} will return \{ max(-1,4,2*pi,5); \}.
$ITEMSEP
$ITEM The min function ${BCODE}min(10,2*pi,-1,5);${ECODE} will return \{ min(10,2*pi,-1,5); \}.
$ITEMSEP
$ITEM The greatest common factor (or divisor) function ${BCODE}gcf(4,6);${ECODE} or ${BCODE}gcd(4,6);${ECODE} will return \{ gcd(4,6); \}.  For perl code that gives an extended gcd function ${BCODE}xgcd(a,b) = d = ax+by${ECODE}, see the online references below.
$ITEMSEP
$ITEM The least common multiple function ${BCODE}lcm(4,6);${ECODE} will return \{ lcm(4,6); \}.
$ITEMSEP
$ITEM The ceiling and floor functions ${BCODE}ceil(-3.4);${ECODE} and ${BCODE}floor(-3.4);${ECODE} will return \{ ceil(-3.4); \} and \{ floor(-3.4); \}.
$ITEMSEP
$ITEM The prime test function ${BCODE}isPrime(4);${ECODE} and ${BCODE}isPrime(5);${ECODE} will return \{ isPrime(4); \} and \{ isPrime(5) \}.
$ITEMSEP
$ITEM The signum (or sign) function ${BCODE}sgn(-pi);${ECODE} and ${BCODE}sgn(0);${ECODE} and ${BCODE}sgn(6)${ECODE} will return \{ sgn(-pi); \}, \{ sgn(0); \}, and \{ sgn(6); \}. 
$ITEMSEP
$ITEM The Heaviside step function, which is 1 when the input is positive and zero otherwise, is ${BCODE}step(-0.1);${ECODE}
and ${BCODE}step(0);${ECODE} and ${BCODE}step(0.1);${ECODE} which returns \{ step(-0.1); \}, \{ step(0); \}, and \{ step(0.1) \}.
$ITEMSEP
$ITEM The integer rounding function ${BCODE}round(1.49999);${ECODE} and ${BCODE}round(1.5);${ECODE} and ${BCODE}round(-1.5);${ECODE} and ${BCODE}round(-1.49999);${ECODE} will return \{ round(1.49999); \}, \{ round(1.5); \}, \{ round(-1.5) \}, \{ round(-1.49999); \}.

\{ EndList('OL') \}


$PAR
${BTITLE}Online References${ETITLE}
\{ BeginList('UL') \}

$ITEM \{ htmlLink('http://webwork.maa.org/pod/pg_TRUNK/PGauxiliaryFunctions.pl','Standard PG macros (POD documentation)',"TARGET=~~"_new~~"") \} 
$ITEM \{ htmlLink('http://webwork.maa.org/viewvc/system/trunk/pg/macros/PGauxiliaryFunctions.pl','Standard PG macros (source)',"TARGET=~~"_new~~"") \}
$ITEM \{ htmlLink('http://webwork.maa.org/moodle/mod/forum/discuss.php?d=2286','Extendend gcd function',"TARGET=~~"_new~~"") \}

\{ EndList('UL') \}
END_TEXT
Context()->normalStrings;


#######################
#  Answer Evaluation

$showPartialCorrectAnswers = 1;

#$answer = Compute("pi * $scalar^2");

#ANS( $answer->cmp() );

;

ENDDOCUMENT();
