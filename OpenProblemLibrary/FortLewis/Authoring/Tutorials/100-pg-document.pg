## DESCRIPTION
## PG document structure
## ENDDESCRIPTION




#######################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGunion.pl",
);

# TEXT(beginproblem());

$AT  = MODES( TeX => '\\@', HTML => '&#64;' );
$ATV = MODES( TeX => '@',   HTML => '&#64;' ); # inside verbatim environments

$DOL  = MODES( TeX => '\$',  HTML => '&#36;' );
$DOLV = MODES( TeX => '$',   HTML => '&#36;' );

$LT = MODES(TeX => '\ensuremath{<}', Latex2HTML => '\\lt ', HTML => '&lt;', HTML_tth => '<' );
$GT = MODES(TeX => '\ensuremath{>}', Latex2HTML => '\\gt ', HTML => '&gt;', HTML_tth => '>' );

$US   = MODES( TeX => '\_', HTML => '&#95;' );
$USV  = MODES( TeX => '_',  HTML => '&#95;' );


$BCODE = MODES(TeX => '\verb+', HTML => '<code>' );
$ECODE = MODES(TeX => '+', HTML => '</code>' );

$BPRE = MODES(TeX => '\begin{verbatim}', HTML => '<pre>' );
$EPRE = MODES(TeX => '\end{verbatim}', HTML => '</pre>' );

$BPERL = MODES(TeX => '\ensuremath{\backslash\lbrace}', HTML => '&#92;&#123;' );
$EPERL = MODES(TeX => '\ensuremath{\backslash\rbrace}', HTML => '&#92;&#125;' );

$BPERLV = MODES(TeX => '\{', HTML => '&#92;&#123;' );
$EPERLV = MODES(TeX => '\}', HTML => '&#92;&#125;' );


$BTEX = MODES(TeX => '\ensuremath{\backslash(}', HTML => '&#92;&#40;' );
$ETEX = MODES(TeX => '\ensuremath{\backslash)}', HTML => '&#92;&#41;' );

$BTEXV = MODES(TeX => '\(', HTML => '&#92;&#40;' );
$ETEXV = MODES(TeX => '\)', HTML => '&#92;&#41;' );

$BTEXX = MODES(TeX => '\ensuremath{\backslash\lbrack}', HTML => '&#92;&#91;' );
$ETEXX = MODES(TeX => '\ensuremath{\backslash\rbrack}', HTML => '&#92;&#93;' );

$BTEXXV = MODES(TeX => '\[', HTML => '&#92;&#91;' );
$ETEXXV = MODES(TeX => '\]', HTML => '&#92;&#93;' );

$end = "END";
$doc = "DOCUMENT";
$pp = "();";

$ed = $end.$doc.$pp;

$BTITLE = MODES(TeX => '\begin{center}\textbf{', HTML => '<h2><center>');
$ETITLE = MODES(TeX => '}\end{center}', HTML => '</center></h2>');


#######################
#  Setup

Context("Numeric");


#######################
#  Main Text

Context()->texStrings;
BEGIN_TEXT
${BTITLE}PG document structure${ETITLE}
$PAR

A PG file uses Perl to produce a document that can be output in HTML or PDF format.  The general structure of a PG file is much like the structure of HTML source code or a TeX source file that becomes a PDF file when compiled by pdfLaTeX.  PG files typically have the following structure. 

\{ BeginList('OL') \}

$ITEM Tagging information: With over 20,000 PG files in the National Problem Library, every PG file should begin with metadata can be used to index it in the library.  The tags ${BCODE}DBsubject()${ECODE}, ${BCODE}DBchapter()${ECODE}, and ${BCODE}DBsection()${ECODE} are necessary to put the PG file into the hierarchical framework of the database.  The best way to find where your PG file fits in the database is to open the library browser and find the appropriate subject, chapter, and section.  I like to view the source code of a problem that has the right subject, chapter, and section, and just copy and paste this information into my PG file.  (Note: If you're copying and pasting from a PDF to a PG file, the single quotes will be slanted, so you'll have to replace them by non-slanted single quotes.  Ahh, the quirks of TeX.)
${BPRE}
## DESCRIPTION
## PG document structure
## ENDDESCRIPTION


## DBsubject(WeBWorK)
## DBchapter(WeBWorK Tutorial)
## DBsection(Fort Lewis Tutorial 2011)
## Date(01/30/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MO(1)
## KEYWORDS('sample', 'WeBWorK')
${EPRE}


$ITEMSEP
$ITEM Initialization: This is where we load macros and begin the document.  The macros ${BCODE}PGstandard.pl${ECODE} and ${BCODE}MathObjects.pl${ECODE} should always be loaded.  There are many macros that can be loaded, so rather than trying to describe them all here, we will let you look at which macros are loaded in the template examples later in this tutorial.  
${BPRE}
##########################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
);

# TEXT(beginproblem());

${DOLV}refreshCachedImages = 1;
${EPRE}



$ITEMSEP
$ITEM Setup: This is where we use Perl, PG, and MathObjects to write the inner workings of the problem.  We use MathObjects to set the context (Numeric, Vector, etc.), and define a MathObject using Compute.  
${BPRE}
##########################
#  Setup

Context("Numeric");

${DOLV}r = random(3,9,1);
${DOLV}answer = Compute("pi * ${DOLV}r^2");
${EPRE}


$ITEMSEP
$ITEM Main Text: Here we enter PG's text mode, between ${BCODE}BEGIN_TEXT${ECODE} and ${BCODE}END_TEXT${ECODE}, and display the question for the student.  The ${BCODE}BEGIN_TEXT${ECODE} and ${BCODE}END_TEXT${ECODE} commands must be at the beginning of the line (no leading spaces) and also be the only thing on their line.
While in text mode, we can access Perl mode via escaped curly braces ${BPERL} Perl code here ${EPERL}, and TeX inline mode via escaped rounded parentheses ${BTEX} TeX code here ${ETEX}, and TeX display mode (centered) via escape square brackets ${BTEXX} TeX code here ${ETEXX}.  
The code ${BCODE}Context()->texStrings;${ECODE} and ${BCODE}Context()->normalStrings;${ECODE} outside of the text block will ensure that any MathObjects that are used in TeX mode will be beautifully typeset.  The code ${BCODE}${BPERLV} ans${USV}rule(10) ${EPERLV}${ECODE} produces an answer blank 10 characters wide.
${BPRE}
##########################
#  Main Text

Context()->texStrings;
BEGIN${USV}TEXT
What is the area of a circle of radius
${BTEXV} ${DOLV}r ${ETEXV}?
${DOLV}BR
${DOLV}BR
Area = ${BPERLV} ans${USV}rule(10) ${EPERLV}
END${USV}TEXT
Context()->normalStrings;
${EPRE}



$ITEMSEP
$ITEM Answer Evaluation: This is where we use MathObjects to check whether the student's answer is correct.  We defined the MathObject ${BCODE}${DOLV}answer${ECODE} above in the Setup section, and now we will call the method ${BCODE}cmp()${ECODE} on it using Perl's syntax for object-oriented programming (the arrow).  The subroutine ${BCODE}ANS( )${ECODE} will record the result in the gradebook database.
${BPRE}
#######################
#  Answer Evaluation

${DOLV}showPartialCorrectAnswers = 1;

ANS( ${DOLV}answer->cmp() );
${EPRE}


$ITEMSEP
$ITEM Solution and End Document:  The solution is optional, but ending the document is mandatory (don't forget it!).  With older versions of WebWork, it may be necessary to use ${BCODE}SOLUTION(EV3(<<'END${USV}SOLUTION'));${ECODE} instead of ${BCODE}BEGIN${USV}SOLUTION${ECODE}.
${BPRE}
#######################
#  Solution

Context()->texStrings;
BEGIN${USV}SOLUTION
The formula for the area of
a circle of radius ${BTEXV} r ${ETEXV}
is ${BTEXV} \pi r^2 ${ETEXV},
so the answer is 
${BTEXV} ${DOLV}answer ${ETEXV}.
END${USV}SOLUTION
Context()->normalStrings;

$ed
${EPRE}

\{ EndList('OL') \}



$PAR
${BTITLE}Online References${ETITLE}
\{ BeginList('UL') \}

$ITEM \{ htmlLink('http://webwork.maa.org/wiki/Tagging_Problems','Tagging WebWork Problems',"TARGET=~~"_new~~"") \}

$ITEM \{ htmlLink('http://webwork.maa.org/pod/pg_TRUNK/','Standard PG macros (POD documentation)',"TARGET=~~"_new~~"") \} 
$ITEM \{ htmlLink('http://webwork.maa.org/viewvc/system/trunk/pg/macros/','Standard PG macros (source)',"TARGET=~~"_new~~"") \}
$ITEM \{ htmlLink('http://webwork.maa.org/viewvc/npl/trunk/NationalProblemLibrary/macros/','Submitted PG macros (source)',"TARGET=~~"_new~~"") \} 


\{ EndList('UL') \}
END_TEXT
Context()->normalStrings;


#######################
#  Answer Evaluation

$showPartialCorrectAnswers = 1;

#$answer = Compute("pi * $scalar^2");

#ANS( $answer->cmp() );

COMMENT('MathObject version');

ENDDOCUMENT();
