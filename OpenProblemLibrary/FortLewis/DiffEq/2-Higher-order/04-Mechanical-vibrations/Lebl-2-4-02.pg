## DESCRIPTION
## Higher order ODEs: constant coefficient higher order homogeneous linear ODEs
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Higher order differential equations)
## DBsection(Applications)
## Date(01/30/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(spring_mass_metric)
## MLTleader(1)
## Level(5)
## MO(1)
## TitleText1('Notes on Diffy Qs')
## AuthorText1('Jiri Lebl')
## EditionText1('December 9, 2010')
## Section1('2.4')
## Problem1('2')
## KEYWORDS('differential equations','second order linear ODE','constant coefficients')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserAssignment.pl",
  "parserImplicitPlane.pl",
  "parserPopUp.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;


#############################
#  Part 1

Context("ImplicitPlane");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->add(
"x'"=>"Real","x''"=>"Real","t"=>"Real"
);

$m = random(2,4,1);
do { $k = random(2,9,1); } until ($k != $m);
$c = random(1,3,1);

$diffeq = ImplicitPlane("$m x'' + $c x' + $k x = 0");

BEGIN_PGML
Suppose a spring with spring constant [``\ [$k] \ \text{N/m} \ ``]
is horizontal and has one end attached to a wall and the 
other end attached to a [``\ [$m] \ \text{kg} \  ``] mass.  Suppose 
that the friction of the mass with the floor (i.e., the damping
constant) is 
[``\ [$c] \ \text{N $\cdot$ s/m} \  ``].  

* Set up a differential equation that describes this 
system.  Let [`\ x \ `]  denote the displacement, in meters,
of the mass from its equilibrium position, and give your answer
in terms of [``\ x, x^{\,\prime}, x^{\,\prime\prime} ``].  
Assume that positive displacement 
means the mass is farther from the wall than when the system
is at equilibrium.  

    [_]{$diffeq}{20} [@ helpLink("equation") @]*

END_PGML


##################################
#  Parts 2 & 3

Context("Numeric");
Context()->variables->add(
'c1'=>"Real",'c2'=>"Real",t=>"Real",
);
Context()->variables->set(
'c1'=>{limits=>[2,4]},
'c2'=>{limits=>[2,4]}
);

Context()->flags->set(
    formatStudentAnswer=>'parsed',
    reduceConstants=>0,
    reduceConstantFunctions=>0,
);
parser::Assignment->Allow;

$disc = $c**2 - 4*$m*$k; # discriminant
$absdisc = abs($disc);
$den  = 2*$m;  # denominator

$answer = Compute("x = e^(-$b t / $den) * ( c1 cos(sqrt($absdisc) t / $den) + c2 sin(sqrt($absdisc) t / $den) )")->cmp(  
  checker => sub {

    my ( $correct, $student, $answerHash ) = @_;
    my $stu   = Formula($student->{tree}{rop});

    #################################
    #  Check for arbitrary constants
    #
    Value->Error("Is your answer the most general solution?") 
    if ( 
      Formula($stu->D('c1'))==Formula(0) || 
      Formula($stu->D('c2'))==Formula(0) 
    );


    ##################################
    #  Linear independence (Wronskian)
    #
    my $t = Real(-2.12);

    my $a11 = $stu->eval('c1'=>1,'c2'=>0,t=>$t,x=>0);
    my $a12 = $stu->eval('c1'=>0,'c2'=>1,t=>$t,x=>0);

    my $a21 = $stu->D('t')->eval('c1'=>1,'c2'=>0,t=>$t,x=>0);
    my $a22 = $stu->D('t')->eval('c1'=>0,'c2'=>1,t=>$t,x=>0);

    # my $wronskian = $a11*$a22 - $a21*$a12; 
    # Value->Error("Your functions are not linearly independent or your answer is not complete") 
    # if ($wronskian==Real(0));

    Value->Error("Your functions are not linearly independent or your answer is not complete") 
    if ($a11 * $a22 == $a21 * $a12);


    #################################
    #  Check that the student answer is a solution to the DE
    #
    my $stu1  = Formula($stu->D('t'));
    my $stu2  = Formula($stu->D('t','t'));
    return ($m * $stu2 + $c * $stu1) == (-1 * $k * $stu);

    # my $stuDE = Formula($m*$stu2 + $c*$stu1 + $k*$stu)
    # ->with(test_points=>[[1,1,1,0],[2,1,2,0],[1,2,-1,0],[-2,1,0,0]]);
    # return ($stuDE==Formula(0));
});

$pop = PopUp(["?","over damped","critically damped","under damped"],"under damped");

BEGIN_PGML
* Find the general solution for your 
differential equation.  
Use c1 and c2  to represent arbitrary
constants.  Use  t  for the independent variable, 
to represent the time elapsed in seconds. Your answer should
be in the form of an equation: [``\ x = (\ldots)\ ``].  

    [_]{$answer}{60} [@ helpLink("equation") @]*

* Is this system under damped, over damped, 
or critically damped?  

    [_]{ $pop }  

* Enter a value for the 
damping constant that would make the system
critically damped.

    [_]{Compute("sqrt(4*$k*$m)")}{10}[``\ \text{N $\cdot$ s / m}``]

END_PGML

COMMENT("Under damped system.");

ENDDOCUMENT();
