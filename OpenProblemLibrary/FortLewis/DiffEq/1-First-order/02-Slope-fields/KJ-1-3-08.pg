## DESCRIPTION
## First order ODEs: slope fields and the uniqueness theorem
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(First order differential equations)
## DBsection(Direction fields)
## Date(01/01/2012)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(d_field_02)
## Level(3)
## MO(1)
## TitleText1('Elementary Differential Equations')
## AuthorText1('Kohler and Johnson')
## EditionText1('2')
## Section1('1.3')
## Problem1('8')
## KEYWORDS('differential equations','first order','slope fields','direction fields')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"unionTables.pl",
"AnswerFormatHelp.pl",
"parserImplicitPlane.pl",
"parserPopUp.pl",
"PGchoicemacros.pl",
);

TEXT(beginproblem());

$refreshCachedImages = 1;

#############################
#  Setup

Context("ImplicitPlane")->variables->are(t=>"Real",y=>"Real");

$isoclineneg1 = ImplicitPlane("y = t + 1");
$isocline0 = ImplicitPlane("y = t");
$isocline1 = ImplicitPlane("y = t - 1");


######################################
#  Begin graph canvas setup
#

$htmlsize = 200;
$texsize  = 450;

foreach my $k (0..3) {

$gr[$k] = init_graph(-3,-3,3,3,axes=>[0,0],size=>[$htmlsize,$htmlsize]);
$gr[$k]->lb('reset');
$gr[$k]->h_ticks(0,"black",-2,-1,1,2);
$gr[$k]->v_ticks(0,"black",-2,-1,1,2);
foreach my $i (1,2) {
  $gr[$k]->lb( new Label( $i,-0.25, $i,'black','center','middle'));
  $gr[$k]->lb( new Label(-$i,-0.25,-$i,'black','center','middle'));
  $gr[$k]->lb( new Label(-0.25, $i, $i,'black','right','middle'));
  $gr[$k]->lb( new Label(-0.25,-$i,-$i,'black','right','middle'));
}
$gr[$k]->lb( new Label(2.75,0.2,'t','black','center','middle'));
$gr[$k]->lb( new Label(0.2,2.75,'y','black','center','middle'));
$gr[$k]->new_color("dodgerblue",30, 144, 255); 

}
#  End graph canvas setup
######################################


######################################
#  Begin filament
#  A little procedure for generating little 
#  line segments of slope $m at point ($x,$y)

sub filament {
  my ($gr, $x, $y, $m) = @_;

  my $length = 0.3;
  my $x0 = $x - 0.5 * $length * cos(atan($m));
  my $y0 = $y - 0.5 * $length * sin(atan($m));
  my $x1 = $x + 0.5 * $length * cos(atan($m));
  my $y1 = $y + 0.5 * $length * sin(atan($m));

  $gr->moveTo($x0,$y0);
  $gr->lineTo($x1,$y1,'blue',3);
}
#  End filament
######################################




###################################
#  $gr[0] is the correct answer

#
# The isocline y = t + 1 with constant slope -1
#
$gr[0]->moveTo(-3,-2);
$gr[0]->lineTo(2,3,'black',1);
foreach my $x (-6..6) {
  filament($gr[0],$x/2,$x/2+1,-1);
}

#
# The isocline y = t + 1 with constant slope 0
#
$gr[0]->moveTo(-3,-3);
$gr[0]->lineTo(3,3,'black',1);
foreach my $x (-6..6) {
  filament($gr[0],$x/2,$x/2,0);
}

#
# The isocline y = t - 1 with constant slope 1
#
$gr[0]->moveTo(-2,-3);
$gr[0]->lineTo(3,2,'black',1);
foreach my $x (-6..6) {
  filament($gr[0],$x/2,$x/2-1,1);
}


###################################
#  $gr[1] is NOT the correct answer

#
# The line y = t + 1 with constant slope 1
#
$gr[1]->moveTo(-3,-2);
$gr[1]->lineTo(2,3,'black',1);
foreach my $x (-6..6) {
  filament($gr[1],$x/2,$x/2+1,1);
}

#
# The line y = t + 1 with constant slope 0
#
$gr[1]->moveTo(-3,-3);
$gr[1]->lineTo(3,3,'black',1);
foreach my $x (-6..6) {
  filament($gr[1],$x/2,$x/2,0);
}

#
# The line y = t - 1 with constant slope -1
#
$gr[1]->moveTo(-2,-3);
$gr[1]->lineTo(3,2,'black',1);
foreach my $x (-6..6) {
  filament($gr[1],$x/2,$x/2-1,-1);
}



###################################
#  $gr[2] is NOT the correct answer

#
# The line y = t + 1 with constant slope 1
#
$gr[2]->moveTo(-3,2);
$gr[2]->lineTo(2,-3,'black',1);
foreach my $x (-6..6) {
  filament($gr[2],$x/2,-1*($x/2+1),1);
}

#
# The line y = t + 1 with constant slope 0
#
$gr[2]->moveTo(-3,3);
$gr[2]->lineTo(3,-3,'black',1);
foreach my $x (-6..6) {
  filament($gr[2],$x/2,-1*$x/2,0);
}

#
# The line y = t - 1 with constant slope -1
#
$gr[2]->moveTo(-2,3);
$gr[2]->lineTo(3,-2,'black',1);
foreach my $x (-6..6) {
  filament($gr[2],$x/2,-1*($x/2-1),-1);
}


###################################
#  $gr[3] is NOT the correct answer

#
# The line y = t + 1 with constant slope -1
#
$gr[3]->moveTo(-3,2);
$gr[3]->lineTo(2,-3,'black',1);
foreach my $x (-6..6) {
  filament($gr[3],$x/2,-1*($x/2+1),-1);
}

#
# The line y = t + 1 with constant slope 0
#
$gr[3]->moveTo(-3,3);
$gr[3]->lineTo(3,-3,'black',1);
foreach my $x (-6..6) {
  filament($gr[3],$x/2,-1*$x/2,0);
}

#
# The line y = t - 1 with constant slope 1
#
$gr[3]->moveTo(-2,3);
$gr[3]->lineTo(3,-2,'black',1);
foreach my $x (-6..6) {
  filament($gr[3],$x/2,-1*($x/2-1),1);
}




foreach my $i (0..3) {
  $fig[$i] = image(insertGraph($gr[$i]),width=>$htmlsize,height=>$htmlsize,tex_size=>$texsize);
}

@perm = shuffle(4);
@fig = @fig[@perm];
@inv = invert(@perm);

@letter = ("A", "B", "C", "D");

$popup = PopUp(["?","A","B","C","D"], $letter[$inv[0]]);


#############################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Suppose \( y' = -y + t \).  We write \( f(t,y) \) for the right-hand side of the differential equation.
$BR
$BR
(a) Determine the isoclines
\( f(t,y) = c \) for \( c = -1, 0, 1 \).  Express each answer as \( y = ... \).
$BR
$BR
Isocline for \( c = -1: \) $SPACE
\{ ans_rule(20) \}
\{ AnswerFormatHelp("equations") \}
$BR
$BR
Isocline for \( c = 0: \) $SPACE
\{ ans_rule(20) \}
\{ AnswerFormatHelp("equations") \}
$BR
$BR
Isocline for \( c = 1: \) $SPACE
\{ ans_rule(20) \}
\{ AnswerFormatHelp("equations") \}
$BR
$BR
(b) On each of the isoclines in part (a), draw
representative direction field filaments.  
Which graph A-D below most closely matches 
the graph you drew?  
$BR
Answer: \{ $popup->menu() \}
$BR
\{
BeginTable().
  AlignedRow([$fig[0],$fig[1]]).
  TableSpace(5,0).
  AlignedRow(["A","B"]).
  TableSpace(25,6).
  AlignedRow([$fig[2],$fig[3]]).
  TableSpace(5,0).
  AlignedRow(["C","D"]).
EndTable();
\}
END_TEXT
Context()->normalStrings;


############################
#  Answers

$showPartialCorrectAnswers = 0;
install_problem_grader(~~&std_problem_grader);

ANS( $isoclineneg1->cmp() );
ANS( $isocline0->cmp() );
ANS( $isocline1->cmp() );
ANS( $popup->cmp() );

COMMENT("MathObject version.  Not randomized.");

ENDDOCUMENT();
