## DESCRIPTION
## Linear systems of ODEs
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Matrix notation for systems)
## Date(01/30/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(SDE-MN-setup_only)
## MLTleader(1)
## Level(2)
## MO(1)
## TitleText1('Notes on Diffy Qs')
## AuthorText1('Jiri Lebl')
## EditionText1('December 9, 2010')
## Section1('3.3')
## Problem1('1')
## KEYWORDS('differential equations','linear systems')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGmatrixmacros.pl",
"parserPopUp.pl",
"parserMultiAnswer.pl",
);

TEXT(beginproblem());


#############################
#  Setup

Context("Numeric");
Context()->variables->{namePattern} = qr/[a-z][a-z0-9_]*'*/i;
Context()->variables->add(
"x'"=>"Real","y"=>Real,"y'"=>Real,t=>"Real",
);

$a = random(2,9,1);
$b = random(2,9,1);
$c = random(2,9,1);
$d = random(2,9,1);

$a11 = Formula("e^($a t)");
$a12 = Formula("$b t");
$a21 = Formula("$c");
$a22 = Formula("$d tan(t)");

$f1 = Formula("$c sin(t)");
$f2 = Formula("$a cos(t)");

$x = Formula("x");
$y = Formula("y");

$xp = Formula("x'");
$yp = Formula("y'");

@multians = ();

$multians[0] = MultiAnswer($xp, $yp)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'><tr><td> %s </td></tr><tr><td> %s </td></tr></table>",
  tex_format =>  "\left\lbrack \begin{array}{r} %s \\ %s \end{array} \right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..1) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);



$multians[1] = MultiAnswer($a11, -1*$a12, $a21, $a22)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'>
  <tr><td> %s </td><td> %s </td></tr>
  <tr><td> %s </td><td> %s </td></tr>
  </table>",
  tex_format =>  "\left\lbrack \begin{array}{rr} %s & %s \\ %s & %s \end{array} \right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..3) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);


$multians[2] = MultiAnswer($x, $y)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'><tr><td> %s </td></tr><tr><td> %s </td></tr></table>",
  tex_format =>  "\left\lbrack \begin{array}{r} %s \\ %s \end{array} \right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..1) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);


$multians[3] = MultiAnswer($f1, -1*$f2)->with(

  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0' cellspacing='10'><tr><td> %s </td></tr><tr><td> %s </td></tr></table>",
  tex_format =>  "\left\lbrack \begin{array}{r} %s \\ %s \end{array} \right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = ();
      foreach my $j (0..1) {
        $score[$j] = 0;
        if ($c[$j]->typeMatch($s[$j]) && $c[$j] == $s[$j]) { $score[$j] = 1; }
      }
      return [ @score ];
  }

);


######################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Write the system 
\( x^{\,\prime} = $a11 x - $a12 y + $f1 \), $SPACE
\( y^{\,\prime} = $a22 y + $a21 x - $f2 \)
in the form 
$PAR
\[ 
\frac{d}{dt} \left\lbrack\begin{array}{c} x \\ y \end{array}\right\rbrack 
= 
P(t) \left\lbrack\begin{array}{c} x \\ y \end{array}\right\rbrack + \boldsymbol{\vec{f}}(t).
\]
$BR
$BR
Use prime notation for derivatives and write 
\( x \) and \( x^{\,\prime} \), etc., instead of 
\( x(t) \), \( x^{\,\prime}(t) \), or \( \frac{dx}{dt} \).
$PAR
$BCENTER
\{ 
mbox(
  display_matrix([[$multians[0]->ans_rule(10)], [$multians[0]->ans_rule(10)]], align=>'c'),
  " =",
  display_matrix([
  [$multians[1]->ans_rule(10),$multians[1]->ans_rule(10)], 
  [$multians[1]->ans_rule(10),$multians[1]->ans_rule(10)]], align=>'cc'),
  display_matrix([[$multians[2]->ans_rule(10)], [$multians[2]->ans_rule(10)]], align=>'c'),
  " +",
  display_matrix([[$multians[3]->ans_rule(10)], [$multians[3]->ans_rule(10)]], align=>'c')
);
\}
$ECENTER
END_TEXT
Context()->normalStrings;


######################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

foreach my $j (0..3) {
  ANS( $multians[$j]->cmp() );
}

COMMENT("MathObject version.");

ENDDOCUMENT();


