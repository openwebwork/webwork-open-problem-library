## DESCRIPTION
## Eigenvalues and systems of differential equations
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Applications)
## Date(03/19/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(SDE-A-springs_n_things)
## MLTleader(1)
## Level(5)
## MO(1)
## TitleText1('Notes on Diffy Qs')
## AuthorText1('Jiri Lebl')
## EditionText1('December 9, 2010')
## Section1('3.6')
## Problem1('1')


##################################
#  Initialization


DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"unionLists.pl",
"unionTables.pl",
);

TEXT(beginproblem());


##################################
#  Setup

Context("Numeric");
Context()->variables->are(
't' =>'Real',
'a1'=>'Real',
'a2'=>'Real',
'b1'=>'Real',
'b2'=>'Real',
);


$f = list_random(2,3,4);
$ff = $f * $f;

$lambda1 = -($f)**2;
$lambda2 = -(2*$f)**2;

#  Differential equation in matrix form:
#
#  [ $m1  0   ] [ x_1'' ]     [ -($k1+$k2)   $k2 ] [ x_1 ]
#  [   0  $m2 ] [ x_2'' ]  =  [       $k2   -$k2 ] [ x_2 ]
# 

# matrix A = M^(-1) K listed by rows (not columns)
@A = ();
$A[0] = Real("-(3*$ff)"); # A11
$A[1] = Real("$ff");      # A12
$A[2] = Real("2*$ff");    # A21
$A[3] = Real("-(2*$ff)"); # A22

# 
#  choose $m2, which determines $m1, $k1, $k2
#
$m2 = random(1,5,1);

$m1 = 2 * $m2;
$k1 = 2 * $m1 * $ff;
$k2 = 2 * $m2 * $ff;



$multians1 = MultiAnswer( $A[0], $A[1], $A[2], $A[3] )->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  "<table border='0' cellspacing='5'>
    <tr><td> %s </td><td> %s </td></tr>
    <tr><td> %s </td><td> %s </td></tr>
    </table>",
    tex_format =>  "\left\lbrack\begin{array}{rr} %s & %s \\[2ex] %s & %s \end{array}\right\rbrack" ,

    checker => sub {
        my ($correct, $student, $self ) = @_;
	my ($stuA11, $stuA12, $stuA21, $stuA22) = @{$student};

        if ( ($stuA11 == $A[0]) && ($stuA12 == $A[1]) && ($stuA21 == $A[2]) && ($stuA22 == $A[3]) ) 
        { return 1; } else { Value::Error('At least one entry is incorrect'); }
    }

);

$c0 = Real("1");
$c1 = Real("2");
$c2 = Formula("$f t");
$c3 = Formula("$f t");
$c4 = Real("1");
$c5 = Real("-1");
$c6 = Formula("2*$f t");
$c7 = Formula("2*$f t");

$f2 = 2 * $f;

$x1 = Formula("1(a1 cos($f t) + b1 sin($f t)) + (a2 cos($f2 t) + b2 sin($f2 t))");
$x2 = Formula("2(a1 cos($f t) + b1 sin($f t)) - (a2 cos($f2 t) + b2 sin($f2 t))");

$multians2 = MultiAnswer($x1, $x2)->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='0'>
    <tr><td>x<sub>1</sub>(t) = %s</td></tr>
    <tr><td>x<sub>2</sub>(t) = %s</td></tr>
    </table>",
    tex_format =>  
    "\begin{array}{l} 
    x_1(t) = %s \\ 
    x_2(t) = %s 
    \end{array}",

    checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};

      if ( !$c[0]->typeMatch($s[0]) || !$c[1]->typeMatch($s[1]) ) {
           Value::Error("<b>You must enter both x<sub>1</sub>(t) and x<sub>2</sub>(t)</b>");
      }

      if (    $c[0]->typeMatch($s[0]) && $s[0] != Formula(0) && $s[0]->isFormula
           && $c[1]->typeMatch($s[1]) && $s[1] != Formula(0) && $s[1]->isFormula
           && (    $s[0]->D('a1') == Formula(0) || $s[1]->D('a1') == Formula(0)
                || $s[0]->D('a2') == Formula(0) || $s[1]->D('a2') == Formula(0)
                || $s[0]->D('b1') == Formula(0) || $s[1]->D('b1') == Formula(0)
                || $s[0]->D('b2') == Formula(0) || $s[1]->D('b2') == Formula(0)
              )
         ) 
      { Value::Error("Don't forget the constants a1, a2, b1, b2"); } 

 
      if (    $c[0]->typeMatch($s[0]) && $s[0] != Formula(0) && $s[0]->isFormula
           && $c[1]->typeMatch($s[1]) && $s[1] != Formula(0) && $s[1]->isFormula
           && $s[0]->D('a1') != Formula(0) && $s[1]->D('a1') != Formula(0)
           && $s[0]->D('a2') != Formula(0) && $s[1]->D('a2') != Formula(0)
           && $s[0]->D('b1') != Formula(0) && $s[1]->D('b1') != Formula(0)
           && $s[0]->D('b2') != Formula(0) && $s[1]->D('b2') != Formula(0)
           && $A[0] * $s[0] + $A[1] * $s[1] == $s[0]->D('t')->D('t')
           && $A[2] * $s[0] + $A[3] * $s[1] == $s[1]->D('t')->D('t')
         ) 
      { return 1; } else { return 0; }

    }
);






#######################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
\{
ColumnTable(
"Consider a system of two toy railway cars (i.e., frictionless masses)
connected to each other
by two springs, one of which is attached to the wall, as shown in the
figure.  Let \( x_1 \) and \( x_2 \) be the displacement of the first 
and second masses from their equilibrium positions.  Suppose the 
masses are \( m_1 = $m1 \ \mathrm{kg} \) and \( m_2 = $m2 \ \mathrm{kg} \),
and the spring constants are \( k_1 = $k1 \ \mathrm{N/m} \) and 
\( k_2 = $k2 \ \mathrm{N/m} \)."
,
$BCENTER.
image("2masses-2springs-new.png", width=>386, height=>132, tex_size=>800).
$ECENTER
,
indent => 0, separation => 30, valign => "TOP"
);
\}

\{ BeginList('OL',type=>'a') \}

$ITEM
Set up a system of second-order differential equations that models this
situation.
\{ 
mbox(
[
' \( \boldsymbol{\vec{x}^{\, \prime\prime}} = \) ', 
display_matrix([[$multians1->ans_rule(5),$multians1->ans_rule(5)],[$multians1->ans_rule(5),$multians1->ans_rule(5)]]),
' \( \boldsymbol{\vec{x}} \) '
],
allowbreaks=>'yes'
) 
\}

$ITEMSEP
$ITEM
Find the general solution to this system of differential equations.
Use \( a_1, a_2, b_1, b_2 \) to denote arbitrary constants, and enter 
them as ${BTT}a1${ETT}, ${BTT}a2${ETT}, ${BTT}b1${ETT}, ${BTT}b2${ETT}. 
$BR
\( x_1(t) = \) \{ $multians2->ans_rule(60) \}
$BR
\( x_2(t) = \) \{ $multians2->ans_rule(60) \}

\{ EndList('OL') \}
END_TEXT
Context()->normalStrings;


###################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $multians1->cmp() );

ANS( $multians2->cmp() );

COMMENT('MathObject version.');

ENDDOCUMENT();