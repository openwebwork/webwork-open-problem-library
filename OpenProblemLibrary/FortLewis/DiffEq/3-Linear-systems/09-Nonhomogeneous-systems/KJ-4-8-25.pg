## DESCRIPTION
## Linear systems: Nonhomogeneous linear systems
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Nonhomogeneous systems)
## Date(01/31/2012)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(SDE-NH-IVP)
## MLTleader(1)
## Level(3)
## MO(1)
## TitleText1('Elementary Differential Equations')
## AuthorText1('Kohler and Johnson')
## EditionText1('2006')
## Section1('4.8')
## Problem1('25')
## KEYWORDS('Nonhomogeneous linear systems')


##################################
#  Initialization


DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"unionLists.pl"
);

TEXT(beginproblem());


##################################
#  Setup

#Context("Vector2D");
Context("Numeric")->variables->are(t=>"Real");

$c = random(-5,-1,1);
$d = -($c);
do { $f = non_zero_random(-5,5,1); } until ($f != $c && $f != $d);
$g = -($f);

$A11 = $c;
$A12 = $d;
$A21 = $d;
$A22 = $c;

#$frac = Compute("$f/$c");

#$answer1 = ColumnVector([0,$frac]);
#$answer2 = ColumnVector([1,1]);

$y1top = Formula("0");
$y1bot = Formula("$f/$c");

$y2top = Formula("1");
$y2bot = Formula("1");


$multians1 = MultiAnswer($y1top, $y1bot, $y2top, $y2bot)->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='0'>
    <tr>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
      <td>&nbsp;&nbsp;</td>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    </tr>
    </table>",
    tex_format =>  
    "\left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack + c 
     \left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack",

    checker => sub {
        my ($correct, $student, $answerHash ) = @_;
        my @c = @{$correct};
	my @s = @{$student};

        my $flag1 = 0;
        my $flag2 = 0;

        Value::Error("Your solutions are not linearly independent") if
        $c[0]->typeMatch($s[0]) &&
        $c[1]->typeMatch($s[1]) &&
        $c[2]->typeMatch($s[2]) &&
        $c[3]->typeMatch($s[3]) &&
        ($s[0] * $s[3] == $s[1] * $s[2]);

        if ( $c[0]->typeMatch($s[0]) && 
             $c[1]->typeMatch($s[1]) && 
             ($s[0] != 0 || $s[1] != 0) ) 
        {
          if ( ($A11 * $s[0] + $A12 * $s[1] + $f == $s[0]->D('t')) &&
               ($A21 * $s[0] + $A22 * $s[1] + $g == $s[1]->D('t')) 
          ){
                $flag1=1;
          }
        }

        if ( $c[2]->typeMatch($s[2]) && 
             $c[3]->typeMatch($s[3]) && 
             ($s[2] != 0 || $s[3] != 0) && 
             ($s[2] == $s[3]) 
           ) 
        { $flag2=1; }

        if ($flag1==1 && $flag2 ==1){
           return 1;
        } elsif ($flag1 == 1) {
           Value::Error("The vector on the left is correct");
        } elsif ($flag2 == 1) {
           Value::Error("The vector on the right is correct");
        }else{
           Value::Error("Neither of the vectors is correct");
        }
       
    }
);




#######################################
#  Main text

Context()->texStrings;
BEGIN_TEXT

Determine all equilibrium solutions (i.e., constant solutions that other
solutions approach as \( t \to \infty \))
of the following nonhomogeneous linear system:
$PAR
\[
\displaystyle
\ \boldsymbol{\vec{y}^{\, \prime}}(t)
=
\left\lbrack
\begin{array}{rr}
$A11 & $A12 \\
$A21 & $A22
\end{array} 
\right\rbrack
\boldsymbol{\vec{y}}(t)
+
\left\lbrack
\begin{array}{c}
$f \\
$g
\end{array} 
\right\rbrack.
\]
$BR
$BR
As \( t \to \infty \), the equilibrium solution has the form
$BR
\{ 
mbox(
[
'\( \boldsymbol{\vec{y}} = \)', 
display_matrix([[$multians1->ans_rule(5)],[$multians1->ans_rule(5)]]),
' \( + \ c \) ', 
display_matrix([[$multians1->ans_rule(5)],[$multians1->ans_rule(5)]]),
],
allowbreaks=>'yes'
) 
\}
END_TEXT
Context()->normalStrings;


###################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $multians1->cmp() );

ENDDOCUMENT();
