## DESCRIPTION
## Eigenvalues and systems of differential equations
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Phase planes)
## Date(01/31/2012)
## Institution(Rochester and Fort Lewis College)
## Author(Paul Pearson)
## Level(3)
## TitleText1('Elementary Differential Equations')
## AuthorText1('Kohler and Johnson')
## EditionText1('2006')
## Section1('4.6')
## Problem1('32')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGunion.pl",
"imageChoice.pl",
);

TEXT(beginproblem());

$refreshCachedImages = 1;


#############################
#  Setup

Context("Numeric");
Context()->variables->are(t=>"Real");

#######################
#  Graphs

$htmlsize = 200;
$texsize  = 450;

@gr = ();
@x = ();
@y = ();

foreach my $j (0..3) {

  if ($j == 0) {

    $gr[$j] = init_graph(-1,-5,5,25,axes=>[0,0],size=>[$htmlsize,$htmlsize]);
    $gr[$j]->lb('reset');
    # x-axis
    foreach my $i (1..4) {
      $gr[$j]->lb( new Label( $i,-1, $i,'black','center','top'));
    }
    $gr[$j]->h_ticks(0,"black",1,2,3,4);
    $gr[$j]->lb( new Label(4.5,-1,'y1','black','center','top'));

    # y-axis
    foreach my $i (1..4) {
      $gr[$j]->lb( new Label( -0.25, 5*$i, 5*$i,'black','right','middle'));
    }
    $gr[$j]->v_ticks(0,"black",5,10,15,20);
    $gr[$j]->lb( new Label(-0.25,23,'y2','black','right','middle'));

    # parametric curve
    $x[$j] = Formula("e^t cos(t/2)");
    $y[$j] = Formula("e^t sin(t/2)");
    $f[$j] = new Fun( $x[$j]->perlFunction, $y[$j]->perlFunction, $gr[$j] );
    $f[$j]->domain(-3,4);
    $f[$j]->steps(60);
    $f[$j]->weight(2);
    $f[$j]->color('blue'); 

    # arrows on parametric curve
    $gr[$j]->moveTo( $x[$j]->eval(t=>"2"),  $y[$j]->eval(t=>"2"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"2.1"),$y[$j]->eval(t=>"2.1"),'blue',3);
    $gr[$j]->moveTo( $x[$j]->eval(t=>"3"),  $y[$j]->eval(t=>"3"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"3.01"),$y[$j]->eval(t=>"3.01"),'blue',3);


  } elsif ($j == 1) {

    $gr[$j] = init_graph(-1.5,-1.5,1.5,1.5,axes=>[0,0],size=>[$htmlsize,$htmlsize]);
    $gr[$j]->lb('reset');
    # x-axis
    foreach my $i (-1,1) {
      $gr[$j]->lb( new Label(  $i,-0.1,  $i,'black','right','top'));
    }
    $gr[$j]->h_ticks(0,"black",-1,-0.5,0.5,1);
    $gr[$j]->lb( new Label(1.25,0.1,'y1','black','center','bottom'));

    # y-axis
    foreach my $i (-1,1) {
      $gr[$j]->lb( new Label( -0.1,  $i,  $i,'black','right','top'));
    }
    $gr[$j]->v_ticks(0,"black",-1,-0.5,0.5,1);
    $gr[$j]->lb( new Label(-0.1,1.25,'y2','black','right','middle'));

    # parametric curve
    $x[$j] = Formula("cos(t)");
    $y[$j] = Formula("sin(t)");
    $f[$j] = new Fun( $x[$j]->perlFunction, $y[$j]->perlFunction, $gr[$j] );
    $f[$j]->domain(-4,4);
    $f[$j]->steps(60);
    $f[$j]->weight(2);
    $f[$j]->color('blue'); 

    # arrows on parametric curve
    $gr[$j]->moveTo( $x[$j]->eval(t=>"3"),  $y[$j]->eval(t=>"3"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"3.1"),$y[$j]->eval(t=>"3.1"),'blue',3);
    $gr[$j]->moveTo( $x[$j]->eval(t=>"5"),  $y[$j]->eval(t=>"5"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"5.1"),$y[$j]->eval(t=>"5.1"),'blue',3);


  } elsif ($j == 2) {

    $gr[$j] = init_graph(-1.5,-1.5,1.5,1.5,axes=>[0,0],size=>[$htmlsize,$htmlsize]);
    $gr[$j]->lb('reset');
    # x-axis
    foreach my $i (-1,1) {
      $gr[$j]->lb( new Label(  $i,-0.1,  $i,'black','right','top'));
    }
    $gr[$j]->h_ticks(0,"black",-1,-0.5,0.5,1);
    $gr[$j]->lb( new Label(1.25,0.1,'y1','black','center','bottom'));

    # y-axis
    foreach my $i (-1,1) {
      $gr[$j]->lb( new Label( -0.1,  $i,  $i,'black','right','top'));
    }
    $gr[$j]->v_ticks(0,"black",-1,-0.5,0.5,1);
    $gr[$j]->lb( new Label(-0.1,1.25,'y2','black','right','middle'));

    # parametric curve
    $x[$j] = Formula("cos(2 t)");
    $y[$j] = Formula("-sin(2 t)");
    $f[$j] = new Fun( $x[$j]->perlFunction, $y[$j]->perlFunction, $gr[$j] );
    $f[$j]->domain(-4,4);
    $f[$j]->steps(60);
    $f[$j]->weight(2);
    $f[$j]->color('blue'); 

    # arrows on parametric curve
    $gr[$j]->moveTo( $x[$j]->eval(t=>"3"),  $y[$j]->eval(t=>"3"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"3.1"),$y[$j]->eval(t=>"3.1"),'blue',3);
    $gr[$j]->moveTo( $x[$j]->eval(t=>"5"),  $y[$j]->eval(t=>"5"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"5.1"),$y[$j]->eval(t=>"5.1"),'blue',3);


  } else {

    $gr[$j] = init_graph(-1.5,-0.5,1.5,0.5,axes=>[0,0],size=>[$htmlsize,$htmlsize]);
    $gr[$j]->lb('reset');
    # x-axis
    foreach my $i (-1,-0.5,0.5,1) {
      $gr[$j]->lb( new Label( $i,-0.02, $i,'black','center','top'));
    }
    $gr[$j]->h_ticks(0,"black",-1,-0.5,0.5,1);
    $gr[$j]->lb( new Label(1.25,-0.02,'y1','black','center','top'));

    # y-axis
    foreach my $i (-0.4,-0.2,0.2,0.4) {
      $gr[$j]->lb( new Label( -0.05, $i, $i,'black','right','middle'));
    }
    $gr[$j]->v_ticks(0,"black",-0.4,-0.2,0.2,0.4);
    $gr[$j]->lb( new Label(-0.25,23,'y2','black','right','middle'));

    # parametric curve
    $x[$j] = Formula("e^(-t) cos(t/2)");
    $y[$j] = Formula("e^(-t) sin(t/2)");
    $f[$j] = new Fun( $x[$j]->perlFunction, $y[$j]->perlFunction, $gr[$j] );
    $f[$j]->domain(-3,4);
    $f[$j]->steps(60);
    $f[$j]->weight(2);
    $f[$j]->color('blue'); 

    # arrows on parametric curve
    $gr[$j]->moveTo( $x[$j]->eval(t=>"-0.3"), $y[$j]->eval(t=>"-0.3"));
    $gr[$j]->arrowTo($x[$j]->eval(t=>"-0.2"), $y[$j]->eval(t=>"-0.2"),'blue',3);
    $gr[$j]->moveTo( $x[$j]->eval(t=> "0.2"), $y[$j]->eval(t=> "0.2"));
    $gr[$j]->arrowTo($x[$j]->eval(t=> "0.3"), $y[$j]->eval(t=> "0.3"),'blue',3);


  }

} # end setting up graph



@systems = (); # TeX

$systems[0] = 
"\( \displaystyle
\boldsymbol{\vec{y}^{\,\prime}} 
= 
\left\lbrack 
\begin{array}{rr} 
1 & -0.5 \\ 
0.5 & 1 
\end{array} 
\right\rbrack 
\boldsymbol{\vec{y}},
\ \ \
\boldsymbol{\vec{y}}(0) 
=
\left\lbrack
\begin{array}{r}
1 \\
0
\end{array}
\right\rbrack.
\)";


$systems[1] = 
"\( \displaystyle
\boldsymbol{\vec{y}^{\,\prime}} 
= 
\left\lbrack 
\begin{array}{rr} 
0 & -1 \\ 
1 & 0 
\end{array} 
\right\rbrack 
\boldsymbol{\vec{y}},
\ \ \
\boldsymbol{\vec{y}}(0) 
=
\left\lbrack
\begin{array}{r}
1 \\
0
\end{array}
\right\rbrack.
\)";


$systems[2] = 
"\( \displaystyle
\boldsymbol{\vec{y}^{\,\prime}} 
= 
\left\lbrack 
\begin{array}{rr} 
0 & 2 \\ 
-2 & 0 
\end{array} 
\right\rbrack 
\boldsymbol{\vec{y}},
\ \ \
\boldsymbol{\vec{y}}(0) 
=
\left\lbrack
\begin{array}{r}
1 \\
0
\end{array}
\right\rbrack.
\)";


$systems[3] = 
"\( \displaystyle
\boldsymbol{\vec{y}^{\,\prime}} 
=
\left\lbrack 
\begin{array}{rr} 
-1 & -0.5 \\ 
0.5 & -1 
\end{array} 
\right\rbrack 
\boldsymbol{\vec{y}},
\ \ \
\boldsymbol{\vec{y}}(0) 
=
\left\lbrack
\begin{array}{r}
1 \\
0
\end{array}
\right\rbrack.
\)";






@QA = ();
foreach my $i (0..3) { push( @QA, $systems[$i],  $gr[$i] ); }

$ml = new_image_match_list(
  link => 1,                #  do not link to separate image
  size => [$htmlsizse,$htmlsize],        #  image size in pixels
  tex_size => 450,          #  tex size in precent times 10
  columns => 2,             #  number of columns
  separation => 20,         #  separation between image columns 
);

$ml->rf_print_q(~~&pop_up_list_print_q); # use pop-up-lists
$ml->ra_pop_up_list([ No_answer=>"?", A=>"A", B=>"B", C=>"C", D=>"D"] );

$ml->qa(@QA);               #  set the questions and answers
$ml->choose(4);             #  select 4 of them
#$ml->choose_extra(0);      #  and show the other 1



#############################
#  Main text

Context()->texStrings;
BEGIN_TEXT
\{
ColumnTable(
"Match each initial value problem with the 
phase plane plot of its solution.  (The arrows
on the curves indicate how the solution point
moves as \( t \) increases.)".
$ml->print_q()
,
$BCENTER.
$ml->print_a().
$BR.
$ECENTER
,
indent => 0, separation => 30, valign => "TOP"
)
\}
END_TEXT
Context()->normalStrings;


############################
#  Answers

install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS(str_cmp($ml->ra_correct_ans));

COMMENT("MathObject version.");

ENDDOCUMENT();