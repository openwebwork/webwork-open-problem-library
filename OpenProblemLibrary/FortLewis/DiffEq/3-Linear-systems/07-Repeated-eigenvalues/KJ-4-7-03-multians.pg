## DESCRIPTION
## Eigenvalues and systems of differential equations
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Repeated eigenvalues)
## Date(03/19/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## MLT(SDE-RR-IVP)
## MLTleader(1)
## Level(4)
## MO(1)
## TitleText1('Elementary Differential Equations')
## AuthorText1('Kohler and Johnson')
## EditionText1('2')
## Section1('4.7')
## Problem1('3')


##################################
#  Initialization


DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGmatrixmacros.pl",
"MathObjects.pl",
"parserMultiAnswer.pl",
"unionLists.pl",
);

TEXT(beginproblem());



##################################
#  Setup

Context("Numeric");
Context()->variables->are(t=>"Real");

$k = random(2,6,1);

# the matrix to be analyzed
$A11 = -1*($k);  $A12 =  1;
$A21 =  0;       $A22 = -1*($k);

# B = A - lambda I, notice that B^2 is the zero matrix
$B11 = 0; $B12 = 1;
$B21 = 0; $B22 = 0;


# repeated eigenvalue, multiplicity 2
$lambda = Real("-$k");

# the eigenvector
$w1top = Real("1");
$w1bot = Real("0");

# the generalized eigenvector
$w2top = Real("0");
$w2bot = Real("1");

$multians0 = MultiAnswer($lambda, $w1top, $w1bot, $w2top, $w2bot)->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='0'>
    <tr>
      <td> %s </td>
      <td> &nbsp; &nbsp;</td>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
      <td>&nbsp;&nbsp;</td>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    </tr>
    </table>",
    tex_format =>  
    "%s, \left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack, 
     \left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack",

    checker => sub {
        my ($correct, $student, $answerHash ) = @_;
        my @c = @{$correct};
	my @s = @{$student};

        Value::Error("Your solutions are not linearly independent") if
        $c[1]->typeMatch($s[1]) && $c[2]->typeMatch($s[2]) &&
        $c[3]->typeMatch($s[3]) && $c[4]->typeMatch($s[4]) &&
        ($s[1] * $s[4] == $s[2] * $s[3]);

        if (   $c[0]->typeMatch($s[0]) # type checking
            && $c[1]->typeMatch($s[1]) 
            && $c[2]->typeMatch($s[2])
            && $c[3]->typeMatch($s[3]) 
            && $c[4]->typeMatch($s[4])
            && ($s[1] != 0 || $s[2] != 0) # don't allow zero vector to be entered
            && ($s[3] != 0 || $s[4] != 0) 
            && ($A11 * $s[1] + $A12 * $s[2] == $s[0] * $s[1]) # eigenvector check
            && ($A21 * $s[1] + $A22 * $s[2] == $s[0] * $s[2]) 
            && ($B11 * $s[3] + $B12 * $s[4] == $s[1]) # generalized eigenvector check
            && ($B21 * $s[3] + $B22 * $s[4] == $s[2])
          )
        { return 1; } 
        

        if (   $c[0]->typeMatch($s[0]) # type checking
            && $c[1]->typeMatch($s[1]) 
            && $c[2]->typeMatch($s[2])
            && ($s[1] != 0 || $s[2] != 0) # don't allow zero vector to be entered
            && ($A11 * $s[1] + $A12 * $s[2] == $s[0] * $s[1]) # eigenvector check
            && ($A21 * $s[1] + $A22 * $s[2] == $s[0] * $s[2]) 
           )
        {  Value::Error("The eigenpair { lambda, v1 } is correct"); } 

        return 0;

    }
);





$v1top = Formula("e^(-$k t)");
$v1bot = Formula("0");

$v2top = Formula("t e^(-$k t)");
$v2bot = Formula("e^(-$k t)");

$multians1 = MultiAnswer($v1top, $v1bot, $v2top, $v2bot)->with(

    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='0'>
    <tr>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
      <td>&nbsp;&nbsp;</td>
      <td><table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    </tr>
    </table>",
    tex_format =>  
    "\left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack, \ \ 
     \left\lbrack \begin{array}{r} %s \\ %s \end{array}\right\rbrack",

    checker => sub {
        my ($correct, $student, $answerHash ) = @_;
        my @c = @{$correct};
	my @s = @{$student};

        $flag1 = 0;
        $flag2 = 0;
        $flag  = 0;

        Value::Error("Your solutions are not linearly independent") if
        $c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) &&
        $c[2]->typeMatch($s[2]) && $c[3]->typeMatch($s[3]) &&
        ($s[0] * $s[3] == $s[1] * $s[2]);

        if ( $c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) && ($s[0] != 0 || $s[1] != 0) ) {
          if ( ($A11 * $s[0] + $A12 * $s[1] == $s[0]->D('t')) &&
               ($A21 * $s[0] + $A22 * $s[1] == $s[1]->D('t')) 
          ){
                $flag1=1;
          }
        }

        if ( $c[2]->typeMatch($s[2]) && $c[3]->typeMatch($s[3]) && ($s[2] != 0 || $s[3] != 0) ) {
          if ( ($A11 * $s[2] + $A12 * $s[3] == $s[2]->D('t')) &&
               ($A21 * $s[2] + $A22 * $s[3] == $s[3]->D('t')) 
          ){
                $flag2=1;
          }
        }

        if ($flag1==1 && $flag2 ==1) {
           $flag = 1;
        }else{
           if ($flag1 == 1) {
              Value::Error("The vector on the left is correct");
           } elsif ($flag2 == 1) {
              Value::Error("The vector on the right is correct");
           } else {
              Value::Error("Neither of the solutions is correct");
           }
        }
        return $flag;        
    }
);


$c1 = non_zero_random(-4,4,1);
do { $c2 = non_zero_random(-4,4,1); } until ($c2 != $c1);

$y0top = $c1;
$y0bot = $c2;

$ytop = $c1 * $v1top + $c2 * $v2top;
$ybot = $c1 * $v1bot + $c2 * $v2bot;


$multians2 = MultiAnswer($ytop, $ybot)->with(
    singleResult => 1,
    checkTypes => 0,
    allowBlankAnswers => 1,
    format =>  
    "<table border='0' cellspacing='5'><tr><td> %s </td></tr><tr><td> %s </td></tr></table>",
    tex_format =>  
    "\begin{array}{l} y_1(t) = %s \\ y_2(t) = %s \end{array}",
    checker => sub {
        my ($correct, $student, $self ) = @_;
        my @c = @{$correct};
	my @s = @{$student};
    
        $flag1 = 0;
        $flag2 = 0;
        $flag  = 0;

        if ( $s[0] && !($s[1]) ) { 
           if ($c[0] == $s[0]) { $flag1 = 1; }
        }
        if ( $s[1] && !($s[0]) ) { 
           if ($c[1] == $s[1]) { $flag2 = 1; }
        }
        if ( $s[0] && $s[1] ) { 
           if ($c[0] == $s[0]) { $flag1 = 1; }
           if ($c[1] == $s[1]) { $flag2 = 1; }
        }

        if ($flag1==1 && $flag2 ==1) {
           $flag = 1;
        }else{
           if ($flag1 == 1) {
              Value::Error("The solution y1(t) is correct");
           } elsif ($flag2 == 1) {
              Value::Error("The solution y2(t) is correct");
           } else {
              Value::Error("Neither of the solutions is correct");
           }
        }
        return $flag;        
       
    }
);


#######################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Consider the initial value problem
$PAR
\[
\displaystyle
\boldsymbol{\vec{y}^{\, \prime}}
=
\left\lbrack
\begin{array}{rr}
$A11 & $A12 \\
$A21 & $A22
\end{array} 
\right\rbrack
\boldsymbol{\vec{y}},
\ \ \
\boldsymbol{\vec{y}}(0) 
=
\left\lbrack
\begin{array}{r}
$y0top \\
$y0bot
\end{array}
\right\rbrack.
\]
$BR

\{ BeginList("OL",type=>"a") \}

$ITEM
Find the eigenvalue \( \lambda \), an eigenvector
\( \boldsymbol{\vec{v}_1} \), and a generalized
eigenvector \( \boldsymbol{\vec{v}_2} \) for the 
coefficient matrix of this linear system.
$BCENTER
\{ 
mbox(
[
'\( \lambda = \) ',
$multians0->ans_rule(5),
', \( \boldsymbol{\vec{v}_1} =  \) ', 
display_matrix([[$multians0->ans_rule(5)],[$multians0->ans_rule(5)]]),
', \( \boldsymbol{\vec{v}_2} =  \) ', 
display_matrix([[$multians0->ans_rule(5)],[$multians0->ans_rule(5)]]),
],
allowbreaks=>'yes'
) 
\}
$ECENTER


$ITEMSEP
$ITEM
Find the most general real-valued solution to the linear system 
of differential equations.  Use \( t \) as the independent
variable in your answers.
$BCENTER
\{ 
mbox(
[
'\( \boldsymbol{\vec{y}}(t) = c_1 \)', 
display_matrix([[$multians1->ans_rule(10)],[$multians1->ans_rule(10)]]),
'\( + \ c_2 \)', 
display_matrix([[$multians1->ans_rule(10)],[$multians1->ans_rule(10)]]),
],
allowbreaks=>'yes'
) 
\}
$ECENTER

$ITEMSEP
$ITEM
Solve the original initial value problem.
$BR
\( y_1(t) = \) \{ $multians2->ans_rule(20) \}
$BR
\( y_2(t) = \) \{ $multians2->ans_rule(20) \}

\{ EndList("OL") \}

END_TEXT
Context()->normalStrings;


###################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $multians0->cmp() );

ANS( $multians1->cmp() );

ANS( $multians2->cmp() );

COMMENT('MathObject version.');

ENDDOCUMENT();

