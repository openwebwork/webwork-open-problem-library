## DESCRIPTION
## Quadratic functions, expressions, and equations
## ENDDESCRIPTION


## BookTitle('Algebra: Form and Function')
## BookChapter('Quadratic Functions, Expressions, and Equations')
## DBsubject(Algebra)
## DBchapter(Factoring)
## DBsection(Factoring: common factors)
## Date(01/01/10)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## TitleText1('Algebra: Form and Function')
## AuthorText1('McCallum, Connally, and Hughes-Hallett')
## EditionText1('1')
## Section1('9.4')
## Problem1('27')
## KEYWORDS('quadratic functions')


####################################
#  Initialization

DOCUMENT();  

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"PGcourse.pl",
"contextPolynomialFactors.pl",
"contextLimitedPowers.pl",
);

TEXT(beginproblem());


####################################
#  Setup

Context("PolynomialFactors-Strict");

LimitedPowers::OnlyIntegers(
minPower => 0, maxPower => 1,
message => "either 0 or 1",
);

$a = random(2,7,1);
$b = random(2,7,1);
while ($a == $b) { $b = random(2,7,1); }
do { 
  $c = random(4,7,1);
  $d = random(2,3,1); 
} until ($a * $c != $b * $d);

$ad = $a * $d;
$bd = $b * $d;

# (dx-c)(ax-b)

$factored = Compute("($d x - $c)($a x - $b)");

$expr = "x ($ad x - $bd) - $c ($a x - $b)";

$ans1 = Compute("$c/$d");
$ans2 = Compute("$b/$a");

####################################
#  Main Text

Context()->texStrings;
BEGIN_TEXT
(a) Factor the quadratic function \( y = $expr \).
$BR
\( y \) = \{ ans_rule(30) \}
\{ AnswerFormatHelp("formulas") \}  
$BR
$BR
(b) Find the zeros of \( y = $expr \).  If there is 
more than one correct answer, enter your answers 
as a comma separated list.  If there are no 
solutions, enter ${BITALIC}NONE.${EITALIC}
$BR
\( x = \) \{ ans_rule(30) \}
\{ AnswerFormatHelp("numbers") \} 
END_TEXT
Context()->normalStrings;

###################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS($factored->cmp() );

ANS(List($ans1,$ans2)->cmp() );


COMMENT('MathObject version');
ENDDOCUMENT();

