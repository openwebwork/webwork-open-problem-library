# DESCRIPTION
# Gives a number, opposite, or reciprocal and asks to find the others
# ENDDESCRIPTION

## DBsubject(Arithmetic)
## DBchapter(Fractions/rational numbers)
## DBsection(Properties)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(NumOppRecip)
## MLTleader(1)
## Level(2)
## KEYWORDS('real numbers')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals")->texStrings;
$num = random(2,19)*random(-1,1,2);
do {$den = random(2,19)} until ($num/$den != 1);
$case1 = random(0,1,1); # 0 - no fraction, 1 - fraction
$n = ($case1 == 0) ? Fraction($num,1) : Fraction($num,$den);

$case2 = random(0,1,2); # 0 - gives number, 1 - opposite, 2 - reciprocal
if ($case2 == 0) {
  $question = "Given the number \($n\), find its opposite and reciprocal.";
  $dispq1 = "Opposite:";
  $dispq2 = "Reciprocal:";
  $ans1 = -$n;
  $ans2 = 1/$n;
} elsif ($case2 == 1) {
  $question = "Given that \($n\) is the opposite of a number, find the number and that number's reciprocal:";
  $dispq1 = "Number:";
  $dispq2 = "Number's reciprocal";
  $ans1 = -$n;
  $ans2 = -1/$n;
} else {
  $question = "Given that \($n\) is the reciprocal of a number, find the number and that number's opposite:";
  $dispq1 = "Number:";
  $dispq2 = "Number's opposite";
  $ans1 = 1/$n;
  $ans2 = -1/$n;
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
$question
$PAR
(a) $dispq1 \{ans_rule(10)\}
$PAR
(b) $dispq2 \{ans_rule(10)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans1)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans2)->cmp(studentsMustReduceFractions=>1));

Context()->normalStrings;

ENDDOCUMENT();