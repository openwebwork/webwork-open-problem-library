# DESCRIPTION
# Find the inverse of a matrix and use it to solve a system.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Matrices)
## DBsection(Inverses)
## Institution(TCNJ)
## Level(2)
## KEYWORDS('matrix' 'inverse')
## Tagged by tda2d


###########################################################################
# initialization 
###########################################################################
DOCUMENT();        
loadMacros(
  "PGmatrixmacros.pl", 
  "PGmorematrixmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$A = new MatrixReal1(3,3);
$B = new MatrixReal1(3,1);

do {
  $a11 = non_zero_random(-5,5,1);
  $a21 = non_zero_random(-5,5,1); 
  $a31 = non_zero_random(1,5,1);

  $b = non_zero_random(-3,3,1);
  $a12 = $b * $a11;
  $m = random(-1,1,2);
  $a22 = $b * $a21 + $m;
  $a32 = $b * $a31;

  $c = random(-3,3,1);
  $d = random(-3,3,1);
  $n = random(-1,1,2);
  $det = - $a31 * $m * $n;
  $a13 = ($c * $a11 + $d * $a12 + $n);
  $a23 = ($c * $a21 + $d * $a22);
  $a33 = ($c * $a31 + $d * $a32);

  $a11 = $a11/$det;
  $a12 = $a12/$det;
  $a13 = $a13/$det;
} until ($a22 != 0 && $a13 != 0 && $a23 != 0 && $a33 != 0 && $a11 == floor($a11) && $a12 == floor($a12) && $a13 == floor($a13));

$ans11 = ($a22 * $a33 - $a23 * $a32);
$ans12 = - ($a12 * $a33 - $a13 * $a32);
$ans13 = ($a12 * $a23 - $a13 * $a22);
$ans21 = - ($a21 * $a33 - $a23 * $a31);
$ans22 = ($a11 * $a33 - $a13 * $a31);
$ans23 = - ($a11 * $a23 - $a13 * $a21);
$ans31 = ($a21 * $a32 - $a22 * $a31);
$ans32 = - ($a11 * $a32 - $a12 * $a31);
$ans33 = ($a11 * $a22 - $a12 * $a21);

$A->assign(1,1,$ans11);
$A->assign(1,2,$ans12);
$A->assign(1,3,$ans13);
$A->assign(2,1,$ans21);
$A->assign(2,2,$ans22);
$A->assign(2,3,$ans23);
$A->assign(3,1,$ans31);
$A->assign(3,2,$ans32);
$A->assign(3,3,$ans33);

$b1 = random(-5,5,1);
$b2 = non_zero_random(-5,5,1);
$b3 = non_zero_random(-5,5,1);

$B->assign(1,1,$b1);
$B->assign(2,1,$b2);
$B->assign(3,1,$b3);

$pm1 = ($a12 < 0) ? "-" : "+";
$pm2 = ($a13 < 0) ? "-" : "+";
$pm3 = ($a22 < 0) ? "-" : "+";
$pm4 = ($a23 < 0) ? "-" : "+";
$pm5 = ($a32 < 0) ? "-" : "+";
$pm6 = ($a33 < 0) ? "-" : "+";

$n1 = (abs($a11) != 1) ? $a11 : (($a11 == -1) ? "-" : "");
$n4 = (abs($a21) != 1) ? $a21 : (($a21 == -1) ? "-" : "");
$n7 = (abs($a31) != 1) ? $a31 : (($a31 == -1) ? "-" : "");
$n2 = (abs($a12) == 1) ? "" : abs($a12);
$n3 = (abs($a13) == 1) ? "" : abs($a13);
$n5 = (abs($a22) == 1) ? "" : abs($a22);
$n6 = (abs($a23) == 1) ? "" : abs($a23);
$n8 = (abs($a32) == 1) ? "" : abs($a32);
$n9 = (abs($a33) == 1) ? "" : abs($a33);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
(a) Find the inverse of the matrix
$PAR
\[
A = \left[
\begin{array}{rrr}
$a11 & $a12 & $a13\\
$a21 & $a22 & $a23\\
$a31 & $a32 & $a33
\end{array}
\right]
\]
$PAR
$BCENTER
\{ mbox( '\(A^{-1}=\)', answer_matrix(3,3,5) ) \} 
$ECENTER
$PAR
$BR
(b) Use the answer from part (a) to solve the linear system
$PAR
\[
\left\{'\{'\} 
\begin{array}{rcrcrcr}
   $n1 x_1 & $pm1 &  $n2 x_2 & $pm2 & $n3 x_3 & = & $b1 \cr
$n4 x_1 & $pm3 & $n5 x_2 & $pm4 & $n6 x_3 & = & $b2 \cr 
  $n7 x_1 & $pm5 &   $n8 x_2  & $pm6 & $n9 x_3 & = & $b3  
\end{array} 
\right.
\]
$PAR
$BCENTER
\{ mbox('\(\left[
\begin{array}{r}
x_1 \\ x_2 \\ x_3
\end{array}
\right]\)', '\(\quad =\)', answer_matrix(3,1,10) ) \}
$ECENTER
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS(num_cmp($ans11));
ANS(num_cmp($ans12));
ANS(num_cmp($ans13));
ANS(num_cmp($ans21));
ANS(num_cmp($ans22));
ANS(num_cmp($ans23));
ANS(num_cmp($ans31));
ANS(num_cmp($ans32));
ANS(num_cmp($ans33));
ANS num_cmp(ra_flatten_matrix($A*$B));


###########################################################################
# solution
###########################################################################
$c1 = $ans11*$b1 + $ans12*$b2 + $ans13*$b3;
$c2 = $ans21*$b1 + $ans22*$b2 + $ans23*$b3;
$c3 = $ans31*$b1 + $ans32*$b2 + $ans33*$b3;
Context()->texStrings;
BEGIN_SOLUTION
$PAR $BBOLD SOLUTION: $EBOLD
(a) The idea here is to use the algorithm for finding the inverse of a (nonsingular) matrix. The algorithm says to run the Gauss-Jordan reduction in order to find the RRE of the following augmented matrix:
$PAR
\[ \left[
\begin{array}{rrr|rrr}
$a11 & $a12 & $a13 & 1 & 0 & 0  \cr
$a21 & $a22 & $a23 & 0 & 1 & 0  \cr
$a31 & $a32 & $a33 & 0 & 0 & 1  
\end{array} 
\right] \]
$PAR
Performing the necessary elementary row operations, we get the RRE form:
$PAR
\[ \left[
\begin{array}{rrr|rrr}
1 & 0 & 0 & $ans11 & $ans12 & $ans13  \cr
0 & 1 & 0 & $ans21 & $ans22 & $ans23  \cr
0 & 0 & 1 & $ans31 & $ans32 & $ans33  
\end{array} 
\right] \]
$PAR
Since the matrix to the left of the vertical bar in the RRE form is precisely the identity matrix, we conclude that the orignal matrix \(A\) is nonsingular with
$PAR
\[ A^{-1} = \left[
\begin{array}{rrr}
$ans11 & $ans12 & $ans13 \cr
$ans21 & $ans22 & $ans23 \cr
$ans31 & $ans32 & $ans33 
\end{array} 
\right] \]
$PAR
(b) The idea is to write the linear system as
$PAR
\[
Ax = \left[ \begin{array}{r} $b1 \\ $b2 \\ $b3 \end{array} \right]
\]
$PAR
In part (a), we have seen that \(A\) is nonsingular, and so we get that the unique solution is
\[
x = A^{-1} \left[ \begin{array}{r} $b1 \\ $b2 \\ $b3 \end{array} \right] = \left[ \begin{array}{r} $c1 \\ $c2 \\ $c3 \end{array} \right]
\]
END_SOLUTION
Context()->normalStrings;

COMMENT('Edited and updated in 2012/2013 by Rick Lynch @ Mizzou. Originally taken from NPL.
$BR
Desc: Find the inverse of a matrix and use it to solve a system.');
ENDDOCUMENT();