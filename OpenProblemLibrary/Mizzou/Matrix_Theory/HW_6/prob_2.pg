# DESCRIPTION
# Diagonalize the two given matrices.
# ENDDESCRIPTION

## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(Diagonalization)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(diag3x3)
## Level(3)
## KEYWORDS('matrices', 'diagonalization')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "parserMultiAnswer.pl",
  "PGmatrixmacros.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals");
### Part (a)
### Matrix of form [[a,b,c], [-d,-d,d], [0,0,e]]
do {
  $a_1 = non_zero_random(-9,9,1);
  $b_1 = non_zero_random(-9,9,1);
  do {$c_1 = non_zero_random(-7,7)} until (abs($c_1) != abs($a_1) && $c_1 != $b_1);
  do {$d_1 = non_zero_random(-9,9,1)} until (abs($d_1) != abs($a_1) && abs($d_1) != abs($b_1));
  $ins_1 = ($a_1)**2 + 2*$a_1*$d_1 - 4*$b_1*$d_1 + ($d_1)**2;
  if ($ins_1 <= 0) { $ins_1 = 2 };
  $sqrt_1 = sqrt($ins_1);
  $e_1 = non_zero_random(-5,5);
  $den = $b_1*$d_1 - $a_1*($d_1+$e_1) + $e_1*($d_1+$e_1);
} until ($sqrt_1 == floor($sqrt_1) && $den != 0);
$e1_1 = Fraction($a_1-$d_1-$sqrt_1,2);
$e2_1 = Fraction($a_1-$d_1+$sqrt_1,2);
$e3_1 = $e_1;

$x11_1 = Fraction(-($a_1+$d_1-$sqrt_1),2*$d_1);
$x12_1 = Fraction(-($a_1+$d_1+$sqrt_1),2*$d_1);
$x13_1 = Fraction($b_1*$d_1+$c_1*($d_1+$e_1), $den);
$x21_1 = 1;
$x22_1 = 1;
$x23_1 = Fraction(-$d_1*($a_1+$c_1-$e_1),$den);
$x31_1 = 0;
$x32_1 = 0;
$x33_1 = 1;

$x11_1a = -($a_1+$d_1-$sqrt_1)/(2*$d_1);
$x12_1a = -($a_1+$d_1+$sqrt_1)/(2*$d_1);
$x13_1a = ($b_1*$d_1+$c_1*($d_1+$e_1))/$den;
$x21_1a = 1;
$x22_1a = 1;
$x23_1a = -$d_1*($a_1+$c_1-$e_1)/$den;
$x31_1a = 0;
$x32_1a = 0;
$x33_1a = 1;

Context()->texStrings;
$X_1 = "\left[\begin{array}{ccc} $x11_1 & $x12_1 & $x13_1\\ $x21_1 & $x22_1 & $x23_1\\$x31_1 & $x32_1 & $x33_1 \end{array}\right]";
$D_1 = "\left[\begin{array}{ccc} $e1_1 & 0 & 0 \\ 0 & $e2_1 & 0\\ 0 & 0 & $e3_1 \end{array}\right]";


### Part (b)
### Matrix of form [[a,b,-b],[b,d,-d],[-b,-d,d]]
do {
  $a = random(-4,4);
  do {$b = non_zero_random(-4,4)} until ($b != $a);
  do {$c = non_zero_random(-4,4)} until ($c != $a && $c != $b);
  $k = random(2,3,1)*random(-1,1,2);
  $e3_2 = $a - $c + $b*$k;
} until ($e3_2 != 0);
$e1_2 = 0;
$e2_2 = 0;

$x11_2 = 1;
$x12_2 = -$k;
$x13_2 = $a;
$x21_2 = 0;
$x22_2 = 1;
$x23_2 = $b;
$x31_2 = 1;
$x32_2 = 0;
$x33_2 = $c;


Context("Matrix");
$X_2 = Matrix([$x11_2, $x12_2, $x13_2], [$x21_2, $x22_2, $x23_2], [$x31_2, $x32_2, $x33_2]);
$D_2 = Matrix([$e1_2, 0, 0], [0, $e2_2, 0], [0, 0, $e3_2]);


$A_1 = Matrix([$a_1,$b_1,$c_1],[-$d_1,-$d_1,$d_1],[0,0,$e_1]);
$ans_1 = MultiAnswer($x11_1a, $x12_1a, $x13_1a, $x21_1a, $x22_1a, $x23_1a, $x31_1a, $x32_1a, $x33_1a, $e1_1, $e2_1, $e3_1)->with(
  singleResult => 1,
  checkTypes => 1,
  format => "X=(%s, %s, %s)$BR (%s, %s, %s)$BR (%s, %s, %s)$BR D=(%s, 0, 0)$BR (0, %s, 0)$BR (0, 0, %s)",
  tex_format => "X= \left[\begin{array}{ccc} %s & %s & %s \\ %s &  %s & %s \\ %s & %s & %s \end{array}\right] ,  D = \left[\begin{array}{ccc} %s & 0 & 0 \\ 0 &  %s & 0 \\ 0 & 0 & %s \end{array}\right]",
  checker => sub {
    my ($cor, $std, $self) = @_;
    @QD_r = @{$std};
    $Q = Matrix([$QD_r[0],$QD_r[1], $QD_r[2]], [$QD_r[3], $QD_r[4], $QD_r[5]],  [$QD_r[6], $QD_r[7], $QD_r[8]]);
    $D = Matrix([$QD_r[9], 0, 0], [0, $QD_r[10], 0], [0, 0, $QD_r[11]]);
    $M = ($Q->det == 0) ? $D : ($Q)*($D)*($Q->inverse);
    return ($A_1 == $M)
  }
);

$A_2 = Matrix([$a,$k*$a,-$a], [$b, $k*$b, -$b], [$c, $k*$c, -$c]);
$ans_2 = MultiAnswer($x11_2, $x12_2, $x13_2,$x21_2, $x22_2, $x23_2,$x31_2, $x32_2, $x33_2,$e1_2,$e2_2,$e3_2)->with(
  singleResult => 1,
  checkTypes => 1,
  format => "X=(%s, %s, %s)$BR (%s, %s, %s)$BR (%s, %s, %s)$BR D=(%s, 0, 0)$BR (0, %s, 0)$BR (0, 0, %s)",
  tex_format => "X= \left[\begin{array}{ccc} %s & %s & %s \\ %s &  %s & %s \\ %s & %s & %s \end{array}\right] ,  D = \left[\begin{array}{ccc} %s & 0 & 0 \\ 0 &  %s & 0 \\ 0 & 0 & %s \end{array}\right]",
  checker => sub {
    my ($cor, $std, $self) = @_;
    @QD_r = @{$std};
    $Q = Matrix([$QD_r[0],$QD_r[1], $QD_r[2]], [$QD_r[3], $QD_r[4], $QD_r[5]],  [$QD_r[6], $QD_r[7], $QD_r[8]]);
    $D = Matrix([$QD_r[9], 0, 0], [0, $QD_r[10], 0], [0, 0, $QD_r[11]]);
    $M = ($Q->det == 0) ? $D : ($Q)*($D)*($Q->inverse);
    return ($A_2 == $M)
  }
);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
For each of the following, factor the matrix \(A\) into a product \(XDX^{-1}\) where \(D\) is diagonal.
$PAR
(a) \(A = $A_1\)
$PAR
\{ mbox( '\(X=\)',
	 display_matrix(
		[[ $ans_1->ans_rule(8), $ans_1->ans_rule(8), $ans_1->ans_rule(8) ],
                 [ $ans_1->ans_rule(8), $ans_1->ans_rule(8), $ans_1->ans_rule(8) ],
                 [ $ans_1->ans_rule(8), $ans_1->ans_rule(8), $ans_1->ans_rule(8) ]]),
	 '\(\qquad D=\)',
	 display_matrix(
		[[ $ans_1->ans_rule(8), 0, 0 ],
                 [ 0, $ans_1->ans_rule(8), 0 ],
                 [ 0, 0, $ans_1->ans_rule(8) ]]),
) \}
$PAR $BR
(b) \(A = $A_2\)
$PAR
\{ mbox( '\(X=\)',
	 display_matrix(
		[[ $ans_2->ans_rule(8), $ans_2->ans_rule(8), $ans_2->ans_rule(8) ],
                 [ $ans_2->ans_rule(8), $ans_2->ans_rule(8), $ans_2->ans_rule(8) ],
                 [ $ans_2->ans_rule(8), $ans_2->ans_rule(8), $ans_2->ans_rule(8) ]]),
	 '\(\qquad D=\)',
	 display_matrix(
		[[ $ans_2->ans_rule(8), 0, 0 ],
                 [ 0, $ans_2->ans_rule(8), 0 ],
                 [ 0, 0, $ans_2->ans_rule(8) ]]),
) \}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans_1->cmp());
ANS($ans_2->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
BEGIN_SOLUTION
${BBOLD}Solution:${EBOLD} Firstly, find the eigenvalues of \(A\) by solving the equation
$PAR\[
p(\lambda) = \det(A - \lambda I) = 0
\] $PAR
for \(\lambda\). Secondly, find an eigenvector basis for \(\mathbb{R}^3\). For this, find a basis for each eigenspace and then put together these eigenvectors. Lastly, construct \(X\) and \(D\). Specifically, \(X\) is the square \(3\times 3\) matrix whose columns are the eigenvector basis elements and \(D\) is the diagonal matrix whose first diagonal entry is the eigenvalue corresponding to the first column of \(X\), etc. This way we get that
$PAR $BR
(a) \(X = $X_1 \qquad D = $D_1\)
$PAR $BR
(b) \(X = $X_2 \qquad D = $D_2\)
$PAR
END_SOLUTION
Context()->normalStrings;

# Created in 2012. 
# Desc: Diagonalize the two given matrices.
ENDDOCUMENT();