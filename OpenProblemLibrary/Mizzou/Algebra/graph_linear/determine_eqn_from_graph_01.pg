# DESCRIPTION
# Plots a line through arbitrary points and asks the student the give the 
# equation of the line passing through these points.
# The line is completely arbitrary.
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Linear equations and functions)
## DBsection(Graphs of lines)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(line-graph-eqn)
## MLTleader(1)
## Level(2)
## KEYWORDS('linear equation','equation','line')

###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "parserAssignment.pl",
);

TEXT(beginproblem());
$refreshCachedImages = 1;
$showPartialCorrectAnswer = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$maxXVal = random(6,10,1);
$maxYVal = random(6,10,1);
$gridWidth = 400;
$gridHeight = $gridWidth*($maxYVal/$maxXVal);

# initialize graph, draw grid manually, and label axes
$graph = init_graph(-$maxXVal, -$maxYVal, $maxXVal, $maxYVal, size => [$gridWidth, $gridHeight]);

for ($i = -$maxYVal + 1; $i < $maxYVal; $i++) {
  if ($i != 0) {
    $graph->moveTo(-$maxXVal, $i);
    $graph->lineTo($maxXVal, $i, 'gray', 1);
  }
}
for ($i = -$maxXVal+1; $i < $maxXVal+1; $i++) {
  if ($i != 0) {
    $graph->moveTo($i, -$maxYVal);
    $graph->lineTo($i, $maxYVal, 'gray', 1);
  }
}

$graph->moveTo(-$maxXVal, 0);
$graph->arrowTo($maxXVal, 0, 'black', 1);
$graph->arrowTo(-$maxXVal, 0, 'black', 1);
$graph->moveTo(0, -$maxYVal);
$graph->arrowTo(0, $maxYVal, 'black', 1);
$graph->arrowTo(0, -$maxYVal, 'black', 1);
$graph->lb(new Label($maxXVal-0.1, -0.2, 'x', 'black', 'top', 'right'));
$graph->lb(new Label(0.4, $maxYVal-0.1, 'y', 'black', 'top', 'left'));
$graph->lb(new Label(1,0,'1', 'black', 'bottom','left'));
$graph->lb(new Label(0,1,'1', 'black', 'bottom','left'));

# define coordinates
$xCoordOne = random(-$maxXVal+1, $maxXVal-1, 1);
do {
  $xCoordTwo = random(-$maxXVal+1, $maxXVal-1, 1);
} while ($xCoordOne == $xCoordTwo);
$yCoordOne = random(-$maxYVal+1, $maxYVal-1, 1);
$yCoordTwo = $yCoordOne;

# draw line and points
$graph->moveTo(-$maxXVal, $yCoordOne);
$graph->arrowTo($maxXVal, $yCoordOne, 'blue', 2);
$graph->arrowTo(-$maxXVal, $yCoordOne, 'blue', 2);
$graph->stamps(closed_circle($xCoordOne, $yCoordOne, 'blue'));
$graph->stamps(closed_circle($xCoordTwo, $yCoordTwo, 'blue'));

# compute the line, this will be used in answer check
Context("Fraction-NoDecimals")->variables->are(x => 'Real', y => 'Real');
parser::Assignment->Allow;
$line = Formula("y = $yCoordOne")->reduce;


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Write an equation for the line shown.

$PAR
$BCENTER
\{ image( insertGraph($graph), width=>$gridWidth, height=>$gridHeight, tex_size=>300 ) \}
$ECENTER 
$PAR

Equation: \{ans_rule(20)\} 
END_TEXT


###########################################################################
# check the answer  
###########################################################################
$texAnswer = "\(y = $yCoordOne\)";
ANS($line->cmp(studentsMustReduceFractions => 1));


##################################################################

COMMENT('always horizontal line');
ENDDOCUMENT();