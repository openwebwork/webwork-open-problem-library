# DESCRIPTION
# Find all the listed information for the given graph.
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Graphs)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(OPL6id02)
## Level(3)
## KEYWORDS('graphs', 'equations', 'inequalities', 'zeros', 'intercepts')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "parserPopUp.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric")->strings->add(none=>{}, "does not exist"=>{});
@x = (0..8); @y = (0..8);
$x[2] = random(-6,-2,2);
$x[3] = $x[2]/2;
$x[4] = 0;
$x[0] = $x[2] + random(-6,-2,2);
$x[1] = ($x[2]+$x[0])/2;
$x[5] = -$x[3]; $x[6] = -$x[2]; $x[7] = -$x[1]; $x[8] = -$x[0];
$y[0] = 0; $y[2] = 0; $y[4] = 0; $y[6] = 0; $y[8] = 0;
$y[1] = random(3,9)*random(-1,1,2);
do {$y[3] = random(3,9)*random(-1,1,2)} until ($y[3] != $y[1]);
$eo = random(0,1); # 0 - graph will be even, 1 - graph will be odd
$y[5] = ($eo == 0) ? $y[3] : -$y[3];
$y[7] = ($eo == 0) ? $y[1] : -$y[1];

$popeo = ($eo == 0) ? PopUp(["select", "even", "odd", "neither"], "even") : PopUp(["select", "even", "odd", "neither"], "odd");
$ineq = random(0,3);
@ineqstrs = ("\geq",">","\leq","<");
$ineqstr = $ineqstrs[$ineq];

# what does ch stand for?

$chby = 0; $chb = 0;
# this checks to see the highest absolute y value between $y[1] and $y[3]
# and then sets $chby to that value and $chb to the index of that point
for ($i = 1; $i <= 3; $i = $i+2) {
  if (abs($y[$i]) > $chby) { $chby = abs($y[$i]); $chb = $i; }
}
if ($eo == 0) { #if graph is even
  $bx = List($x[$chb], $x[8-$chb]);
  $by = $y[$chb];
} else { # if graph is odd
  # if $chlr = 0 then we choose a point on the left side
  # of the y-axis and ask for the x value that corresponds to the given y value
  # in part 2. If $chlr = 1 then we ask for a point on the right side.
  $chlr = random(0,1); # 0 - left, 1 - right
  $by = ($chlr == 0) ? $y[$chb] : $y[8-$chb];
  if ($chlr == 0) {
    # if the absolute value are the same and (since we're still under the assumption $eo = 1, i.e. the graph is odd, then we should have two solutions to the equation f(x) = $by. Otherwise it's just one point.
    if (abs($y[1]) != abs($y[3])) {
     $bx = List($x[$chb]);
    } else {
     $bx = List($x[$chb],$x[4+$chb]);
    }
  } else { # $chlr = 1 (chose point on right side)
    if (abs($y[1]) != abs($y[3])) {
     $bx = List($x[8-$chb]);
    } else {
     $bx = List($x[8-$chb],$x[4-$chb]);
    }
  }
} 

do {$cha = random(1,7,2)} until ($cha != $chb && $cha != 8 - $chb);
$ax = $x[$cha];
$ay = $y[$cha];

do {$cy = non_zero_random(-$chby+1, $chby-1)} until ($cy != $y[1] && $cy != $y[3] && $cy != $y[5] && $cy != $y[7]);


$sqr = max(abs($x[0]), abs($y[1]), abs($y[3])) + 2;
($maxx, $maxy, $minx, $miny, $gsize, $tickx, $ticky) = ($sqr, $sqr, -$sqr, -$sqr, 600, 5, 5);
$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($i = $minx; $i <= $maxx; $i++) {
  $graph->moveTo($i,$miny);
  $graph->lineTo($i,$maxy,'gray',1);
}
for ($i = $miny; $i <= $maxy; $i++) {
  $graph->moveTo($minx,$i);
  $graph->lineTo($maxx,$i,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));

for ($i = $minx+1; $i < $maxx; $i++) {
  if (($i != 0 && $i % $tickx == 0) || $i == 1) {
    $graph->lb(new Label($i,-0.1,$i, 'black', 'top','center'));
  }
}

for ($i = $miny+1; $i < $maxy; $i++) {
  if (($i != 0 && $i % $ticky == 0) || $i == 1) {
    $graph->lb(new Label(-0.1,$i,$i, 'black', 'middle', 'right'));
  }
}

$graph->stamps(new Circle($x[0],$y[0],4,'blue','blue'));
$graph->moveTo($x[0],$y[0]);
for (my $i = 0; $i < 8; $i++) {
  $graph->lineTo($x[$i+1],$y[$i+1],'blue',3);
  $graph->stamps(new Circle($x[$i+1],$y[$i+1],5,'blue','blue'));
}

$scale = 0.8;
$fig = image(insertGraph($graph), width=>$gsize*$scale, height=>$gsize*$scale, tex_size=>250);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Given the graph of \(y = f(x)\) below, answer all of the following questions.
$PAR
$BCENTER
\{ $fig \}
$ECENTER 
$PAR
(a) Determine \(f($ax)\): \{ans_rule(20)\} $BR
(b) Solve \(f(x) = $by\): \{ans_rule(20)\} $BR
(c) List the \(x\)-intercepts, if any exist: \{ans_rule(35)\} $BR
(d) List the \(y\)-intercepts, if any exist: \{ans_rule(35)\} $BR
(e) Find the zeros of \(f\): \{ans_rule(20)\} $BR
(f) Solve \(f(x) $ineqstr 0\): \{ans_rule(35)\} $BR
(g) Find the number of solutions to \(f(x) = $cy\): \{ans_rule(20)\} $BR
(h) Does \(f\) appear to be even, odd, or neither: \{$popeo->menu()\}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS(Compute("$ay")->cmp());
ANS($bx->cmp());

Context("Point")->strings->add(none=>{}, "does not exist"=>{});
$xints = List(Point($x[0],0),Point($x[2],0),Point($x[4],0),Point($x[6],0),Point($x[8],0));
ANS($xints->cmp());

$yint = List(Point(0,0));
ANS($yint->cmp());

$zeros = List($x[0],$x[2],$x[4],$x[6],$x[8]);
ANS($zeros->cmp());

Context("Interval")->strings->add(none=>{}, "does not exist"=>{});
if ($eo == 0) { # function is even
  if ($ineq == 0) { # f is greater than or equal to 0
    if ($y[1] > 0 && $y[3] > 0) {
      $ineqint = Interval("[$x[0],$x[8]]");
    } elsif ($y[1] > 0) {
      $ineqint = Interval("[$x[0],$x[2]]U[$x[6],$x[8]]U{$x[4],$x[6]}");
    } elsif ($y[3] > 0) {
      $ineqint = Interval("[$x[2],$x[6]]U{$x[0],$x[8]}");
    } else {
      $ineqint = Interval("{$x[0],$x[2],$x[4],$x[6],$x[8]}");
    }
  } elsif ($ineq == 1) { # f > 0
    if ($y[1] > 0 && $y[3] > 0) {
      $ineqint = Interval("($x[0],$x[2])U($x[2],$x[4])U($x[4],$x[6])U($x[6],$x[8])");
    } elsif ($y[1] > 0) {
      $ineqint = Interval("($x[0],$x[2])U($x[6],$x[8])");
    } elsif ($y[3] > 0) {
      $ineqint = Interval("($x[2],$x[4])U($x[4],$x[6])");
    } else {
      $ineqint = Interval("{}");
    }
  } elsif ($ineq == 2) { # f is less than or equal to 0
    if ($y[1] < 0 && $y[3] < 0) {
      $ineqint = Interval("[$x[0],$x[8]]");
    } elsif ($y[1] < 0) {
      $ineqint = Interval("[$x[0],$x[2]]U[$x[6],$x[8]]U{$x[4],$x[6]}");
    } elsif ($y[3] < 0) {
      $ineqint = Interval("[$x[2],$x[6]]U{$x[0],$x[8]}");
    } else {
      $ineqint = Interval("{$x[0],$x[2],$x[4],$x[6],$x[8]}");
    }    
  } else {
     if ($y[1] < 0 && $y[3] < 0) { # f < 0
      $ineqint = Interval("($x[0],$x[2])U($x[2],$x[4])U($x[4],$x[6])U($x[6],$x[8])");
    } elsif ($y[1] < 0) {
      $ineqint = Interval("($x[0],$x[2])U($x[6],$x[8])");
    } elsif ($y[3] < 0) {
      $ineqint = Interval("($x[2],$x[4])U($x[4],$x[6])");
    } else {
      $ineqint = Interval("{}");
    }   
  }
} else { # if the function is odd
  if ($ineq == 0) { # inequality: f is greater than or equal to 0
    if ($y[1] > 0 && $y[3] > 0) { 
      $ineqint = Interval("[$x[0],$x[4]]U{$x[6],$x[8]}");
    } elsif ($y[1] > 0) {
      $ineqint = Interval("[$x[0],$x[2]]U[$x[4],$x[6]]U{$x[8]}");
    } elsif ($y[3] > 0) {
      $ineqint = Interval("[$x[2],$x[4]]U[$x[6],$x[8]]U{$x[0]}");
    } else {
      $ineqint = Interval("[$x[4],$x[8]]U{$x[0],$x[2]}");
    }    
  } elsif ($ineq == 1) { # f(x) > 0 
    if ($y[1] > 0 && $y[3] > 0) {
      $ineqint = Interval("($x[0],$x[2])U($x[2],$x[4])");
    } elsif ($y[1] > 0) {
      $ineqint = Interval("($x[0],$x[2])U($x[4],$x[6])");
    } elsif ($y[3] > 0) {
      $ineqint = Interval("($x[2],$x[4])U($x[6],$x[8])");
    } else {
      $ineqint = Interval("($x[4],$x[6])U($x[6],$x[8])");
    }        
  } elsif ($ineq == 2) { # f(x) less than or equal to 0 
    if ($y[1] < 0 && $y[3] < 0) {
      $ineqint = Interval("[$x[0],$x[4]]U{$x[6],$x[8]}");
    } elsif ($y[1] < 0) {
      $ineqint = Interval("[$x[0],$x[2]]U[$x[4],$x[6]]U{$x[8]}");
    } elsif ($y[3] < 0) {
      $ineqint = Interval("[$x[2],$x[4]]U[$x[6],$x[8]]U{$x[0]}");
    } else {
      $ineqint = Interval("[$x[4],$x[8]]U{$x[0],$x[2]}");
    }        
  } else { # $ineq == 3 i.e. f(x) < 0
    if ($y[1] < 0 && $y[3] < 0) { # left peaks below graph
      $ineqint = Interval("($x[0],$x[2])U($x[2],$x[4])");
    } elsif ($y[1] < 0) {
      $ineqint = Interval("($x[0],$x[2])U($x[4],$x[6])");
    } elsif ($y[3] < 0) {
      $ineqint = Interval("($x[2],$x[4])U($x[6],$x[8])");
    } else {
      $ineqint = Interval("($x[4],$x[6])U($x[6],$x[8])");
    }            
  }
}
ANS($ineqint->cmp());

$csolns = 0;
for ($i = 0; $i < 8; $i++) {
  if (min($y[$i],$y[$i+1]) <= $cy && $cy <= max($y[$i],$y[$i+1])) {$csolns++; }
}
ANS(Compute("$csolns")->cmp());
ANS($popeo->cmp());


 

COMMENT('Created in 2013.
$BR
Desc: Find all the listed information for the given graph.');
ENDDOCUMENT();
