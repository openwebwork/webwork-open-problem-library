# DESCRIPTION
# Find all the listed information for the given graph.
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Graphs)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(OPL6id02)
## MLTleader(1)
## Level(3)
## KEYWORDS('graphs', 'equations', 'inequalities', 'zeros', 'intercepts')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
#  "parserPopUp.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric")->strings->add(none=>{}, "does not exist"=>{});
$ineq = random(0,3);
@ineqstrs = ("\geq",">","\leq","<");
$ineqstr = $ineqstrs[$ineq];
#$popeo = PopUp(["select","even","odd","neither"], "neither");

# set up graph
$z1 = random(-5,5);
$z2 = $z1 + random(2,4,2);
$vx = ($z1+$z2)/2;
$vy = $z1*$z2 - ($vx)**2;
do {
  $maxxp = $z2 + random(1,3);
  do {$minxp = $z1 - random(1,3)} until ($maxxp - $z2 != $z1 - $minxp);
  $maxxpy = (($maxxp - $vx)**2) + $vy;
  $minxpy = (($minxp - $vx)**2) + $vy;
} until (($minxpy % 2 == 0 && $minxpy > $maxxpy)); 
# || ($maxxpy % 2 == 0 && $maxxpy > $minxxpy)); possibly fill in later??

if ($minxpy % 2 == 0 && $minxpy > $maxxpy) {
  $z0 = $minxp - random(1,2);
  $mlline = $minxpy/($minxp - $z0);
  $blline = -$mlline*$z0;
  $x0 = $z0 - ($minxp - $z0);
  $y0 = $mlline*$x0 + $blline;
  $ints = 1;
  $count = 0;
  do {
    $x3 = $maxxp + random(1,4);
    $y3 = random(1,$maxxpy-1);
    $mrline = ($y3 - $maxxpy)/($x3 - $maxxp);
    $brline = $y3 - $mrline*$x3;
    for ($i = $maxxp+1; $i <= $x3 - 1; $i++) {
      if ($i*$mrline + $brline != floor($i*$mrline+$brline)) { $ints = 0; }
    }
    $count++;
  } until ($ints == 1 || $count > 250);
  if ($count > 250) {
    $x3 = $maxxp+1;
    $y3 = random(1,$maxxpy-1);
    $mrline = ($y3 - $maxxpy)/($x3 - $maxxp);
    $brline = $y3 - $mrline*$x3;
  }
  $case = 1;
} else {
  
}

$sqr = max(abs($vy),abs($minxpy),abs($x0),abs($x3),abs($y0),abs($y3))+2;
($maxx, $maxy, $minx, $miny, $gsize, $tickx, $ticky) = ($sqr, $sqr, -$sqr, -$sqr, 600, 5, 5);
$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($i = $minx; $i <= $maxx; $i++) {
  $graph->moveTo($i,$miny);
  $graph->lineTo($i,$maxy,'gray',1);
}
for ($i = $miny; $i <= $maxy; $i++) {
  $graph->moveTo($minx,$i);
  $graph->lineTo($maxx,$i,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));

for ($i = $minx+1; $i < $maxx; $i++) {
  if (($i != 0 && $i % $tickx == 0) || $i == 1) {
    $graph->lb(new Label($i,-0.1,$i, 'black', 'top','center'));
  }
}

for ($i = $miny+1; $i < $maxy; $i++) {
  if (($i != 0 && $i % $ticky == 0) || $i == 1) {
    $graph->lb(new Label(-0.1,$i,$i, 'black', 'middle', 'right'));
  }
}

$para = sub { my $t = shift(); return (($t - $vx)**2) + $vy };
$paraf = new Fun($para, $graph);
$paraf->domain($minxp,$maxxp);
$paraf->steps(500);
$paraf->weight(2);
for ($i = $minxp; $i <= $maxxp; $i++) {
  $graph->stamps(new Circle($i,($i - $vx)**2 + $vy,4,'blue','blue'));
}
$lline = sub { my $t = shift(); return $mlline*$t + $blline };
$llinef = new Fun($lline, $graph);
$llinef->domain($x0,$minxp);
$llinef->steps(500);
$llinef->weight(2);
for ($i = $x0; $i <= $minxp-1; $i++) {
  $graph->stamps(new Circle($i,$mlline*$i+$blline,4,'blue','blue'));   
}
$rline = sub { my $t = shift(); return $mrline*$t + $brline };
$rlinef = new Fun($rline, $graph);
$rlinef->domain($maxxp,$x3);
$rlinef->steps(500);
$rlinef->weight(2);
for ($i = $maxxp+1; $i <= $x3; $i++) {
  $graph->stamps(new Circle($i,$mrline*$i+$brline,4,'blue','blue'));
}

$scale = 0.8;
$fig = image(insertGraph($graph), width=>$gsize*$scale, height=>$gsize*$scale, tex_size=>250);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Given the graph of \(y = f(x)\) below, answer all of the following questions.
$PAR
$BCENTER
\{ $fig \}
$ECENTER 
$PAR
(a) List the distinct, nonoverlapping, open intervals where \(f\) is increasing.  Separate your answers with commas. \{ans_rule(35)\} $BR
(b) List the distinct, nonoverlapping, open intervals where \(f\) is decreasing.  Separate answers with commas. \{ans_rule(35)\} $BR
(c) List the ${BITALIC}distinct${EITALIC} \(y\)-values of the local maximums, if any exist: \{ans_rule(20)\} $BR
(d) List the ${BITALIC}distinct${EITALIC} \(y\)-values of the  local minimums, if any exist: \{ans_rule(20)\} $BR
(e) Find the \(y\)-value of the absolute maximum, if it exists: \{ans_rule(10)\} $BR
(f) Find the  \(y\)-value of the absolute minimum, if it exists: \{ans_rule(10)\}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
if ($case == 1) {
  Context("Interval")->strings->add("none"=>{}, "does not exist"=>{});
  $inc = List(Interval("($x0,$minxp)"),Interval("($vx,$maxxp)"));
  $dec = List(Interval("($minxp,$vx)"),Interval("($maxxp,$x3)"));
  ANS($inc->cmp());
  ANS($dec->cmp());

  $lmax = List($minxpy,$maxxpy);
  $lmin = List($vy);
  ANS($lmax->cmp());
  ANS($lmin->cmp());

  $max = $minxpy;
  $min = $y0;
  ANS(Compute("$max")->cmp());
  ANS(Compute("$min")->cmp());
} else {

}

 

COMMENT('Created in 2013.
$BR
Desc: Find all the listed information for the given graph.');
ENDDOCUMENT();
