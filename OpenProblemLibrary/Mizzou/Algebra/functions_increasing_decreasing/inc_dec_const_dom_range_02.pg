# DESCRIPTION
# Gives the graph of a piecewise function and asks for the intervals
# for which it is inc/dec/const, as well as domain and range
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Graphs)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## MLT(OPL6id02)
## Level(3)
## TitleText1('College Algebra')
## AuthorText1('Beecher, Penna, Bittinger')
## EditionText1('4')
## Section1('2.1')
## Problem1('5')
## KEYWORDS('functions', 'piecewise', 'graphs', 'increasing', 'decreasing','domain','range')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$maxx = 11;
$minx = -$maxx;
$gsize = 500;

$graph = init_graph($minx, $minx, $maxx, $maxx, size=>[$gsize,$gsize]);
for ($i = 1; $i <= $maxx ; $i++) {
  $graph->moveTo($i,$minx);
  $graph->lineTo($i, $maxx, 'gray', 1);
  $graph->moveTo(-$i,$maxx);
  $graph->lineTo(-$i, $minx, 'gray', 1);
  $graph->moveTo($minx, $i);
  $graph->lineTo($maxx, $i, 'gray', 1);
  $graph->moveTo($minx, -$i);
  $graph->lineTo($maxx, -$i, 'gray', 1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $minx);
$graph->arrowTo(0, $maxx, 'black', 2);
$graph->arrowTo(0, $minx, 'black', 2);
$graph->lb(new Label($maxx-0.1, -0.2, 'x', 'black', 'top', 'right'));
$graph->lb(new Label(0.4, $maxx-0.1, 'y', 'black', 'top', 'left'));
$graph->lb(new Label(1,-0.1,'1', 'black', 'top','center'));
$graph->lb(new Label(5,-0.1,'5', 'black', 'top','center'));
$graph->lb(new Label(10,-0.1,'10', 'black', 'top','center'));
$graph->lb(new Label(-5,-0.1,'-5', 'black', 'top','center'));
$graph->lb(new Label(-10,-0.1,'-10', 'black', 'top','center'));
$graph->lb(new Label(-0.1,0.7,'1', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,4.7,'5', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,9.7,'10', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,-5.3,'-5', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,-10.3,'-10', 'black', 'bottom', 'right'));

# set up parabola piece
$x1 = random(-10,-9);
$y1 = random(-5,-2);
$x2 = random($x1+2,$x1+3);
$y2 = random(1,5);
$flip = random(-1,1,2);
$y1 = $y1*$flip;
$y2 = $y2*$flip;
$x3 = $x2 + ($x2 - $x1);
$y3 = $y1;
$a = ($y1-$y2)/(($x1-$x2)**2);
$b = -(2*$x2*($y1-$y2))/(($x1-$x2)**2);
$c = ((($x2)**2)*$y1+(($x1)**2)*$y2-2*$x1*$x2*$y2)/(($x1-$x2)**2);

$piece1 = sub { my $x = shift(); $a*(($x)**2) + $b*$x + $c; };
$fun1 = new Fun($piece1, $graph);
$fun1->steps(500);
$fun1->weight(3);
$fun1->domain(-11,$x3);
$graph->stamps(new Circle($x2,$y2,5,'blue','blue'));
$graph->stamps(new Circle($x3,$y3,5,'blue','blue'));

# set up constant piece 1
$x4 = random($x3+3,2);
$y4 = $y3;
$graph->moveTo($x3,$y3);
$graph->lineTo($x4,$y4,'blue',3);
$graph->stamps(new Circle($x4,$y4,5,'blue','blue'));

# set up non zero sloped piece
$x5 = random($x4+1,4);
do {$y5 = random(-$maxx+1,$maxx-1)} until ($y5 != $y4);
$graph->moveTo($x4,$y4);
$graph->lineTo($x5,$y5,'blue',3);
$graph->stamps(new Circle($x5,$y5,5,'blue','blue'));

# set up constant piece 2
$x6 = $maxx;
$y6 = $y5;
$stop = random(0,1,1);
$oc = random(0,1,1);

if ($stop == 1) {
  $x6 = random($x5+2,$maxx-1);
  $graph->moveTo($x5,$y5);
  $graph->lineTo($x6,$y6,'blue',3);
  if ($oc == 0) {
    $graph->stamps(new Circle($x6,$y6,5,'blue','white'));
  } else {
    $graph->stamps(new Circle($x6,$y6,5,'blue','blue'));
  }
} else {
  $graph->moveTo($x5,$y5);
  $graph->lineTo($x6,$y6,'blue',3);
}

# set up answers
Context("Interval");
Context()->strings->add("none"=>{});
if ($stop == 1) {
  if ($oc == 0) {
    $domain = Interval("(-infinity,$x6)");
  } else {
    $domain = Interval("(-infinity,$x6]");
  } 
} else {
  $domain = Interval("(-infinity,infinity)");
}
if ($flip == 1) {
  if ($y5 > $y2) {
    $range = Interval("(-infinity,$y5]");
  } else {
    $range = Interval("(-infinity,$y2]");
  }
} elsif ($flip == -1) {
  if ($y5 < $y2) {
    $range = Interval("[$y5,infinity)");
  } else {
    $range = Interval("[$y2,infinity)");
  }
}

if ($flip == 1) {
  if ($y5 > $y4) {
    $inc = Union(Compute("(-infinity,$x2)"), Compute("($x4,$x5)"));
    $dec = Compute("($x2,$x3)");
  } else {
    $inc = Compute("(-infinity,$x2)");
    $dec = Union(Compute("($x2,$x3)"), Compute("($x4,$x5)"));
  }
  $maxima = List($y2,$y3,$y5);
  $minima = List($y3,$y5);
} elsif ($flip == -1) {
  if ($y5 > $y4) {
    $inc = Union(Compute("($x2,$x3)"), Compute("($x4,$x5)"));
    $dec = Compute("(-infinity,$x2)");
  } else {
    $inc = Compute("($x2,$x3)");
    $dec = Union(Compute("(-inf,$x2)"), Compute("($x4,$x5)"));
  }
  $minima = List($y2,$y3,$y5);
  $maxima = List($y3,$y5);
}

if ($stop == 1) {
  $const = Union(Compute("($x3,$x4)"), Compute("($x5,$x6)"));
} else {
  $const = Union(Compute("($x3,$x4)"), Compute("($x5,inf)"));
}

###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$PAR
$BCENTER
\{ image(insertGraph($graph), width=>$gsize, height=>$gsize, tex_size=>500 ); \}
$ECENTER 
$PAR

Above is part of the graph of a function \(f(x)\). It's impossible to show the entire graph in a finite region because it is too large.  The left side of the graph is the left side of a parabola; use your imagination to imagine the rest of the parabola extending off to the left.  The right side of the graph is part of a line; if you can see its right endpoint then you can see the entire right side of the graph; if you can't see its right endpoint then the line extends infinitely far to the right.  $PAR

Given this information, find the following.  In parts (a)-(e) write your answers using \{helpLink("interval", "interval notation")\}: $BR
$PAR
(a) Domain: \{ans_rule(20)\} $BR
(b) Range: \{ans_rule(20)\} $BR
$PAR 
In parts (c)-(e) do not include endpoints in the intervals. (People disagree on  whether or not to call a function "strictly increasing" at an endpoint). In other words, pretend all your intervals are open.$BR
(c) Set on which \(f(x)\) is strictly increasing: \{ans_rule(30)\}  $BR
(d) Set on which \(f(x)\) is strictly decreasing: \{ans_rule(30)\} $BR
(e) Set on which \(f(x)\) is constant: \{ans_rule(30)\} 
$PAR
In parts (f),(g) list the \(y\)-coordinates (\(y=f(x)\)) of the local maxima and minima.  Use commas to separate distinct values if there are more than one.  Enter NONE if there are none.  $PAR
(f) Local maxima: \{ans_rule(20)\} $BR  
(g) Local minima: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($domain)->cmp());
ANS(Compute($range)->cmp());
ANS(Compute($inc)->cmp());
ANS(Compute($dec)->cmp());
ANS(Compute($const)->cmp());
ANS(Compute($maxima)->cmp());
ANS(Compute($minima)->cmp());



ENDDOCUMENT();
