##DESCRIPTION
##  Draws five points and ask to determine one of them.
##ENDDESCRIPTION

## Author1('Rick Lynch')
## Author2('Teri Christiansen')
## DBsubject(Algebra)
## DBchapter(Cartesian coordinate system)
## DBsection(Plotting points)
## Date(Summer 2012)
## Institution(University of Missouri)
## Level(2)
## TitleText1('College Algebra')
## AuthorText1('Beecher, Penna, Bittinger')
## EditionText1('4')
## Section1('1.1')
## Problem1('')
## KEYWORDS('point','points','graph')


##################################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "AnswerFormatHelp.pl",
  "contextFraction.pl",
  "parserPopUp.pl",
);

TEXT(beginproblem());
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;



###################################
# Setup
Context("Point");
# draw grid
$gridSize = random(5,8,1);
$gr = init_graph(-$gridSize,-$gridSize,$gridSize,$gridSize, size=>[350,350]);
#for ($i = -$gridSize+1; $i < $gridSize; $i++) {
for ($i = -$gridSize+1; $i < $gridSize; $i++) {
        if ($i != 0) {
                $gr->moveTo(-$gridSize,$i);
                $gr->lineTo($gridSize,$i,'gray',1);
                $gr->moveTo($i,-$gridSize);
                $gr->lineTo($i,$gridSize,'gray',1);
        }
}
$gr->moveTo(-$gridSize,0);
$gr->arrowTo($gridSize,0,'black',2);
$gr->moveTo(0,-$gridSize);
$gr->arrowTo(0,$gridSize,'black',2);
$gr->moveTo($gridSize,0);
$gr->arrowTo(-$gridSize,0,'black',2);
$gr->moveTo(0,$gridSize);
$gr->arrowTo(0,-$gridSize,'black',2);
$gr->lb( new Label($gridSize-0.1,-0.2,'x','black','top','right') );
$gr->lb( new Label(0.4,$gridSize-0.1,'y','black','top','left') );

@xVals = (1..5);
$yVals = (1..5);
for ($i = 0; $i < 6; $i++) {
        $xVals[$i] = random(-$gridSize+1,$gridSize-1,1);
        $yVals[$i] = random(-$gridSize+1,$gridSize-1,1);
        for ($j = 0; $j < $i; $j++ ) {
                if ($xVals[$j] == $xVals[$i]) {
                        if ($yVals[$j] == $yVals[$i]) {
                                do {$yVals[$j] = random(-$gridSize+1,$gridSize-1,1)} while ($yVals[$j] == $yVals[$i]);
                        }
                } 
        }
}
@letters = ("A","B","C","D","E");
for ($i = 0; $i < 5; $i++) {
  if ($xVals[$i] == 0 && $yVals[$i] == 0) {
    $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "origin");
  } elsif ($xVals[$i] == 0) {
    $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "y-axis");   
  } elsif ($yVals[$i] == 0) {
    $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "x-axis");
  } elsif ($xVals[$i] > 0) {
    if ($yVals[$i] > 0) {
      $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "QI");      
    } else {
      $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "QIV");
    }
  } elsif ($xVals[$i] < 0) {
    if ($yVals[$i] > 0) {
      $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "QII");      
    } else {
      $pop[$i] = PopUp(["select", "QI", "QII", "QIII", "QIV", "x-axis", "y-axis", "origin"], "QIII");
    }
  }
  $point[$i] = Point($xVals[$i],$yVals[$i]);
}

# draw points
for ($i = 0; $i < 5; $i++) {
        $gr->stamps(new Circle($xVals[$i],$yVals[$i],5,'blue','blue'));
        $gr->stamps(new Label($xVals[$i]+0.4, $yVals[$i],$letters[$i],'black','left','center'));
}

$gr->stamps(new Label(1, -0.15, 1,'black', 'top','center'));
$gr->stamps(new Label(-0.15,1,1,'black','middle','right'));

Context("Fraction-NoDecimals");

###################################
# problem statement

Context()->texStrings;
BEGIN_TEXT
Give the point that corresponds to the given letter. Each tick represents one unit.
$PAR
$BCENTER
\{ image( insertGraph($gr), width=>350, height=>350, tex_size=>500, extra_html_tags=>'alt="Click to enlarge."' ) \}
$ECENTER
$PAR
Determine the point corresponding to each letter and also state where the point is located:
$PAR
${BBOLD}A:${EBOLD} Point - \{ans_rule(20)\}, Location - \{$pop[0]->menu()\}
$BR
${BBOLD}B:${EBOLD} Point - \{ans_rule(20)\}, Location - \{$pop[1]->menu()\}
$BR
${BBOLD}C:${EBOLD} Point - \{ans_rule(20)\}, Location - \{$pop[2]->menu()\}
$BR
${BBOLD}D:${EBOLD} Point - \{ans_rule(20)\}, Location - \{$pop[3]->menu()\}
$BR
${BBOLD}E:${EBOLD} Point - \{ans_rule(20)\}, Location - \{$pop[4]->menu()\}
END_TEXT

for ($i = 0; $i < 5; $i++) {
  ANS($point[$i]->cmp());
  ANS($pop[$i]->cmp());
}


ENDDOCUMENT();