## DESCRIPTION
## Radicals and Rational Exponents: Simplifying Radicals
## ENDDESCRIPTION


## Author1('David Covert')
## Author2('Teri Christiansen')
## Author3('Rick Lynch')
## DBsubject(Algebra)
## DBchapter(Properties of exponents, rational exponents and radicals)
## DBsection(Properties of rational exponents and radicals)
## Date(Spring 2012)
## Institution(University of Missouri)
## Level(3)
## MO(1)
## TitleText1('College Algebra')
## AuthorText1('Beecher, Penna, Bittinger')
## EditionText1('4')
## Section1('.7')
## Problem1('')
## KEYWORDS('radical expression')


##################################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "contextLimitedPowers.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());


###################################
# Setup


Context("Numeric");

Context()->flags->set(reduceConstantFunctions=>0);
#Context()->variables->are(
#y=>"Real", 
#t=>"Real",
#s=>"Real",
#u=>"Real",
#v=>"Real",
#p=>"Real",
#q=>"Real",
#r=>"Real",
#w=>"Real",
#z=>"Real");
Context()->functions->disable('sqrt');

$a = list_random(2,3,4,5,6,8,10);
$a2 = $a**2;

$var = list_random('y','z','w','p','q','r','s','t','u','v');

Context()->variables->are($var => "Real");
#
# Don't allow fractional powers (avoids 1/2 power)
# [Could subclass exponentiation to handle that as well]
#
LimitedPowers::OnlyPositiveIntegers();


$ans = Compute(" $a  |$var|  ");

##############################################################
Context()->texStrings;
BEGIN_TEXT
Simplify.  Assume that \($var\) can represent any real number.
$PAR
$BCENTER
\( \sqrt{$a2 $var^2} = \) \{ans_rule(20)\}
$ECENTER
END_TEXT

##############################################################


Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS($ans->cmp(
  #limits=>[-1,1],
  test_points=>[-3,-2,-1,0,1,2,3], 
  checker=>sub{ 
    my ($correct,$student,$ans) = @_;
    if ($correct == $student) {
       return 1;
    }
    elsif (Compute("$a $var") == $student) { 
      Value->Error("Will your answer work for negative ${var}?");
    }
    elsif (Compute("-$a $var") == $student){
      Value->Error("Will your answer work for positive ${var}?");
    }
    else {return 0;}
  }
));

ENDDOCUMENT();
