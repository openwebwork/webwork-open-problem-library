# DESCRIPTION
# Gives an algebraic expression with subscripts on variables and asks to plug numbers in for variables
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Algebra of real numbers and simplifying expressions)
## DBsection(Evaluating expressions)
## Institution(University of Missouri-Columbia)
## Author(Rick Lynch)
## Level(2)
## KEYWORDS('simplifying', 'algebraic expressions')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@n1 = (3,4,6,8,5,12,9,12);
@n2 = (4,3,8,6,12,5,12,9);
$ch = random(0,7,1);
$c1 = random(-1,1,2)*$n1[$ch];
$c2 = random(-1,1,2)*$n2[$ch];

do {
  $x1 = non_zero_random(-9,9);
  $x2 = $c1+$x1;
  $y1 = non_zero_random(-9,9);
  $y2 = $c2+$y1;
} until ($x2 != 0 && $y2 != 0);
$disp = "\displaystyle \sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}";

$ans = sqrt(($c1)**2 + ($c2)**2);
Context()->operators->undefine("+","-","*","^","/");
Context()->functions->undefine("abs", "sqrt");


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Evaluate 
$PAR
\[
$disp
\]
$PAR
for \(x_1 = $x1\), \(x_2 = $x2\), \(y_1 = $y1\), and \(y_2 = $y2\):
$PAR
Answer: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();