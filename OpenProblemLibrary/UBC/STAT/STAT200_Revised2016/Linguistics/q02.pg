#########################################################
# DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Exploratory data analysis/descriptive statistics')
## DBsection(Summarizing data in tables)
## Level(3)
## Date('2016/08/23')
## Author('Nelson Chen')
## Institution('University of British Columbia')
##KEYWORDS('Contingency tables', 'marginal totals', 'conditional probability')

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "unionTables.pl",
  "RserveClient.pl",
  "PGcourse.pl",
  "answerCustom.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)

Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
# warn("seed: " . $seed);

rserve_eval("set.seed($seed)");


@x= rserve_eval('
mu <- c(0.43,0.62,0.76,0.51,0.56,0.5,0.49,0.56,0.61,0.57)
sd <- rep(0.01, 10)
x <- round(rnorm(10, mean=mu, sd=sd),3)
');

@meanx= rserve_eval('
round(mean(x),3)
');

@sdx= rserve_eval('
round(sd(x),3)
');

@sdxx= rserve_eval('
round(sd(x),5)
');



#####Build a Table
$Table = 
"\(
\begin{array}{l|c}
\text{Word} &  \text{Durations} (s) \\ \hline  
\text{bike} & @x[0] \\
\text{cite} & @x[1] \\ 
\text{entice} & @x[2] \\ 
\text{excite} &  @x[3] \\ 
\text{fright} & @x[4] \\ 
\text{hype} &  @x[5] \\ 
\text{life} & @x[6] \\ 
\text{night} & @x[7] \\ 
\text{price} & @x[8] \\ 
\text{quite} & @x[9] 
\end{array}
\)";

#####Q1
##(i)
@s1 =  rserve_eval('
round(mean(x),3) *1000
'); 

##(ii)
@s2 =  rserve_eval('
round(sd(x),3) *1000
'); 

##(iii)
@s3 =  rserve_eval('
round(median(x),3) *1000
'); 

@s33 =  rserve_eval('
round(median(x),3)
'); 

##(iv)
@s41 =  rserve_eval('
tem <- round(max(x)-min(x),3)*1000
tem[1] 
'); 

##(v)
@s5 =  rserve_eval('
tem <- (sd(x) *1000)^2
round(tem, 1)
'); 

@s55 =  rserve_eval('
round(var(x),5)
'); 

@s555 =  rserve_eval('
tem<-var(x)*1000^2
round(tem, 1)
');  

#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT
When measuring the duration of words or sounds in a common linguistic
analysis software, the default is for the program to return values in
seconds. But linguistic researchers often want to refer to measurements in
milliseconds, partly because the durations of words, segments, and parts of
segments tend to be very short. Consider the following ten word durations,
measured in seconds:
$BR
$BR
$BCENTER
$Table
$ECENTER
$BR
$BR
The mean of the data above is @meanx[0] s and the standard
deviation is @sdx[0] s. Suppose the data are rescaled to be
in milliseconds. Find the following (to one decimal place):
$BR
(i) the mean:   \{ ans_rule(6) \}. 
$BR
$BR

(ii) the standard derivation: \{ ans_rule(6) \}. 
$BR
$BR

(iii) the median: \{ ans_rule(6) \}. 
$BR
$BR

(iv) the range: \{ ans_rule(6) \}.   
$BR
$BR

(v) the variance: \{ ans_rule(6) \}. 
END_TEXT
#########################################################
## Answers evaluation (Required)

ANS( num_cmp(@s1[0], tol=> 0.021) );
ANS( num_cmp(@s2[0], tol=> 0.021) );
ANS( num_cmp(@s3[0], tol=> 0.021) );
ANS( num_cmp(@s41[0], tol=> 0.021) );
ANS( num_cmp(@s5[0], tol=> 0.021) );

#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION
There are 1000 ms in 1 s, so the re-scaling is quite
straightforward: we just move the decimal place over to the right by three
places. We do not even need to calculate the re-scaled values for all the
words, because the mean and median will be re-scaled by the same constant.
So the mean is @s1[0] ms and the
standard deviation is @s2[0] ms. The median of the
original data is @s33[0] s, so the rescaled median is 
@s3[0] ms. The range is @s41[0]. The variance is the standard deviation squared, so
the new variance is \((@sdxx[0] \times 1000)^2 = @s5[0]\) \(ms^2\).

Another way to think about this is to notice that this is the same
as taking the original variance, @s55[0] s, and multiplying
it by the square of the re-scaling factor to give \(@s55[0] \times 1000^2 = @s555[0] \) \(ms^2\).  

 
END_SOLUTION
ENDDOCUMENT();