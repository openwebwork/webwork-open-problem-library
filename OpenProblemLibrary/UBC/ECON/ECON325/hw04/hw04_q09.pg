#########################################################
##KEYWORDS('Random variables'; 'bivariate distributions, correlation,
##linear combination'; 'find the correlation between two variables given first
##and second moments from their marginal distribution and the covariance, find
##the mean and standard deviation of a linear combination of the two variables'.) 
# DESCRIPTION
## DBsubject('Probability')
## DBchapter('Several variables')
## DBsection('Covariance \& correlation')
## Date('2015/07/08')
## Author('Nelson Chen')
## Institution('University of British Columbia')
## level('3')

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)


###Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
##warn("seed: " . $seed);

####Call R server
rserve_eval("set.seed($seed)"); ## can not combine with the rest

@x=rserve_eval('
x <- sample(130:180, 1)
');

@y=rserve_eval('
y <- sample(100:130, 1)
');

@vx=rserve_eval('
vx <- sample(10:20, 1)
');

@vy=rserve_eval('
vy <- sample(20:30, 1)
');

@b=rserve_eval('
b <- sample(2:6, 1)
');

@a=rserve_eval('
a <- sample(7:10, 1)
');

@c=rserve_eval('
c <- sample((-10:10)[-11], 1)
');


#####answers

@qa= rserve_eval('
cor <- c/sqrt(vx*vy)
round(cor, 2)
');

@qb= rserve_eval('
e<-a+b*x+y
round(e, 2)
');


@qvar= rserve_eval('
v<-b^2*vx+vy+2*b*c
round(v, 2)
');


@qc= rserve_eval('
round(sqrt(v), 2)
');

###eve
$qaans = @qa[0];
$qbans= @qb[0];
$qcans = @qc[0]; 


#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT
Consider the random variables \(X\) and \(Y\) with
$BR
$BCENTER
\(
E(X) =@x[0]
\)
$ECENTER
$BR
$BCENTER
\(
E(Y) =@y[0]
\)
$ECENTER
$BR
$BCENTER
\(
Var(X) =@vx[0]
\)
$ECENTER
$BR
$BCENTER
\(
Var(Y) =@vy[0]
\)
$ECENTER
$BR
$BCENTER
\(
Cov(X, Y) =@c[0]
\)
$ECENTER
$BR
$BR
Define the random variable \(Z = @a[0] + @b[0] X + Y\) . Answer the following questions, rounding your answers to two decimal places.
$BR
$BR
$BBOLD(a) $EBOLD Find the correlation between \(X\) and \(Y\). \{  ans_rule(7) \} 
$BR
$BR

$BBOLD(b) $EBOLD Find the mean of \(Z\).  \{  ans_rule(7) \} 
$BR
$BR
$BBOLD(c) $EBOLD Find the standard deviation of \(Z\).  \{  ans_rule(7) \}  
END_TEXT
#########################################################

## Answers evaluation (Required)
ANS( num_cmp($qaans, tol=> 0.02) );
ANS( num_cmp($qbans, tol=> 0.02) );
ANS( num_cmp($qcans, tol=> 0.02) );


#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION

$BBOLD (a) $EBOLD The correlation is defined as  
$BR
$BR
$BCENTER
\( 
Cov(X, Y)/ \sqrt{ Var(X) Var(Y)}=@c[0]/\sqrt{ @vx[0] \times @vy[0] } =$qaans.  
\)
$ECENTER
$BR
$BR
$BBOLD (b) $EBOLD For any random variables, X and Y and constants a, b and c, 
$BR
$BCENTER
\( 
E(aX+bY+c)=aE(X) + bE(Y) +c   
\)
$ECENTER
$BR
Hence, in this case
$BR
$BCENTER
\( 
E(Z)=E(@a[0]+@b[0]X+Y)=@a[0]+@b[0] \times @x[0] +@y[0] =$qbans. 
\)
$ECENTER
$BR
$BR
$BBOLD (c) $EBOLD  For any random variables, X and Y and constants a, b and c, 
$BR
$BCENTER
\( 
Var(aX+bY+c)=a^2Var(X) + b^2Var(Y) +2abCov(X, Y).    
\)
$ECENTER
$BR
Hence, in this case
$BR
$BCENTER
\( 
Var(Z)=Var(@a[0]+@b[0]X+Y)= @b[0]^2 \times Var(X) + Var(Y) + 2 \times @b[0] \times Cov(X, Y) =  
@b[0]^2 \times @vx[0] +@vy[0] +2 \times @b[0] \times @c[0]=@qvar[0]. 
\)
$ECENTER
$BR
The standard deviation is the square root of the above value. 

END_SOLUTION
ENDDOCUMENT();
