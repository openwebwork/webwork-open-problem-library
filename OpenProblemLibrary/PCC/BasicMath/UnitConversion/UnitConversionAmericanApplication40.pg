# WeBWorK problem written by Carl Yao
# Portland Community College
#
# A 3-yard string will be cut into 4-inch strings. How many 4-inch strings can be made?
#
# Last edited: Carl Yao 11/27/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Real Numbers')
## KEYWORDS('unit','conversion','American','application')
## DBCCSS('5.MD.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
#  "contextFraction.pl",
#  "parserNumberWithUnits.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

TEXT(beginproblem());

Context("LimitedNumeric");
#Context()->{format}{number} = "%9d";

do {
   $eachIn = random(2,11,1);
   $totalYd = random(2,9,1);
   $totalFt = $totalYd*3;
   $totalIn = $totalFt*12;
   $numShort = $totalIn/$eachIn;
} until (int($numShort)==$numShort);

##############################################

BEGIN_PGML

A [`[$totalYd]`]-yard string will be cut into [@numberWord($eachIn)@]-inch strings. How many [@numberWord($eachIn)@]-inch strings can be made?

[_________]{$numShort} [@numberWord($eachIn)@]-inch strings can be made.

END_PGML


##############################################

BEGIN_PGML_SOLUTION

We will use these formulas:

    [`` 1 \text{ yd} = 3 \text{ ft} ``]

    [`` 1 \text{ ft} = 12 \text{ in} ``]

The total length is [`[$totalYd]`] yards, and it will be cut into [`[$eachIn]`]-inch pieces. Before we do division, we need to convert these two numbers to the same units.

It's easier to convert yards to inches:

    [``
\begin{aligned}
   [$totalYd] \text{ yd}
      &= [$totalYd] \cdot 3 \text{ ft} \\
      &= [$totalFt] \text{ ft} \\
      &= [$totalFt] \cdot 12 \text{ in} \\
      &= [$totalIn] \text{ in}
\end{aligned}
    ``]

Now we can do division:

    [`` [$totalIn] \text{ in} \div [$eachIn] \text{ in} = [$numShort] \text{ strings} ``]

[`[$numShort]`] [@numberWord($eachIn)@]-inch strings can be made.

END_PGML_SOLUTION

ENDDOCUMENT();
