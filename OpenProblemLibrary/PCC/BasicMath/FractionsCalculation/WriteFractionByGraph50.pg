# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given a graph, write the mixed number.
#
# Last edited by Carl Yao on 10/17/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Fractions')
## KEYWORDS('fraction','graph','mixed number')
## DBCCSS('5.NF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl",
  "contextFraction.pl",
);

##############################################
TEXT(beginproblem());
$refreshCachedImages = 1;
Context("LimitedFraction");
Context()->flags->set(
   requireProperFractions=>1,
   requirePureFractions=>0,
   showMixedNumbers=>1,
);

$den = random(2,6,1);
do {$num = random(1,$den-1,1);} until (gcd($num,$den)==1);
$frac = Fraction($num,$den);
$int = random(1,3,1);

$mixAns = $int+$frac;

$scale = 4;
$radius = 1.5;
$gr = init_graph(-$scale,-$scale,$scale,$scale,
size=>[400,400]
);

@centers = ([-$scale/2,$scale/2],[$scale/2,$scale/2],[-$scale/2,-$scale/2],[$scale/2,-$scale/2]);

for my $i (0..$int) {
   $xfunc = sub { my $t = shift();
       return $radius*cos($t)+$centers[$i][0]; };
   $yfunc = sub { my $t = shift();
       return $radius*sin($t)+$centers[$i][1]; };
   $circle = new Fun( $xfunc, $yfunc, $gr );
   $circle->domain(0,6.2832);

   for my $j (0..$den-1) {
      $gr->moveTo($centers[$i][0],$centers[$i][1]);
      $gr->lineTo($radius*cos($j*2*pi/$den)+$centers[$i][0],
         $radius*sin($j*2*pi/$den)+$centers[$i][1],'blue',1);
   }

   if ($i==$int) {
      $loop = $num-1;
   } else {
      $loop = $den-1;
   }

   for my $j (0..$loop) {
      my $x = $radius*cos((2*$j+1)*pi/$den)/2+$centers[$i][0];
      my $y = $radius*sin((2*$j+1)*pi/$den)/2+$centers[$i][1];
      $gr->fillRegion([$x,$y,"red"]);
   }

}


##############################################

$IsOrAre = $int==1 ? "is" : "are";
$OneOrNot1 = $int==1 ? "circle" : "circles";
$OneOrNot2 = $num==1 ? "piece" : "pieces";
$alt = "There $IsOrAre $int $OneOrNot1 completely shaded, and a circle cut from its center into $den equal pie pieces, with $num $OneOrNot2 shaded.";

BEGIN_PGML

>>[@image( insertGraph($gr), width=>400, 
    height=>400, tex_size=>800, extra_html_tags => "alt = '$alt' title = '$alt'")@]*<<

Fill in blanks with a mixed number and an improper fraction as required.

 a. The shaded area can be represented by the mixed number [_________]{$mixAns}.

END_PGML

Context("Fraction");
Context()->flags->set(
   requireProperFractions=>0,
   requirePureFractions=>1,
   showMixedNumbers=>0,
);
$improperAns = Fraction($int*$den+$num,$den);

BEGIN_PGML

 b. The shaded area can be represented by the improper fraction [_________]{$improperAns}.

END_PGML

##############################################

$output1 = $num==1 ? "piece" : "pieces";
$output3 = $int==1 ? "pie" : "pies";

##############################################

BEGIN_PGML_SOLUTION

###Part 1  

The shaded area has [`[$int]`] whole [$output3], plus part of a pie. 

The partly-shaded pie is cut into [`[$den]`] pieces evenly, with [`[$num]`] [$output1] shaded. We can tell [`\frac{[$num]}{[$den]}`] of the pie is shaded.

Counting in the whole [$output3], the mixed number version of shaded area is [`[$mixAns]`].

###Part 2  

To find the improper fraction representing the shaded area, we count the number of shaded pieces, including the whole [$output3] and the partly-shaded pie. All together, [`[$int*$den+$num]`] pieces are shaded, so the improper fraction representing the shaded area is [`[$improperAns]`].

END_PGML_SOLUTION

ENDDOCUMENT();
