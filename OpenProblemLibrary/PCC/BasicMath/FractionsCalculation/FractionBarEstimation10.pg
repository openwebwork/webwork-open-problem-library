# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Estimate what fraction of a bar is shaded.
#
# Last edited by Carl Yao 10/14/2016
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('fraction')
## DBCCSS('4.NF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "niceTables.pl",
  "parserRadioButtons.pl",
  "PGcourse.pl",
);
sub PF {PGML::Format(@_)};

##############################################
TEXT(beginproblem());
$refreshCachedImages = 1;

Context("Numeric");

@nums = ( );
@dens = ( );

do {
   $dens[0] = random(5,16,1);
   $nums[0] = random(1,3,1);
} until ( (gcd($nums[0],$dens[0])==1) && ($nums[0]/$dens[0]<0.15) );

do {
   $dens[1] = random(5,16,1);
   $nums[1] = int($dens[1]/2)-1;
} until ( (gcd($nums[1],$dens[1])==1) && ($nums[1]/$dens[1]>0.4) );

do {
   $dens[2] = random(5,16,1);
   $nums[2] = int($dens[2]/2)+1;
} until ( (gcd($nums[2],$dens[2])==1) && ($nums[2]/$dens[2]<0.6) );

do {
   $dens[3] = random(5,16,1);
   $nums[3] = random($dens[3]-3,$dens[3]-1,1);
} until ( (gcd($nums[3],$dens[3])==1) && ($nums[3]/$dens[3]>0.85) );

@radios = ( );
$radios[0] = RadioButtons(
  ["A","B","C","D"],
  "A", # correct answer
  order => ["A","B","C","D"],
);

$radios[1] = RadioButtons(
  ["A","B","C","D"],
  "B", # correct answer
  order => ["A","B","C","D"],
);

$radios[2] = RadioButtons(
  ["A","B","C","D"],
  "C", # correct answer
  order => ["A","B","C","D"],
);

$radios[3] = RadioButtons(
  ["A","B","C","D"],
  "D", # correct answer
  order => ["A","B","C","D"],
);

@gr = ( );
for my $i (0..3) {
   $gr[$i] = init_graph(0,-1,10,1,
   size=>[400,50]
   );
  $gr[$i]->moveTo(0,-1);
  $gr[$i]->lineTo(10*$nums[$i]/$dens[$i],-1,'black');
  $gr[$i]->lineTo(10*$nums[$i]/$dens[$i],1,'black');
  $gr[$i]->lineTo(0,1,'black');
  $gr[$i]->lineTo(0,0,'black');
  $gr[$i]->fillRegion([0.1,0.1,'black']);
}

$alt0 = "The graph is a partially filled bar. The filled region is a very small portion of the bar.";
$alt1 = "The graph is a partially filled bar. The filled region is close to half of the bar, but a little smaller than half.";
$alt2 = "The graph is a partially filled bar. The filled region is close to half of the bar, but a little bigger than half.";
$alt3 = "The graph is a partially filled bar. The filled region is almost the whole bar.";

#Create a hash and its inverse that randomizes the order of the three problems.
%scramble = ();
%inverse = ();
for my $i (0..3) {
  do {$temp = list_random(0..3)} until !(grep(/^$temp$/,values %scramble) );
  $scramble{$i} = $temp;
  $inverse{$temp} = $i;
};

##############################################

BEGIN_PGML

Match each fraction with the graph representing it. (Shaded regions represent fractions.)

A: [@image( insertGraph($gr[0]), width=>400, 
    height=>50, tex_size=>800, extra_html_tags => "alt = '$alt0' title = '$alt0'")@]*

B: [@image( insertGraph($gr[1]), width=>400, 
    height=>50, tex_size=>800, extra_html_tags => "alt = '$alt1' title = '$alt1'")@]*

C: [@image( insertGraph($gr[2]), width=>400, 
    height=>50, tex_size=>800, extra_html_tags => "alt = '$alt2' title = '$alt2'")@]*

D: [@image( insertGraph($gr[3]), width=>400, 
    height=>50, tex_size=>800, extra_html_tags => "alt = '$alt3' title = '$alt3'")@]*

[@DataTable(
  [
    [[PF('Fraction'),
        rowcss => 'border-bottom: 2px solid; ',],
     [PF('Which Graph?'),],
    ],
    [[PF('[`\frac{[$nums[$scramble{0}]]}{[$dens[$scramble{0}]]}`]'),
         rowcss => 'border-bottom: 2px solid;'],
     [PF('[___]{$radios[$scramble{0}]}'),],
    ],
    [[PF('[`\frac{[$nums[$scramble{1}]]}{[$dens[$scramble{1}]]}`]'),
         rowcss => 'border-bottom: 2px solid;'],
     [PF('[___]{$radios[$scramble{1}]}'),],
    ],
    [[PF('[`\frac{[$nums[$scramble{2}]]}{[$dens[$scramble{2}]]}`]'),
         rowcss => 'border-bottom: 2px solid;'],
     [PF('[___]{$radios[$scramble{2}]}'),],
    ],
    [[PF('[`\frac{[$nums[$scramble{3}]]}{[$dens[$scramble{3}]]}`]'),],
     [PF('[___]{$radios[$scramble{3}]}'),],
    ],
  ],
  align => 'c c',
  columnscss =>
    ['border-right: 0px solid; ',
     ' ',
     ' ',],
);@]*

END_PGML

##############################################

$text0 = ($nums[0]==1) ? "piece" : "pieces";
$text1 = ($nums[1]==1) ? "piece" : "pieces";
$text2 = ($nums[2]==1) ? "piece" : "pieces";
$text3 = ($nums[3]==1) ? "piece" : "pieces";

$half1 = $dens[1]/2;
$half2 = $dens[2]/2;

BEGIN_PGML_SOLUTION

Fraction [`\frac{[$nums[0]]}{[$dens[0]]}`] implies: We evenly cut the bar into [`[$dens[0]]`] pieces, and then shade [`[$nums[0]]`] [$text0]. The shaded region should be a very small part of the bar, and thus Graph A represents [`\frac{[$nums[0]]}{[$dens[0]]}`].

Fraction [`\frac{[$nums[1]]}{[$dens[1]]}`] implies: We evenly cut the bar into [`[$dens[1]]`] pieces, and then shade [`[$nums[1]]`] [$text1]. Note that half of [`[$dens[1]]`] is [`[$half1]`], and [`[$nums[1]]`] is a little bit smaller than [`[$half1]`]. The shaded region should be a little bit smaller than half, and thus Graph B represents [`\frac{[$nums[1]]}{[$dens[1]]}`].

Fraction [`\frac{[$nums[2]]}{[$dens[2]]}`] implies: We evenly cut the bar into [`[$dens[2]]`] pieces, and then shade [`[$nums[2]]`] [$text2]. Note that half of [`[$dens[2]]`] is [`[$half2]`], and [`[$nums[2]]`] is a little bit bigger than [`[$half2]`]. The shaded region should be a little bit bigger than half, and thus Graph C represents [`\frac{[$nums[2]]}{[$dens[2]]}`].

Fraction [`\frac{[$nums[3]]}{[$dens[3]]}`] implies: We evenly cut the bar into [`[$dens[3]]`] pieces, and then shade [`[$nums[3]]`] [$text3]. The shaded region should be a very big part of the bar, and thus Graph D represents [`\frac{[$nums[3]]}{[$dens[3]]}`].

END_PGML_SOLUTION

ENDDOCUMENT();
