# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Template
#
# Given 15*15=225, calculate 150*1500.
# 
# Last updated: Carl Yao, 10/19/2013
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('')
## KEYWORDS('decimal','multiply')
## DBCCSS('5.NBT')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')

##############################################


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");

$num00 = random(1,9,1)*10+random(1,9,1);
$num01 = random(1,9,1)*10+random(1,9,1);
$product0 = $num00*$num01;

@moves = ();
@nums = ();

$nums[0] = $num00*list_random(1,10,100);
$nums[1] = ($num00==$nums[0]) ? $num01*list_random(10,100) : $num01;
$product1 = $nums[0]*$nums[1];
$moves[1] = log($product1/$product0)/log(10);

$nums[2] = ($num00==$nums[0]) ? $num00*list_random(10,100) : $num00;
$nums[3] = ($nums[2]==$num00) ? $num01*list_random(10,100) : $num01;
$product2 = $nums[2]*$nums[3];
$moves[2] = log($product2/$product0)/log(10);

$nums[4] = $num00*list_random(10,100);
$nums[5] = $num01*list_random(10,100);
$product3 = $nums[4]*$nums[5];
$moves[3] = log($product3/$product0)/log(10);

@movesToWords = ();
for my $i (1..3) {
   if (Real($moves[$i])==1) {$movesToWords[$i]="once";}
   elsif (Real($moves[$i])==2) {$movesToWords[$i]="twice";}
   else {$movesToWords[$i]= numberWord($moves[$i]).' times';}
}

$num10 = $nums[0];
$num11 = $nums[1];

$num20 = $nums[2];
$num21 = $nums[3];

$num30 = $nums[4];
$num31 = $nums[5];

Context("LimitedNumeric");
Context()->{format}{number} = "%9d";
$product1 = Compute("$product1");
$product2 = Compute("$product2");
$product3 = Compute("$product3");

##############################################

TEXT(beginproblem());

BEGIN_PGML

It's given that [`[$num00]\cdot[$num01]=[$product0]`]. Calculate the following without using a calculator.

a.    [`[$num10] \cdot [$num11] `] = [___________]{$product1}

a.    [`[$num20] \cdot [$num21]  `] = [___________]{$product2}

a.    [`[$num30] \cdot [$num31]  `] = [___________]{$product3}

END_PGML

##############################################

if ($place1==1) {$times = "once";}
elsif ($place1==2) {$times = "twice";}
else {$times = "$place1".' times';}

BEGIN_PGML_SOLUTION

Let's observe a pattern:

    [``
\begin{aligned}[t]
   12 \cdot 10 &= 120 \\
   12 \cdot 100 &= 1200 \\
   12 \cdot 1000 &= 12000 
\end{aligned}
    ``]

When an integer is multiplied by [`10`], [`100`] or [`1000`], we can simply move the decimal point to the right one, two or three times.

Now, these two equations should make sense:

    [``
\begin{aligned}[t]
   15 \cdot 15 &= 225 \\
   15 \cdot 150 &=2250
\end{aligned}
    ``]

If we multiply [`15`] by [`10`] to get [`150`], we should multiply the product [`225`] by [`10`] to get [`2250`].

a.

Compare [`[$num00]\cdot[$num01] `] with [`[$num10] \cdot [$num11] `], there are [@$moves[1]@] extra zeros; so we move [`[$product0]`]'s decimal point to the right [@$movesToWords[1]@] to get [`[$product1]`]:

    [``
\begin{aligned}[t]
   [$num00]\cdot[$num01] &=[$product0] \\
   [$num10]\cdot[$num11] &=[$product1]
\end{aligned}
    ``]

b.

Compare [`[$num00]\cdot[$num01] `] with [`[$num20] \cdot [$num21] `], there are [@$moves[2]@] extra zeros; so we move [`[$product0]`]'s decimal point to the right [@$movesToWords[2]@] to get [`[$product2]`]:

    [``
\begin{aligned}[t]
   [$num00]\cdot[$num01] &=[$product0] \\
   [$num20]\cdot[$num21] &=[$product2]
\end{aligned}
    ``]

c.

Compare [`[$num00]\cdot[$num01] `] with [`[$num30] \cdot [$num31] `], there are [@$moves[3]@] extra zeros; so we move [`[$product0]`]'s decimal point to the right [@$movesToWords[3]@] to get [`[$product3]`]:

    [``
\begin{aligned}[t]
   [$num00]\cdot[$num01] &=[$product0] \\
   [$num30]\cdot[$num31] &=[$product3]
\end{aligned}
    ``]

END_PGML_SOLUTION

ENDDOCUMENT();


