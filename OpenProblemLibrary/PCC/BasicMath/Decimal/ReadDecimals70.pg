# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given a decimal, choose the correct way to read it.
# Decimals are like 6.210.
# 
# Last updated: Yao, 10/19/2013
#
# ENDDESCRIPTION

## DBsubject('Elementary School')
## DBchapter('')
## DBsection('')
## KEYWORDS('decimal')
## DBCCSS('4.NF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
  "PCCmacros.pl",
  "PGchoicemacros.pl",
);

##############################################

TEXT(beginproblem());
Context("LimitedNumeric");

$int=random(1,9,1);
$intWord = numberWord($int);

$thousandth = 0;
$hundredth = random(1,9,1);
$tenth = random(0,9,1);

$num = sprintf("%.3f",$int+$tenth/10+$hundredth/100);
$num1 = sprintf("%.2f",$int+$tenth/10+$hundredth/100);

#$word[0] and $word[1] are correct answers. The others are decoys.
@word=();

$word[0] =  $intWord.' and '.numberWord($tenth*10+$hundredth).' hundredth';
if ($tenth*10+$hundredth!=1) {$word[0] .= 's';}

$tenthWord = $tenth==0 ? "" : numberWord($tenth).' hundred ';
$word[1] =  $intWord.' and '.$tenthWord.numberWord($hundredth*10).' thousandths';

$word[2] = $word[0];
$word[2] =~ s/hundredth/thousandth/;

$word[3] = $word[1];
$word[3] =~ s/thousandth/hundredth/;

Context()->texStrings;
$mc = new_checkbox_multiple_choice();

$mc -> qa (
"Choose all correct ways to read \($num\)$BR",
"$word[0] $BR",
"$word[1] $BR",
);

$mc -> extra( 
"$word[2] $BR",
"$word[3] $BR",
);

Context()->normalStrings;


##############################################

BEGIN_TEXT

\{ $mc -> print_q() \}

$SPACE $SPACE $SPACE    \{ $mc -> print_a() \}

END_TEXT

##############################################
install_problem_grader(~~&std_problem_grader);

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $mc->correct_ans() ) );

##############################################

BEGIN_PGML_SOLUTION

Since trailing zeroes in a decimal can be ignored, we have [`[$num]=[$num1]`].

The correct way to read [`[$num]`] is [@$word[1]@].

The correct way to read [`[$num1]`] is [@$word[0]@].

So the correct answers are [@$mc->correct_ans()@].

END_PGML_SOLUTION



ENDDOCUMENT();
