# WeBWorK problem written by Carl Yao
# Portland Community College
#
# List all factors of a number smaller than 50. The number is composite.
#
# Last edited: Yao 9/25/13
#
# ENDDESCRIPTION

## DBsubject('Elementary School')
## DBchapter('')
## DBsection('')
## KEYWORDS('factor')
## DBCCSS('4.NBT.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",

);

##############################################

sub isPrime {
   my $num = shift;
   if ($num%2==0) {return 0;}
   for (my $i=3; $i<=int(sqrt($num)); $i=$i+2) {
      if ($num%$i==0) {return 0;}
   }
   return 1;
}

#This subroutine returns an array of a number's factors.

sub returnFactors {
   my ($number, @facs) = @_;
   for my $i (1..$number) {
      if ($number%$i==0) {push(@facs,$i);}
   }
   return @facs;
}

################################################

Context("Numeric");

$num=0;
do {$num=random(20,50,1);} until (!(isPrime($num)) && ($num!=18));

@factors = ();
@factors = returnFactors($num,@factors);

$ans = List(@factors);


##############################################

TEXT(beginproblem());

BEGIN_PGML

List all factors of [` [$num] `]: [_____________]{$ans}

Use commas to separate factors.

END_PGML

#############################################

$factorList = "{1,$num}";

$s1 = $num/2;
if ($s1==int($s1)) {
   $factorList = "{1,2,$s1,$num}";
   $output1 = "we found two factors: [`2`] and [`$s1`]. Now the factor list has [`\{$factorList\}`].";
} else {
   $output1 = "[`2`] is not a factor of [`$num`].";
}


$s2 = $num/3;
if ($s2==int($s2)) {
   $factorList = ($s1==int($s1)) ? "{1,2,3,$s2,$s1,$num}" : "{1,3,$s2,$num}";
   $output2 = "we found two factors: [`3`] and [`$s2`]. Now the factor list has [`\{$factorList\}`].";
} else {
   $output2 = "[`3`] is not a factor of [`$num`].";
}

############################################

BEGIN_PGML_SOLUTION

To find all factors of a number, we start from the number [`1`], and go up one by one until we "meet" a factor we already found. We always find pairs of factors.

Let's find all factors of [`18`] as an example.

* We start from [`1`]. Since [` 18 \div 1 = 18 `], we found two factors: [`1`] and [`18`]. Now the factor list has [` ~~{1, 18 ~~}`].
* Next number is [`2`]. Since [` 18 \div 2 = 9 `], we found two factors: [`2`] and [`9`]. Now the factor list has [` ~~{1, 2, 9, 18 ~~}`].
* Next number is [`3`]. Since [` 18 \div 3 = 6 `], we found two factors: [`3`] and [`6`]. Now the factor list has [` ~~{1, 2, 3, 6, 9, 18 ~~}`].
* Next number is [`4`]. Since [` 18 \div 4 = 4.5 `], [`4`] is not a factor of [`18`].
* Next number is [`5`]. Since [` 18 \div 5 = 3.6 `], [`5`] is not a factor of [`18`].
* Next number is [`6`]. Since we already have [`6`] in the list of factors, we are done.

We have found all factors of [`18`]: [` ~~{1, 2, 3, 6, 9, 18 ~~} `].

With this method, we can find all factors of [`[$num]`]. We will show the first few step:

* We start from [`1`]. Since [` [$num] \div 1 = [$num] `], we found two factors: [`1`] and [` [$num] `]. Now the factor list has [` ~~{1, [$num] ~~}`].
* Next number is [`2`]. Since [` [$num] \div 2 = [$s1] `], [$output1]**
* Next number is [`3`]. Since [` [$num] \div 3 = [$s2] `], [$output2]**
* ...

In the end, [`[$num]`] has the following factors: [` ~~{[$ans] ~~}`].

END_PGML_SOLUTION

ENDDOCUMENT();


