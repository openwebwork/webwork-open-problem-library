# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Find the LCM of two numbers. One number goes into the other.
#
# Last edited: Yao 9/26/13
#
# ENDDESCRIPTION

## DBsubject('Elementary School')
## DBchapter('')
## DBsection('')
## KEYWORDS('least common multiple')
## DBCCSS('6.NS.4')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",

);

##############################################

#Input is a prime. Output is the next prime number.
sub nextPrime {
   my $p = shift;
   while (1) {
      $p++;
      if ($p%2==0) {next;}
      $isPrime = 1;
      for (my $i=3; $i<=sqrt($p); $i=$i+2) {
         if ($p%$i==0) {
            $isPrime=0;
            last;
         }
      }
      if ($isPrime==1) {return $p;}
   }
}

# Input is a number and reference to an array saving the number's 
# prime factorization.

sub primeFactor {
   my ($n,$ar_primeFactor) = @_;
   my $prime=2;
   while (1) {
      while ($n%$prime==0) {
         ${$ar_primeFactor}[scalar @{$ar_primeFactor}] = $prime;
         $n=$n/$prime;
      }
      if ($n==1) {return;}
      $prime = &nextPrime($prime);
   }
}

# Input is a reference to an array of numbers.
# Output is all numbers connected by ' \cdot '.

sub cdotNumbers {
   my $ra_factors = shift;
   $line1Output = "";
   foreach $item ( @$ra_factors ) {$line1Output .= "$item".' \cdot ';}
   $line1Output =~ s/ \cdot $//;
   return $line1Output;
}

#This subroutine returns 1 if the number is prime.
sub isPrime {
   my $num = shift;
   if ($num%2==0) {return 0;}
   for (my $i=3; $i<=int(sqrt($num)); $i=$i+2) {
      if ($num%$i==0) {return 0;}
   }
   return 1;
}

################################################

Context("Numeric");

$num1 = random(2,10,1);
$num2 = $num1 * random(2,5,1);

$ans = lcm($num1,$num2);

@num1Factor = ();
primeFactor($num1,~~@num1Factor);
$num1Output = cdotNumbers(~~@num1Factor);

@num2Factor = ();
primeFactor($num2,~~@num2Factor);
$num2Output = cdotNumbers(~~@num2Factor);

@ansFactor = ();
primeFactor($ans,~~@ansFactor);
$ansFactorList = cdotNumbers(~~@ansFactor);

##############################################

TEXT(beginproblem());

BEGIN_PGML

Find the Least Common Multiple (LCM) of [`[$num1]`] and [`[$num2]`].

Their LCM is [_______]{$ans}.

END_PGML

#############################################

$bigger = max($num1,$num2);
$smaller = min($num1,$num2);

$output="";
$i = 1;
do {
   $temp = $i*$bigger;
   $output .= "$temp,";
   $i++;
} until ($temp%$smaller==0);
$output .= "...";

###############################################

BEGIN_PGML_SOLUTION

Since [`[$num1]`] divides into [`[$num2]`], the LCM of [`[$num1]`] and [`[$num2]`] is simply [`[$num2]`].

END_PGML_SOLUTION

ENDDOCUMENT();


