##DESCRIPTION
## Statistics: Hypothesis testing
##ENDDESCRIPTION

##KEYWORDS('statistics','hypothesis testing')
## Tagged by sawblade

## DBsubject('Statistics')
## DBchapter('Hypothesis Testing')
## DBsection('Common Large-Sample Tests')
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "answerHints.pl",
  "contextPercent.pl",
  "PGnumericalmacros.pl",
  "PGstatisticsmacros.pl",
  "PGbasicmacros.pl",
  "PGchoicemacros.pl",
  "PGnauGraphics.pl",
  "PGnauStats.pl",
  "parserOneOf.pl",
  );

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

Context("Percent");

$n = random(1000, 2000, 5);
$p = random(8,12,1);
$pdec = ($p/100);
$qdec = (1-$pdec);
$sd = Real(sqrt($pdec*$qdec/$n));
$x = random(int($n*$p/100)-25, int($n*$p/100)-5, 1);
$po = Real($x/$n);
$test = (($po-$pdec)/($sd));
$alpha = random(0.01, 0.05, 0.04);
$alphap = Percent($alpha);

$stat = ($x/$n - $p/100)*sqrt($n)/sqrt($p/100*(100-$p)/100);
$crit = udistr(1-$alpha);
$pvalue = 1-uprob($stat);
$pval = Percent(normal_prob(-infty,$test));

$diagram = DrawNormalDist($test,-99,$test,"", outside=>1);

if ( $stat < $crit ) { $tag = 0; } else { $tag = 1; }

@ans = ("There is sufficient evidence to support the claim that less than \($p$PERCENT\) 
        of vacations include a theme park visit.",
        "There is not sufficient evidence to support the claim that less than \($p$PERCENT\)
        of vacations include a theme park visit.");

$mc = new_multiple_choice();

$mc -> qa ( "The conclusion is ", $ans[$tag]);

$mc -> extra ($ans[1-$tag]);
      
BEGIN_TEXT

A survey of \($n\) people who took vacations revealed that \($x\) of them included 
a visit to a theme park. Based on those survey results, a management consultant claims
that less than \($p$PERCENT\) of vacations include a theme park visit. 
Test this claim using the \( \alpha = $alpha \) significance level. $BR$BR

Assuming \(H_0\), the \(z\)-score of the sample is \{ans_rule(30)\} $BR$BR

The critical \(z\)-score for declaring significant evidence is \{ans_rule(30)\} $BR$BR

The \(P\)-value of the hypothesis test is \{ans_rule(30)\} $BR$BR

\{ $mc -> print_q() \} $BR

\{ $mc -> print_a() \} $BR

END_TEXT
Context("Percent");
ANS(Real($stat)->cmp);
ANS(Real($crit)->cmp);
ANS(Percent($pvalue)->cmp);
ANS(radio_cmp($mc->correct_ans));

#################################################
BEGIN_SOLUTION
(a)  A management consultant claims that less than \($p$PERCENT\) of vacations include a theme park.  This means we will have a one sided test with \(<\) in our alternative hypothesis.  This also means we know that \(p=$pdec\) and since \($x\) out \($n\) vacations did visit a theme park, \(\hat{p}=$po\). Thus we can find, \(\operatorname{SD}(\hat{p})=\sqrt{\frac{$pdec\cdot $qdec}{$n}} \approx $sd\).
$PAR
Therefore our \(z\)-score is \(z=\frac{$po-$pdec}{$sd}\approx$test\).
$PAR
(b) The critical \(z\)-score for declaring significant evidence is the same as saying ''beyond what \(z\)-score do we start rejecting the null hypothesis?''  Since our significance level is \(\alpha = $alpha\), and the claims was that less than \($p$PERCENT\) of vacations include a theme park, this means we want a left-tailed critical \(z\)-score.  This means only \($alpha\), or, \($alphap\) is below the needed critical \(z\)-score.  Therefore, we can use the inverse technology command using an area of \($alpha\).  Thus, we find \(z\approx$crit\).
$PAR
(c) We require technology to find our \(P\)-value.  Using technology and our test statistic of \(z\approx$test\), we find a \(P\)-value of \($pval\), also seen in the graph below.
$PAR
\{Plot($diagram, tex_size=>900)\}
$PAR
(d) The final conclusion is that: $ans[$tag] This conclusion is always based on the fact that if our \(P\)-value is less than \(\alpha\) we reject the null hypothesis and if our \(P\)-value is great than \(\alpha\) we do not reject the null hypothesis.
END_SOLUTION

ENDDOCUMENT();       # This should be the last executable line in the problem.
