# DESCRIPTION
# WeBWorK problem written by Carl Yao
# Portland Community College
#
# ENDDESCRIPTION

## DBsubject('')
## DBchapter('')
## DBsection('')
## KEYWORDS('')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGchoicemacros.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

@A = (); @B = (); @C = ();
@a = (); @b = (); @c = (); @h = ();

$c[0] = random(10, 30, 1);
$B[0] = random(20, 50, 1);
$h[0] = $c[0]*sin($B[0]*pi/180);

for my $i (1..3) {
  $c[$i] = $c[0];
  $B[$i] = $B[0];
  $h[$i] = $h[0];
}

#right triangle
$b[0] = "$c[0]\cdot \sin($B[0])";
$a[0] = $c[0]*cos($B[0]*pi/180);
$C[0] = 90;
$A[0] = 90-$B[0];

#2 triangles
do {
  $b[2] = random(int(($h[2]+$c[2])/2)-2, int(($h[2]+$c[2])/2)+2, 1);
} until $b[2]<$c[2] && $b[2]>$h[2];
$C[2] = arcsin($c[2]*sin($B[2]*pi/180)/$b[2])*180/pi;
$A[2] = 180 - $B[2] - $C[2];
$a[2] = $b[2]*sin($A[2]*pi/180)/sin($B[2]*pi/180);

#1 triangle
$b[3] = random($c[3]+5, $c[3]+10, 1);
$C[3] = arcsin($c[3]*sin($B[3]*pi/180)/$b[3])*180/pi;
$A[3] = 180 - $B[3] - $C[3];
$a[3] = $b[3]*sin($A[3]*pi/180)/sin($B[3]*pi/180);

#no triangle
$b[1] = random(int($h[1]/2), int($h[1])-1, 1);
$a[1] = $a[3];
$C[1] = $C[3];
$A[1] = $A[3];

@xmin = ();@xmax = (); @ymin = (); @ymax = ();

for my $i (0..3) {
  $xmin[$i] = 0;         #The viewing window
  $xmax[$i] = $a[$i]*240/210;
  $ymin[$i] = 0;
  $ymax[$i] = (210*$h[$i]/$a[$i]+30)*$h[$i]/(210*$h[$i]/$a[$i]);
}

$xLabelShift = $xmax[0]/240*5;
$yLabelShift = $ymax[0]/210*5;

# Ax, Bx, Cx
@x = (
[($xmax[0]-$a[0])/2+$c[3]*cos($B[0]*pi/180), ($xmax[0]-$a[0])/2, ($xmax[0]+$a[0])/2],
[($xmax[1]-$a[1])/2+$c[3]*cos($B[1]*pi/180), ($xmax[1]-$a[1])/2, ($xmax[1]+$a[1])/2],
[($xmax[2]-$a[2])/2+$c[3]*cos($B[2]*pi/180), ($xmax[2]-$a[2])/2, ($xmax[2]+$a[2])/2],
[($xmax[3]-$a[3])/2+$c[3]*cos($B[3]*pi/180), ($xmax[3]-$a[3])/2, ($xmax[3]+$a[3])/2],
);
# Ay, By, Cy
@y = (
[($ymax[0]+$h[0])/2, ($ymax[0]-$h[0])/2, ($ymax[0]-$h[0])/2],
[($ymax[1]+$h[1])/2, ($ymax[1]-$h[1])/2, ($ymax[1]-$h[1])/2],
[($ymax[2]+$h[2])/2, ($ymax[2]-$h[2])/2, ($ymax[2]-$h[2])/2],
[($ymax[3]+$h[3])/2, ($ymax[3]-$h[3])/2, ($ymax[3]-$h[3])/2],
);

@picture = ();

for my $i (0..3) {
  $picture[$i] = init_graph($xmin[$i],$ymin[$i],$xmax[$i],$ymax[$i],
      pixels=>[240,240*$ymax[$i]/$xmax[$i]]);

  $picture[$i]->new_color("darkblue",  100,100,255); 

  $picture[$i]->lb( new Label( $x[$i][0], $y[$i][0],"A",'black','center','bottom','large'));
  $picture[$i]->lb( new Label( $x[$i][1]-$xLabelShift, $y[$i][1],"B",'black','right','middle','large'));
  $picture[$i]->lb( new Label(($x[$i][0]+$x[$i][1])/2-$xLabelShift,($y[$i][0]+$y[$i][1])/2,"c",'black','right','bottom','large'));

  $picture[$i]->moveTo($x[$i][0],$y[$i][0]);
  $picture[$i]->lineTo($x[$i][1],$y[$i][1], darkblue,3);
  if ($i==0) {
    $picture[$i]->lineTo($x[$i][0],$y[$i][1], darkblue,3);
  } else {
    $picture[$i]->lineTo($x[$i][2],$y[$i][2], darkblue,3);
  }
  if ($i!=1) {
    $picture[$i]->lineTo($x[$i][0],$y[$i][0], darkblue,3);
  } else {
    $picture[$i]->moveTo($x[$i][0],$y[$i][0]);
    $picture[$i]->lineTo($x[$i][0],$y[$i][0]-$b[$i], darkblue,3);
  }
  
  if ($i==0) {
    $picture[$i]->lb( new Label($x[$i][0]+$xLabelShift, ($y[$i][0]+$y[$i][1])/2,"h",'black','left','bottom','large'));
    $picture[$i]->lb( new Label( $x[$i][0]+$xLabelShift, $y[$i][2],"C",'black','left','top','large'));
    $picture[$i]->lb( new Label( ($x[$i][1]+$x[$i][2])/2, $y[$i][1],"a",'black','center','top','large'));
    } elsif ($i==1) {
    $picture[$i]->lb( new Label( ($x[$i][1]+$x[$i][2])/2, $y[$i][1],"a",'black','center','top','large'));
    $picture[$i]->lb( new Label( $x[$i][0]+$xLabelShift, $y[$i][0]-0.5*$b[$i],"b",'black','left','middle','large'));
    } else {
    $picture[$i]->lb( new Label( ($x[$i][1]+$x[$i][2])/2, $y[$i][1],"a",'black','center','top','large'));
    $picture[$i]->lb( new Label(($x[$i][0]+$x[$i][2])/2+$xLabelShift, ($y[$i][0]+$y[$i][1])/2,"b",'black','left','bottom','large'));
    $picture[$i]->lb( new Label( $x[$i][2]+$xLabelShift, $y[$i][2],"C",'black','left','middle','large'));
    }
}

$picture[2]->moveTo($x[2][0],$y[2][0]);
$picture[2]->lineTo($x[2][2]-2*$b[2]*cos($C[2]*pi/180),$y[2][2], darkblue,3,'dashed');
$picture[2]->lb( new Label($x[2][0]-0.5*$b[2]*cos($C[2]*pi/180)+5*$xLabelShift, ($y[2][0]+$y[2][1])/2,"b",'black','left','bottom','large'));

$xShift = $xmax[$i]/100;
$yShift = $xShift*210/240;
$picture[0]->moveTo($x[0][0],$y[0][2]+5*$yShift);
$picture[0]->lineTo($x[0][0]-3*$xShift,$y[0][2]+5*$yShift, darkblue,3);
$picture[0]->lineTo($x[0][0]-3*$xShift,$y[0][2], darkblue,3);

@text = ();

$text[3] = "This is a triangle with one side parallel to the ground; this side is marked as a; the left side is marked as c; the right side is marked as b; the top angle is marked as A; the left side angle is marked as B; the right side angle is marked as C. Angle B and Angle C are acute angles, and Angle A is an obtuse angle.";

$text[2] = $text[3]." A dotted line starts at A and ends at a point on side a. This dashed line is also marked as b, and its length is equal to length of b.";

$text[0] = "This is a right triangle with one side parallel to the ground; this side is marked as a; the left side is marked as c (the hypotenuse); the right side is marked as h; the top angle is marked as A; the left side angle is marked as B; the right side angle is marked as C (the right angle). Angle A and Angle B are acute angles, and Angle C is a right angle.";

$test[1] = "This is an open shape very close to a triangle. One side is parallel to the ground, this side is marked as a. A point on top is marked as A. Point A is connected to the left end of side a, where the point is marked as B. Angle B is acute. Opposite to B is a side b, not long enough to touch side a.";

@solutions = (1,0,2,1);
@perm = NchooseK(4,4);
for ($i = 0; $i <= 3; $i++){ $ans[$i] = $solutions[$perm[$i]] };

##############################################
$refreshCachedImages = 1;
TEXT(beginproblem());

BEGIN_PGML

In a triangle [`\Delta ABC`], [`\angle A`] faces side [`a`], [`\angle B`] faces side [`b`], and [`\angle C`] faces side [`c`].

In this triangle, [`m\angle B=[$B[0]]^{\circ}`] and [`c=[$c[0]]`] units. Match up each given value of [`b`] with the number of possible triangles.

If [`b=[$b[$perm[0]]]`], there is/are [_____]{$ans[0]} possible triangle(s).

If [`b=[$b[$perm[1]]]`], there is/are [_____]{$ans[1]} possible triangle(s).

If [`b=[$b[$perm[2]]]`], there is/are [_____]{$ans[2]} possible triangle(s).

If [`b=[$b[$perm[3]]]`], there is/are [_____]{$ans[3]} possible triangle(s).
      
END_PGML

##############################################

BEGIN_PGML_SOLUTION

###Determining the number of possible triangles

To determine how many possible triangles would satisfy the given conditions, we sketch a right triangle and calculate the height [`h`]:

>>[@ image(insertGraph( $picture[0]  ), width=>240, extra_html_tags => "alt = '$text[0]' title = '$text[0]' ") @]*<<

    [``\begin{aligned}[t]
  \sin(B) &= \frac{h}{c} \\
  h &= c\cdot\sin(B) \\
  h &= [$c[0]]\cdot\sin([$B[0]]^{\circ}) \\
  h &\approx [$h[0]]
     \end{aligned}``]

Depending on the value of [`b`], there are 4 possible situations.

###Situation 1: [`b=h`]

If [`b=h`], side [`b`] can barely touch side [`a`]. In this situation, there is one possible right triangle solution, as shown in the graph above.

If [`b=h=[$b[0]]`], there is [`1`] possible triangle.

###Situation 2: [`b<h`]

If [`b<h`], side [`b`] isn't long enough to touch side [`a`]. In this situation, there is no possible triangle solution, as shown in the following graph:

>>[@ image(insertGraph( $picture[1]  ), width=>240, extra_html_tags => "alt = '$text[1]' title = '$text[1]' ") @]*<<

If [`b=[$b[1]]`], there is [`0`] possible triangle.

###Situation 3: [`h<b<c`]

If [`h<b<c`], it's possible that side [`b`] touches side [`a`] at two different places. In this situation, there are two possible triangle solutions, as shown in the following graph:

>>[@ image(insertGraph( $picture[2]  ), width=>240, extra_html_tags => "alt = '$text[2]' title = '$text[2]' ") @]*<<

If [`b=[$b[2]]`], there are [`2`] possible triangles.

###Situation 4: [`b \ge c`]

If [`b \ge c`], side [`b`] can touch side [`a`] at onely one place. In this situation, there is one possible triangle solution, as shown in the following graph:

>>[@ image(insertGraph( $picture[3]  ), width=>240, extra_html_tags => "alt = '$text[3]' title = '$text[3]' ") @]*<<

If [`b=[$b[3]]`], there is [`1`] possible triangle.

END_PGML_SOLUTION

ENDDOCUMENT();
