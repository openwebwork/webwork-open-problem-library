# DESCRIPTION
# WeBWorK problem written by Carl Yao
# Portland Community College
#
# ENDDESCRIPTION

## DBsubject('')
## DBchapter('')
## DBsection('')
## KEYWORDS('')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "contextFraction.pl",
  "parserNumberWithUnits.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

do {
   $base = random(50,200,1);
   $alpha = random(20,70,1);
   $alphaRadian = $alpha*pi/180;
   $height = $base/tan($alphaRadian);
   $hypotenuse = $height/cos($alphaRadian);
} until ($height<1000);
$height = int($height);
$alpha = Compute(arctan($base/$height)*180/pi);

$hypotenuseU = NumberWithUnits("$hypotenuse ft");
$baseU = NumberWithUnits("$base ft");
$heightU = NumberWithUnits("$height ft");

$beta = 90-$alpha;
$betaRadian = pi/2-$alphaRadian;

$longer = max($base,$height);

$xmin = 0;         #The viewing window
$xmax = 1.5*$longer;
$ymin = 0;
$ymax = 1.5*$longer;

#$corner's value decides the location of the right angle. 
#(0,1,2,3) implies (bottom left,top left,top right,bottom right). 
$corner = 3;

   @x = (($xmax-$height)/2,($xmax+$height)/2);
   @y = (($ymax-$base)/2,($ymax+$base)/2);

$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[400,400]);

$labelAdjust = $longer/10;

@labelAx = ($x[0],$x[1],$x[1],$x[0]);
@labelAy = ($y[1],$y[1],$y[0],$y[0]);
@alphaCurveStart = (3*pi/2,pi,pi/2,0);
@alphaCurveEnd = (3*pi/2+$alphaRadian,pi+$alphaRadian,pi/2+$alphaRadian,$alphaRadian);

@labelBx = ($x[1],$x[0],$x[0],$x[1]);
@labelBy = ($y[0],$y[0],$y[1],$y[1]);
@betaCurveStart = (pi-$betaRadian,pi/2-$betaRadian,2*pi-$betaRadian,3*pi/2-$betaRadian);
@betaCurveEnd = (pi,pi/2,2*pi,3*pi/2);

@labelCx = ($x[0],$x[0],$x[1],$x[1]);
@labelCy = ($y[0],$y[1],$y[1],$y[0]);

$curveAdjust = $longer/10;
$xfuncAlpha = sub { my $t = shift();
    return $labelAx[$corner]+$curveAdjust*cos($t); };
$yfuncAlpha = sub { my $t = shift();
    return $labelAy[$corner]+$curveAdjust*sin($t); };
$fnAlpha = new Fun( $xfuncAlpha, $yfuncAlpha, $picture );
$fnAlpha->domain($alphaCurveStart[$corner],$alphaCurveEnd[$corner]);
$theta = ($alphaCurveStart[$corner]+$alphaCurveEnd[$corner])/2;
$picture->lb( new Label($labelAx[$corner]+2*$curveAdjust*cos($theta), $labelAy[$corner]+2*$curveAdjust*sin($theta),"x",'black','center','middle'));

$curveAdjust = $longer/10;
$xfuncAlpha1 = sub { my $t = shift();
    return $x[1]+$curveAdjust*cos($t); };
$yfuncAlpha1 = sub { my $t = shift();
    return $y[1]+$curveAdjust*sin($t); };
$fnAlpha = new Fun( $xfuncAlpha1, $yfuncAlpha1, $picture );
$fnAlpha->domain(pi,pi+$alphaRadian);
$theta = pi+$alphaRadian/2;
$picture->lb( new Label($x[1]+2*$curveAdjust*cos($theta), $y[1]+2*$curveAdjust*sin($theta),'x','black','center','middle'));


@labelBaseX=(($x[0]+$x[1])/2,$x[0]-$labelAdjust,($x[0]+$x[1])/2,$x[1]+$labelAdjust);
@labelBaseY=($y[0]-$labelAdjust,($y[0]+$y[1])/2,$y[1]+$labelAdjust,($y[0]+$y[1])/2);
@labelHeightX=($x[0]-$labelAdjust,($x[0]+$x[1])/2,$x[1]+$labelAdjust,($x[0]+$x[1])/2);
@labelHeightY=(($y[0]+$y[1])/2,$y[1]+$labelAdjust,($y[0]+$y[1])/2,$y[0]-$labelAdjust);
@labelHypotenuseX=(($x[0]+$x[1])/2+$labelAdjust,($x[0]+$x[1])/2+$labelAdjust,($x[0]+$x[1])/2-$labelAdjust,($x[0]+$x[1])/2-$labelAdjust);
@labelHypotenuseY=(($y[0]+$y[1])/2+$labelAdjust,($y[0]+$y[1])/2-$labelAdjust,($y[0]+$y[1])/2-$labelAdjust,($y[0]+$y[1])/2+$labelAdjust);


#horizontal line
$picture->moveTo($x[1],$y[1]);
$picture->lineTo($x[0],$y[1],'blue',1,'dashed');
#spotlight
$picture->stamps( closed_circle($x[1],$y[1],'blue') );
$picture->lb( new Label($x[1]+$labelAdjust/7,$y[1]+$labelAdjust/2,'spotlight','black','center','middle'));
#boat
$picture->stamps( closed_circle($x[0],$y[0],'blue') );
$picture->lb( new Label($x[0]-$labelAdjust/7,$y[0]-$labelAdjust/2,'boat','black','center','middle'));

$picture->lb( new Label($labelBaseX[$corner], $labelBaseY[$corner],$baseU,'black','center','middle'));
$picture->lb( new Label($labelBaseX[$corner], $labelBaseY[$corner]+$curveAdjust,'lighthouse','black','center','middle'));

$picture->lb( new Label($labelHeightX[$corner]+3*$labelAdjust,$labelHeightY[$corner]+$labelAdjust/2,'sea','black','center','middle'));
$picture->lb( new Label($labelHeightX[$corner],$labelHeightY[$corner]+$labelAdjust/2,$heightU,'black','center','middle'));

$picture->new_color("lightblue", 200,200,255); # RGB
$picture->new_color("darkblue",  100,100,255); 

@ax=(0,1,1,0);
@ay=(1,1,0,0);
@bx=(1,0,0,1);
@by=(0,0,1,1);
@cx=(0,0,1,1);
@cy=(0,1,1,0);


$picture->moveTo($x[$ax[$corner]],$y[$ay[$corner]]);
$picture->lineTo($x[$bx[$corner]],$y[$by[$corner]], darkblue,3);
$picture->lineTo($x[$cx[$corner]],$y[$cy[$corner]], darkblue,3);
$picture->lineTo($x[$ax[$corner]],$y[$ay[$corner]], darkblue,3);


$cornersize = $labelAdjust/3;

@rightSymbol1x=($x[0],$x[0]+$cornersize,$x[1]-$cornersize,$x[1]);
@rightSymbol1y=($y[0]+$cornersize,$y[1],$y[1],$y[0]+$cornersize);
@rightSymbol2x=($x[0]+$cornersize,$x[0]+$cornersize,$x[1]-$cornersize,$x[1]-$cornersize);
@rightSymbol2y=($y[0]+$cornersize,$y[1]-$cornersize,$y[1]-$cornersize,$y[0]+$cornersize);
@rightSymbol3x=($x[0]+$cornersize,$x[0],$x[1],$x[1]-$cornersize);
@rightSymbol3y=($y[0],$y[1]-$cornersize,$y[1]-$cornersize,$y[0]);

$picture->moveTo($rightSymbol1x[$corner],$rightSymbol1y[$corner]);
$picture->lineTo($rightSymbol2x[$corner],$rightSymbol2y[$corner], darkblue,3);
$picture->lineTo($rightSymbol3x[$corner],$rightSymbol3y[$corner], darkblue,3);


@positions=('bottom left','top left','top right','bottom right');
if ($corner==0) {
   $aPosition = $positions[1];
   $bPosition = $positions[3];
   $cPosition = $positions[0];
} elsif ($corner==1) {
   $aPosition = $positions[2];
   $bPosition = $positions[0];
   $cPosition = $positions[1];
} elsif ($corner==2) {
   $aPosition = $positions[3];
   $bPosition = $positions[1];
   $cPosition = $positions[2];
} else {
   $aPosition = $positions[0];
   $bPosition = $positions[2];
   $cPosition = $positions[3];
}

$text = "The graph shows a lighthouse with a spotlight on its top, shining light at a boat on the sea. The lighthouse, the line connecting the boat to the lighthouse, and a line connecting the boat to the spotlight form a right triangle. The right angle is at the $cPosition corner of the picture. At the $aPosition, the acute angle is marked as x. The length of the side opposite to the given acute angle is marked as $baseU (height of the lighthouse); the side adjacent to the given acute angle is marked as $heightU (distance from boat to lighthouse). A dashed horizontal line is drawn from the spotlight toward the boat; this line forms an angle with the hypotenuse of the right triangle, marked as x.";

##############################################
$refreshCachedImages = 1;
TEXT(beginproblem());

BEGIN_PGML

A lighthouse has a spotlight on its top, and the spotlight is shining light on a boat on the sea. The lighthouse is [`[$baseU]`] high, and the horizontal distance from the boat to the lighthouse is [`[$heightU]`]. Find the angle of depression from the spotlight toward the boat.

Solution: The angle of depression from the spotlight toward the boat is [___________]{$alpha} degrees.

END_PGML

##############################################

BEGIN_PGML_SOLUTION

Assume the angle of depression from the spotlight toward the boat is [`x`] degrees. The following graph can represent this situation:

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($picture), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$text' title = '$text'") @]*<<

Note that the horizontal line must be drawn, because the angle of depression is defined as the degree between a direction and the horizontal line. By the property of parallel lines, the acute angle at the boat end of the right triangle has the same measure as the angle of depression.

This has become a right triangle trigonometry problem.

By definition:

    [`` \sin \theta = \frac{\text{opposite leg}}{\text{hypotenuse}} ``]

    [`` \cos \theta = \frac{\text{adjacent leg}}{\text{hypotenuse}} ``]

    [`` \tan \theta = \frac{\text{opposite leg}}{\text{adjacent leg}} ``]

An acronym to help you memorize those 3 definitions is: *SOH CAH TOA*.

For this problem, the unmarked side is the hypotenuse, because it's opposite to the right angle, and because it's the longest side in the triangle.

The side marked as [`[$baseU]`] is the "opposite leg" of the angle marked as x, because it is opposite to the angle.

The side marked as [`[$heightU]`] is the "adjacent leg" of the angle marked as x, because it is *not* opposite to the angle.

Since we need to relate the angle's opposite and adjacent legs, we choose to use the tangent function. 

To find the unknown angle's measure, we need to use the inverse tangent function. Don't forget to change your calculator's mode to "degree".

The solution is:

    [``
\begin{aligned}
   \tan{x} &= \frac{[$base]}{[$height]} \\
   x &= \tan^{-1}\left(\frac{[$base]}{[$height]}\right) \\
   x &\approx [$alpha]^{\circ}
\end{aligned}
    ``]

Solution: The angle of depression from the spotlight toward the boat is [`[$alpha]`] degrees.

END_PGML_SOLUTION

ENDDOCUMENT();
