# WeBWorK problem written by Carl Yao
# Portland Community College
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Exponential')
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Carl Yao')
## Institution('PCC')



##############################################


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGgraphmacros.pl",
  "PCCgraphMacros.pl",
  "parserPopUp.pl",
  "niceTables.pl",
  "PGcourse.pl",

);

 $refreshCachedImages = 1;


##############################################

TEXT(beginproblem());
Context("Numeric");
Context()->reduction->set('(-x)-y'=>0);    #So that the displayed inequalities
Context()->reduction->set('(-x)+y'=>0);    #will look as intended

do {

do {
   $x1 = random(1,4,1);
   $x3 = non_zero_random(-2,$x1-1,1);
   $x4 = non_zero_random(-3,$x3-1,1);
   $x2 = non_zero_random(-4,$x4-1,1);
   $b1 = -$x3-$x4;
   $c1 = $x3*$x4;
   $b2 = -$x1-$x2;
   $c2 = $x1*$x2;
} until ( ($b1!=$b2) && (abs($x3)!=abs($x1)) && (abs($x3)!=abs($x2)) && (abs($x4)!=abs($x1)) && (abs($x4)!=abs($x2)) );

$x1N = -$x1;
$x2N = -$x2;
$x3N = -$x3;
$x4N = -$x4;

$s5 = $c1-$c2;
$s6 = $s5/($b2-$b1);

$numF = Formula("(x-$x3)*(x-$x4)")->reduce;
$denF = Formula("(x-$x1)*(x-$x2)")->reduce;
$num = Formula("x**2+$b1*x+$c1")->reduce;
$den = Formula("x**2+$b2*x+$c2")->reduce;
$func = Formula("$numF/($denF)")->reduce;
$f[0] = Formula("$num/($den)")->reduce;
$f[1] = Formula("(x+$x3)(x+$x4)/((x+$x1)(x+$x2))")->reduce;
$f[2] = Formula("(x-$x1)(x-$x2)/((x-$x3)(x-$x4))")->reduce;
$f[3] = Formula("$num/((x-$x1)*(x-$x2)**2)")->reduce;

$yInt = $c1/$c2;
$xIntL = min($x3,$x4);
$xIntR = max($x3,$x4);

@hy = ( );
$hy[0] = $f[0]->eval(x=>5);
$hy[1] = $f[1]->eval(x=>5);
$hy[2] = $f[2]->eval(x=>5);
$hy[3] = $f[3]->eval(x=>5);
$hy[4] = $f[0]->eval(x=>-5);
$hy[5] = $f[1]->eval(x=>-5);
$hy[6] = $f[2]->eval(x=>-5);
$hy[7] = $f[3]->eval(x=>-5);
$hy[8] = $f[0]->eval(x=>($x2+$x3)/2+0.1);
$hy[9] = $f[1]->eval(x=>($x2+$x3)/2+0.1);
$hy[10] = $f[2]->eval(x=>($x2+$x3)/2+0.1);
$hy[11] = $f[3]->eval(x=>($x2+$x3)/2+0.1);

$flag = 0;
for (my $i=0; $i<=11; $i++) {
   if (abs($hy[$i])>10) {
      $flag = 1;
      last;
   }
}

} until ( ($flag==0) && (abs($s6)<=5) && ($s6<$x4) );

@alt = ();
$alt[0] = "This is a function's graph with three pieces of smooth curves. The left piece approaches y=1 horizontally as x-value approaches negative infinity, and approaches positive infinity as x-value approaches $x2 from the left. The middle piece approaches negative infinity as x-value approaches $x2 from the right, crosses ($x4,0) and ($x3,0), and approaches negative infinity as x-value approaches $x1 from the left. The right piece approaches positive infinity as x-value approaches $x1 from the right, and approaches y=1 horizontally as x-value approaches positive infinity.";
$alt[1] = "This is a function's graph with three pieces of smooth curves. The left piece approaches y=1 horizontally as x-value approaches negative infinity, and approaches positive infinity as x-value approaches $x1N from the left. The middle piece approaches negative infinity as x-value approaches $x1N from the right, crosses ($x3N,0) and ($x4N,0), and approaches negative infinity as x-value approaches $x2N from the left. The right piece approaches positive infinity as x-value approaches $x2N from the right, and approaches y=1 horizontally as x-value approaches positive infinity.";
$alt[2] = "This is a function's graph with three pieces of smooth curves. The left piece approaches y=1 horizontally as x-value approaches negative infinity, crosses ($x2,0), and approaches negative infinity as x-value approaches $x4 from the left. The middle piece approaches positive infinity as x-value approaches $x4 from the right, and approaches positive infinity as x-value approaches $x3 from the left. The right piece approaches negative infinity as x-value approaches $x3 from the right, crosses ($x1,0), and approaches y=1 horizontally as x-value approaches positive infinity.";
$alt[3] = "This is a function's graph with three pieces of smooth curves. The left piece approaches y=0 horizontally as x-value approaches negative infinity, and approaches negative infinity as x-value approaches $x2 from the left. The middle piece approaches negative infinity as x-value approaches $x2 from the right, crosses ($x4,0) and ($x3,0), and approaches negative infinity as x-value approaches $x1 from the left. The right piece approaches positive infinity as x-value approaches $x1 from the right, and approaches y=0 horizontally as x-value approaches positive infinity.";

$bound = 10;
$xmin = -$bound;         #The viewing window
$xmax = $bound;
$ymin = -$bound;
$ymax = $bound;

@graphs = ();             


#  Start making the graphs

for ( my $i=0; $i<4; $i++ ) {


#  Background

   $graphs[$i] = init_graph($xmin,$ymin,$xmax,$ymax,
          grid=>[$xmax-$xmin,$ymax-$ymin],axes=>[0,0],pixels=>[300,300]);


#  Labels

   $graphs[$i]->lb('reset');
   foreach my $j (1..$bound-1) {
      $graphs[$i]->lb( new Label(-$bound+0.3,  $j, $j,'black','center','middle'));
      $graphs[$i]->lb( new Label(-$bound+0.3, -$j,-$j,'black','center','middle'));
      $graphs[$i]->lb( new Label(  $j,-$bound+0.3, $j,'black','center','middle'));
      $graphs[$i]->lb( new Label( -$j,-$bound+0.3,-$j,'black','center','middle'));
   }
   $graphs[$i]->lb( new Label($bound-0.3,0.4,'x','black','center','middle'));
   $graphs[$i]->lb( new Label(0.4,$bound-0.3,'y','black','center','middle'));


#  Define new graph colors

   $graphs[$i]->new_color("lightblue", 214,230,244); # RGB
   $graphs[$i]->new_color("darkblue",  100,100,255); 
   $graphs[$i]->new_color("lightgreen",156,215,151); # other color options
   $graphs[$i]->new_color("darkgreen",   0, 86, 34); # for future author use 
   $graphs[$i]->new_color("lightred",  245,234,229); # light red-purple
   $graphs[$i]->new_color("darkred",   159, 64, 16); # red-brown

   $graphs[$i]->new_color("white",   255, 255, 255); # needed to seal off
                                                     # areas bordered with 
                                                     # dashed lines

#  Choose colors

   $light[$i] = "lightblue";      # Graphs will all be blue
   $dark[$i] = "darkblue";        # This could be modified to give different
                                  # graphs different colors.
   if ( ($i==0) || ($i==3) ) {
      $break1L = $x2-0.01;
      $break1R = $x2+0.01;
      $break2L = $x1-0.01;
      $break2R = $x1+0.01;
   } elsif ($i==2) {
      $break1L = min($x3,$x4)-0.01;
      $break1R = min($x3,$x4)+0.01;
      $break2L = max($x3,$x4)-0.01;
      $break2R = max($x3,$x4)+0.01;
   } else {
      $break1L = -$x1-0.01;
      $break1R = -$x1+0.01;
      $break2L = -$x2-0.01;
      $break2R = -$x2+0.01;
   }
   add_functions($graphs[$i], "$f[$i] for x in <-$bound,$break1L> " .
    "using color:blue and weight:2");
    add_functions($graphs[$i], "$f[$i] for x in <$break1R,$break2L> " .
    "using color:blue and weight:2");
   add_functions($graphs[$i], "$f[$i] for x in <$break2R,$bound> " .
    "using color:blue and weight:2");
}

sub shufflemap {
    my $n = shift();
    my $m = $n - 1;
    my $zeroind;

    my %map = ();
 
    my @vals = (0..$m);
    for ( my $i=0; $i<$m; $i++ ) {
  my $j = random(0,$m-$i,1);
  $map{$i} = $vals[$j];
  $zeroind = $i if ( $map{$i} == 0 );
  splice(@vals, $j, 1);
    }
    $map{$m} = $vals[0];
    $zeroind = $m if ( $map{$m} == 0 );
 
    return( { %map }, $zeroind );
}

($shuffle, $zero) = shufflemap(4);   #A random permutation function.  
                                      #$zero is $shuffle(0), the index
                                      #of the correct graph

$pop = PopUp( [qw(? 1 2 3 4)], $zero+1 );
$answer = $zero+1;


$size = 180;
$texsize = 100;

##############################################

BEGIN_PGML

Choose the graph of the function [`f(x)=[$f[0]]`].

    The correct graph is graph number [@ $pop->menu() @]*.

[@EnlargeImageStatementPGML()@]**

END_PGML

BEGIN_TEXT
$PAR

\{LayoutTable(
[
['1.'.image(insertGraph( $graphs[ $shuffle->{0} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{0}]" title = "$alt[$shuffle->{0}]"'),
'2.'.image(insertGraph( $graphs[ $shuffle->{1} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{1}]" title = "$alt[$shuffle->{1}]"'),
'3.'.image(insertGraph( $graphs[ $shuffle->{2} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{2}]" title = "$alt[$shuffle->{2}]"'),
'4.'.image(insertGraph( $graphs[ $shuffle->{3} ] ), tex_size=>$texsize,
	      height=>$size, width=>$size, extra_html_tags=>'alt="$alt[$shuffle->{3}]" title = "$alt[$shuffle->{3}]"'),]
],
align=>'>{\bfseries}l>{\bfseries}l>{\bfseries}l>{\bfseries}l',
allcellcss=>'padding: 10px;',
);
\}

END_TEXT


##############################################

ANS( $pop->cmp() );

##############################################

$s1 = $f[0]->eval(x=>-10);
$boa = ($s1>1) ? "above" : "below";
$s2 = Compute("$b2*x+$c2")->reduce;
$s3 = Compute("$b1*x+$c1")->reduce;
$s4 = Compute("($b2-$b1)*x")->reduce;
if ($b1==1) {$s7 = "+(-10)";}
   elsif ($b1==-1) {$s7 = "-(-10)";}
   elsif ($b1==0) {$s7 = "";}
   else {$s7 = ($b1>0) ? "+$b1(-10)" : "$b1(-10)";}
if ($b2==1) {$s8 = "+(-10)";}
   elsif ($b2==-1) {$s8 = "-(-10)";}
   elsif ($b2==0) {$s8 = "";}
   else {$s8 = ($b2>0) ? "+$b2(-10)" : "$b2(-10)";}

BEGIN_PGML_SOLUTION

###Simplifying Function and Locating Hole(s)

The function [`f(x)=[$f[0]]`] can be factored:

    [``
\begin{aligned}
   f(x) &= [$f[0]] \\
   &= [$func] \\
\end{aligned}
    ``]
    
Since the function cannot be reduced, its graph has no holes.

###Finding [`X`]-Intercept(s) and [`Y`]-Intercept

The function's [`y`]-intercept is at [`f(0)=[$yInt]`]. By solving for [`x`] in [`[$numF]=0`], we can see the function's [`x`]-intercept is at [`[$xIntL]`] and [`[$xIntR]`].

###Finding Vertical and Horizontal Asymptote(s)

By the denominator of [`f(x)=[$func]`], we can tell the function has two vertical asymptotes at [`x=[$x1]`] and [`x=[$x2]`].

The degree of both the numerator and the denominator in [`f(x)=[$f[0]]`] is [`2`]. This implies the function's horizontal asymptote is determined by the leading coefficients of the numerator and denominator. We can see the horizontal asymptote is at [`y=\frac{1}{1}=1`].

###Locating Where the Function Intersects its Horizontal Asymptote

Next, we need to find where the function's graph intersects with its horizontal asymptote. We set [`f(x)=1`] and then solve for [`x`]:

    [``
\begin{aligned}
   f(x) &= [$f[0]] \\
   1 &= [$f[0]] \\
   1 \cdot ([$den]) &= [$f[0]] \cdot ([$den]) \\
   [$den] &= [$num]\\
   [$s2] &= [$s3] \\
   [$s4] &= [$s5] \\
   x &= [$s6]
\end{aligned}
    ``]
    
The result implies the function's graph intersects with [`y=1`] at [`([$s6],1)`].

###Determining the Function's Behavior When [`X`]-Value Approaches Negative Infinity

We need to know whether the function approaches [`y=1`] from above or below when its [`x`]-value approaches negative infinity. We can do this by substituting [`x=-10`] (or a similarly small number) into [`f(x)`], and we have:

    [``
\begin{aligned}
   f(x) &= [$f[0]] \\
   f(-10) &= \frac{(-10)^2[$s7]+[$c1]}{(-10)^2[$s8]+[$c2]} \\
   &= [$s1]
\end{aligned}
    ``]
    
The result implies the function's value approaches [`y=1`] from below when the [`x`]-value approaches negative infinity.

###Sketching the Function's Graph

The following is an analysis of the function's graph.

* The function's graph approaches [`y=1`] from below when the [`x`]-value approaches negative infinity.
* The function's graph curves down first, and then curves up to cross [`y=1`] at [`([$s6],1)`], and then approaches positive infinity as [`x`]-value approaches [`[$x2]`] from the left.
* In the denominator of [`f(x)=[$func]`], the power of [`(x-[$x2])`] is [`1`], implying the function's graph approaches opposite infinities at both sides of [`x=[$x2]`]. The function's graph approaches negative infinity as [`x`]-value approaches [`[$x2]`] from the right.
* The function's graph curves up to meet its [`x`]-intercept at [`x=[$x4]`]. In the numerator of [`f(x)=[$func]`], the power of [`(x-[$x4])`] is [`1`], implying the function's graph crosses the [`x`]-axis at [`([$x4],0)`].
* The function's graph curves down to meet its second [`x`]-intercept at [`[$x3]`], In the numerator of [`f(x)=[$func]`], the power of [`(x-[$x3])`] is [`1`], implying the function crosses the [`x`]-axis at [`([$x3],0)`].
* The function's graph approaches negative infinity as [`x`]-value approaches [`[$x1]`] from the left.
* In the denominator of [`f(x)=[$func]`], the power of [`(x-[$x1])`] is [`1`], implying the function's graph approaches opposite infinities at both sides of [`x=[$x1]`]. The function's graph approaches positive infinity as [`x`]-value approaches [`[$x1]`] from the right.
* Finally, the function's graph approaches [`y=1`] from above as [`x`]-value approaches positive infinity.

The correct graph for [`f(x)=[$f[0]]`] is Graph [`[$answer]`].

END_PGML_SOLUTION

ENDDOCUMENT();