# WeBWorK problem written by Alex Jordan 
# Portland Community College
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Exponential')
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1()
## Problem1()
## Author('Alex Jordan')
## Institution('PCC')



##############################################


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGgraphmacros.pl",
  "PCCgraphMacros.pl",
  "parserPopUp.pl",
  "niceTables.pl",
  "PGcourse.pl",

);
TEXT(beginproblem());

 $refreshCachedImages = 1;





##############################################


Context("Numeric");
Context()->reduction->set('(-x)-y'=>0);    
Context()->reduction->set('(-x)+y'=>0);    

$r[0] = random(-4,-2,1);
for my $i (1..2)
{
  $r[$i] = $r[$i-1] + random(2,3,1);
}

$c = random(-1,1,2);
$p = Compute("$c*(x-$r[0])*(x-$r[1])*(x-$r[2])")->reduce;

for my $i ($r[0]..$r[2]-1)
{$vals[$i-$r[0]] = abs($p->eval(x=>$i+0.5));}

$ymax = 3*max(@vals);

$horshift = non_zero_random(-4,4,2);
$vershift = non_zero_random(-5,5,10);
$horscale = 2;

$f[1] = $p->substitute(x=>Formula("x/$horscale"));
$f[7] = $p->substitute(x=>Formula("x+$horshift"));
$f[2] = $p->substitute(x=>Formula("x-$horshift"));
$f[3] = $p+$vershift;
$f[4] = $p-$vershift;
$f[0] = $p;
$f[6] = $p->substitute(x=>Formula("$horscale*x"));
$f[5] = -$p;
$f[8] = -($p->substitute(x=>Formula("x+$horshift")));
$f[9] = -($p->substitute(x=>Formula("x-$horshift")));
$f[10] = $p**2/50;
$f[11] = -($p->substitute(x=>Formula("x/$horscale")));

$xmin = -10;         #The viewing window
$xmax = 10;
$ymin = -$ymax;
$ymax = $ymax;


@graphs = ();             
#  Start making the graphs

for ( my $i=0; $i<12; $i++ ) {


#  Background
$size = 220;

   $graphs[$i] = init_graph($xmin,$ymin,$xmax,$ymax,
          grid=>[$xmax-$xmin,10],axes=>[0,0],pixels=>[$size,$size]);


#  Labels

   $graphs[$i]->lb('reset');
   foreach my $j (2,4,6,8) {
#      $graphs[$i]->lb( new Label(-9.7,  $j, $j,'black','center','middle'));
#      $graphs[$i]->lb( new Label(-9.7, -$j,-$j,'black','center','middle'));
      $graphs[$i]->lb( new Label(  $j, 0, $j,'black','center','top'));
      $graphs[$i]->lb( new Label( -$j, 0, "-$j",'black','center','top'));
   }
   $graphs[$i]->lb( new Label(9.7,0,'x','black','center','top'));
   $graphs[$i]->lb( new Label(0.2,0.95*$ymax,'y','black','left','middle'));
   
add_functions($graphs[$i], "$f[$i] for x in <-10,10> " .
    "using color:blue and weight:2");

}

sub shufflemap {
    my $n = shift();
    my $m = $n - 1;
    my $zeroind;

    my %map = ();
 
    my @vals = (0..$m);
    for ( my $i=0; $i<$m; $i++ ) {
  my $j = random(0,$m-$i,1);
  $map{$i} = $vals[$j];
  $zeroind = $i if ( $map{$i} == 0 );
  splice(@vals, $j, 1);
    }
    $map{$m} = $vals[0];
    $zeroind = $m if ( $map{$m} == 0 );
 
    return( { %map }, $zeroind );
}

($shuffle, $zero) = shufflemap(12);   #A random permutation function.  
                                      #$zero is $shuffle(0), the index
                                      #of the correct graph

$pop = PopUp( [qw(? 1 2 3 4 5 6 7 8 9 10 11 12)], $zero+1 );





##############################################

BEGIN_PGML
On paper, sketch the graph of [`f`], where [`f(x)=[$p]`]. (During exams, you may be required to actually sketch graphs, and cannot rely on multiple choices.) Once you have your graph, find it among these choices.

[@EnlargeImageStatementPGML()@]**

END_PGML

BEGIN_TEXT
$PAR

\{LayoutTable(
[
["${BBOLD}1.$EBOLD".image(insertGraph( $graphs[ $shuffle->{0} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}2.$EBOLD".image(insertGraph( $graphs[ $shuffle->{1} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}3.$EBOLD".image(insertGraph( $graphs[ $shuffle->{2} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),],
["${BBOLD}4.$EBOLD" .image(insertGraph( $graphs[ $shuffle->{3} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}5.$EBOLD".image(insertGraph( $graphs[ $shuffle->{4} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}6.$EBOLD".image(insertGraph( $graphs[ $shuffle->{5} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),],
["${BBOLD}7.$EBOLD".image(insertGraph( $graphs[ $shuffle->{6} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}8.$EBOLD" .image(insertGraph( $graphs[ $shuffle->{7} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}9.$EBOLD".image(insertGraph( $graphs[ $shuffle->{8} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),],
["${BBOLD}10.$EBOLD".image(insertGraph( $graphs[ $shuffle->{9} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}11.$EBOLD".image(insertGraph( $graphs[ $shuffle->{10} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"'),
"${BBOLD}12.$EBOLD" .image(insertGraph( $graphs[ $shuffle->{11} ] ), tex_size=>100, height=>$size, width=>$size, extra_html_tags=>'alt="graph"') ],
],
allcellcss => "padding:5pt;",
)\}

END_TEXT


BEGIN_PGML
    The correct graph is graph [@$pop->menu() @]*.

END_PGML

##############################################

ANS( $pop->cmp() );

##############################################

$dir = ($c>0) ? "an upward" : "a downward";

BEGIN_PGML_SOLUTION

The formula tells us that the zeros are at [`[@$r[0]@]`], [`[@$r[1]@]`], and [`[@$r[2]@]`]. The formula also tells us that each of these zeros are degree one. So when the graph reaches the [`x`]-intercepts, it will pass through the [`x`]-axis in a way similar to how a straight line would pass through.

Also, the leading coefficient is [`[$c]`], which tells us that the right arm of the graph should point in [$dir] direction. We use all this to sketch a graph that looks like graph [@$zero+1@].

END_PGML_SOLUTION

ENDDOCUMENT();