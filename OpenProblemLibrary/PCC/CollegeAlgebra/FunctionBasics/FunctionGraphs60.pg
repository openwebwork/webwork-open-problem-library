# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given a function's graph, find where the function 
# is increasing/decreasing/constant.
#
# Last update: Carl Yao 03/27/2018
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection('Domain and Range')
## KEYWORDS('function','domain','range','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$refreshCachedImages=1;

$p1x = random(-3,-1,1);
$p1y = non_zero_random(-5,5,1);
$p2x = random(1,3,1);
$p2y = $p1y;

$a1 = random(0.03,0.06,0.01)*random(-1,1,2);
$func1 = Compute("$a1*(x-$p1x)**2+$p1y");
$func2 = Compute("$p1y");
$a3 = random(0.03,0.06,0.01)*random(-1,1,2);
$func3 = Compute("$a3*(x-$p2x)**2+$p2y");

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([2*$p1x,2*$p2x],[$p1y,$p2y,0],centerOrigin=>1);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..0) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }

   $leftBound = $min[0]-1;
   $rightBound = $max[0]+1;

   add_functions($gr[$i], "$func1 for x in ($leftBound,$p1x) using color:blue and weight:1");
   add_functions($gr[$i], "$func2 for x in ($p1x,$p2x) using color:blue and weight:1");
   add_functions($gr[$i], "$func3 for x in ($p2x,$rightBound) using color:blue and weight:1");
   
   $gr[$i]->stamps( closed_circle($p1x,$p1y,'blue') );
   $gr[$i]->stamps( closed_circle($p2x,$p2y,'blue') );
}

Context("Interval");

$ansCon = Compute("($p1x,$p2x)");

if ( ($a1>0) && ($a3>0) ) {
   $ALT = "graph of a function starting at the top left, curving down till the point ($p1x,$p1y), going horizontally till the point ($p2x,$p2y), and then curving up toward the top right.";
   $ansInc = Compute("($p2x,inf)");
   $ansDec = Compute("(-inf,$p1x)");
} elsif ( ($a1>0) && ($a3<0) ) {
   $ALT = "graph of a function starting at the top left, curving down till the point ($p1x,$p1y), going horizontally till the point ($p2x,$p2y), and then curving down toward the bottom right.";
   $ansInc = Compute(DNE);
   $ansDec = Compute("(-inf,$p1x)U($p2x,inf)");
} elsif ( ($a1<0) && ($a3>0) ) {
   $ALT = "graph of a function starting at the bottom left, curving up till the point ($p1x,$p1y), going horizontally till the point ($p2x,$p2y), and then curving up toward the top right.";
   $ansInc = Compute("(-inf,$p1x)U($p2x,inf)");
   $ansDec = Compute(DNE);
} else {
   $ALT = "graph of a function starting at the bottom left, curving up till the point ($p1x,$p1y), going horizontally till the point ($p2x,$p2y), and then curving down toward the bottom right.";
   $ansInc = Compute("(-inf,$p1x)");
   $ansDec = Compute("($p2x,inf)");
}



##############################################
Context("LimitedNumeric");
BEGIN_PGML

A function's graph is shown below.

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT' title = '$ALT'") @]*<<

[@KeyboardInstructions('* If the answer includes more than one interval write the intervals separated by the union symbol, which you can type as [|U|]*. If the answer uses [`\infty`], you may type it as [|inf|]*.')@]**

[@KeyboardInstructions('* If the answer is an empty interval, type DNE (does not exist).')@]**

The function is increasing in the interval [_____________________]{$ansInc}.

The function is constant in the interval [_____________________]{$ansCon}.

The function is decreasing in the interval [_____________________]{$ansDec}.

END_PGML
##############################################

if ( $a1*$a3>0 ) {

BEGIN_PGML_SOLUTION

The function is increasing in the interval [`[$ansInc]`].

The function is constant in the interval [`[$ansCon]`].

The function is decreasing in the interval [`[$ansDec]`].

We always use open intervals when we identify where a function is increasing/decreasing.

END_PGML_SOLUTION

} elsif ( ($a1>0) && ($a3<0) ) {

BEGIN_PGML_SOLUTION

The function does not increase.

The function is constant in the interval [`[$ansCon]`].

The function is decreasing in the interval [`[$ansDec]`].

We always use open intervals when we identify where a function is increasing/decreasing.

END_PGML_SOLUTION

} else {

BEGIN_PGML_SOLUTION

The function is increasing in the interval [`[$ansInc]`].

The function is constant in the interval [`[$ansCon]`].

The function does not decrease.

We always use open intervals when we identify where a function is increasing/decreasing.

END_PGML_SOLUTION

}

ENDDOCUMENT();
