# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given a function's graph, write its equation 
# based on transformation rules.
#
# Last update: Carl Yao 04/03/2018
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection('Domain and Range')
## KEYWORDS('function','domain','range','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$refreshCachedImages=1;

@functionBases = ("x**2","abs(x)","sqrt(x)");
$index = random(0,2,1);
$temp = $functionBases[$index];
$func0 = Compute("$temp")->reduce;

$hori = non_zero_random(-5,5,1);
do {$vert = non_zero_random(-5,5,1);} until (abs($hori)!=abs($vert));
@functions = ("(x+$hori)**2+$vert","abs(x+$hori)+$vert","sqrt(x+$hori)+$vert");
$temp = $functions[$index];
$func1 = Compute("$temp")->reduce;
if ($index==2) {
   $func1->{limits} = [-$hori,-$hori+2];
}

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([1.5*$hori,-1.5*$hori],[1.5*$vert,-1.5*$vert],centerOrigin=>1);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

@func0Low = (-sqrt($max[1]),-$max[1],0+0.5);
@func0High = (sqrt($max[1]),$max[1],$max[0]);
@func1Low = (
   max($min[0],-sqrt($max[1]-$vert)-$hori),
   max($min[0],-($max[1]-$vert)-$hori),
   max($min[0],-$hori)+0.5
);
@func1High = (
   min($max[0],sqrt($max[1]-$vert)-$hori),
   min($max[0],$max[1]-$vert-$hori),
   min($max[0],($max[1]-$vert)**2-$hori)
);


for my $i (0..0) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }

   $func0LowTemp = $func0Low[$index]-0.5;
   $func0HighTemp = $func0High[$index]+0.5;
   $func1LowTemp = $func1Low[$index]-0.5;
   $func1HighTemp = $func1High[$index]+0.5;

   add_functions($gr[$i], "$func0 for x in ($func0LowTemp,$func0HighTemp) using color:black and weight:1");
   add_functions($gr[$i], "$func1 for x in ($func1LowTemp,$func1HighTemp] using color:blue and weight:2");
   
   $gr[$i]->stamps( closed_circle(0,0,'black') );
   $gr[$i]->stamps( closed_circle(-$hori,$vert,'blue') );
   $cushion = ($max[0]-$min[0])/40;
   if ($hori>0) {
      $gr[$i]->lb( new Label($cushion,0,"A",'black','left','top'));
      $gr[$i]->lb( new Label(-$hori-$cushion,$vert,"B",'black','right','top'));
   } else {
      $gr[$i]->lb( new Label(-$cushion,0,"A",'black','right','top'));
      $gr[$i]->lb( new Label(-$hori+$cushion,$vert,"B",'black','left','top'));
   }
}

$nHori = -$hori;

$ALT = "There is the graph of the function f(x)=$func0 in black, and the graph of a function in blue. The point A (0,0) on the black function is highlighted. The point B ($nHori,$vert) on the blue function is highlighted. This is the corresponding point of A (0,0) in f(x)=func0 after the transformation.";


##############################################
Context("LimitedNumeric");
BEGIN_PGML

The function [`f(x)=[$func0]`] is graphed in black. The blue function, [`g(x)`], is a transformation of [`f(x)`]. In particular, Point A on [`f(x)`] is tranformed to Point B on [`g(x)`]. Write the blue function's equation.

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT' title = '$ALT'") @]*<<

* Use *sqrt( )* for the square root symbol.
* Use *abs( )* for the absolute value symbols.
* Use the carot sign (Shift+6 on keyboard) for "to the power of". For example, 3^2 means 3 squared.

The blue function's equation is [`g(x)=`][_____________________]{$func1}.

END_PGML
##############################################

$leftOrRight = ($hori>0) ? "left" : "right";
$absHori = abs($hori);
$upOrDown = ($vert>0) ? "up" : "down";
$absVert = abs($vert);

BEGIN_PGML_SOLUTION

If we transform [`f(x)=[$func0]`] (in black) by shifting it to the [$leftOrRight] by [`[$absHori]`] units, and then [$upOrDown] by [`[$absVert]`] units, we can get the blue graph ([`g(x)`]).

The equation for the blue graph is [`g(x)=[$func1]`].

END_PGML_SOLUTION


ENDDOCUMENT();
