DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserOrientation.pl",
  "PGcourse.pl",
);



TEXT(beginproblem);

Title("Controlling $WW");

##############################################

BEGIN_TEXT

The buttons at the bottom of the screen are what cause $WW to process
your answers.  Nothing that you type will have any effect until you
press one of these buttons.
$PAR

The ${LQ}Submit Answers$RQ button causes $WW to check your answers and
report your score for the problem.  Usually, your instructor will have granted you some number of attempts (maybe even unlimited).  Each time you press the ${LQ}Submit Answers$RQ button, you use up one of your attempts.   If the due date is passed and the answers are available, you can click the ${LQ}Show
Correct Answers$RQ button before pressing ${LQ}Submit$RQ. If you do, the correct answer(s) will be displayed in the answer area at the top of the screen along with the answers you have provided.
$PAR

If you have typed in a complicated answer, or are being told your
answer is incorrect when you think it's right, you may want to use the
${LQ}Preview Answer$RQ button.  This will make $WW display what $BITALIC it thinks $EITALIC you have entered, without using up an attempt.  This can be used to help spot errors in your typing, and verify that $WW understands your answer the way you intend it to.  (This is discussed further in a later problem.)
$PAR

At the bottom panel on the left is a box that allows you to
change how the problem is displayed.  The ${LQ}math${RQ} within the problem
can be printed on the screen in many different ways.  Here, we'll discuss three of them:

\{BeginParList("UL")\}

$ITEM
${LQ}images${RQ} mode is the default choice (what $WW uses unless you tell 
it otherwise). It produces the accurate mathematical notation,
with the disadvantages of being slightly slower, and not printing well
if you want to print out a single problem.
$ITEMSEP

$ITEM
${LQ}formatted-text${RQ} mode produces results quickly, but more
complicated mathematics may be difficult to read in this
mode.  For example, some fractions are not easy to read
in formatted-text mode.
$ITEMSEP

$ITEM
${LQ}jsMath${RQ} mode uses a JavaScript program and Cascading Style
Sheets (CSS) to display the mathematics.  This produces the nicest looking results, and is particularly nice if you need to change the size of the fonts
in your browser or wish to print out a single problem.  For best
results, however, you should download and install some fonts that
jsMath uses; there is a link to the fonts on the jsMath control panel,
which you can activate using the small jsMath button that will appear
at the lower right of the screen when you activate this mode.  The
first problem you view using jsMath may take a little longer to
appear, as the JavaScript program is being loaded into your browser,
but things should run faster after that.

\{EndParList("UL")\}
$PAR

Choose whichever mode is most comfortable for you.  You can always
select a different mode if a particular problem needs it.  Here is a
sample of some simple mathematics, \(x^2 + 3\), and a more complicated
expression, \(\frac{x(1-x)}{2x + 1}\).  Try changing the display mode
by clicking the ${LQ}formatted-text$RQ or ${LQ}jsMath${RQ}
button and then pressing the ${LQ}Apply Options${RQ} button to cause
the page to be reformatted. Look how the math expressions change.  Then change the display mode to back to
${LQ}images$RQ mode for the rest of the homework set.
$PAR

The ${LQ}Show saved answers${RQ} checkbox tells whether you
want $WW to fill in the answer blanks with your previous answers or
not.  (If you like, you can test this out on the next problem, since
there are no answer blanks in this one.)
$PAR

You are now ready to learn how to enter answers into $WW.  Press the
${LQ}Submit Answers${RQ} button to get credit for this problem, and
then press the ${LQ}Next$RQ button at the top of the page to go on to
the next one.

END_TEXT

install_forgiving_grader();
$showPartialCorrectAnswers = 1;

##############################################

ENDDOCUMENT();        # This should be the last executable line in the problem.
