# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# Rewrite an English phrase as a mathematical expression 
#
# Last edited: Jordan 8/23/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('expression','english-to-math')
## DBCCSS('6.EE.2.a')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "parserImplicitPlane.pl",
  "contextTypeset.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
$var=RandomVariableName();
Context()->variables->are($var=>"Real");
Context()->flags->set(reduceConstants=>0);

do {
   $a = random(1,3,1);
   do {$b = $a+random(1,8,1);} until (gcd($a,$b) == 1);

   $c = random(1,3,1);
   do {$d = $c+random(1,8,1);} until (gcd($c,$d) == 1);
} until ($a/$b != $c/$d);

$e = random(1,9,1);

$index = random(0,1);
@opWords = ("more than", "less than");
$opPhrase = $opWords[$index];

@toMaths = ('+','-');
$toMath = @toMaths[$index];

$eqWord = list_random('is', 'gives', 'yields');

Context("ImplicitPlane");
Context()->variables->are($var=>"Real");
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(showExtraParens=>0);
Context()->flags->set(reduceConstants=>0);
$ans = Compute("$a/$b $var $toMath $e = $c/$d $var");

$ans1string = "$a/$b $var $toMath $e = $c/$d $var";
$ans1 = Compute($ans1string);

$left = Compute("$a/$b $var $toMath $e");
$right = Compute("$c/$d $var");


##############################################

TEXT(beginproblem());

BEGIN_PGML

Translate the following phrase or sentence into a math expression or equation (whichever is appropriate).
[@KeyboardInstructions('Use [`[$var]`] to represent the unknown number.')@]**

    [@numberWord($e,capital=>1)@] [$opPhrase] the product of [@numberWord($a/$b,denominator=>$b)@] and a number [$eqWord] [@numberWord($c/$d,denominator=>$d)@] of that number.

    [______________]

END_PGML

##############################################

ANS($ans1->cmp(
  cmp_class => "a linear equation",
  correct_ans=>Parser::Formula(Context("Typeset") , $ans1string)->string,
  correct_ans_latex_string=>Parser::Formula(Context("Typeset") , $ans1string)->TeX, 
  checker => sub {
  my ($correct,$student,$ansHash) = @_;
  $result = ($correct == $student);
  my $context = Context();
  Context("Typeset");
  Context()->variables->are($var=>"Real");
  $student = Parser::Formula(Context("Typeset"), $ansHash->{original_student_ans});
  $ansHash->{preview_text_string} = $student->string;
  $ansHash->{preview_latex_string} = $student->TeX;
  $ansHash->{student_ans} = $student->string;  
  Context($context);
  return $result
}));


BEGIN_PGML_SOLUTION

The word '[$eqWord]' implies equality, so we have

    [@numberWord($e,capital=>1)@] [$opPhrase] the product of [@numberWord($a/$b,denominator=>$b)@] and a number [`=`] [@numberWord($c/$d,denominator=>$d)@] of that number.

When a fraction precedes the word 'of', it implies that the fraction should be multiplied by what follows. So we have:

    [@numberWord($e,capital=>1)@] [$opPhrase] the product of [@numberWord($a/$b,denominator=>$b)@] and a number [`=\frac{[$c]}{[$d]} [$var]`] 

Also the phrase 'product of' implies that we should use multiplication. So we have:

    [`[$e]`] [$opPhrase] [`\frac{[$a]}{[$b]}[$var]=\frac{[$c]}{[$d]} [$var]`] 

And the phrase '[$opPhrase]' indicates that we should use the [`[$toMath]`] symbol, but the order of the numbers needs to be reversed. So the answer is 

    [``[$left]=[$right]``]

END_PGML_SOLUTION

ENDDOCUMENT();


