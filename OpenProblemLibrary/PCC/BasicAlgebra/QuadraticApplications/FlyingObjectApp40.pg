# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Determine whether quadratic function has x-intercepts.
#
# Last edit by: Yao 1/13/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Coordinates and Graphs')
## DBsection('Graphs of Equations')
## KEYWORDS('quadratic','function','parabola','application')
## DBCCSS('F.IF.7.a','F.IF.4','A-CED.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "parserPopUp.pl",
  "PGcourse.pl",
);

##############################################

TEXT(beginproblem());

Context("Numeric");
Context()->variables->are('t'=>'Real');
#Context()->flags->set(showExtraParens=>0, reduceConstants=>0);
Context()->noreduce("(-x)-y","(-x)+y");

do {
   $vertexX = random(3,10,1);
   $vertexY = random(-5,5,1);
   do {$a = -random(0.1,1.9,0.1);} until ($a!=-0.5);
   $b = Real(-2*$a*$vertexX);
   $c = Real($a*($vertexX)**2+$vertexY);
} until ($c<0);

$func = Compute("$a*t**2+$b*t+$c")->reduce;

$discriminant = Real("($b)**2-4*$a*$c");
$correct = ($discriminant>=0) ? "will" : "will not";

$nb = -$b;
$a2 = $a*2;

if ($discriminant==0) {
   $e = int(100*(0.005))/100;
   $x1 = int(100*(0.005+($nb+$e)/$a2))/100;
   $x2 = int(100*(0.005+($nb-$e)/$a2))/100;
}
elsif ($discriminant>0) {
   $e = int(100*(0.005+sqrt($discriminant)))/100;
   $x1 = int(100*(0.005+($nb+$e)/$a2))/100;
   $x2 = int(100*(0.005+($nb-$e)/$a2))/100;
}

if ($discriminant<0) {
   $message = "Since the equation has no real solution, the submarine will not surface along this route.";
} elsif ($discriminant==0) {
   $output =
      '&=\frac{'."$nb".'\pm0}{'."$a2".'}\\'.
      '&=\frac{'."$nb".'}{'."$a2".'}\\'.
      '&='."$vertexX";
   $message = "The submarine will surface `$vertexX` seconds later.";
} else {
   $output = 
      '&\approx \frac{'."$nb".'\pm '."$e".'}{'."$a2".'} \\'.
      '&\approx \frac{'."$nb".'+'."$e".'}{'."$a2".'}\text{ or }\frac{'."$nb".'-'."$e".'}{'."$a2".'} \\'.
      '&\approx '."$x1".'\text{ or }'."$x2";
   $message = "The submarine will surface approximately `$x1` seconds later.";
}

$popup = PopUp(
  ['?',"will","will not"], $correct
);

##############################################

BEGIN_PGML

A submarine is traveling in the sea. Its depth, in meters, can be modeled by [`d=[$func]`], where [`t`] stands for time in seconds. The submarine [__]{$popup} hit the sea surface along this route.


END_PGML

##############################################


##############################################



BEGIN_PGML_SOLUTION

To determine whether the submarine will surface, we substitute [`d(t)=0`] into [`d(t)=[$func]`], and solve the equation by the Quadratic Formula:

     [``
        \begin{aligned}
            t & = \frac{-b\pm\sqrt{b^2-4ac}}{2a}\\
              & = \frac{-([$b])\pm\sqrt{([$b])^2-4([$a])([$c])}}{2([$a])}\\
                   & = \frac{[$nb]\pm\sqrt{[$b**2]-[$a*$c*4]}}{[$a2]}\\
                   & = \frac{[$nb]\pm\sqrt{[$b**2-$a*$c*4]}}{[$a2]}\\
                  [$output]
        \end{aligned}
     ``]

[$message]

END_PGML_SOLUTION

ENDDOCUMENT();


