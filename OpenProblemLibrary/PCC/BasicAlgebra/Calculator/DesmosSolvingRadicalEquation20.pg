# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Use graphing technology to solve radical equation.
# There are two intersections.
#
# Last edited: Yao 2/8/2016
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('calculator','graphing','intersection')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserAssignment.pl",
  "answerHints.pl",
  "PGML.pl",
  "contextLimitedRadical.pl",
   "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0, formatStudentAnswer=>parsed);
$var = RandomVariableName(type=>'variable');
Context()->variables->are($var=>'Real');

parser::Assignment->Allow;

Context()->operators->redefine(',',using=>',',from=>'Numeric');
    Context()->operators->redefine('and',using=>',',from=>'Numeric');
    Context()->operators->set(
      ','=>{string=>' and ',TeX=>'\hbox{ and }'},
      'or'=>{string=>' and ',TeX=>'\hbox{ and }'}
    );
    Context()->lists->set(List => {separator => " and "});

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  "no solution"=>{alias=>'no real solutions'}, 
  "no solutions"=>{alias=>'no real solutions'}, 
  );

do {
   do {
      do {
         $a = non_zero_random(-5,5,0.1);
         $b = non_zero_random(-20,20,0.1);
         $c = non_zero_random(-20,20,1);
         $e = non_zero_random(-20,20,1);
         $A = ($a)**2;
         $B = 2*$a*$b-$e;
         $C = ($b)**2-$c;
         $d = ($B)**2-4*$A*$C;
      } until ( ($d>0) );
      $x0 = (-$B+sqrt($d))/(2*$A);
      $x1 = (-$B-sqrt($d))/(2*$A);
   } until ($c+$e*$x1>0);
   $func0 = Compute("$a*$var+$b")->reduce;
   $func1 = Compute("sqrt($c+$e*$var)")->reduce;
   $y0 = $func0->eval($var=>$x0);
   $y1 = $func1->eval($var=>$x1);
} until ( ($x0>-10) && ($x1>-10) && ($x0<10) && ($x1<10) && ($y0<10) && ($y0>-10) && ($y1<10) && ($y1>-10) && ( ($func0->eval($var=>$x0))==($func1->eval($var=>$x0)) ) && ( ($func0->eval($var=>$x1))==($func1->eval($var=>$x1)) ) );

Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);
$ans = Formula("$var=$x0,$var=$x1");

$x0Show = int($x0*100+0.5*($x0>0?1:-1))/100;
$x1Show = int($x1*100+0.5*($x1>0?1:-1))/100;
$y0Show = int($y0*100+0.5*($y0>0?1:-1))/100;
$y1Show = int($y1*100+0.5*($y1>0?1:-1))/100;

##############################################
TEXT(beginproblem());

BEGIN_PGML

Use graphing technology to solve this equation:

    [`` [$func0] = [$func1] ``]

* Write your answers in the format of *[$var]=*.
* If there are two solutions, use a comma to separate them.
* If needed, round your answer to at least two decimal places.

    The equation's solutions are [__________]{$ans}.

END_PGML

##############################################

BEGIN_PGML_SOLUTION

We will use desmos.com to solve this equation.

Step 1: Go to desmos.com, click on Start Graphing.

Step 2: In the first textbox, enter [` f([$var])=[$func0] `].

Step 3: In the second textbox, enter [` g([$var])=[$func1] `].

Step 4: Zoom out on the window, if needed, until you can see the intersections of [`f([$var])`] and [`g([$var])`]. Alternatively, click on the Graph Settings icon (looking like a tool) and define the ranges of [`x`]-axis and [`y`]-axis.

Step 5: Click on the intersections, and desmos shows the solution [`([$x0Show],[$y0Show])`] and [`([$x1Show],[$y1Show])`].

    The system equation's solutions are [`[$var]=[$x0Show]`] and [`[$var]=[$x1Show]`].

END_PGML_SOLUTION

ENDDOCUMENT();


