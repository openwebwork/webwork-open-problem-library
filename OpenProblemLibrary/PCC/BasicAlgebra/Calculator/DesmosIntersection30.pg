# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Use graphing technology to find the intersection of two functions.
#
# Last edited: Yao 02/12/2019
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('calculator','graphing','intersection')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "AnswerFormatHelp.pl",
  "parserPopUp.pl",
  "PCCgraphMacros.pl",
  "PCCmacros.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl",
);

##############################################

Context()->noreduce('(-x)-y','(-x)+y');
@m = (random(2,4,8,16)*random(-1,1,2), random(2,4)*random(-1,1,2));
@b = (non_zero_random(-500,500,1), non_zero_random(-500,500,1));
$A = $m[0]*$m[1];
$B = $m[0]*$b[1]+$m[1]*$b[0];
$f = Formula("($b[0]+$m[0]x)($b[1]+$m[1]x)")->reduce;
$vertexX = -$B/(2*$A);
$vertexY = $f->eval(x=>$vertexX);

if (random(0,2,1)==0) {
  $c = $vertexY;
} else {
  $c = non_zero_random(-20000,20000,1000);
}
$g = Formula("$c");
$C = $b[0]*$b[1]-$c;
$disc = ($B)**2 - 4*$A*$C;
if ($disc > 0) {$ans = 2;}
elsif ($disc == 0) {$ans = 1;}
else {$ans = 0;}
$popup = PopUp(['?','zero times', 'one time', 'two times', 'three times'],$ans+1);

$x0 = $vertexX-10;
$x1 = $vertexX+10;
if ($disc>=0) {
  $x0 = Round((-$B-sqrt($disc))/(2*($A)),3);
  $y0 = $c;
  $x1 = Round((-$B+sqrt($disc))/(2*($A)),3);
  $y1 = $c;
}

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([$x0,$x1,0],[$vertexY,0,$c]);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

  $gr = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (Real($j) == 0) {next;}
    $gr->lb( new Label(-$marksep[0]/8, $j, $j,'black','right','middle'));
  }

add_functions($gr, "$f for x in <$min[0],$max[0]> using color:red and weight:1");
add_functions($gr, "$c for x in <$min[0],$max[0]> using color:red and weight:1");

$alt = "This is the graph of f(x)=$f, and a horizontal line g(x)=$c.";

if ($disc>0) {
  $x0g = min($x0,$x1);
  $x1g = max($x0,$x1);
  $gr->stamps( closed_circle($x0g,$y0,'blue') );
  $gr->lb( new Label($x0g,$y0,"($x0g,$y0)", 'blue','left','bottom'));
  $gr->stamps( closed_circle($x1g,$y1,'blue') );
  $gr->lb( new Label($x1g,$y1,"($x1g,$y1)", 'blue','right','top'));
  $alt = $alt." They intersect at ($x0,$y0) and ($x1,$y1). Those two points are marked and labeled.";
} elsif ($disc==0) {
  $gr->stamps( closed_circle($x0,$y0,'blue') );
  $gr->lb( new Label($x0,$y0,"($x0,$y0)", 'blue','center','bottom'));
  $alt = $alt." They intersect at ($x0,$y0). This point is marked and labeled.";
} else {
  $alt = $alt." They do not intersect.";
}



##############################################
TEXT(beginproblem());

BEGIN_PGML

Use technology to determine how many times the equations [`y=[$f]`] and [`y=[$g]`] intersect. They intersect [_____]{$popup}.

END_PGML

##############################################

BEGIN_PGML_SOLUTION

>>[@ image( insertGraph($gr), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$alt' title = '$alt'"  )@]*<<

We will use desmos.com to solve this system.

Step 1: Go to desmos.com, click on Start Graphing.

Step 2: In the first textbox, enter [` f(x)=[$f] `].

Step 3: In the second textbox, enter [` g(x)=[$c] `].

Step 4: Zoom out on the window, if needed, until you can see the intersection(s) of [`f(x)`] and [`g(x)`], if any. Alternatively, click on the Graph Settings icon (looking like a tool) and define the ranges of [`x`]-axis and [`y`]-axis.

In case you need help, set the [`x`] range to [`[$min[0]],[$max[0]]`] and [`y`] range to [`[$min[1]],[$max[1]]`].

You can see those two functions have [`[$ans]`] intersection(s).

END_PGML_SOLUTION

ENDDOCUMENT();


