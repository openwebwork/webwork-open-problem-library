# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Reduce the rational function R(x)=(x^2(2x-1))/(x(2x-1)(x+3)).
# List the lost domain restrictions.
#
# Last updated: Carl Yao 12/16/2016
# ENDDESCRIPTION

## DBCC('A-APR.1','A-SSE.2')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents', 'Factoring')
## KEYWORDS('polynomial','exponents','factoring','simplify','rational')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextFraction.pl",
   "contextRestrictedDomains.pl",
  "PGcourse.pl",
);

##############################################

Context("RestrictedDomains");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>'variable');
Context()->variables->are($var=>'Real');
$R = RandomVariableName(type=>'function');


$a = list_random(2,3,5);
do {$b = random(1,5,1)*random(-1,1,2);} until (gcd(abs($b),$a)==1);
$c = non_zero_random(-5,5,1);
$d = $a*$c+$b;

$num = Formula("$a*$var**3+$b*$var**2")->reduce;
$den = Formula("$a*$var**3+$d*$var**2+$b*$c*$var")->reduce;
$numFactored = Formula("$var**2*($a*$var+$b)")->reduce;
$denFactored = Formula("$var*($a*$var+$b)*($var+$c)")->reduce;

$step1Num = Formula("$var**2*($a*$var+$b)")->reduce;
$step1Den = Formula("$var*($a*$var**2+$d*$var+$b*$c)")->reduce;

$function = Formula("$num/$den")->reduce;
$ans = Formula("$var/($var+$c), $var != -$b/$a and $var != 0")->reduce;
$ans->{trueDomain} = Compute("$var != -$b/$a and $var != 0 and $var != -$c");

Context("LimitedFraction")->flags->set(
            reduceFractions => 0,
            showMixedNumbers=>0,
            showExtraParens=>0);
Context()->operators->redefine(',',using=>',',from=>'Numeric');
Context()->operators->redefine('or',using=>',',from=>'Numeric');
Context()->operators->set(
  ','=>{string=>' and ',TeX=>'\hbox{ and }'},
  'or'=>{string=>' and ',TeX=>'\hbox{ and }'}
);
Context()->lists->set(List => {separator => "\; and \;"});
$frac = Fraction(-$b,$a);
$lostDomain = List($frac,0);


##############################################
TEXT(beginproblem());

BEGIN_PGML

Simplify the function formula, and if applicable, write the restricted domain.  [@KeyboardInstructions("The problem accepts many ways to format the answers here, but one way is like typing [|$var^2 for $var!=1 and $var!=2|]* where [|!=|]* is how to type the [`\\neq`] symbol.")@]**

    [`` [$R]([$var]) = [$function] ``]

    Reduced [`[$R]([$var])=`] [___________________]{$ans}

END_PGML

###################################################


BEGIN_PGML_SOLUTION

To simplify the expression, we first factor both the numerator and denominator, and then cancel common factors.

    [``
\begin{aligned}
   [$R]([$var]) &= [$function] \\
                 &= \frac{[$step1Num]}{[$step1Den]} \\
                 &= \frac{[$numFactored]}{[$denFactored]} \\
                 &= [$ans]
\end{aligned}
    ``]

The expression [`[$var]([$a][$var]+[$b])`] was canceled. To find what values would cause the crossed out expression to be [`0`], we solve the equation:

    [``
\begin{aligned}
   [$var]([$a][$var]+[$b]) &= 0 \\
   [$var] = 0 &\text{ or } [$a][$var]+[$b]=0 \\
   [$var] = 0 &\text{ or } [$a][$var]=[$b*-1] \\
   [$var] = 0 &\text{ or } [$var]= [$frac] \\
\end{aligned}
    ``]

The domain condition lost during the reduction is [` [$var] \ne [$lostDomain] `].

END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
