# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Find missing side with two given similar triangles.
#
# Last edited by Carl Yao 3/1/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('area','perimeter','triangle')
## DBCCSS('6.G.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserNumberWithUnits.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");

$unit = "ft";

Context("Numeric");

#Show arrays have length defined by @sides;
#The other arrays have numbers used in calculation.
@baseShortShow = ();
@baseShort = ();
@baseLongShow = ();
@baseLong = ();
@hypotenuseShow = ();
@hypotenuse = ();

$baseShortShow[1] = 5;
$baseLongShow[1] = 12;
$hypotenuseShow[1] = 13;
$ratio = random(1.5,2,0.1);
$baseShortShow[0] = $ratio*$baseShortShow[1];
$baseLongShow[0] = $ratio*$baseLongShow[1];
$hypotenuseShow[0] = $ratio*$hypotenuseShow[1];

$scale = random(1,5,0.5);
$baseShort[1] = 5*$scale;
$baseLong[1] = 12*$scale;
$hypotenuse[1] = 13*$scale;
$baseShort[0] = $ratio*$baseShort[1];
$baseLong[0] = $ratio*$baseLong[1];
$hypotenuse[0] = $ratio*$hypotenuse[1];

@orientation = ();

$orientation[0] = random(0,7,1);
if ($orientation[0]<=3) {
   do {$orientation[1] = random(0,7,1);} until ($orientation[0] != $orientation[1]);
} else {
   do {$orientation[1] = random(4,7,1);} until ($orientation[0] != $orientation[1]);
}

for my $i (0,1) {
  $hor[$i] = ($orientation[$i] == 0 or $orientation[$i] == 3 or $orientation[$i] == 4 or $orientation[$i] == 7) ? $baseShortShow[$i] : $baseLongShow[$i];
  $ver[$i] = ($orientation[$i] == 0 or $orientation[$i] == 3 or $orientation[$i] == 4 or $orientation[$i] == 7) ? $baseLongShow[$i] : $baseShortShow[$i];
  $pxhyp[$i] = (1+length($hypotenuse[$i])+3)*8;
}

$pxcv = ($hor[0]+$hor[1])/180;

$cushionLeft= $pxcv*15;
$cushionMiddle = $pxcv*30;
$cushionRight = $pxcv*15;
$cushionY = $pxcv*15;


if ($orientation[0] == 4 or $orientation[0] == 7){
  $cushionLeft = max($pxcv*15, $pxcv*$pxhyp[0]-$baseShortShow[0]/2);
}

if ($orientation[0] == 45 or $orientation[0] == 6){
  $cushionLeft = max($pxcv*15, $pxcv*$pxhyp[0]-$baseLongShow[0]/2);
}

if ($orientation[1] == 0 or $orientation[1] == 3){
  $cushionRight = max($pxcv*15, $pxcv*$pxhyp[1]-$baseShortShow[1]/2);
}

if ($orientation[1] == 1 or $orientation[1] == 2){
  $cushionRight = max($pxcv*15, $pxcv*$pxhyp[1]-$baseLongShow[1]/2);
}

$xmin = 0;
$xmax = $hor[0]+$hor[1]+$cushionLeft+$cushionMiddle+$cushionRight;
$ymin = 0;
$ymax = max($ver[0],$ver[1])+2*$cushionY;

@cx = ();
@cy = ();
@ax = ();
@ay = ();
@bx = ();
@by = ();
@acxShift = ();
@acyShift = ();
@bcxShift = ();
@bcyShift = ();

for my $i (0,1) {

$ay[$i][0] = $cushionY;
$ay[$i][1] = $cushionY + $baseShortShow[$i];
$ay[$i][2] = $cushionY;
$ay[$i][3] = $cushionY + $baseLongShow[$i];
$ay[$i][4] = $cushionY + $baseLongShow[$i];
$ay[$i][5] = $cushionY;
$ay[$i][6] = $cushionY + $baseShortShow[$i];
$ay[$i][7] = $cushionY;

$by[$i][0] = $cushionY + $baseLongShow[$i];
$by[$i][1] = $cushionY;
$by[$i][2] = $cushionY + $baseShortShow[$i];
$by[$i][3] = $cushionY;
$by[$i][4] = $cushionY;
$by[$i][5] = $cushionY + $baseShortShow[$i];
$by[$i][6] = $cushionY;
$by[$i][7] = $cushionY + $baseLongShow[$i];

$cy[$i][0] = $cushionY;
$cy[$i][1] = $cushionY;
$cy[$i][2] = $cushionY + $baseShortShow[$i];
$cy[$i][3] = $cushionY + $baseLongShow[$i];
$cy[$i][4] = $cushionY + $baseLongShow[$i];
$cy[$i][5] = $cushionY + $baseShortShow[$i];
$cy[$i][6] = $cushionY;
$cy[$i][7] = $cushionY;
}

$cx[0][0] = $cushionLeft;
$cx[0][0] = $cushionLeft;
$cx[0][1] = $cushionLeft;
$cx[0][2] = $cushionLeft;
$cx[0][3] = $cushionLeft;
$cx[0][4] = $cushionLeft+$baseShortShow[0];
$cx[0][5] = $cushionLeft+$baseLongShow[0];
$cx[0][6] = $cushionLeft+$baseLongShow[0];
$cx[0][7] = $cushionLeft+$baseShortShow[0];

$cx[1][0] = $xmax-$cushionRight-$baseShortShow[1];
$cx[1][1] = $xmax-$cushionRight-$baseLongShow[1];
$cx[1][2] = $xmax-$cushionRight-$baseLongShow[1];
$cx[1][3] = $xmax-$cushionRight-$baseShortShow[1];
$cx[1][4] = $xmax-$cushionRight;
$cx[1][5] = $xmax-$cushionRight;
$cx[1][6] = $xmax-$cushionRight;
$cx[1][7] = $xmax-$cushionRight;

$ax[0][0] = $cushionLeft+$baseShortShow[0];
$ax[0][1] = $cushionLeft;
$ax[0][2] = $cushionLeft;
$ax[0][3] = $cushionLeft+$baseShortShow[0];
$ax[0][4] = $cushionLeft;
$ax[0][5] = $cushionLeft+$baseLongShow[0];
$ax[0][6] = $cushionLeft+$baseLongShow[0];
$ax[0][7] = $cushionLeft;

$ax[1][0] = $xmax-$cushionRight;
$ax[1][1] = $xmax-$cushionRight-$baseLongShow[1];
$ax[1][2] = $xmax-$cushionRight-$baseLongShow[1];
$ax[1][3] = $xmax-$cushionRight;
$ax[1][4] = $xmax-$cushionRight-$baseShortShow[1];
$ax[1][5] = $xmax-$cushionRight;
$ax[1][6] = $xmax-$cushionRight;
$ax[1][7] = $xmax-$cushionRight-$baseShortShow[1];

$bx[0][0] = $cushionLeft;
$bx[0][1] = $cushionLeft+$baseLongShow[0];
$bx[0][2] = $cushionLeft+$baseLongShow[0];
$bx[0][3] = $cushionLeft;
$bx[0][4] = $cushionLeft+$baseShortShow[0];
$bx[0][5] = $cushionLeft;
$bx[0][6] = $cushionLeft;
$bx[0][7] = $cushionLeft+$baseShortShow[0];

$bx[1][0] = $xmax-$cushionRight-$baseShortShow[1];
$bx[1][1] = $xmax-$cushionRight;
$bx[1][2] = $xmax-$cushionRight;
$bx[1][3] = $xmax-$cushionRight-$baseShortShow[1];
$bx[1][4] = $xmax-$cushionRight;
$bx[1][5] = $xmax-$cushionRight-$baseLongShow[1];
$bx[1][6] = $xmax-$cushionRight-$baseLongShow[1];
$bx[1][7] = $xmax-$cushionRight;

for my $i (0..1) {
   $acxShift[$i][0] = 'center';
   $acxShift[$i][1] = 'center';
   $acxShift[$i][2] = 'center';
   $acxShift[$i][3] = 'center';
   $acxShift[$i][4] = 'center';
   $acxShift[$i][5] = 'center';
   $acxShift[$i][6] = 'center';
   $acxShift[$i][7] = 'center';

   $acyShift[$i][0] = 'top';
   $acyShift[$i][1] = 'bottom';
   $acyShift[$i][2] = 'bottom';
   $acyShift[$i][3] = 'bottom';
   $acyShift[$i][4] = 'bottom';
   $acyShift[$i][5] = 'top';
   $acyShift[$i][6] = 'top';
   $acyShift[$i][7] = 'top';

   $bcxShift[$i][0] = 'center';
   $bcxShift[$i][1] = 'center';
   $bcxShift[$i][2] = 'center';
   $bcxShift[$i][3] = 'center';
   $bcxShift[$i][4] = 'center';
   $bcxShift[$i][5] = 'center';
   $bcxShift[$i][6] = 'center';
   $bcxShift[$i][7] = 'center';

   $bcyShift[$i][0] = 'bottom';
   $bcyShift[$i][1] = 'top';
   $bcyShift[$i][2] = 'bottom';
   $bcyShift[$i][3] = 'bottom';
   $bcyShift[$i][4] = 'top';
   $bcyShift[$i][5] = 'bottom';
   $bcyShift[$i][6] = 'top';
   $bcyShift[$i][7] = 'top';

   $abxPosition[$i][0] = ($ax[$i][0]+$bx[$i][0])/2;
   $abxPosition[$i][1] = ($cx[$i][1]+$bx[$i][1])/2;
   $abxPosition[$i][2] = ($cx[$i][2]+$bx[$i][2])/2;
   $abxPosition[$i][3] = ($ax[$i][3]+$bx[$i][3])/2;
   $abxPosition[$i][4] = ($ax[$i][4]+$bx[$i][4])/2;
   $abxPosition[$i][5] = ($cx[$i][5]+$bx[$i][5])/2;
   $abxPosition[$i][6] = ($cx[$i][6]+$bx[$i][6])/2;
   $abxPosition[$i][7] = ($ax[$i][7]+$bx[$i][7])/2;

   $abxShift[$i][0] = 'left';
   $abxShift[$i][1] = 'left';
   $abxShift[$i][2] = 'left';
   $abxShift[$i][3] = 'left';
   $abxShift[$i][4] = 'right';
   $abxShift[$i][5] = 'right';
   $abxShift[$i][6] = 'right';
   $abxShift[$i][7] = 'right';

   $abyShift[$i][0] = 'bottom';
   $abyShift[$i][1] = 'bottom';
   $abyShift[$i][2] = 'top';
   $abyShift[$i][3] = 'top';
   $abyShift[$i][4] = 'top';
   $abyShift[$i][5] = 'top';
   $abyShift[$i][6] = 'bottom';
   $abyShift[$i][7] = 'bottom';

   $acO[$i][0] = 'horizontal',
   $acO[$i][1] = 'vertical',
   $acO[$i][2] = 'vertical',
   $acO[$i][3] = 'horizontal',
   $acO[$i][4] = 'horizontal',
   $acO[$i][5] = 'vertical',
   $acO[$i][6] = 'vertical',
   $acO[$i][7] = 'horizontal',
   
   $bcO[$i][0] = 'vertical',
   $bcO[$i][1] = 'horizontal',
   $bcO[$i][2] = 'horizontal',
   $bcO[$i][3] = 'vertical',
   $bcO[$i][4] = 'vertical',
   $bcO[$i][5] = 'horizontal',
   $bcO[$i][6] = 'horizontal',
   $bcO[$i][7] = 'vertical',
   
}



$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[240,240*$ymax/$xmax]);

$picture->lb( new Label( 
   ($ax[0][$orientation[0]]+$cx[0][$orientation[0]])/2, 
   ($ay[0][$orientation[0]]+$cy[0][$orientation[0]])/2, 
   "$baseShort[0] $unit",'black',$acxShift[0][$orientation[0]],$acyShift[0][$orientation[0]],'large',$acO[0][$orientation[0]]));
$picture->lb( new Label( 
   ($bx[0][$orientation[0]]+$cx[0][$orientation[0]])/2, 
   ($by[0][$orientation[0]]+$cy[0][$orientation[0]])/2,
   "$baseLong[0] $unit",'black',$bcxShift[0][$orientation[0]],$bcyShift[0][$orientation[0]],'large',$bcO[0][$orientation[0]]));
$picture->lb( new Label( 
   $abxPosition[0][$orientation[0]], 
   ($ay[0][$orientation[0]]+$by[0][$orientation[0]])/2,
   "$hypotenuse[0] $unit",'black',$abxShift[0][$orientation[0]],$abyShift[0][$orientation[0]],'large'));

$picture->lb( new Label( 
   ($ax[1][$orientation[1]]+$cx[1][$orientation[1]])/2, 
   ($ay[1][$orientation[1]]+$cy[1][$orientation[1]])/2, 
   "x $unit",'black',$acxShift[1][$orientation[1]],$acyShift[1][$orientation[1]],'large',$acO[1][$orientation[1]]));
$picture->lb( new Label( 
   ($bx[1][$orientation[1]]+$cx[1][$orientation[1]])/2, 
   ($by[1][$orientation[1]]+$cy[1][$orientation[1]])/2,
   "$baseLong[1] $unit",'black',$bcxShift[1][$orientation[1]],$bcyShift[1][$orientation[1]],'large',$bcO[1][$orientation[1]]));
$picture->lb( new Label( 
   $abxPosition[1][$orientation[1]], 
   ($ay[1][$orientation[1]]+$by[1][$orientation[1]])/2,
   "$hypotenuse[1] $unit",'black',$abxShift[1][$orientation[1]],$abyShift[1][$orientation[1]],'large'));


$picture->new_color("darkblue",  100,100,255); 

for my $i (0..1) {
   $picture->moveTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]]);
   $picture->lineTo($bx[$i][$orientation[$i]],$by[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($cx[$i][$orientation[$i]],$cy[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]], darkblue,3);
}


$text = "There are two triangles. The one on the right is smaller, and the one on the left is larger. Both triangles have unequal sides. For the smaller triangle, its shortest side is marked as x $unit, its second shortest side is marked as $baseLong[1] $unit, and its longest side is marked as $hypotenuse[1] $unit. For the bigger triangle, its shortest side is marked as $baseShort[0] $unit, its second shortest side is marked as $baseLong[0] $unit, and its longest side is marked as $hypotenuse[0] $unit.";

$ans = $baseShort[1];
$ansU = NumberWithUnits("$ans $unit");

##############################################

TEXT(beginproblem());

BEGIN_PGML

The following two triangles are similar to each other. Find the length of the missing side.

>>[@ image(insertGraph( $picture  ), tex_size=>400, width=>240, extra_html_tags => "alt = '$text' title = '$text' ") @]*<<

[@KeyboardInstructions(q!Use [|ft|]* for feet.!)@]**

The missing side's length is [__________]{$ansU}

END_PGML

##############################################

BEGIN_PGML_SOLUTION

If two shapes are similar to each other, the lengths of their corresponding sides are in proportion. We can write an equation and solve for [`x`]:

    [``
\begin{aligned}
   \frac{x}{[$baseShort[0]]} &= \frac{[$baseLong[1]]}{[$baseLong[0]]} \\
   \mathbf{[$baseShort[0]]\cdot[$baseLong[0]]\cdot} \frac{x}{[$baseShort[0]]} &= \mathbf{[$baseShort[0]]\cdot[$baseLong[0]]\cdot} \frac{[$baseLong[1]]}{[$baseLong[0]]} \\
   [$baseLong[0]]x &= [$baseShort[0]]\cdot[$baseLong[1]] \\
   [$baseLong[0]]x &= [$baseShort[0]*$baseLong[1]] \\
   \frac{[$baseLong[0]]x}{[$baseLong[0]]} &= \frac{[$baseShort[0]*$baseLong[1]]}{[$baseLong[0]]} \\
   x &= [$baseShort[1]]
\end{aligned}
    ``]

*Solution:* The length of the missing side is [`[$ansU]`].

END_PGML_SOLUTION

ENDDOCUMENT();
