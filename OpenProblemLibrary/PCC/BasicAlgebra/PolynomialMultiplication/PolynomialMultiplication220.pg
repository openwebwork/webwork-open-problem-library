# WeBWorK problem written by Chris Hughes
# Portland Community College
#
# Template:
# Expand the given expression, writing your answer in descending powers of x
#
#    (ax^2 + b)(x+c)(x-c)
#
# a is integer on [2,5] and b, and c are integers on the interval [2,10].
# 
# Last updated: Carl Yao, 7/03/13
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Polynomial and Rational Functions')
## DBsection('Polynomial Functions')
## KEYWORDS('exponent','multiply','polynomial','binomial','FOIL')
## DBCCSS('A-APR.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextLimitedPolynomial.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>'variable');
Context()->variables->are($var=>'Real');

# setup the first binomial: ($a x^2 + b)
$a = random(2,5,1);
$b = $a;
$b = non_zero_random(-10,10,1) while(abs($b)==abs($a));
$c = random(2,10,1);

@poly1array = ($a,0,$b);

# setup the binomial: (x+$c)
@poly2array = (1,$c);

# setup the binomial: (x-$c)
@poly3array = (1,-$c);


# reduction check
$poly1 = Formula(PolyString(~~@poly1array,order=>descending,var=>$var))->reduce->reduce;
$poly2 = Formula(PolyString(~~@poly2array,order=>descending,var=>$var))->reduce->reduce;
$poly3 = Formula(PolyString(~~@poly3array,order=>descending,var=>$var))->reduce->reduce;


# for the solution
$soln1 = Formula(PolyMult(~~@poly2array,~~@poly3array,output=>unsimplified,var=>$var))->reduce->reduce;
$soln2 = Formula(PolyMult(~~@poly2array,~~@poly3array,output=>simplified,var=>$var))->reduce->reduce;
@step3 = PolyMult(~~@poly2array,~~@poly3array);
$soln3 = Formula(PolyMult(~~@poly1array,~~@step3,output=>unsimplified,var=>$var))->reduce->reduce;

# for the answer
$ans = Formula(PolyMult(~~@poly1array,~~@step3,output=>simplified,var=>$var))->reduce->reduce;




Context("LimitedPolynomial-Strict");
Context()->variables->are($var=>'Real');
$ans = Formula($ans);


##############################################
TEXT(beginproblem());

BEGIN_PGML

Simplify the following into an expanded polynomial.

    [`\left([$poly1]\right)\left[\left([$poly2]\right)\left([$poly3]\right)\right]= `][___________________________________]{$ans}

END_PGML


BEGIN_PGML_SOLUTION

We use the FOIL technique _twice_; first we expand the quantity inside the brackets, and then 
apply the FOIL technique to the result

    [`
      \begin{aligned}
              \left([$poly1]\right)\left[\left([$poly2]\right)\left([$poly3]\right)\right]&=\left([$poly1]\right)\left[[$soln1]\right]\\
                                &=\left([$poly1]\right)\left[[$soln2]\right]\\
                                & = [$soln3]\\
                                &=[$ans]
      \end{aligned}
    `]
END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
