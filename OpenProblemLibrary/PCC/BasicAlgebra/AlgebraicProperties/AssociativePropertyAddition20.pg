# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# 
# Use the associative property of addition.
#
# Last edited: Jordan 8/23/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions','Equivalent Expressions','Reordering and Regrouping')
## KEYWORDS('associative')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
,
  "PGcourse.pl",
);

   

    

##############################################

do {$var = RandomVariableName();} until ($var ne uc($var));

Context("Numeric");
Context()->variables->are($var=>'Real');
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(reduceConstants=>0);
Context()->lists->set(AbsoluteValue => {open => "(", close => ")"});
Context()->parens->set("(" => {removable=>0, type => "AbsoluteValue", close => ")"});

$a = random(1,20,1);
$b = random(1,20,1);
Context()->variables->set($var => {limits => [-2*$a-$b,2*$a-$b]});


$giv = Formula("$a+($b+$var)");
$ans = Formula("($a+$b)+$var");
$ab = $a+$b;
$alt = Formula("$ab+$var");


##############################################
TEXT(beginproblem());

BEGIN_PGML

Use the associative property of addition to write an equivalent expression to [`[$giv]`].

    [____________]


END_PGML
##############################################

ANS($ans->cmp(checker => sub {
      my ($correct,$student,$ans) = @_;

      # Because of the absolute value hack for parens, make sure to test at both pos and neg input:
      $giv->{test_at} = [[-$b-1],[-$b+1]];
      $student ->{test_at} = [[-$b-1],[-$b+1]];
      $correct->{test_at} = [[-$b-1],[-$b+1]];

      Value->Error("This expression is algebraically equivalent to the given expression, but it is not what an application of the associative property of addition would give you") if (($student == $giv) or (($student == $correct) and ($student ne $correct) and ($student ne $alt)));
      return (($student eq $correct) or ($student eq $alt));
    }));


##############################################

BEGIN_PGML_SOLUTION

To use the associative property of addition, we leave terms written in their original order, but change the grouping symbols so that a different addition has higher priority:

    [``\begin{aligned}
    [$giv] & =[$ans]
    \end{aligned}``]

You may further simplify by carrying out the addition between the two numbers:

    [``\begin{aligned}
    [$giv] & = [$ans]\\
           & = [$alt]
    \end{aligned}``]


END_PGML_SOLUTION

ENDDOCUMENT();


