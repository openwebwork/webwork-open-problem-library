# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Combine like terms
#
# Last edited: Yao 12/13/2018
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions','Equivalent Expressions','Reordering and Regrouping')
## KEYWORDS('expression','simplify')
## DBCCSS('6.NS.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "contextLimitedPolynomial.pl",
  "PCCmacros.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl",
);

##############################################


Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$var1 = RandomVariableName(type=>variable);
do {$var2 = RandomVariableName(type=>variable)} until ($var2 ne $var1);
Context()->variables->are( $var1=>'Real',$var2=>'Real');

do {
   $a = non_zero_random(-10,10,1);
   $b = non_zero_random(-10,10,1);
} until $a+$b != 0 && !(($a>0)&&($b>0));


@problems = (
   [Compute("$a*$var1*$var2+$b*$var2*$var1")->reduce,
   Compute("($a+$b)*$var1*$var2")->reduce],
   [Compute("$a*$var2**2*$var1+$b*$var1*$var2**2")->reduce,
   Compute("($a+$b)*$var1*$var2**2")->reduce],
   [Compute("$a*$var1**2*$var2+$b*$var1*$var2**2")->reduce,
   Compute("$a*$var1**2*$var2+$b*$var1*$var2**2")->reduce],
   [Compute("$a*$var1**2*$var2**2+$b*$var1**2*$var2**2")->reduce,
   Compute("($a+$b)*$var1**2*$var2**2")->reduce],
);

@shuffle = shuffle($#problems+1);

Context("LimitedPolynomial-Strict");
Context()->variables->are( $var1=>'Real',$var2=>'Real');

for (my $j=0; $j<=$#problems; $j++) {
   $problems[$j][1] = Compute($problems[$j][1]);
}


##############################################

TEXT(beginproblem());

BEGIN_PGML

Simplify each expression, if possible, by combining like terms. If the expression cannot be simplified further, just enter it as it is.

a)    [``[$problems[$shuffle[0]][0]]=``] [_________________]{$problems[$shuffle[0]][1]}

b)    [``[$problems[$shuffle[1]][0]]=``] [_________________]{$problems[$shuffle[1]][1]}

c)    [``[$problems[$shuffle[2]][0]]=``] [_________________]{$problems[$shuffle[2]][1]}

d)    [``[$problems[$shuffle[3]][0]]=``] [_________________]{$problems[$shuffle[3]][1]}

END_PGML

##############################################

BEGIN_PGML_SOLUTION

a)    [`[$problems[$shuffle[0]][0]]=[$problems[$shuffle[0]][1]]`]

b)    [`[$problems[$shuffle[1]][0]]=[$problems[$shuffle[1]][1]]`]

c)    [`[$problems[$shuffle[2]][0]]=[$problems[$shuffle[2]][1]]`]

d)    [`[$problems[$shuffle[3]][0]]=[$problems[$shuffle[3]][1]]`]

Note that [`[$var1][$var2]`] and [`[$var2][$var1]`] are equivalent.

[`[$problems[2][0]]`] cannot be simplified because it doesn't have any like terms.

END_PGML_SOLUTION

ENDDOCUMENT();


