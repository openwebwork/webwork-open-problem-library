# WeBWorK problem written by Carl Yao
# Portland Community College
#
# 
# Simplify 2x^2+3x^2 and (2x^2)(3x^2)
#
# Last edited: Yao 2/3/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions','Equivalent Expressions','Reordering and Regrouping')
## KEYWORDS('distributive','expression','linear','negative')
## DBCCSS('6.NS.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "contextLimitedPolynomial.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################


Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
do {$var = RandomVariableName();} until ($var ne uc($var));
Context()->variables->are( $var=>'Real');

$a = non_zero_random(-4,4,1);
$b = non_zero_random(-4,4,1);
$c = non_zero_random(-4,4,1);
$exp1 = random(1,4,1);
do {$exp2 = random(1,4,1);} until ($exp1!=$exp2);
$term1 = Compute("$a*$var**$exp1")->reduce;
$term2 = Compute("$b*$var**$exp1")->reduce;
$term3 = Compute("$c*$var**$exp2")->reduce;

$aPlusB = $a+$b;

$func1 = Compute("$term1+$term2")->reduce;
$ans1 = Compute("$aPlusB*$var**$exp1")->reduce;
$func2 = '('.$term1->TeX.')('.$term2->TeX.')';
$ans2 = Compute("$a*$b*$var**(2*$exp1)")->reduce;
$func3 = Compute("$term1+$term3")->reduce;
$ans3 = $func3->reduce;
$func4 = '('.$term1->TeX.')('.$term3->TeX.')';
$ans4 = Compute("$a*$c*$var**($exp1+$exp2)")->reduce;

Context("LimitedPolynomial-Strict");
Context()->variables->are( $var=>'Real');
$ans1 = Compute($ans1);
$ans2 = Compute($ans2);
$ans3 = Compute($ans3);
$ans4 = Compute($ans4);


##############################################

TEXT(beginproblem());

BEGIN_PGML

Simplify the following expressions if possible.
a. [`` [$func1]=``][______________]{$ans1} 

a. [`` [$func2]=``][______________]{$ans2} 

a. [`` [$func3]=``][______________]{$ans3} 

a. [`` [$func4]=``][______________]{$ans4} 

END_PGML

##############################################

BEGIN_PGML_SOLUTION

When we add/subtract expressions, we can only combine like terms. For example, [`[$func1]=[$ans1]`].

When we add/subtract expressions, we cannot combine "unlike terms." For example, [`[$func3]`] cannot be simplified.

When we multiply expressions, we can multiply "unlike terms." For example, [`[$func4]=[$ans4]`].

a.    
    [`` [$func1]=[$ans1] ``] 

a.    
    [`` [$func2]=[$ans2] ``] 

a.    
    [`` [$func3]=[$ans3] ``] 

a.    
    [`` [$func4]=[$ans4] ``] 

END_PGML_SOLUTION

ENDDOCUMENT();


