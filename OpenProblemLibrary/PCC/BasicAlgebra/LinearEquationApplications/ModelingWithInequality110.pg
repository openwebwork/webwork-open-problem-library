# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# Modeling with a linear inequality without solving it.
#
# Last updated: Jordan 7/13/18
# ENDDESCRIPTION
 
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('solve','linear','inequality','application','subtract','divide')
## DBCCSS('6.EE.2.a','7.EE.4','A-CED.1','A-REI.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')
 
##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserImplicitEquation.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("ImplicitEquation");
Context()->operators->add(
      '>' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' > ',          #  output string for it
         perl => '>',              #  perl string
      },
      '<' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' < ',          #  output string for it
         perl => '<',              #  perl string
      },
      '>=' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' >= ',          #  output string for it
         TeX => ' \geq ',
         perl => '>=',              #  perl string
      },
      '<=' => {
         class => 'Parser::BOP::equality',
         precedence => $prec+.25,  #  just above comma
         associativity => 'left',  #  computed left to right
         type => 'bin',            #  binary operator
         string => ' <= ',          #  output string for it
         TeX => ' \leq ',
         perl => '<=',              #  perl string
      },
);

Context()->variables->are(g=>"Real");
Context()->flags->set(reduceConstants=>0);
Context()->flags->set(showExtraParens=>0);

$tank = random(50,100,1);
$max = random(1500,3000,100);
$gallon = ($max-$tank)/8.3454;

$ansString = "8.3454*g+$tank<=$max";
Context()->variables->set(g=>{limits=>[$gallon-10,$gallon+10]});
$ans = ImplicitEquation("$ansString");
$evaluator = $ans->cmp(
     checker => sub {
       my ($correct,$student,$ansHash) = @_;
       # check that the corresponding equality is correct
       my $OK = not ImplicitEquation::compare($correct,$student);
       return 0 unless $OK;
       # what sign is used
       my $sign = $student->{tree}->{bop};
       Value::Error('Write an inequality, not an equation.') if ($sign eq '=');
       Value::Error('Your inequality is not using the correct sign.') if ($sign eq '<' or $sign eq '>');
       # distinguish between good/bad uses of >=/<=
       my $left = Formula($student->{tree}->{lop})->eval(g=>0);
       my $right = Formula($student->{tree}->{rop})->eval(g=>0);
       $OK = ($sign eq '>=') ? ($left >= $right) : ($left <= $right);
       Value::Error('Your inequality is not using the correct sign.') unless ($OK);
       return $OK;
     }
   );

##############################################

TEXT(beginproblem());

BEGIN_PGML

A truck that hauls water is capable of carrying a maximum of [`[$max]`] lb. Water weighs [`8.3454 \frac{\text{lb}}{\text{gal}}`], and the plastic tank on the truck that holds water weighs [`[$tank]`] lb. Assume the truck can carry a maximum of [`g`] gallons of water. Write an _inequality_ to model this scenario. There is no need to solve it.

[@KeyboardInstructions('If you need to enter the inequality signs [`\leq`] or [`\geq`], type [|<=|]* or [|>=|]*.')@]**

    [_________________________]{$evaluator}

END_PGML


##############################################

BEGIN_PGML_SOLUTION

Assume the truck can carry a maximum of [`g`] gallons of water. Since water weighs [`8.3454 \frac{\text{lb}}{\text{gal}}`], the weight of water will be [`8.3454g`] gallons. The combined weight of water and tank is [`8.3454g+[$tank]`]. The maximum weight the truck can carry is [`[$max]`], so we can write the inequality:

    [``8.3454g+[$tank]\leq[$max]``]


END_PGML_SOLUTION

ENDDOCUMENT();
