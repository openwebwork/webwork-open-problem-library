# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Line k's equation is given in x+By=C.
# Line ell is perpendicular to k, and a point on line ell is given.
# Find line ell's equation.
#
# Last edited: Yao 9/12/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Linear Equations')
## KEYWORDS('slope','linear','equation','point-slope','slope-intercept','fraction','perpendicular')
## DBCCSS('8.F.3','A-CED')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "contextFraction.pl",
  "parserAssignment.pl",
  "bizarroArithmetic.pl",
  "PGcourse.pl",
);

##############################################

Context("Fraction");
Context()->noreduce('(-x)+y','(-x)-y');
Context()->variables->add(y=>'Real');
Context()->flags->set(showExtraParens=>0);

do {
   $numk = random(-1,1,2);
   $denk = random(2,9,1);
   $mk = Fraction($numk,$denk);
   $bk = non_zero_random(-5,5,1);

   $ml = -1/$mk;
   do {$bl = non_zero_random(-5,5,1);} until ($bl != $bk);

   $k = Formula("$mk x + $bk")->reduce;
   $l = Formula("$ml x + $bl")->reduce;

   $x1 = $numk*non_zero_random(-5,5,1);
   $y1 = $l->eval(x=>$x1);
} until ($y1!=0);


if ($numk>0) {
   $kleft = Compute("x-$denk*y")->reduce;
   $kright = -$bk*$denk;
} else {
   $kleft = Compute("x+$denk*y")->reduce;
   $kright = $bk*$denk;
}

$lPS = Formula("$ml(x - $x1)+$y1")->reduce;

Context("Fraction");
Context()->noreduce('(-x)+y','(-x)-y');
Context()->variables->add(y=>'Real');
Context()->flags->set(showExtraParens=>0);
Context()->operators->set(
'+' => {class => 'bizarro::BOP::add', isCommand => 1},
'-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
);

parser::Assignment->Allow;
$ansPS = Formula("y=$lPS")->reduce;
$ansSI = Formula("y=$l")->reduce;

$PSeval = $ansPS->cmp(checker => sub {
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $correct = Formula("$correct");
      $student = Formula("$student");
      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      Value::Error("Your answer is equivalent to the correct answer, but not in the expected form.") unless $OK;
      return $OK;
});

$SIeval = $ansSI->cmp(checker => sub {
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $correct = Formula("$correct");
      $student = Formula("$student");
      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      Value::Error("Your answer is equivalent to the correct answer, but not in the expected form.") unless $OK;
      return $OK;
});

##############################################

TEXT(beginproblem());

BEGIN_PGML

Line [`k`] has the equation [`[$kleft]=[$kright]`].

Line [`\ell`] is perpendicular to line [`k`] and passes through the point [`([$x1],[$y1])`]. 

Find an equation for line [`\ell`] in both point-slope form and slope-intercept form.

    An equation for [`\ell`] in point-slope form is: [_______________]{$PSeval}.

    An equation for [`\ell`] in slope-intercept form is: [_______________]{$SIeval}.


END_PGML

##############################################

BEGIN_PGML_SOLUTION

First, we find line [`k`]'s slope:

    [``
\begin{aligned}
   [$kleft] &= [$kright] \\
     &\vdots\\
   y &= [$k]
\end{aligned}
    ``]

We can see line [`k`]'s slope is [`[$mk]`].


When two lines are perpendicular, the product of their slopes is [`-1`]. We just found that line [`k`]'s slope is [`[$mk]`]. So the slope ov [`\ell`] must be [`[$ml]`].

Now we know line [`\ell`]'s slope, and a point on it: [` ([$x1],[$y1]) `]. We substitute these numbers into the generic formula for a point-slope equation for a line:

    [``y=m(x-x_{1})+y_{1}``]

and we have:

    [``[$ansPS]``]

The slope-intercept form of a line equation looks like [`y=mx+b`], where [`m`] is the slope and [`b`] is the [`y`]-intercept. We can take the point-slope form and expand and simplify the right side.

    [``
\begin{aligned}
   y &= [$lPS]\\
   y &= [$ml]x - [$ml]([$x1]) +[$y1]\\
   y &= [$l]
\end{aligned}
``]

END_PGML_SOLUTION



ENDDOCUMENT();

