# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given two points, find a line's equation in point-slope form.
# All numbers are positive.
# 
# Last updated: Jordan 8/30/13; Carl Yao, 7/9/13
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Lines')
## KEYWORDS('linear','equation','slope','point-slope')
## DBCCSS('F-LE.2','8.F.3','A-CED')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserAssignment.pl",
  "bizarroArithmetic.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->variables->add(y=>'Real');
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(showExtraParens=>0);

Context()->operators->set(
'+' => {class => 'bizarro::BOP::add', isCommand => 1},
'-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
);

$m=random(2,5,1);
$b=random(1,10,1);

$x1=random(1,5,1);
$y1=$m*$x1+$b;
$x2=random(1,5,1);
while ($x2==$x1) {$x2=random(1,5,1);}
$y2=$m*$x2+$b;

parser::Assignment->Allow;
$ansPS1 = ($y1!=0) ? Formula("y=$m(x-$x1)+$y1") : Formula("y=$m(x-$x1)");
$ansPS2 = ($y2!=0) ? Formula("y=$m(x-$x2)+$y2") : Formula("y=$m(x-$x2)");


##############################################

TEXT(beginproblem());

BEGIN_PGML

A line passes through the points [`([$x1],[$y1])`] and [`([$x2],[$y2])`]. Find this line's equation in point-slope form.

    Using the point [`([$x1],[$y1])`], this line's point-slope form equation is [___________________].

    Using the point [`([$x2],[$y2])`], this line's point-slope form equation is [___________________].

END_PGML

##############################################


Context()->flags->set(reduceConstants=>0);
Context()->flags->set(reduceConstantFormulas=>0);

ANS($ansPS1 -> cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      return 0 unless ($correct == $student);
      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      Value->Error("Your answer is a line equation for the right line, but it is not in the expected point-slope form") unless (($correct == $student) or ($student == $correct));
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      return 1;
})); 


ANS($ansPS2 -> cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      $student = $ansHash->{student_formula};
      $correct = $correct->{original_formula} if defined $correct->{original_formula};
      $student = Formula("$student"); $correct = Formula("$correct");
      return 0 unless ($correct == $student);
      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      Value->Error("Your answer is a line equation for the right line, but it is not in the expected point-slope form") unless (($correct == $student) or ($student == $correct));
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      return 1;
})); 


$s1=$y2-$y1;
$s2=$x2-$x1;
$s3=$m*$x1;
$s4=-$s3;

$outputy1 = $y1<0 ? "($y1)" : $y1;
$outputx1 = $x1<0 ? "($x1)" : $x1;

BEGIN_PGML_SOLUTION

A line's equation in point-slope form looks like [` y=m(x-x_{0})+y_0 `] where [`m`] is the slope of the line and [`(x_{0},y_{0})`] is a point that the line passes through. We first need to find the line's slope.

To find a line's slope, we can use the slope formula:

    [`` \text{slope}=\frac{y_{2}-y_{1}}{x_{2}-x_{1}} ``]

We mark which number corresponds to which variable in the formula:

    [`` ([$x1],[$y1]) \longrightarrow (x_{1},y_{1}) ``]

    [`` ([$x2],[$y2]) \longrightarrow (x_{2},y_{2}) ``]

Now we substitute these values into the corresponding variables in the slope formula:

    [`` \begin{aligned}\text{slope}&=\frac{y_{2}-y_{1}}{x_{2}-x_{1}}\\&=\frac{[$y2]-[$outputy1]}{[$x2]-[$outputx1]}\\&=\frac{[$s1]}{[$s2]}\\&=[$m]\end{aligned} ``]

Now we have [` y=[$m](x-x_{0})+y_0 `]. The next step is to use a point that we know the line passes through.

If we choose to use the point [`([$x1],[$y1])`], we have:

     [`
\begin{aligned}
  y &= m(x-x_{0})+y_0 \\
  y &= [$m](x-[$x1])+[$y1]
\end{aligned}
`]

If we choose to use the point [`([$x2],[$y2])`], we have:

     [`
\begin{aligned}
  y &= m(x-x_{0})+y_0 \\
  y &= [$m](x-[$x2])+[$y2]
\end{aligned}
`]

Note that these two equations are equivalent. You will see why once you change both equations to slope-intercept form. This is left as an exercise.

END_PGML_SOLUTION

ENDDOCUMENT();


