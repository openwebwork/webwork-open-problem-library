# WeBWorK problem written by Carl Yao
# Portland Community College
# Understand a function based on a table of data.
#
# Last edited: Carl Yao 2/8/2017
# ENDDESCRIPTION

##DBsubject('Algebra')
##DBchapter('')
##DBsection('')
##KEYWORDS('function')
##DBCCSS('8.F.4,F.IF.2')
##TitleText1('')
##EditionText1('')
##AuthorText1('')
##Section1('')
##Problem('')
##Author('Debbie Neft, Alex Jordan, Carl Yao, Chris Hughes')
##Institution('PCC')



##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "niceTables.pl",
  "PCCmacros.pl",
  "parserRadioButtons.pl",
  "PGchoicemacros.pl",
  "PGcourse.pl",
);
sub PF {PGML::Format(@_)};

##############################################

TEXT(beginproblem());

Context("Numeric");

do {
   $x1 = random(1,7,1);
   $x2 = random(1,5,1);
} until ($x1 != $x2);
$x3 = 7-$x2;

@data = ( );

for my $i (0..7) {
   $data[$i]=int(sin(pi/7*$i)*100);
   if ( ($i!=$x2) && ($i!=$x3) && ($i!=0) && ($i!=7) ) {$data[$i] += random(-5,5,1);}
}

$y1 = $data[$x1];
$y2 = $data[$x2];
$y3 = $data[$x3];

$werey1 = ($y1 == 1) ? 'was' : 'were';
$werex1 = ($x1 == 1) ? 'was' : 'were';
$customersy1 = ($y1 == 1) ? 'customer' : 'customers';
$customersx1 = ($x1 == 1) ? 'customer' : 'customers';
$hoursx1 = ($x1 == 1) ? 'hour' : 'hours';
$hoursy1 = ($y1 == 1) ? 'hour' : 'hours';

@answers1 = (
   "There $werey1 ".math_ev3($y1)." $customersy1 in the store ".math_ev3($x1)." $hoursx1 after the store opened.",
   "There $werex1 ".math_ev3($x1)." $customersx1 in the store ".math_ev3($y1)." $hoursy1 after the store opened.",
   "In ".math_ev3($x1)." $hoursx1 since the store opened, there were a total of ".math_ev3($y1)." $customersy1.",
   "In ".math_ev3($x1)." $hoursx1 since the store opened, the store had an average of ".math_ev3($y1)." $customersy1 per hour.",
);

#Create a hash and its inverse that randomizes the order of the four graphs.
%scramble = ();
%inverse = ();
@answersShuffled1 = ();
for my $i (0..3) {
  do {$temp = list_random(0..3)} until !(grep(/^$temp$/,values %scramble) );
  $scramble{$i} = $temp;
  $inverse{$temp} = $i;
  $answersShuffled1[$i] = @answers1[$scramble{$i}];
};

$correctAns = @answersShuffled1[$inverse{0}];

$radio1 = RadioButtons(
   ~~@answersShuffled1,
   $correctAns, # correct answer
   order => ~~@answersShuffled1,
   labels => "ABC",
);

$ans3 = List($x2,$x3);

($earlier, $later) = (min($x2,$x3), max($x2,$x3));

@answers2 = (
   "There were ".math_ev3($y2)." customers in the store ".math_ev3($earlier)." hours after the store opened, and again ".math_ev3($later)." hours after the store opened.",
   "There were ".math_ev3($y2)." customers in the store ".math_ev3($x3)." hours after the store opened.",
   "There were ".math_ev3($y2)." customers in the store ".math_ev3($x2)." hours after the store opened.",
   "There were ".math_ev3($y2)." customers in the store either ".math_ev3($earlier)." hours after the store opened, or ".math_ev3($later)." hours after the store opened.",
);

#Create a hash and its inverse that randomizes the order of the four graphs.
%scramble = ();
%inverse = ();
@answersShuffled2 = ();
for my $i (0..3) {
  do {$temp = list_random(0..3)} until !(grep(/^$temp$/,values %scramble) );
  $scramble{$i} = $temp;
  $inverse{$temp} = $i;
  $answersShuffled2[$i] = @answers2[$scramble{$i}];
};

$correctAns = @answersShuffled2[$inverse{0}];

$radio2 = RadioButtons(
   ~~@answersShuffled2,
   $correctAns, # correct answer
   order => ~~@answersShuffled2,
   labels => "ABC",
);

##############################################


BEGIN_PGML

The function [`C`] models the the number of customers in a store [`t`] hours since the store opened.

[@DataTable(
  [
    [[PF('[`t`]'),],
     [PF('[`0`]'),],
     [PF('[`1`]'),],
     [PF('[`2`]'),],
     [PF('[`3`]'),],
     [PF('[`4`]'),],
     [PF('[`5`]'),],
     [PF('[`6`]'),],
     [PF('[`7`]'),],
    ],
    [[PF('[`C(t)`]')],
     [PF('[`[$data[0]]`]'),],
     [PF('[`[$data[1]]`]'),],
     [PF('[`[$data[2]]`]'),],
     [PF('[`[$data[3]]`]'),],
     [PF('[`[$data[4]]`]'),],
     [PF('[`[$data[5]]`]'),],
     [PF('[`[$data[6]]`]'),],
     [PF('[`[$data[7]]`]'),],
    ],
  ],
  align => 'c c c c c c c c c',
  columnscss =>
    ['border-right: 3px solid; ',
     ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',],
);@]*


a) Find [`C([$x1])`].  
   [_________]

b) Interpret the meaning of [`C([$x1])`].

    [@$radio1->buttons()@]*

c) Solve [`C(t)=[$y2]`] for [`t`]. [@KeyboardInstructions('Use commas to separate your answers if there are more than one solution.')@]** [`t=`][________]

d) Interpret the meaning of Part c's solution(s).

    [@$radio2->buttons()@]*


END_PGML


##############################################

ANS( Compute("$y1")->cmp() );
ANS( $radio1->cmp() );
ANS( $ans3->cmp() );
ANS( $radio2->cmp() );

##############################################

BEGIN_PGML_SOLUTION

a) According to data in the table, [`C([$x1])=[$y1]`].

b) Answer is Part A implies there were [`[$y1]`] customers in the store [`[$x1]`] hours after the store opened.

c) According to data in the table, [`C([$x2])=[$y2]`] and [`C([$x3])=[$y3]`]. So the answer is [`[$ans3]`].

d) Answer is Part C implies there were [`[$y2]`] customers in the store [`[$earlier]`] hours after the store opened, and again [`[$later]`] hours after the store opened.


END_PGML_SOLUTION


ENDDOCUMENT();
