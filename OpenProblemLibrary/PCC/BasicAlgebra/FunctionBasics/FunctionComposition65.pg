# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given a function, find f(x+a), f(x)+a, a*f(x), f(ax)
#
# Last update: Carl Yao 09/10/2015
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection('Domain and Range')
## KEYWORDS('function','combining functions', 'composition')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "bizarroArithmetic.pl",
  "PGcourse.pl",
);

##############################################

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$a = random(2,9,1)*random(-1,1,2);
$b = non_zero_random(-9,9,1);
$c = random(2,9,1);

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');

Context()->operators->set(
'*' => {class => 'bizarro::BOP::multiply', isCommand => 1},
' *' => {class => 'bizarro::BOP::multiply', isCommand => 1},
'* ' => {class => 'bizarro::BOP::multiply', isCommand => 1},
'+' => {class => 'bizarro::BOP::add', isCommand => 1},
'-' => {class => 'bizarro::BOP::subtract', isCommand => 1},
);

$f = Formula("$a*x+$b")->reduce;

$bPlusC = $b+$c;
$ans1 = Formula("$a*x+$bPlusC")->reduce;
$evaluator1 = $ans1->cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      Context()->flags->set(bizarroAdd=>1,bizarroSub=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroAdd=>0,bizarroSub=>0);
      Value::Error("Your answer is equivalent to the correct answer, but not in the expected form${BR}Maybe it needs to be simplified more") unless $OK;
      return $OK;
});

$ac = $a*$c;
$o = $ac+$b;
$ans2 = Formula("$a*x+$o")->reduce;
$evaluator2 = $ans2->cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      Context()->flags->set(bizarroMul=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroMul=>0);
      Value::Error("Your answer is equivalent to the correct answer, but not in the expected form${BR}Maybe it needs to be simplified more") unless $OK;
      return $OK;
});

$bc = $b*$c;
$ans3 = Formula("$ac*x+$bc")->reduce;
$evaluator3 = $ans3->cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      Context()->flags->set(bizarroMul=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroMul=>0);
      Value::Error("Your answer is equivalent to the correct answer, but not in the expected form${BR}Maybe it needs to be simplified more") unless $OK;
      return $OK;
});

$ans4 = Formula("$ac*x+$b")->reduce;
$evaluator4 = $ans4->cmp(
   checker=>sub{
      my ( $correct, $student, $ansHash ) = @_;
      return 0 if $ansHash->{isPreview} || $correct != $student;
      Context()->flags->set(bizarroMul=>1);
      delete $correct->{test_values};
      delete $student->{test_values};
      my $OK = ($correct == $student);
      Context()->flags->set(bizarroMul=>0);
      Value::Error("Your answer is equivalent to the correct answer, but not in the expected form${BR}Maybe it needs to be simplified more") unless $OK;
      return $OK;
});



##############################################


BEGIN_PGML

Let [`f`] be a function given by [`f(x)=[$f]`]. Find and simplify the following: 

a. [`f(x)+[$c]={}`][_]{$evaluator1}{10}

a. [`f(x+[$c])={}`][_]{$evaluator2}{10}

a. [`[$c]f(x)={}`][_]{$evaluator3}{10}

a. [`f([$c]x)={}`][_]{$evaluator4}{10}

    
END_PGML

##############################################

$s1 = Formula("$a*(x+$c)+$b")->reduce;
$s2 = Formula("$a*x+$ac+$b")->reduce;

##############################################

BEGIN_PGML_SOLUTION

a) [`\begin{aligned}[t]
f(x)+[$c]
&=[$f]+[$c]\\
&=[$ans1]
\end{aligned}`]

a) [`\begin{aligned}[t]
f(x+[$c])
&=[$s1]\\
&=[$s2]\\
&=[$ans2]
\end{aligned}`]

a) [`\begin{aligned}[t]
[$c]f(x)
&=[$c]([$f])\\
&=[$ans3]
\end{aligned}`]

a) [`\begin{aligned}[t]
f([$c]x)
&=[$a]([$c]x)+[$b]\\
&=[$ans4]
\end{aligned}`]

END_PGML_SOLUTION

ENDDOCUMENT();        # This should be the last executable line in the problem.
