# WeBWorK problem written by Danielle Rice
# Portland Community College
#
# Multiplying radicals like a*sqrt(b)*c*sqrt(d).
# sqrt(b*d) can be further simplified.
#
# Last edited: Carl Yao 8/31/13, Kling 8/17/13; Hughes 8/2/13, Jordan 8/1/13; Carl Yao 7/22/13, Rice 7/9/13; Jordan 7/3/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents and Radicals')
## KEYWORDS('simplify','radical','square root')
## DBCCSS('8.EE')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Danielle Rice, Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

 
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "contextFraction.pl",
  "contextLimitedRadical.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

######################################

sub perfectSquare {
   my $num = shift;
   if (sqrt($num)==int(sqrt($num))) {return 1;}
   else {return 0;}
}

Context("Numeric");
$coef1 = random(2,5,1);
$coef2 = random(2,5,1);
$coefProduct = Real("$coef1*$coef2");
                                                                                $out = list_random(6,10,15);
$in = random(2,3,5,6,7,10);
$radProduct = $out**2*$in;
do {
   $rad1=random(2,int(sqrt($radProduct)),1);
   $rad2=$radProduct/$rad1;
} until (($radProduct%$rad1==0) && (!(&perfectSquare($rad1))) && (!(&perfectSquare($rad2))));

$outAns = $coefProduct*$out;

Context("LimitedRadical");
$ans = Formula("$outAns sqrt($in)");

#######################################################

#Input is a prime. Output is the next prime number.
sub nextPrime {
   my $p = shift;
   while (1) {
      $p++;
      if ($p%2==0) {next;}
      $isPrime = 1;
      for (my $i=3; $i<=sqrt($p); $i=$i+2) {
         if ($p%$i==0) {
            $isPrime=0;
            last;
         }
      }
      if ($isPrime==1) {return $p;}
   }
}

# Input is a number. Output is the prime factorization of the number
# saved in an array, returned as a reference to the array.
sub primeFactor {
   my $n = shift;
   @factors = ();
   my $prime=2;
   while (1) {
      while ($n%$prime==0) {
         $factors[scalar @factors] = $prime;
         $n=$n/$prime;
      }
      if ($n==1) {return ~~@factors;}
      $prime = &nextPrime($prime);
   }
}

# Input 1 is a reference to an array with a number's prime factorization.
# Output is all prime factors connected by ' \cdot '.
sub line1 {
   my $ra_factors = shift;
   $line1Output = "";
   foreach $item ( @$ra_factors ) {$line1Output .= "$item".' \cdot ';}
   $line1Output =~ s/ \cdot $//;
   return $line1Output;
}

# Input is the output of &line1() and the degree of the radical. 
# $returnLine2 is the next step of simplifying the radical. 
# For example, if input is "2 \cdot 2 \cdot 2 \cdot 3 \cdot 5", 
# $degree=3, (meaning cube root), 
# $returnLine2 is 2 sqrt[3]{3 \cdot 5}.
# $returnLine3 is the final step of simplifying the radical.
# In the above example, $returnLine3 is 2 sqrt[3]{15}.
sub line2 {
   my $line = shift;
   my $degree = shift;
   my $line2Output = "";
   my @facs = split(/ \cdot /, $line);
   my $size = 0+@facs;
   my $i=0;
   $outsideString = "";
   $insideString = "";
   $outsideNumber = 1;
   $insideNumber = 1;
   while ($i<$size) {
      my $item = $facs[$i];
      my $out = 1;
      for (my $j=$i; $j<$i+$degree; $j++) {
         if ($facs[$j]!=$item) {$out = 0;}
      }
      if ($out==0) {
         $insideNumber *= $facs[$i];
         $insideString .= "$facs[$i]".' \cdot ';
         $i++;
      }
      else {
         $outsideNumber *= $facs[$i];
         $outsideString .= "$facs[$i]".' \cdot ';
         $i=$i+$degree;
      }
   }
   $outsideString =~ s/ \cdot $//;
   $insideString =~ s/ \cdot $//;

   $returnLine2 = "";
   if ($insideString eq "") {$returnLine2 = $outsideString;}
   elsif ($degree==2) {$returnLine2 = 
        $outsideString.' \sqrt{'."$insideString".'}';}
   else {$returnLine2 = 
        $outsideString.' \sqrt['."$degree".']{'."$insideString".'}';}

   $returnLine3 = "";
   if ($returnLine2 !~ /\cdot/) {$returnLine3 = "";}
   elsif ($degree==2) {$returnLine3 =
        $outsideNumber.' \sqrt{'."$insideNumber".'}';}
   else {$returnLine3 = 
        $outsideNumber.' \sqrt['."$degree".']{'."$insideNumber".'}';}

   return ($returnLine2,$returnLine3);
}

#Output of simplifying $rad1
$line11Center = &line1(&primeFactor($rad1));
$output11 = '\sqrt{'.$line11Center.'} \\';
($line12Center, $line13Center) = &line2($line11Center,2);
$output12 = $line12Center.'\\';
$output13 = "";
if ($line13Center ne "") {$output13 = '&='.$line13Center.'\\';}

#Output of simplifying $rad2
$line21Center = &line1(&primeFactor($rad2));
$output21 = '\sqrt{'.$line21Center.'} \\';
($line22Center, $line23Center) = &line2($line21Center,2);
$output22 = $line22Center.'\\';
$output23 = "";
if ($line23Center ne "") {$output23 = '&='.$line23Center.'\\';}

#Output of simplifying $rad1*$rad2
$line31Center = &line1(&primeFactor($rad1*$rad2));
$output31 = '\sqrt{'.$line31Center.'} \\';
($line32Center, $line33Center) = &line2($line31Center,2);
$output32 = "$coefProduct \cdot".$line32Center.'\\';
#$output33 = "";
#if ($line33Center ne "") {$output33 = '&='."$coefProduct \cdot".$line33Center.'\\';}

######################################

TEXT(beginproblem());
BEGIN_PGML

Simplify the expression. [@KeyboardInstructions("Use [|sqrt()|]* for the square root symbol. For example: [`\\sqrt{2}=`][|sqrt(2)|]*.")@]**

    [``[$coef1]\sqrt{[$rad1]} \cdot [$coef2]\sqrt{[$rad2]}=``] [_____________]{$ans}

END_PGML

############################################################

BEGIN_PGML_SOLUTION

First, we multiply coefficients and radicals:

    [``
\begin{aligned}[t]
   [$coef1]\sqrt{[$rad1]} \cdot [$coef2]\sqrt{[$rad2]}
      &= [$coef1] \cdot [$coef2] \cdot \sqrt{[$rad1]} \cdot \sqrt{[$rad2]} \\
      &= [$coefProduct] \sqrt{[$rad1] \cdot [$rad2]}
\end{aligned}
    ``]

Next, prime factor each number inside the radical, and the take out pairs. The rest of the process is:

    [``
\begin{aligned}[t]
   [$coefProduct] \sqrt{[$rad1] \cdot [$rad2]}
   &=  [$coefProduct] \sqrt{ [$line11Center] \cdot [$line21Center] } \\
   &=  [$output32]
   &= [$outAns] \sqrt{[$in]}
\end{aligned}
    ``]

END_PGML_SOLUTION

######################################



ENDDOCUMENT();
