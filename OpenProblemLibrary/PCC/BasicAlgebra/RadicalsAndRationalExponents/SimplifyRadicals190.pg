# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Simplify radicals with variables.
#
# Last edited: Carl Yao 7/26/16
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents and Radicals')
## KEYWORDS('simplify','radical','exponent')
## DBCCSS('8.EE')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

 
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserRadioButtons.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

######################################

TEXT(beginproblem());
Context("Numeric");
$var1 = list_random('x','y','z','t','r','m','n','a','b','c');
do {$var2 = list_random('x','y','z','t','r','m','n','a','b','c');} until ($var1 ne $var2);
Context()->variables->are($var1=>'Real',$var2=>'Real');
$showPartialCorrectAnswers = 1;

@num = (2,3,5,7,$var1,$var2);
@power = ();
@numOut=();
@numIn=();

do {

   do {
      $power[0]=random(0,4,1);
      $power[1]=random(0,3,1);
      $power[2]=random(0,3,1);
      $power[3]=random(0,2,1);
      $power[4]=random(2,10,1);
      $power[5]=random(2,10,1);
      $integer = 2**$power[0]*3**$power[1]*5**$power[2]*7**$power[3];
      $ok1 = 0;
      $ok2 = 0;
      for (my $i=0;$i<=3;$i++) {
         if ($power[$i]>1) {$ok1=1;}
         if ($power[$i]%2 !=0) {$ok2=1;}
      }
   } until ( ($integer<=500) && ($integer>=20) && ($ok1==1) && ($ok2==1) );

   $allString = "";
   $numString = "";
   for (my $i=0;$i<=5;$i++) {
      if ($power[$i]>1) {
         $allString .= "$num[$i]^{$power[$i]} \cdot ";
         if ($i<4) {$numString .= "$num[$i]^{$power[$i]} \cdot ";}
      } elsif ($power[$i]==1) {
         $allString .= "$num[$i] \cdot ";
         if ($i<4) {$numString .= "$num[$i] \cdot ";}
      }
   }
   $allString = substr($allString,0,length($allString)-7);
   $numString = substr($numString,0,length($numString)-7);

   $outString = "";
   $inString = "";
   $outNum = 1;
   $inNum = 1;
   $outVar = "";
   $inVar = "";
   for (my $i=0; $i<=5; $i++) {
      $numOut[$i] = int($power[$i]/2);
      if ($numOut[$i]==1) {
         $outString .= "$num[$i] \cdot ";
         if ($i<4) {$outNum *= $num[$i];}
         else {$outVar .= "$num[$i] ";}
      } elsif ($numOut[$i]!=0) {
         $outString .= "$num[$i]^{$numOut[$i]} \cdot ";
         if ($i<4) {$outNum *= $num[$i]**$numOut[$i];}
         else {$outVar .= "$num[$i]^{$numOut[$i]} ";}
      }
      $numIn[$i] = $power[$i]%2;
      if ($numIn[$i]==1) {
         $inString .= "$num[$i] \cdot ";
         if ($i<4) {$inNum *= $num[$i];}
         else {$inVar .= "$num[$i] ";}
      } elsif ($numIn[$i]!=0) {
         $inString .= "$num[$i]^{$numIn[$i]} \cdot ";
         if ($i<4) {$inNum *= $num[$i]**$numIn[$i];}
         else {$inVar .= "$num[$i]^{$numIn[$i]} ";}
      }
   }

} until ( ($inNum != $outNum) && ($inVar ne $outVar) );

$inString = substr($inString,0,length($inString)-7);

$problem = "\sqrt{$integer $var1^{$power[4]} $var2^{$power[5]}}";
$ansString0 = "$outNum $outVar"." \cdot \sqrt{$inNum $inVar}";
$ansString1 = "$inNum"."$outVar"." \cdot \sqrt{$outNum $inVar}";
$ansString2 = "$outNum"."$inVar"." \cdot \sqrt{$inNum $outVar}";
$ansString3 = "$inNum"."$inVar"." \cdot \sqrt{$outNum $outVar}";

#Create a hash and its inverse that randomizes the order of the four choices.
%scramble = ();
%inverse = ();
for my $i (0..3) {
  do {$temp = list_random(0..3)} until !(grep(/^$temp$/,values %scramble) );
  $scramble{$i} = $temp;
  $inverse{$temp} = $i;
};

#Create 4 choices
@choices=();

   $choices[$scramble{0}] = $ansString0;
   $choices[$scramble{1}] = $ansString1;
   $choices[$scramble{2}] = $ansString2;
   $choices[$scramble{3}] = $ansString3;

$radio = RadioButtons(
  ["A","B","C","D"],
  $ALPHABET[$scramble{0}], # correct answer
  order => ["A","B","C","D"], separator=>$BR.$SPACE.$SPACE.$SPACE
);

#####################################################

BEGIN_PGML

Simplify [`` [$problem] ``]. Assume all variables are positive.

END_PGML

Context()->texStrings;
BEGIN_TEXT

$PAR
$SPACE$SPACE$SPACE A: $SPACE$SPACE$SPACE \( $choices[0] \)
$PAR
$SPACE$SPACE$SPACE B: $SPACE$SPACE$SPACE \( $choices[1] \)
$PAR
$SPACE$SPACE$SPACE C: $SPACE$SPACE$SPACE \( $choices[2] \)
$PAR
$SPACE$SPACE$SPACE D: $SPACE$SPACE$SPACE \( $choices[3] \)
$PAR
$SPACE$SPACE$SPACE\{ $radio->buttons() \}

END_TEXT
Context()->normalStrings;

############################################################

ANS( $radio->cmp() );

##############################################

BEGIN_PGML_SOLUTION

First, we use a prime factor tree to do:

    [`` [$integer] = [$numString] ``]

Next, we use [` \sqrt{x^2}=x `] to simplify the expression. The full solution is:

    [`` 
\begin{aligned}[t]
   &\phantom{{}=}[$problem] \\
   &= \sqrt{[$allString]} \\
   &= [$outString] \sqrt{[$inString]} \\
   &= [$ansString0]
\end{aligned}
    ``]

The correct answer is [`[@ $radio->correct_ans() @]*`].

END_PGML_SOLUTION

######################################



ENDDOCUMENT();
