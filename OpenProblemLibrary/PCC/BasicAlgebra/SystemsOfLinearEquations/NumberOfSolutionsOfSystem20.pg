# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Decide the number of solutions of a system equation.
# One equation is given in slope-intercept form.
# The other is given in standard form.
# The system could have 0, 1, or infinite solutions.
#
# Last updated: Yao 8/19/13
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Systems of Equations and Inequalities')
## DBsection('Systems of Linear Equations')
## KEYWORDS('system','equation','solution')
## DBCCSS('8.EE.8','A.REI.6')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserPopUp.pl",
  "contextFraction.pl",
  "PGcourse.pl",
);

##############################################

Context("Fraction");
Context()->variables->add(y => "Real");
Context()->noreduce('(-x)-y','(-x)+y');

#Decide the number of solutions. 
#0-> no solution; 1-> 1 solution; 2-> infinitely solutions.
$numSolutions = random(0,2,1);
$string0 = "no solution";
$string1 = "one solution";
$string2 = "infinitely many solutions";

#Decide the slope of the first line. It could be a fraction or integer.
#Decide the y-intercept of the first line. It's an integer.
$num0 = non_zero_random(-6,6,1);
$den0 = non_zero_random(-6,6,1);
$m0 = Fraction($num0,$den0)->reduce;
$b0 = random(-5,5,1);

#Decide the second line's slope and y-intercept based on the solution.
if ($numSolutions==0) {
   $m1 = $m0;
   do {$b1 = random(-5,5,1);} until ($b1!=$b0);
   $corString = $string0;
} elsif ($numSolutions==1) {
   do {$m1 = $m0+random(-3,3,2);} until ($m1!=0);
   $b1 = random(-5,5,1);
   $corString = $string1;
} else {
   $m1 = $m0;
   $b1 = $b0;
   $corString = $string2;
}

$popup = PopUp(
  ['?',$string0,$string1,$string2],
  $corString,
  order=>[$string0,$string1,$string2]
);

$func0 = Compute("$m0*x+$b0")->reduce;

@temp = $m1->value;
$m1Rise = $temp[0];
$m1Run = $temp[1];

$multiple = random(2,4,1);
if ($m1Rise>0) {
   $xCoef = $m1Rise*$multiple;
   $yCoef = -$m1Run*$multiple;
   $right = -$b1*$m1Run*$multiple;
} else {
   $xCoef = -$m1Rise*$multiple;
   $yCoef = $m1Run*$multiple;
   $right = $b1*$m1Run*$multiple;
}
$func1 = Compute("$xCoef*x+$yCoef*y")->reduce;

##############################################

TEXT(beginproblem());

BEGIN_PGML

Without graphing this system of equations, decide the number of solutions it has. [```\left\{\begin{aligned}
  y &= [$func0] \\
  [$func1] &= [$right] \\
\end{aligned}\right.```]

The system has [__]{$popup}.

END_PGML


##############################################

$func1si = Compute("$m1*x+ $b1")->reduce;
$output1 = $xCoef==1 ? "-x" : "-$xCoef x";

if ($right==0) {
   $right1 = "";
   $output3 = "";
   $output4 = "";
} else {
   $right1 = $right>0 ? "+$right" : "$right";
   $output3 = "+ (-1) \cdot ($right)";
   $output4 = "+ \frac{$right}{$yCoef}";
}

if ($yCoef==1) {$output2 = "";}
elsif ($yCoef==-1) {
   $output2 = "-y &= $output1 $right1 \\ 
               (-1)\cdot(-y) &= (-1) \cdot ($output1) $output3 \\";
} else {
   $output2 = "$yCoef y &= $output1 $right1 \\
               \frac{$yCoef y}{$yCoef} &= \frac{$output1}{$yCoef} $output4 \\";
}


if ($numSolutions==0) {
    $outputLast = "Notice that these two lines have the same slope, but different y-intercepts. This implies they are parallel lines, which do not intersect. This system of equations has no solution.";
} elsif ($numSolutions==1) {
   $outputLast = "Notice that these two lines have different slopes. This implies they must intersect at one point. This system of equations has one solution.";
} else {
   $outputLast = "Notice that these two lines are exactly the same. This implies they have infinitely many solutions.";
}

BEGIN_PGML_SOLUTION

We first need to change the second line's equation from standard form to slope-intercept form.

    [``
\begin{aligned}[t]
   [$func1] &= [$right] \\
   [$func1] \mathbf{[$output1]} &= [$right] \mathbf{[$output1]} \\
   [$output2]
   y &= [$func1si]
\end{aligned}
    ``]

Now we can compare these two equations. [$outputLast]

END_PGML_SOLUTION

ENDDOCUMENT();
