# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Factor the given polynomial. 
#
#     (A+B)x^2 + (A+B)(a+b) x + (A+B)ab
#
# The answer is
#   
#     (A+B)(x+a)(x+b)
#
# If the expression cannot be factored
# then answer with *prime*
#
# a,b are non-zero, integer on the interval [1,10].
#
# Last updated: Hughes, 8/16/13
# ENDDESCRIPTION

## DBCC('A-APR.1','A-SSE.2')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents', 'Factoring')
## KEYWORDS('polynomial','trinomial','exponents','factoring','multivariable')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
"contextLimitedFactor.pl",
  "PGcourse.pl",
);

##############################################

Context("LimitedFactor");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>'variable');
$varA = 'a';
$varB = 'b';
Context()->variables->are($var=>'Real',$varA=>'Real',$varB=>'Real');

Context()->strings->add("cannot be factored"=>{},
    "cannot be factored."=>{alias=>"cannot be factored"});
Context()->strings->add('prime'=>{}, 'it is prime'=>{alias=>'prime'});
Context()->noreduce('(-x)-y', '(-x)+y'); 





# the common term 
$a = random(1,10,1);
$b = $a;
$b = random(1,10,1)while(abs($a)==abs($b));
$question = Formula("($varA+$varB)$var^2+($varA+$varB)($a+$b)$var+$a*$b*($varA+$varB)")->reduce->reduce;
$ans = Formula("($varA+$varB)($var+$a)*($var+$b)")->reduce;
##############################################
TEXT(beginproblem());

BEGIN_PGML
Factor the given polynomial. 

    [`[$question]=`] [___________________]{$ans}

[@KeyboardInstructions("If the expression cannot be factored then answer with [|prime|]*.")@]**
END_PGML

$step= Formula("($varA+$varB)($var^2+($a+$b)$var+$a*$b)")->reduce;
BEGIN_PGML_SOLUTION
Let's start by noting that [`([$varA]+[$varB])`] is common to each term, so 
we may write

    [`
            [$question] = [$step]
    `]

Next we look for factors of [`[$a*$b]`] that give [`[$a+$b]`] when added; the 
factors that work are [`[$a]`] and [`[$b]`] so

    [`[$question]=[$ans]`]

Note that this answer can be checked by using the FOIL (*F*irst *O*utside *I*nside *L*ast) technique (exercise).
END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
