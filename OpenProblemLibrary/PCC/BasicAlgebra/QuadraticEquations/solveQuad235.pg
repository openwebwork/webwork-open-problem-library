# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Solve the following quadratic equation
#
#      e (ax + b)(cx + d) = 0
#
# If you need to use the square root symbol, 
# as in x=sqrt{17}, type it like: *sqrt(17)*
#
# a = 1, c !=1, gcd(c,d)=1
#
# b and d are of opposite sign
#
# e is integer on [50,100]
#
# Last updated: Hughes 8/20/13
#
# ENDDESCRIPTION

## DBCCSS('A-REI.4.b')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('equations', 'Simplification')
## KEYWORDS('solve','quadratic','equation','factor','zero product principle','fraction')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
      "PGstandard.pl",
      "MathObjects.pl",
      "parserAssignment.pl",
      "answerHints.pl",
      "PGML.pl",
      "contextFiniteSolutionSets.pl",
      "PCCmacros.pl",
      "PGcourse.pl",
);

##############################################

Context("Numeric");
$var = "x";
$a = 1;
$b = non_zero_random(-10,10,1);
$c = random(2,20);
$d = $c;
$d = non_zero_random(1,10,1)*abs($b)/$b*-1 while(gcd($c,$d)!=1);
$e = random(50,100,1)*random(-1,1,2);

$question = Formula("$e($a*$var+$b)*($c*$var+$d)")->reduce;

Context("LimitedFraction")->flags->set(
            reduceFractions => 0,
            showMixedNumbers=>0,
            showExtraParens=>0);
parser::Assignment->Allow;
Context()->operators->redefine(',',using=>',',from=>'Numeric');
Context()->operators->redefine('or',using=>',',from=>'Numeric');
Context()->operators->set(
  ','=>{string=>' or ',TeX=>'\hbox{ or }'},
  'or'=>{string=>' or ',TeX=>'\hbox{ or }'}
);
Context()->lists->set(List => {separator => " or "});
Context()->{error}{msg}{"Function 'sqrt' is not allowed in this context"} 
  = "Please simplify your answer further";

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  );

$soln1 = Fraction(-$b,1);
$soln2 = Fraction(-$d,$c);
Context("FiniteSolutionSets");
$ans = Formula("{$soln1,$soln2}");

TEXT(beginproblem());
BEGIN_PGML
Solve the equation.

     [` [$question] = 0 `]
  
     [_]{$ans}{20}

END_PGML


BEGIN_PGML_SOLUTION
There are a few ways to solve quadratic equations- the easiest way to solve this particular 
type of problem is to use the _zero product principle_. 

    [`
                [$question]= 0 \Rightarrow [$var]=[$soln1]\text{ or } [$var]=[$soln2]\\
    `]

Note that _all_ quadratic equations have *two* (possibly repeated) solutions; in this problem both solutions are real. Each solution can be checked by substituting it into the original equation- this is left as an exercise.

You might have solved the equation using the Quadratic Formula- the final 
result is the same.
END_PGML_SOLUTION

##############################################
ENDDOCUMENT();
