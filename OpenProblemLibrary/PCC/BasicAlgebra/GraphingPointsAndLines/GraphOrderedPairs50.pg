# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Identify an ordered pair on a coordinate system.
#
# Last edited: Yao 09/28/2016
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Coordinate Geometry')
## KEYWORDS('coordinate','ordered pair',)
## DBCCSS('6.NS.6')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());
Context("Numeric");


$px1 = random(3,8,1)*random(-1,1,2);
$py1 = random(3,8,1);

$px2 = random(3,8,1)*random(-1,1,2);
$py2 = random(-8,-3,1);

$px3 = 0;
$py3 = non_zero_random(-8,8,1);

$px4 = non_zero_random(-8,8,1);
$py4 = 0;

$xmin = -10;
$xmax = 10;
$ymin = -10;
$ymax = 10;


#These two variables decide how many labels are on each axis.
$xmark = 2;
$ymark = 2;

$gr = init_graph($xmin,$ymin,$xmax,$ymax,
   axes=>[0,0],
   grid=>[($xmax-$xmin)/$xmark,($ymax-$ymin)/$ymark],
   size=>[xPixels(),yPixels()]
);

$gr->lb('reset');
for ($j=-$xmax+$xmark;$j<$xmax;$j=$j+$xmark) {
   if (Real($j) == 0) {$gr->lb( new Label(0.1,  -0.1, ' '.$j,'black','left','top'));}
   else {$gr->lb( new Label($j,  -0.1, $j,'black','center','top'));}
}
for ($j=$ymin+$ymark;$j<$ymax;$j=$j+$ymark) {
   if (Real($j) == 0) {next;}
   $gr->lb( new Label(0,  $j,' '.$j,'black','left','middle'));
}

$gr->stamps(closed_circle($px1,$py1,'blue'));
$gr->stamps(closed_circle($px2,$py2,'blue'));
$gr->stamps(closed_circle($px3,$py3,'blue'));
$gr->stamps(closed_circle($px4,$py4,'blue'));

$shift = 0.3;
$gr->lb( new Label($px1, $py1+$shift, "A",'blue','center','bottom'));
$gr->lb( new Label($px2, $py2-$shift, "B",'blue','center','top'));
$gr->lb( new Label($px3-$shift, $py3, "C",'blue','right','middle'));
$gr->lb( new Label($px4, $py4+$shift, "D",'blue','center','bottom'));

$px1A = abs($px1);
$py1A = abs($py1);
$px1D = ($px1>0) ? "right" : "left";
$py1D = ($py1>0) ? "up" : "down";

$px2A = abs($px2);
$py2A = abs($py2);
$px2D = ($px2>0) ? "right" : "left";
$py2D = ($py2>0) ? "up" : "down";

$py3A = abs($py3);
$py3D = ($py3>0) ? "up" : "down";

$px4A = abs($px4);
$px4D = ($px4>0) ? "right" : "left";

$alt = "This is a coordinate system with some points. To reach Point A, starting from the origin, we move $px1A units to the $px1D, and then $py1A units $py1D; to reach Point B, starting from the origin, we move $px2A units to the $px2D, and then $py2A units $py2D; to reach Point C, starting from the origin, we move $py3A units $py3D; to reach Point D, starting from the origin, we move $px4A units $px4D.";

Context("Point");
$ans1=Compute("($px1,$py1)");
$ans2=Compute("($px2,$py2)");
$ans3=Compute("($px3,$py3)");
$ans4=Compute("($px4,$py4)");


##############################################

BEGIN_PGML

Locate each point in the graph:

[@EnlargeImageStatementPGML@]**

    [@ image( insertGraph($gr), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$alt' title = '$alt'"  ) @]*

Write each point's position as an ordered pair, like [`(1,2)`].

A: [_______]{$ans1}

B: [_______]{$ans2}

C: [_______]{$ans3}

D: [_______]{$ans4}

END_PGML

##############################################


BEGIN_PGML_SOLUTION

Solutions:

A[`[$ans1]`]

B[`[$ans2]`]

C[`[$ans3]`]

D[`[$ans4]`]

END_PGML_SOLUTION


ENDDOCUMENT();
