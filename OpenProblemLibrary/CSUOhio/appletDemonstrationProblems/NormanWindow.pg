##DESCRIPTION
##  Optimization - Norman Window
##ENDDESCRIPTION

##KEYWORDS('optimization', 'applications', 'derivative', 'Flash applets','NSF-0941388')

## DBsubject('Calculus - single variable')
## DBchapter('Applications of Differentiation')
## DBsection('Optimization - general')
## Date('7/26/2013')
## Author('Dan Gries')
## Institution('Hopkins School')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();        # This should be the first executable line in the problem.


loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AppletObjects.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
Context("Numeric"); 

################ Problem constants ################

Context()->flags->set(
tolerance=>0.000001,
tolType=>relative
);

#Context()->variables->add(x=>"Real");

$domanMax = Compute("600/(1+0.5*pi)");
$areaFunction = Formula("300*x - (0.5 + 0.25*pi)*x*x + 0.125*pi*x*x");
$optimalBase = Compute("1200/(4+pi)");




###################################




    ###################################
    # Create  link to applet 
    ###################################
    $appletName = "NormanWindow_02";
    $applet =  FlashApplet(
       codebase              => findAppletCodebase("$appletName.swf"),
       appletName            => $appletName,
       appletId              => $appletName,
       #setStateAlias         => 'setXML',
       #getStateAlias         => 'getXML',
       #setConfigAlias        => 'setConfig',
       #getConfigAlias        => 'getConfig',
       #initializeActionAlias => 'setXML',
       maxInitializationAttempts => 5,   # number of attempts to initialize applet
       #submitActionAlias     =>  'getXML',
       height                => '480',
       width                 => '600',
       bgcolor               => '#A08F6D',
       debugMode             =>  0,
       submitActionScript  =>  qq{},
     );

###################################
# Configure applet
###################################

$configXMLString = qq{
<XML>
<window xMin='$xMin' xMax='$xMax' yMin='$yMin' yMax='$yMax' />
<labelSpaceX>$labelSpaceX</labelSpaceX>
<labelSpaceY>$labelSpaceY</labelSpaceY>
<gridSpaceX>$gridSpaceX</gridSpaceX>
<gridSpaceY>$gridSpaceY</gridSpaceY>
<leftFunction>$leftFunction</leftFunction>
<rightFunction>$rightFunction</rightFunction>
<approachXInDomain>$approachXInDomain</approachXInDomain>
<functionValueAtApproachX>2</functionValueAtApproachX>
<approachX>$approachX</approachX>
<proposedLimit>$proposedLimit</proposedLimit>
<epsilon>$epsilon</epsilon>
<delta>$delta</delta>
<decimalPlaces>$decimalPlaces</decimalPlaces>
</XML>
};


    $applet->configuration($configXMLString);
    $applet->initialState(qq{<XML> </XML>});

TEXT( MODES(TeX=>'object code', HTML=>$applet->insertAll(
  debug=>0,
  includeAnswerBox=>0,
#   reinitialize_button=>$permissionLevel>=10,
   )));

BEGIN_TEXT
$BR

A Norman window has the shape of a rectangle surmounted by a semicircle. Suppose the outer perimeter of such a window must be 600 cm. In this problem you will find the base length \(x\) which will maximize the area of such a window. The applet above shows a plot of the area function. Use the slider to visualize how the area changes for different values for \(x\), and use the corresponding graph to estimate the optimal radius. Then use calculus to find an exact answer.

$BR
$BR

When the base length is zero, the area of the window will be zero. There is also a limit on how large \(x\) can be: when \(x\) is large enough, the rectangular portion of the window shrinks down to zero height. What is the ${BBOLD}exact$EBOLD largest value of \(x\) when this occurs?
$BR
largest \(x\): \{ans_rule(30)\} \(\mathrm{cm}\).

$BR
$BR

Determine a function \(A(x)\) which gives the area of the window in terms of the parameter \(x\) (this is the function plotted above):
$BR
\(A(x) =\) \{ ans_rule(30) \} \(\mathrm{cm}^2\).

$BR
$BR

Now find the ${BBOLD}exact$EBOLD base length \(x\) which maximizes this area:
$BR
\(x = \) \{ ans_rule(30) \} \(\mathrm{cm}\).

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
## answer evaluators

ANS($domanMax ->cmp());

ANS($areaFunction->cmp());

ANS($optimalBase ->cmp());

COMMENT('This problem requires that Flash be enabled on your device.  Click try it to see what students will see.');

ENDDOCUMENT();