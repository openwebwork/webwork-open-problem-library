##DESCRIPTION
##  Integration with substitution 
##ENDDESCRIPTION

##KEYWORDS('graph shading', 'Flash applets','NSF-0941388', 'Limit', 'Definition of Limit')

## DBsubject(Calculus - single variable)
## DBchapter(Limits and Continuity)
## DBsection(Continuity - concept of)
## Date('7/25/2012')
## Author('Dan Gries')
## Institution('Hopkins School')
## TitleText1('')
## EditionText1('2012')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();        # This should be the first executable line in the problem.


loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AppletObjects.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
Context("Numeric"); 

########### Problem parameters for customization here #######################


#plot window
$xMin = '-0.45';
$xMax = '2';
$yMin = '-0.45';
$yMax = '4.1';

#functions plotted on left and right sides of jump discontinuity
$leftFunction = '3.5-x*x';
$rightFunction = '1.5+0.5*cos(pi*(x-1))';

#whether the function should be defined at the discontinuity
$approachXInDomain = 'true';

#the value of the function at the discontinuity (will have no effect if approachXInDomain is set to false).
$functionValueAtApproachX = 2;

#the value of x being approached in the supposed limit
$approachX = 1;

#the proposed value of the limit (which is in fact being shown not to be correct)
$proposedLimit = 2;

#initial epsilon and delta values
$epsilon = 0.75;
$delta = 0.5;

#decimal places to show for displayed epsilon and delta values
$decimalPlaces = 8;


#spacing of ticks
$labelSpaceX = '0.5';
$labelSpaceY = '0.5';

#spacing of grid lines
$gridSpaceX = '0.5';
$gridSpaceY = '0.5';

#############################################################################

### Parameters for problem here ###

#$leftFunctionInverse = Formula('sqrt(3.5-x)');

$workingEpsilon1 = Compute('0.7');
$workingDelta1Bound = Compute('0.105572809');

$nonWorkingEpsilonBound = Compute('0.5');

###################################




    ###################################
    # Create  link to applet 
    ###################################
    $appletName = "EpsilonDelta_Generalized";
    $applet =  FlashApplet(
       codebase              => findAppletCodebase("$appletName.swf"),
       appletName            => $appletName,
       appletId              => $appletName,
       setStateAlias         => 'setXML',
       getStateAlias         => 'getXML',
       setConfigAlias        => 'setConfig',
       getConfigAlias        => 'getConfig',
       #initializeActionAlias => 'setXML',
       maxInitializationAttempts => 5,   # number of attempts to initialize applet
       #submitActionAlias     =>  'getXML',
       height                => '500',
       width                 => '665',
       bgcolor               => '#E7E9EF',
       debugMode             =>  0,
       submitActionScript  =>  qq{},
     );

###################################
# Configure applet
###################################

$configXMLString = qq{
<XML>
<window xMin='$xMin' xMax='$xMax' yMin='$yMin' yMax='$yMax' />
<labelSpaceX>$labelSpaceX</labelSpaceX>
<labelSpaceY>$labelSpaceY</labelSpaceY>
<gridSpaceX>$gridSpaceX</gridSpaceX>
<gridSpaceY>$gridSpaceY</gridSpaceY>
<leftFunction>$leftFunction</leftFunction>
<rightFunction>$rightFunction</rightFunction>
<approachXInDomain>$approachXInDomain</approachXInDomain>
<functionValueAtApproachX>2</functionValueAtApproachX>
<approachX>$approachX</approachX>
<proposedLimit>$proposedLimit</proposedLimit>
<epsilon>$epsilon</epsilon>
<delta>$delta</delta>
<decimalPlaces>$decimalPlaces</decimalPlaces>
</XML>
};


    $applet->configuration($configXMLString);
    $applet->initialState(qq{<XML> </XML>});

TEXT( MODES(TeX=>'object code', HTML=>$applet->insertAll(
  debug=>0,
  includeAnswerBox=>0,
#   reinitialize_button=>$permissionLevel>=10,
   )));

BEGIN_TEXT

$BR

Recall the definition of a limit: we say \(\lim_{x \to a} f(x) = L\) if:

$BR
$BR


For all \(\epsilon > 0\) there exists a \(\delta > 0\) such that \(|f(x) - L| < \epsilon\) whenever \(0 < |x - a| < \delta\).


$BR
$BR

Here we will look at the above function \(f\), which has no limit at $approachX. 
Therefore the claim that \(\lim_{x \to $approachX} f(x) = $proposedLimit \) is ${BBOLD}false$EBOLD, meaning the above 

definition fails.

$BR
$BR

First show that for ${BBOLD}some$EBOLD values of \(\epsilon\), there are values of \(\delta\) satisfying the conclusion 

of the limit definition. For example:

$BR
$BR

If \(\epsilon = $workingEpsilon1\) then provide a value for \(\delta\) making the conclusion of the limit definition 

true: \{ ans_rule(25) \}

$BR
$BR

However, not every value of \(\epsilon\) will work. Use the applet to find a value 
for \(\epsilon\) such that ${BBOLD}no$EBOLD \(\delta\) will satisfy the conclusion of the limit definition, and record that 

\(\epsilon\) here: \{ ans_rule(25) \}


END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
## answer evaluators

$showPartialCorrectAnswers = 1;

ANS($workingDelta1Bound->cmp( checker=>sub {
my ($correct, $student, $ansHash) = @_;
return ($student < $correct) && (0 < $student);
} ) );


ANS($nonWorkingEpsilonBound->cmp( checker=>sub {
my ($correct, $student, $ansHash) = @_;
return ($student < $correct) && (0 < $student);
} ) );

COMMENT('This problem requires that Flash be enabled on your device.  Click try it to see what students will see.');


ENDDOCUMENT();