## DESCRIPTION
## First order ODEs: phase portraits
## ENDDESCRIPTION

## KEYWORDS('differential equations','first order','phase portraits','Flash applets','NSF-0941388')

## DBsubject('Differential Equations')
## DBchapter('First Order Differential Equations')
## DBsection('Phase Portraits')
## Date('02/14/2013')
## Author('Barbara Margolius')
## Author('Felipe Martins')
## Institution('Cleveland State University')
## TitleText1('A Modern Introduction to Differential Equations')
## EditionText1('2009')
## AuthorText1('Ricardo')
## Section1('2.5')
## Problem1('A10')

########################################################################
# This work is supported in part by the National Science Foundation 
# under the grant DUE-0941388.
########################################################################

##############################
#  Initialization
##############################

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AppletObjects.pl",
);

TEXT(beginproblem());

#############################
#  Setup
#############################

Context("Numeric");
Context()->flags->set(
  tolerance => 0.1,
  tolType => "absolute",
);

$xmin = Compute("-6");
$xmax = Compute("6");

$showSolution = false;
if(time>$dueDate){
  $showSolution=true;
}

$arrow1dir = "r";
$arrow2dir = "l";
$arrow3dir = "r";
$arrow4dir = "l";
$arrow5dir = "r";
$arrow6dir = "l";
$arrow7dir = "r";
$arrow8dir = "l";

$node1 = Compute("-3*pi/2");
$node2 = Compute("-pi");
$node3 = Compute("-pi/2");
$node4 = Compute("0");
$node5 = Compute("pi/2");
$node6 = Compute("pi");
$node7 = Compute("3*pi/2");

$arrow1 = Compute("($xmin+$node1)/2");
$arrow2 = Compute("($node2+$node1)/2");
$arrow3 = Compute("($node2+$node3)/2");
$arrow4 = Compute("($node3+$node4)/2");
$arrow5 = Compute("($node4+$node5)/2");
$arrow6 = Compute("($node5+$node6)/2");
$arrow7 = Compute("($node6+$node7)/2");
$arrow8 = Compute("($xmax+$node7)/2");

Context()->strings->add(sink=>{},source=>{},node=>{},inc=>{},dec=>{},all=>{},usource=>{},usink=>{},unode=>{});
$anslist = List("sink",Compute("-3*pi/2"),"source",Compute("-pi"),"sink",Compute("-pi/2"),"source",Compute("0"),"sink",Compute("pi/2"),"source",Compute("pi"),"sink",Compute("3*pi/2"));
 
###################################
# Create  link to applet 
###################################
    $appletName = "phasePortrait";
    $applet =  FlashApplet(
       codebase              => findAppletCodebase("$appletName.swf"),
       appletName            => $appletName,
       appletId              => $appletName,
       setStateAlias         => 'setXML',
       getStateAlias         => 'getXML',
       setConfigAlias        => 'setConfig',
       maxInitializationAttempts => 5,   # number of attempts to initialize applet
       answerBoxAlias        => 'answerBox',
       height                => '400',
       width                 => '550',
       bgcolor               => '#e8e8e8',
       debugMode             =>  0,
       submitActionScript  =>  
  qq{getQE("answerBox").value=getApplet("$appletName").getAnswer() },
     );
###################################
# Configure applet
###################################
$config_string = <<"ENDCONFIG";
<XML>
    <leng>400</leng>
    <xmin>$xmin</xmin>
    <xmax>$xmax</xmax>
    <showSolution>$showSolution</showSolution>
    <solutionPts>
        <aPicon lrn='$arrow1dir' loc='$arrow1'></aPicon>
        <aPicon lrn='n' loc='$node1'></aPicon>
        <aPicon lrn='$arrow2dir' loc='$arrow2'></aPicon>
        <aPicon lrn='n' loc='$node2'></aPicon>
        <aPicon lrn='$arrow3dir' loc='$arrow3'></aPicon>
        <aPicon lrn='n' loc='$node3'></aPicon>
        <aPicon lrn='$arrow4dir' loc='$arrow4'></aPicon>
        <aPicon lrn='n' loc='$node4'></aPicon>
        <aPicon lrn='$arrow5dir' loc='$arrow5'></aPicon>
        <aPicon lrn='n' loc='$node5'></aPicon>
        <aPicon lrn='$arrow6dir' loc='$arrow6'></aPicon>
        <aPicon lrn='n' loc='$node6'></aPicon>
        <aPicon lrn='$arrow7dir' loc='$arrow7'></aPicon>
        <aPicon lrn='n' loc='$node7'></aPicon>
        <aPicon lrn='$arrow8dir' loc='$arrow8'></aPicon>
    </solutionPts>
</XML>
ENDCONFIG

$applet->configuration($config_string);
$applet->initialState($config_string);

TEXT(MODES(TeX=>"", HTML=><<'END_TEXT'));
<script>
if (navigator.appVersion.indexOf("MSIE") > 0) {
	document.write("<div width='3in' align='center' style='background:yellow'>You seem to be using Internet Explorer.<br/>It is recommended that another browser be used to view this page.</div>");
}
</script>
END_TEXT

#############################
#  Main text
#############################

Context()->texStrings;
BEGIN_TEXT
Use the applet provided to draw a phase portrait for \( \displaystyle \frac{dy}{dt} = \sin y \cos y \).
$BR
$BR
END_TEXT

# Insert applet

TEXT( MODES(TeX=>'A graph appears here in the html version.', 
  HTML=>$applet->insertAll(debug=>0,includeAnswerBox=>1)));

Context()->normalStrings;

############################
#  Answers
############################

$showPartialCorrectAnswers = 1;
Context()->{error}{msg}{"'one' is not defined in this context"} = "You have not placed equilibrium points and arrows on the phase line.";
Context()->{error}{msg}{"'two' is not defined in this context"} = "You must have an arrow before the first equililbrium point.";
Context()->{error}{msg}{"'three' is not defined in this context"} = "You must have an arrow after the last equilibrium point.";
Context()->{error}{msg}{"'four' is not defined in this context"} = "Two consecutive arrows must point in the same direction.";
Context()->{error}{msg}{"'five' is not defined in this context"} = "There must be an arrow between equilibrium points.";
Context()->{error}{msg}{"'six' is not defined in this context"} = "There must be an arrow between an equilibrium point and derivative undefined point.";
Context()->{error}{msg}{"'seven' is not defined in this context"} = "There must be an arrow between an equilibrium point and derivative undefined point.";
Context()->{error}{msg}{"'eight' is not defined in this context"} = "There must be an arrow between derivative undefined points.";

NAMED_ANS( 'answerBox'=>$anslist->cmp(ordered=>1));

COMMENT("MathObject version.");

ENDDOCUMENT();