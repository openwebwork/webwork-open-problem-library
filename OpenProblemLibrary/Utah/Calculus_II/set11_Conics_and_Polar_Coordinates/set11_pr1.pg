##################################################################
##########Date:: 4-4-2###A.Treibergs#############

#DESCRIPTION
#  Approximation : Bisection
#ENDDESCRIPTION
## DBsubject(Calculus - single variable)
## DBchapter(Limits and continuity)
## DBsection(Continuity - intermediate value theorem)
## Institution(Univeristy of Utah)
## Author(Utah ww group)
## Level(3)
## TitleText1('Calculus')
## AuthorText1('Dale Varberg, Edwin J. Purcell, and Steve E. Rigdon')
## EditionText1('9')
## Section1('Applications of the Derivative')
## Problem1('')
## KEYWORDS('calculus')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$a0 = random(3,7,1);
$b0 = $a0+1;

@ans =();

$c0 = $a0*$b0;
$m0 = ($a0 + $b0)/2;
if ( $m0*$m0 > $c0){
      $a1 = $a0;
      $b1 = $m0;
} else {
      $a1 = $m0;
      $b1 = $b0;
}
$m1 = ($a1 + $b1)/2;
if ( $m1*$m1 > $c0){
      $a2 = $a1;
      $b2 = $m1;
} else {
      $a2 = $m1;
      $b2 = $b1;
}
$m2 = ($a2 + $b2)/2;
if ( $m2*$m2 > $c0){
      $a3 = $a2;
      $b3 = $m2;
} else {
      $a3 = $m2;
      $b3 = $b2;
}
$m3 = ($a3 + $b3)/2;
if ( $m3*$m3 > $c0){
      $a4 = $a3;
      $b4 = $m3;
} else {
      $a4 = $m3;
      $b4 = $b3;
}
$m4 = ($a4 + $b4)/2;





$ans[0] = $a1;
$ans[1] = $b1;
$ans[2] = 0.25;
$ans[3] = $m1;
$ans[4] = $a2;
$ans[5] = $b2;
$ans[6] = 0.125;
$ans[7] = $m2;
$ans[8] = $a3;
$ans[9] = $b3;
$ans[10] = 0.0625;
$ans[11] = $m3;
$ans[12] = $a4;
$ans[13] = $b4;
$ans[14] = 0.03125;
$ans[15] = $m4;
$ans[16] = $m4;
$ans[17] = 0.03125;

BEGIN_TEXT

Suppose that we use the bisection algorithm to approximate  \(r=\sqrt{$c0}\)
which
the greatest zero of the function \( f(x)= x^2 - $c0 . \)  We begin by finding
two numbers,
say, \( a_1=$a0 \) and \( b_1= $b0\) which bracket the zero. This is because
\(f(a_1)<0\) and
\( f(b_1)>0.\)  Then we find \( m_1 = (a_1+b_1)/2 =$m0\) and
\( h_1 = (b_1 - a_1)/2=0.5.\)
$PAR
We proceed with the bisection algorithm. Suppose that \( a_n\) and \( b_n \)
  bracket the zero. Then
we compute \( m_{n} = (a_n+b_n)/2 \) and \(h_n=|b_n-a_n|/2.\) If
\(f(m_{n})=0\) we stop because \(r = m_{n}\) is the desired zero.
If \( f(m_n) > 0\) then \( m_n\) becomes the new right endpoint, so we set
\(a_{n+1}:=a_n\) and \(b_{n+1}:=m_n.\)
If \( f(m_n) < 0\) then \( m_n\) becomes the new left endpoint, so we set
\(a_{n+1}:=m_n\) and \(b_{n+1}:=b_n.\)
Then \( m_n \) is an approximation to \( r \) with an error of \( h_n \)
$PAR
Complete the following table:
$PAR
\{begintable(5) . 
row('\(n\)', '\(a_n\)', '\(b_n\)', '\(h_n\)', '\( m_n \)').
row('\(1\)','\($a0\)','\($b0\)','\(0.5\)','\($m0\)').
row('\(2\)',ans_rule(20),ans_rule(20),ans_rule(20),ans_rule(20)).
row('\(3\)',ans_rule(20),ans_rule(20),ans_rule(20),ans_rule(20)).
row('\(4\)',ans_rule(20),ans_rule(20),ans_rule(20),ans_rule(20)).
row('\(5\)',ans_rule(20),ans_rule(20),ans_rule(20),ans_rule(20)).
endtable();
\}

$BR
$BR
Then \{ans_rule(20)\} is an approximation so far to \( r \) with an error
of \{ans_rule(20)\}.

END_TEXT

#TEXT(

#&match_questions_list($questions)
#);
ANS(num_cmp($ans[0]));
ANS(num_cmp($ans[1]));
ANS(num_cmp($ans[2]));
ANS(num_cmp($ans[3]));
ANS(num_cmp($ans[4]));
ANS(num_cmp($ans[5]));
ANS(num_cmp($ans[6]));
ANS(num_cmp($ans[7]));
ANS(num_cmp($ans[8]));
ANS(num_cmp($ans[9]));
ANS(num_cmp($ans[10]));
ANS(num_cmp($ans[11]));
ANS(num_cmp($ans[12]));
ANS(num_cmp($ans[13]));
ANS(num_cmp($ans[14]));
ANS(num_cmp($ans[15]));
ANS(num_cmp($ans[16]));
ANS(num_cmp($ans[17]));





ENDDOCUMENT();         # This should be the last executable line.