##DESCRIPTION
##Arithmetic
##ENDDESCRIPTION
## DBsubject(WeBWorK)
## DBchapter(Demos)
## DBsection(Problem)
## Institution(Univeristy of Utah)
## Author(Utah ww group)
## Static(1)
## KEYWORDS('algebra')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());




TEXT(EV2(<<EOT));

This first question is just an exercise in entering answers into
WeBWorK.  It also gives you an opportunity to experiment with entering
different 
\{htmlLink("http://www.math.utah.edu/online/1010/algebra",
"arithmetic and algebraic expressions")\} into WeBWorK and seeing what
WeBWorK really thinks you are doing (as opposed to what you believe it
should think).


$BR
Notice the buttons on this page and try them out
before moving to the next problem.  Use the "Back" Button on your
browser to get back here when needed.

$BR 

$BR "Prob. List" gets you back to the list of all
problems in this set.

$BR "Next" gets you to the next question in this set.

$BR "Submit Answer" submits your answer as you might expect, but
there may be other ways to do so. Specifically, in this problem, there
is only one question.  In that case you can submit your answer by
typing it into the answer window and then pressing "Return" (or "Enter") on
your keyboard.  But even in this case, you can also type the answer
and click on the "submit" button.  There is no harm in submitting an
answer even if you are not quite sure that it's correct, since if it is not
you have an unlimited number of additional tries.  On the other hand,
it is usually more efficient to print your own private problems set, work out
the answers in a quiet environment like your home, and then sit down
in front of a computer and enter your answers.  If some are wrong you
can try to fix them right at the computer, or you may want to go back
and work on them quietly elsewhere before returning to the computer.

$BR Pressing on the "Preview Answer" Button makes WeBWorK display
what it thinks you entered in the answer window. After using "Preview"
you can modify your answer and use a "Preview Again" button.

$BR "images" denotes the ordinary display mode on your workstation.

$BR "Logout" terminates this WeBWorK session for you.  You can of
course log back in and continue.

$BR "Feedback" enables you to send a message to your instructor, 
and the WeBWorK assistants.  If you use this way of
sending e-mail the recipients receive information
about your WeBWorK state, in addition to your actual message.

$BR The "Help" Button transports you to an official
WeBWorK help page that has a  more information than this first
problem.

$BR "Problem Sets"  transports you back to the page
where you can select a certain problem set.  When you do this
particular problem in this first set, there is only one set, but
eventually there will be 13 of them.

$BR For all problems in this course you will be able to see the $BBOLD
Answers $EBOLD to the problems $BBOLD after the due date $EBOLD .  Go to a 
problem, click
on "show correct answers", and then click on "submit answer".  You can
also download and print a hard copy with the answers showing.  These
answers are the precise strings against which WeBWorK compares your
answer.  If the answer is an algebraic expression your answer needs to
be equivalent to the WeBWorK answer, but it may be in a different
form.  For example if WeBWorK thinks the answer is \(2*a\), it is OK
for you to type \(a+a\) instead.  If WeBWorK expects a numerical
answer then you can usually enter it as an arithmetic expression (like
\(1/7\) instead of \(.142857\)), and usually WeBWorK will expect your
answer to be within one tenth of one percent of what it thinks the
answer is.

$BR Most of the problems (including this one) in this course will also
have solutions attached that you can see after the due date by
clicking on "show solutions" followed by "submit answers".  The
solutions are text typed by your instructor that gives more
information than the "answers", and in particular often explains how the
answers can be obtained.  

$BR



$BR Now for the meat of this problem.  Notice that the answer window
is extra large so you can try the things suggested above.

$BR
$BBOLD Type the number 3 here: $EBOLD
$BR \{ ans_rule(50) \}.  
$BR
$BBOLD Try entering other expressions and use the preview button to see 
what 
WeBWorK thinks you entered.  Return to this problem to try out things when you get
stuck somewhere else. $EBOLD

$BR Here are some good examples to try.  Check them all out using the
Preview button.  (In later questions on this set you will get to use
what you learn here.)  Never mind that you may have already answered
the correct answer 3.  Once you get credit for an answer it won't be
taken away by trying other answers.

$BR  a/2b  ~~~versus~~~  a/2/b   
~~~versus~~~  a/(2b) 

$BR a/b+c ~~~versus~~~ a/(b+c) 

$BR a+b**2 ~~~versus~~~  (a+b)**2 

$BR sqrt a+b ~~~versus~~~ sqrt(a+b)

$BR 4/3 pi r**2  ~~~versus~~~ (4/3) pi r**2   (In other
words, if you are not sure use parentheses freely.)

Note: WeBWorK will not usually let you enter algebraic expressions
when the answer is a number, and it will only let you use certain
variables when the answer is in fact an algebraic expression.  So the
above window, and the $BBOLD opportunity for experimentation $EBOLD that 
it offers
is unique.  Make good use of it!


$BR Presumably this has been your first encounter with WeBWorK.  Come
back here to try things out and to refresh your memory if you get
stuck somewhere down the line.


EOT

ANS(fun_cmp("3", vars=>["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","x","y","z", "A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","X","Y","Z"]));

SOLUTION(EV3(<<'END_SOLUTION'));
$BR $BBOLD Solution:$EBOLD
Of course the simplest way to answer this question is to type in the 
single digit \(3\).  However, you can also enter the number \(3\)
differently, for example as \(1+1+1\), \(9/3\), or, on this problem,
even \((3*x)/x\). 

END_SOLUTION


ENDDOCUMENT();        # This should be the last executable line in the problem.


