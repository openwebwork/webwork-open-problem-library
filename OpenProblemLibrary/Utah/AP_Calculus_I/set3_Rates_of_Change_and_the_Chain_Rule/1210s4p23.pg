## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Newton's method)
## Institution(Univeristy of Utah)
## Author(Utah ww group)
## Level(3)
## Static(1)
## TitleText1('Calculus I')
## AuthorText1('Jerrold Marsden and Alan Weinstein')
## EditionText1('2')
## Section1('.')
## Problem1('')
## TitleText2('Calculus')
## AuthorText2('Dale Varberg, Edwin J. Purcell, and Steven E. Rigdon')
## EditionText2('9')
## Section2('.')
## Problem2('')
## KEYWORDS('calculus')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem());
TEXT(EV2(<<EOT));
The equation
\[10(x-1)(x-2)(x-3) = 1\]
has three real solutions \[a<b<c\]
where
$BR
\(a = \) \{ans_rule(10) \},
EOT

ANS(num_cmp(1.054350726076408,reltol => 0.001));

TEXT(EV2(<<EOT));
$BR
\(b = \) \{ans_rule(10) \},  and
EOT

ANS(num_cmp(1.8989687421189916,reltol => 0.001));

TEXT(EV2(<<EOT));
$BR
\(c = \) \{ans_rule(10) \}.

$BR Enter your answers with at least six correct digits beyond the
decimal point.
EOT
ANS(num_cmp(3.046680531804603,reltol => 0.001));

TEXT(EV3(<<'EOT'));
$BR $BBOLD Hint:$EBOLD Ask what the solutions are if the right hand
side is 0 instead of 1, and use Newton's Method.
EOT



SOLUTION(EV3(<<'EOT')); 
$BR $BBOLD Solution:$EBOLD
If the equation was
\[10(x-1)(x-2)(x-3) = 0\]
the solutions would obviously be 1,2,3.  This suggests to run Newton's method 
three times with \(x_0\) being 1, 2, and 3.
Expanding and subtracting 1 on both sides of 

\[10(x-1)(x-2)(x-3) = 1\]
gives
\[f(x) = 10x^3-60x^2+110x-61 = 0.\]
Newton's method 
 \[x_{n+1} = x_n - \frac{f(x_n)}{f'(x_n)}, \quad n=0,1,2,\ldots\]
becomes
\[x_{n+1} = x_n - \frac{10x^3-60x^2+110x-61}{30x^2-120x+110}.\]

$BR
For \(x_0\) = 1 we obtain the iteration:

\[
\begin{array}{rrr}
n & x_n & f(x_n) \\
0 & 1 & -1 \\
1 &1.05 & -0.074 \\
2 & 1.054319180087848 &  -5.3 \times 10^{-4} \\
3 & 1.054350724398835 & -2.8 \times 10^{-8}\\
4 & 1.054350726076408 & -9.2 \times 10^{-15}\\
\end{array}
\]

For \(x_0\) = 2 we obtain 

\[
\begin{array}{rrr}
n & x_n & f(x_n) \\
0 & 2 & -1 \\
1 & 1.9 &  -0.01 \\
2 & 1.8989690721649493 & -3.2\times 10^{-6} \\
3 & 1.8989687421190210 & -3.1\times 10^{-13} \\
4 & 1.8989687421189916 & -2.3\times 10^{-14} \\
\end{array}
\]

For \(x_0\) = 3 we obtain 

\[
\begin{array}{rrr}
n & x_n & f(x_n) \\
0 & 3 & -1 \\
1 & 3.05 & 0.076 \\
2 & 3.046695557963165 & 3.4 \times 10^{-4} \\
3 & 3.046680532114651 & 7.1 \times 10^{-9} \\
4 & 3.046680531804603 & 1.4 \times 10^{-14} \\
\end{array}
\]

$BR
Thus the solutions are
\[\begin{array}{rcl}
a&\approx& 1.054350726076408 \\
b&\approx& 1.8989687421189916 \\
c&\approx& 3.046680531804603 \\
\end{array}
\]

Newton's Method worked very well.

EOT







ENDDOCUMENT();        # This should be the last executable line in the problem.
