##DESCRIPTION
##  sample true-false question
##ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Transformations of functions and graphs)
## DBsection(Symmetry: even, odd, neither)
## Institution(Univeristy of Utah)
## Author(Utah ww group)
## Level(3)
## TitleText1('Calculus I')
## AuthorText1('Jerrold Marsden and Alan Weinstein')
## EditionText1('2')
## Section1('.')
## Problem1('')
## TitleText2('Calculus')
## AuthorText2('Dale Varberg, Edwin J. Purcell, and Steven E. Rigdon')
## EditionText2('9')
## Section2('.')
## Problem2('')
## KEYWORDS('algebra','calculus')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
);


install_problem_grader(~~&std_problem_grader);
TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

TEXT(EV2(<<EOT));
Enter a T or an F in each answer space below
to indicate whether the corresponding statement is true or
false.$BR
You must get all of the answers correct to receive credit.
$BR
EOT

## First we set up our variables.

$questStr1 = EV2(" The product of two even function is even");
$ansStr1 = "T";
$questStr2 = EV2(" The sum of two even functions is even");
$ansStr2 = "T";
$questStr3 = EV2(" The ratio of two odd functions is odd");
$ansStr3 = "F";
$questStr4 = EV2(" The composition of an even and an odd function is even");
$ansStr4 = "T";
$questStr5 = EV2(" The composition of an odd function and an odd function is even");
$ansStr5 = "F";
$questStr6 = EV2(" The sum of an even and an odd function is usually neither even or odd, but it may be even.");
$ansStr6 = "T";
$questStr7 = EV2(" A function cannot be both even and odd.");
$ansStr7 = "F";
$questStr8 = EV2(" The product of two odd function is odd");
$ansStr8 = "F";




@questions =( $questStr1,$questStr2,$questStr3,$questStr4,$questStr5,$questStr6,$questStr7,$questStr8);
@answers =( $ansStr1,$ansStr2,$ansStr3,$ansStr4,$ansStr5,$ansStr6,$ansStr7,$ansStr8);

## Now choose randomly 8  questions out of the 8 question strings above.

@slice = NchooseK(scalar(@questions),8);

## Next we output the 4 chosen questions.  #match_
TEXT(
&match_questions_list(@questions[@slice])
);

ANS(str_cmp([ @answers[@slice] ] ));


TEXT(<<EOT);
$PAR 
All of the
answers must be correct before you get credit for the problem.


EOT
ENDDOCUMENT();        # This should be the last executable line in the problem.
