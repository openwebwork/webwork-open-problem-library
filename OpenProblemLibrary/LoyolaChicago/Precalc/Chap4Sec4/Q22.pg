# DESCRIPTION
# Problem from Functions Modeling Change, Connally et al., 3rd ed.
# WeBWorK problem written by Adam Spiegler, <aspiegler@luc.edu>
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Exponential and logarithmic expressions and functions)
## DBsection(Logarithmic functions)
## Institution(Loyola University Chicago)
## Author(Adam Spiegler)
## Level(2)
## Static(1)
## MO(1)
## TitleText1('Functions Modeling Change')
## AuthorText1('Connally')
## EditionText1('3')
## Section1('4.4')
## Problem1('24')
## TitleText2('Functions Modeling Change')
## AuthorText2('Connally')
## EditionText2('4')
## Section2('5.4')
## Problem2('24')
## KEYWORDS('logarithms','log-log scales','fitting exponential date')

DOCUMENT();

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "extraAnswerEvaluators.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
           "PGcourse.pl"
);

TEXT(beginproblem());

Context("Numeric");


$showPartialCorrectAnswers = 1;

@x = (0.8,1.9,4.4,10.0,21.4,48.4,92.5,218.7,437.3,980);
@y = (8,12.1,15.2,18.5,21.7,25.3,28.3,31.9,35.2,38.2);
$n = 10;
for ($j = 0; $j <= $n-1; $j++) {$ln_x[$j] = ln($x[$j])/ln(exp(1));
                                $rd_lnx[$j] = round($ln_x[$j]*10000)/10000;
};

$sum_x = 0;
$sum_y = 0;
$sum_lnx = 0;
$sum_prod = 0;
$sum_lnxprod = 0;
$sum_xsq = 0;
$sum_ysq = 0;
$sum_lnxsq = 0;

for ($i = 0; $i <= $n-1; $i++){
                             $sum_x = $sum_x + $x[$i];
                             $sum_y = $sum_y + $y[$i];
                             $sum_prod = $sum_prod + $x[$i]*$y[$i];
                             $sum_xsq = $sum_xsq + $x[$i]**2;
                             $sum_ysq = $sum_ysq + $y[$i]**2;
                             $sum_lnx = $sum_lnx + $ln_x[$i];
                             $sum_lnxprod = $sum_lnxprod + $ln_x[$i]*$y[$i];
                             $sum_lnxsq = $sum_lnxsq + $ln_x[$i]**2;
};

$b = ($n*$sum_prod - $sum_x * $sum_y)/($n*$sum_xsq - $sum_x**2);
$a = ($sum_y - $sum_x*$b)/$n;
$rd_b = round($b*10000)/10000;
$rd_a = round($a*10000)/10000;

$ln_b = ($n*$sum_lnxprod - $sum_lnx * $sum_y)/($n*$sum_lnxsq - $sum_lnx**2);
$ln_a = ($sum_y - $sum_lnx*$ln_b)/$n;
$rd_lnb = round($ln_b*100)/100;
$rd_lna = round($ln_a*100)/100;

#$none = round( exp(-$ln_a/$ln_b)/1440);
#$all = round( 60*exp((100-$ln_a)/$ln_b));

Context()->texStrings;
BEGIN_TEXT

A light, flashing regularly, consists of cycles, each cycle having a
dark phase and a light phase.  The frequency of this light is measured
in cycles per second.  As the frequency is increased, the eye
initially perceives a series of flashes of light, then a coarse
flicker, a fine flicker, and ultimately a steady light.  The frequency
at which the flickering disappears is called the fusion
frequency.  The table below shows the results of an experiment in which the
fusion frequency \( F \) was measured as a function of the light intensity
\( I \).  It is modeled by \( F=a \ \ln{I} +b \).
$PAR
$BCENTER
\{ begintable(11) \}
\{ row( "\(I\)", @x ) \}
\{ row( "\(F\)", @y ) \}
\{ endtable() \}
$ECENTER
$PAR
Find \( \ln{I} \) for each value of \( I \) in the table above, and then
use linear regression on a calculator to estimate \( a \) and \( b \) in
the linear fit \( F= a \ \ln{I} +b \).  In the blanks below, enter the
corresponding values for \( a \) and \( b \):
$BR
\( a = \) \{ ans_rule(20) \}$BR
\( b = \) \{ ans_rule(20) \}$BR
${BITALIC}(round values to 2 decimal places)$EITALIC
END_TEXT
Context()->normalStrings;

###### a is now b and b is a ##########
ANS( Compute( $rd_lnb )->cmp(tolType=>'absolute',tolerance=>0.001) );
ANS( Compute( $rd_lna )->cmp(tolType=>'absolute',tolerance=>0.001) );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR
$BBOLD  SOLUTION $EBOLD
$PAR
Find the values of \( \ln{I} \) in the table, use linear regression
on \( \ln{I} \) and \( F \).   We find \( a \approx 4.26 \) and
\( b \approx 8.95 \) so that \( F = 4.26 \ln{I} + 8.95 \).

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
