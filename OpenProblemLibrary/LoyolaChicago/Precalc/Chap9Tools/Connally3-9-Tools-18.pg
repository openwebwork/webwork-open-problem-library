## DESCRIPTION
## Polynomial and Rational Functions
## ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Operations on polynomial and rational expressions)
## DBsection(Rational expressions: add, subtract)
## Date(01/01/10)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## Level(2)
## MO(1)
## TitleText1('Functions Modeling Change')
## AuthorText1('Connally')
## EditionText1('3')
## Section1('9')
## Problem1('16')
## TitleText2('Functions Modeling Change')
## AuthorText2('Connally')
## EditionText2('4')
## Section2('11.')
## Problem2('16')
## KEYWORDS('polynomial functions','rational functions')


####################################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGunion.pl",
"parserMultiAnswer.pl",
"PGcourse.pl",
);

TEXT(beginproblem());

####################################
#  Setup

Context("Numeric")->variables->are(y=>"Real");
Context()->{error}{msg}{"Operands of '*' can't be words"} = " ";

$a = random(2,8,2);
$b = random(3,9,2);
$c = random(1,9,1);

while ($c == $b/$a) { $c = random(1,9,1); }

$fraction = "\frac{$a y}{y-$c} + \frac{$b}{$c - y} ";

$num = Formula("$a y - $b");
$den = Formula("y - $c");

$numbogus = Formula("$a*y+$b");
$denbogus = Formula("(y-$c)*($c-y)");

$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $ansHash ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};

      if ( ( $f1==$f1stu &&  $f2==$f2stu) ||
           (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif ( $f1==$f1stu || -$f1==$f1stu) {
          return [1,0];
      } elsif ( ($numbogus==$f1stu || -$numbogus==$f1stu) ||
                ($denbogus==$f2stu || -$denbogus==$f2stu) ) {
          $ansHash->setMessage(1,"Find a common denominator first");
          $ansHash->setMessage(2,"Find a common denominator first");
          return [0,0];
      } elsif ( $f2==$f2stu || -$f2==$f2stu ) {
          return [0,1];
      } elsif ( $f1*$f2stu==$f1stu*$f2 ) {
          $ansHash->setMessage(1,"Simplify your answer further");
          $ansHash->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);


#
#  Display the fraction and answer blanks nicely
#
Context()->texStrings;
if ($displayMode eq 'TeX') {
  $showfraction =
  "\[ $fraction = ".$multians->ans_rule(10).$multians->ans_rule(10)." \]";
} else {
  $showfraction =
  ColumnTable(
  "\( \displaystyle $fraction = \)",
  $multians->ans_rule(20).$BR.$HR.$multians->ans_rule(20),
  indent => 0, separation => 10, valign => "MIDDLE"
  );
}
Context()->normalStrings;



####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Perform the indicated operations.
Express your answer in reduced form.
$PAR
$BCENTER
$showfraction
$ECENTER
END_TEXT
Context()->normalStrings;


####################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

install_problem_grader(~~&std_problem_grader);

ANS($multians->cmp() );

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR
$BBOLD SOLUTION $EBOLD
$PAR
We have
\[ \frac{$a y}{y-$c} + \frac{$b}{$c - y} =
   \frac{$a y}{y-$c} - \frac{$b}{y - $c} =
   \frac{$a y - $b}{y - $c}.
 \]

END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version');
ENDDOCUMENT();


$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $ansHash ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};

      if ( ref($f1) eq ref($f1stu) && ( $f1==$f1stu &&  $f2==$f2stu) ||
           ref($f2) eq ref($f2stu) && (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif (ref($f1) eq ref($f1stu) && (($f1==$f1stu) || (-$f1==$f1stu))) {
          return [1,0];
      } elsif (( ref($f1) eq ref($f1stu) && ($numbogus==$f1stu || -$numbogus==$f1stu) ) ||
               ( ref($f2) eq ref($f2stu) && ($denbogus==$f2stu || -$denbogus==$f2stu) )) {
          $ansHash->setMessage(1,"Find a common denominator first");
          $ansHash->setMessage(2,"Find a common denominator first");
          return [0,0];
      } elsif (ref($f2) eq ref($f2stu) && (($f2==$f2stu) || (-$f2==$f2stu))) {
          return [0,1];
      } elsif ( ref($f1) eq ref($f1stu) && ref($f2) eq ref($f2stu) && $f1*$f2stu==$f1stu*$f2 ) {
          $ansHash->setMessage(1,"Simplify your answer further");
          $ansHash->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);

