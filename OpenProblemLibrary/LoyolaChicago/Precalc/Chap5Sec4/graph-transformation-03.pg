##DESCRIPTION
##  Graph transformations
##ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Transformations of functions and graphs)
## DBsection(Reflect and scale change)
## Date(11/07/2011)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## TitleText1('Functions Modeling Change')
## AuthorText1('Connally')
## EditionText1('3')
## Section1('5.4')
## Problem1('')
## KEYWORDS('reflection','compression','expansion','transformations','geogebra')


###############################
#  Initialization

DOCUMENT();

loadMacros(        
"PGstandard.pl",
"MathObjects.pl",
"AppletObjects.pl",
"alignedChoice.pl",
"unionTables.pl",
"parserFunction.pl",
"AnswerFormatHelp.pl",
"PGcourse.pl",
# "source.pl",
"PGgraphmacros.pl",
);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;
$refreshCachedImages = 1;


###############################
#  Setup

Context("Point");
Context()->reduction->set('(-x)-y'=>0);
parserFunction("f(x)" => "x");

#  Shifting and scaling parameters
$a = list_random(-5, -4.5, -4, -3.5, -3, -2.5, -2, -1.5 );
$b = list_random(1.5, 2, 2.5, 3);
$c = list_random(0);
$d = list_random(0);


# Functions for new X and Y coordinates
parserFunction("X(x)" => "x * $b + $c");
parserFunction("Y(x)" => "x * $a + $d");

#  Transformations of points
$Ax = X(-1);  $Ay = Y(0);  $A = Compute("($Ax,$Ay)");
$Bx = X(0);   $By = Y(1);  $B = Compute("($Bx,$By)");
$Cx = X(1);   $Cy = Y(0);  $C = Compute("($Cx,$Cy)");
$Dx = X(2);   $Dy = Y(1);  $D = Compute("($Dx,$Dy)");

Context()->texStrings;
$al = new_aligned_list(ans_rule_len=>10, numbered=>0, tex_spacing=>"3pt");
$al->qa(
"A", $A->cmp(),
"B", $B->cmp(),
"C", $C->cmp(),
"D", $D->cmp(),
);
Context()->normalStrings;

$f2 = Formula("$a f( (x-$c)/$b ) + $d") -> reduce();


###################################
#  Applet setup

$appletName = "GeogebraPointGraph";
$applet =  JavaApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase   => findAppletCodebase("geogebra.jar"),
   appletName => $appletName,
   appletId   => $appletName,
   submitActionAlias     => 'getXML',  # default actionAlias
   initializeActionAlias => 'setXML',  # default actionAlias
   setStateAlias         => 'setXML',
   getStateAlias         => 'getXML',
   answerBoxAlias        => 'answerBox',
   width => 629,
   height => 528,
   debugMode            =>0,
   submitActionScript =>qq{ getQE("answerBox").value=getPointLocation() },

   params => { ggbBase64=>
"UEsDBBQACAgIAFCvaD8AAAAAAAAAAAAAAAAMAAAAZ2VvZ2VicmEueG1s3VhRb9s2EH5efwWh98SSXAcrYKVIUjQx0K0F3BXb3ijpLHOhSI2kEju/fkdSsmWra+0gAWw/STqej/d9392Z0vj9ouTkAZRmUiRBdB4GBEQmcyaKJKjN7OzX4P3lm3EBsoBUUTKTqqQmCYbncWDtNbt888tYz+Ujody5fGPwmAQzyjUERFcKaK7nAGbDTusF44yq5ef0H8iMXi/4IBNR1biLUTXasjL/xHT7OHAbVpyZD+yB5aAIl1kSXIwwdbz7BsqwjPIkeBt6S5wE8dYimoZ2dS4Ve5LCWPd1cE5T4EjA1Cw5EPJgV2O/NENnQjR7AiTL2cYDx8EY6oyznFFhcboU0YmQR5abOWYXv8PdgBVzhDGKL3y0TEqVT5faQEkWf4OSmFYUWg2W/im+uLBPGlPGDUd+qfvkwsDDFIzBhDWhC9AtbYViefd+oq8lz1dMV5IJc0MrUysndtyYHOokwJ2UTfdKFBwaW4RazCG7T+Vi6ikY+tBfl5X7iUsnLW4kl4ooy/sIHZpr6q/Ox+a58gqdT+g8mhg26Go9ehc7D3dN/dULxYRPrcEdtaDjsN2GaWINlkSs0ZYOp3ASBKQWzHxqH7A07tdIrf/vdZlib3SLYxUyerGQNmeSY4X/iYmeI1P2/i9/7ypsq7bG96AEcF9BAoWvZa19mXptXdQcMlbi40b9UqvmH5iht+ZQKGiB+c7zfLrVsFulW+bxoE3C5qARTGZwhCBgY8HaDjfYXUnwhdacfAGqtBSIjBq7avuFQwnYTMaVjqu8FYlXwWqoSDcftkheU4fL3y0jV3CUV3NqaQzbvl7itHAYok6n/ybzTcBUIHEODXZmZQNY7SqAvJmQpil3UmFI1zwd3h1dmiyS4Mw5L30G5Mn/2Pn4RrMDwu3byuwp+Qk516dBTthwE70kNzenwc2r1M2H0+Amfo26+fgTbjqZdMmJRkP/x2SvaXP9AUHhjwiasQXk3rKW4hnDZLgP8NvDB77roNgL993h434VvSeHj3vXBu/hzmRZUpETQUvEPYXC2h1eZt8mCA3tHwShkZ2FHmJt2gXqozUxeizqJlrLEw02z59mjgc9ARrPdW/Xo2zwLLJfbOR+Z3j0SN0JAvwrvI/2R1lW4utXxsyKRW4H9kQYPNiCOwf2j6P3AJV9TfgsvioqtH2P3KyBfaW881JOelKm+0mZ/r+U8UtKGT6/Y54t5DaAgxTyygt53RMy20/I7Mh78uwEmvLaa3nT0zLfT8v8uLQ8RSk/eilve1LCflLC4c/XXY/eO8p7FFP31st715N3tp+8s6OX99jUHXQ/uLkP0M3H+cv/AFBLBwgAgsLB4gMAAM4XAABQSwECFAAUAAgICABQr2g/AILCweIDAADOFwAADAAAAAAAAAAAAAAAAAAAAAAAZ2VvZ2VicmEueG1sUEsFBgAAAAABAAEAOgAAABwEAAAAAA==",
               framePossible => "false",
               showAlgebraInput => "false",
               language         => "en",
               country          => "",
               enableRightClick => "false",
               enableShiftDragZoom =>"false",
               showMenuBar      => "false",
               showResetIcon    => "true",
               showToolBar      => "false",
               showAlgebraInput =>"false",
   },   
);


##########################
#  Graph for hardcopy

$gr = init_graph(-6,-5,6,5,axes=>[0,0],size=>[480,400]);
$gr -> lb('reset');
$gr -> lb(new Label ( 5.5,0,'x','black','left','bottom'));
$gr -> lb(new Label ( 0.1,4.5,'y','black','left','bottom'));
foreach my $i (0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5) {
  $gr->moveTo($i,-5);
  $gr->lineTo($i,5,'gray');
  $gr->moveTo(-$i,-5);
  $gr->lineTo(-$i,5,'gray');
}
foreach my $i (0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5) {
  $gr->moveTo(-6,$i);
  $gr->lineTo(6,$i,'gray');
  $gr->moveTo(-6,-$i);
  $gr->lineTo(6,-$i,'gray');
}
foreach my $i (1..5) {
  $gr -> lb(new Label ( $i,0, $i,'black','center','top'));
  $gr -> lb(new Label (-$i,0,-$i,'black','center','top'));
}
foreach my $i (1..4) {
  $gr -> lb(new Label ( 0,$i, $i,'black','right','middle'));
  $gr -> lb(new Label ( 0,-$i,-$i,'black','right','middle'));
}
$gr->moveTo(-1,0);
$gr->lineTo(0,1,'blue',3);
$gr->lineTo(1,0,'blue',3);
$gr->lineTo(2,1,'blue',3);
$gr->stamps( closed_circle(-1,0,'blue') );
$gr -> lb(new Label ( -1,0.2,'a','blue','center','bottom'));
$gr->stamps( closed_circle(0,1,'blue') );
$gr -> lb(new Label ( 0,1.2,'b','blue','center','bottom'));
$gr->stamps( closed_circle(1,0,'blue') );
$gr -> lb(new Label ( 1,0.2,'c','blue','center','bottom'));
$gr->stamps( closed_circle(2,1,'blue') );
$gr -> lb(new Label ( 2,1.2,'d','blue','center','bottom'));



####################################
#  Main text

TEXT(
MODES(HTML=>
"${BBOLD}This question uses an interactive applet.${EBOLD}   
Please be patient while it loads.  If it does not load in
less than one minute or if you receive any errors, 
try refreshing your browser or clicking the ${BITALIC}'return
this question to its initial state button'${EITALIC} below the applet.
$BR
$HR
$BR",
TeX=>"")
);

Context()->texStrings;
BEGIN_TEXT
\{
ColumnTable(
"Let \( f(x) \) be the function that connects
the points \( a = (-1,0), \)$SPACE \( b = (0,1), \)$SPACE 
\( c = (1,0), \) $SPACE and \( d = (2,1) \) by line 
segments in alphabetical order, as shown in the graph.".
$BR.
$BR.
"(a) The transformation \[\textstyle y = $f2 \] 
takes the points \( a, \)$SPACE
\( b, \)$SPACE \( c \)$SPACE and \( d \) on 
the graph of \( y = f(x) \) to the following points: ".
AnswerFormatHelp("points").
$BR.
$al->print_q().
$BR.
$BR.
"(b) Without using a calculator, 
draw a graph of \( y = $f2 \) on paper 
by using your answers from the previous part.  
Using the interactive applet to the right, 
enter your graph by clicking and draging 
the points A, B, C and D to shift and scale the 
blue graph (the gray graph is just for reference).  
Click the ${BITALIC}Submit Answers${EITALIC} 
button to submit your graph for grading."
,
MODES(
  TeX=>image(insertGraph($gr), width=>480, height=>400, tex_size=>900), 
  HTML=>$applet->insertAll(
    debug=>0,
    includeAnswerBox=>1,
    reinitialize_button => 1,
   )
)
,
indent => 0, separation => 30, valign => "TOP"
);
\}
END_TEXT
Context()->normalStrings;


###################################
#  Insert applet into body

#;


##########
# Draw graph in applet -- this must come after the insertAll command which 
# adds the default behavior to the HEADER_TEXT

HEADER_TEXT(<<EOF);
<script language="JavaScript">

ww_applet_list["$appletName"].initializeAction = function () {
     ww_applet_list["$appletName"].setState();
}

function getPointLocation() {
        var applet = getApplet("$appletName");

        var pointA = applet.getObjectName(0);
        var pointB = applet.getObjectName(1);
        var pointC = applet.getObjectName(2);
        var pointD = applet.getObjectName(3);
        var Ax = applet.getXcoord(pointA);
        var Ay = applet.getYcoord(pointA);
        var Bx = applet.getXcoord(pointB);
        var By = applet.getYcoord(pointB);
        var Cx = applet.getXcoord(pointC);
        var Cy = applet.getYcoord(pointC);
        var Dx = applet.getXcoord(pointD);
        var Dy = applet.getYcoord(pointD);

        var str = "(" + Ax + "," + Ay + "),(" + Bx + "," + By + "),(" + Cx + "," + Cy + "),(" + Dx + "," + Dy + ")";

        return str;

}

</script>
EOF
##########
# the debug mode allows you to view the contents of the XML




###########################################
#  Answer Evaluation

ANS( $al->correct_ans );

NAMED_ANS('answerBox'=>List($A,$B,$C,$D)->cmp()  );



COMMENT('MathObject version.  Note: Uses JavaScript, which might not be executed in the Library Browser.  Horizontal stretch, reflection across x-axis and vertical stretch.');

ENDDOCUMENT();  