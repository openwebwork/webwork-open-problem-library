## DESCRIPTION
## Functions: Piecewise defined functions
## ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Piecewise functions)
## Date(01/01/10)
## Institution(Fort Lewis College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## TitleText1('Functions Modeling Change')
## AuthorText1('Connally')
## EditionText1('3')
## Section1('2.3')
## Problem1('17')
## KEYWORDS('functions','piecwise')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"PGunion.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGcourse.pl",
"contextInequalities.pl",
"AnswerFormatHelp.pl",
"weightedGrader.pl",
"parserPopUp.pl",
"answerHints.pl",
);

install_weighted_grader();

TEXT(beginproblem());

$refreshCachedImages=1;

##############################################
#  Setup

Context("Inequalities")->variables->are(L=>"Real",n=>"Real");

$width = random(3,9,3);
$w3 = $width / 3;
$extra = random(8,12,1);
$n = Formula("$width * L / 3 + $extra")->reduce;

$lowdomain = random(3,5,1);
$highdomain = random(9,12,1);

@domainarray = ($lowdomain..$highdomain);

$rangelist = "$w3*$lowdomain+$extra";
foreach my $i ($lowdomain+1..$highdomain) {
  $rangelist = $rangelist . ',' . "$w3*$i+$extra";
}

$lowrange = $n->eval(L=>$lowdomain)->reduce;


# 
#  make graphs
#
foreach my $i (0..3) {
$G[$i] = init_graph(-1,-5,11,45,axes=>[0,0],size=>[200,200]);
}

foreach $i ($lowdomain..10) {
  $G[0] -> stamps( closed_circle($i,$w3*$i+$extra,'blue') );
}
$G[0] -> lb(new Label ( 10,0,'L','black','left','bottom'));
$G[0] -> lb(new Label ( -0.5,40,'n','black','middle','center'));


foreach $i (0..10) {
  $G[1] -> stamps( closed_circle($i,$w3*$i+$extra,'blue') );
}
$G[1] -> lb(new Label ( 10,0,'L','black','left','bottom'));
$G[1] -> lb(new Label ( -0.5,40,'n','black','middle','center'));


plot_functions($G[2],"$w3*L+$extra for L in <0,11> using color:blue and weight=2");
$G[2] -> lb(new Label ( 10,0,'L','black','left','bottom'));
$G[2] -> lb(new Label ( -0.5,40,'n','black','middle','center'));


plot_functions($G[3],"$w3*L+$extra for L in <$lowdomain,11> using color:blue and weight=2");
$G[3] -> lb(new Label ( 10,0,'L','black','left','bottom'));
$G[3] -> lb(new Label ( -0.5,40,'n','black','middle','center'));


foreach my $i (0..3) {
  $graph[$i] = image(insertGraph($G[$i]),width=>"200",height=>"200",tex_size=>"210");
}


@perm = shuffle(4);
@fig = @graph[@perm];
@inv = invert(@perm);

@letter = ("A", "B", "C", "D");

$popup = PopUp(["?","A","B","C","D"], $letter[$inv[0]]);



#$domain = Compute("L >= $lowdomain");
#$range = Compute("n >= $lowrange");

$domain = List(@domainarray);
$range = List($rangelist);


##############################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
A contractor purchases gravel one cubic yard at a time.
$BR
$BR
(a) A gravel driveway \( L \) yards long and $width yards
wide is to be poured to a depth of 1 foot.  Find a 
formula for \( n(L) \), the number of cubic yards of 
gravel the contractor buys, assuming that he buys $extra
more cubic yards of gravel than are needed (to be sure 
he'll have enough).
$BR
\( n(L) = \)
\{ ans_rule(30) \}
cubic yards \{ AnswerFormatHelp("formula") \} 
$BR
$BR
(b)  Assuming no driveway is less than $lowdomain 
yards long or more than $highdomain yards long, 
find the domain and range of \( n(L) \).  Enter your
answers as comma separated lists of numbers.
$BR
Domain:
\{ ans_rule(30) \}
\{ AnswerFormatHelp("numbers") \}
$BR
Range: $SPACE
\{ ans_rule(30) \}
\{ AnswerFormatHelp("numbers") \}
$BR
$BR
(c) Assuming that no driveway is less than $lowdomain 
yards long or more than $highdomain yards long, 
sketch a graph of \( n(L) \).  Which graph A-D below most closely matches 
the graph you drew? 
\{ $popup->menu() \}
$BR
$BR
$BCENTER
\{
BeginTable().
  AlignedRow([$fig[0],$fig[1],$fig[2],$fig[3]]).
  TableSpace(5,0).
  AlignedRow(["A","B","C","D"]).
EndTable();
\}
$BR
(Click on a graph to enlarge it.)
$ECENTER
END_TEXT
Context()->normalStrings;

##################################################
#  Answers

$showPartialCorrectAnswers = 1;

WEIGHTED_ANS($n->cmp()->withPostFilter(AnswerHints( 
  Formula("$width*L+$extra") => "Are all of your units expressed in yards?",
))
, 50);
WEIGHTED_ANS($domain->cmp(), 20);
WEIGHTED_ANS($range->cmp(), 20);
WEIGHTED_ANS($popup->cmp(), 10);



COMMENT('MathObject version');
ENDDOCUMENT();