# DESCRIPTION
# Problem from Functions Modeling Change, Connally et al., 3rd ed.
# WeBWorK problem written by Adam Spiegler, <aspiegler@luc.edu>
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Transformations of functions and graphs)
## DBsection(Three or more transformations)
## Institution(Loyola University Chicago)
## Author(Adam Spiegler)
## Level(2)
## MO(1)
## TitleText1('Functions Modeling Change')
## AuthorText1('Connally')
## EditionText1('3')
## Section1('5.')
## Problem1('12')
## TitleText2('Functions Modeling Change')
## AuthorText2('Connally')
## EditionText2('4')
## Section2('6.')
## Problem2('12')
## KEYWORDS('transformations','shifts','translations','stretch','compression','graph')

DOCUMENT();

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "extraAnswerEvaluators.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
           "PGcourse.pl",
);

TEXT(beginproblem());

Context("Numeric");


$showPartialCorrectAnswers = 1;

@x = (-3,-2,-1,0,1,2,3);
@y = (-4,-1,2,3,0,-3,-6);
@perm = shuffle(7);
@y = @y[@perm];

@group1 = ("\( f(-x) \)", "\( -f(x) \)");
@perm1 = shuffle(2);
if ($perm1[0] == 0) {
    for ($i = 0; $i <=6; $i++) {
         $a[$i] = $y[6-$i];
         $b[$i] = -$y[$i] } }
 else {
     for ($i = 0; $i <=6; $i++) {
         $b[$i] = $y[6-$i];
         $a[$i] = -$y[$i] } };

for ($i = 0; $i <= 6; $i++) {
         $c[$i] = $y[$i]-2;
         $e[$i] = $y[$i]+2;
         $g[$i] = 2*$y[$i];
         $h[$i] = "-$y[$i]/3" };
@group1=@group1[@perm1];

$d[0] = "NONE";
$d[1] = "NONE";
$f[5] = "NONE";
$f[6] = "NONE";

for ($i = 0; $i <=4; $i++) {
        $d[$i+2] = $y[$i];
        $f[$i] = $y[$i+2] };

Context()->texStrings;
BEGIN_TEXT

Fill in all of the blanks in the table below for which you have
sufficient information.  If you do not have enough information to
fill in a blank, type $BBOLD NONE $EBOLD in the blank space provided.
Do not leave any blanks empty.
$PAR
$BCENTER
\{ begintable(8) \}
\{ row( "\( x \)",@x ) \}
\{ row( "\( f(x) \)", @y ) \}
\{ row( $group1[0], ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( $group1[1], ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( "\( f(x)-2 \)", ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( "\( f(x-2) \)", ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( "\( f(x)+2 \)", ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( "\( f(x+2) \)", ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( "\( 2 f(x) \)", ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ row( "\( -f(x)/3 \)", ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6)) \}
\{ endtable() \}
$ECENTER


END_TEXT
Context()->normalStrings;

foreach my $aa ( @a ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @b ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @c ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @d ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @e ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @f ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @g ) { ANS( Compute($aa)->cmp() ); }
foreach my $aa ( @h ) { ANS( Compute($aa)->cmp() ); }

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR
$BBOLD  SOLUTION $EBOLD
$PAR
$BCENTER
\{ begintable(8) \}
\{ row( "\( x \)",@x ) \}
\{ row( "\( f(x) \)", @y ) \}
\{ row( $group1[0], @a ) \}
\{ row( $group1[1], @b ) \}
\{ row( "\( f(x)-2 \)", @c ) \}
\{ row( "\( f(x-2) \)", @d ) \}
\{ row( "\( f(x)+2 \)", @e ) \}
\{ row( "\( f(x+2) \)", @f ) \}
\{ row( "\( 2 f(x) \)", @g ) \}
\{ row( "\( -f(x)/3 \)", @h ) \}
\{ endtable() \}
$ECENTER

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
