# DESCRIPTION
# Problem from Functions Modeling Change, Connally et al., 3rd ed.
# WeBWorK problem written by Adam Spiegler, <aspiegler@luc.edu>
# ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Inverse functions)
## DBsection(Finding the inverse function)
## Institution(Loyola University Chicago)
## Author(Adam Spiegler)
## Level(3)
## MO(1)
## TitleText1('Functions Modeling Change')
## AuthorText1('Connally')
## EditionText1('3')
## Section1('2.')
## Problem1('62')
## TitleText2('Functions Modeling Change')
## AuthorText2('Connally')
## EditionText2('4')
## Section2('2.')
## Problem2('62')
## KEYWORDS('functions','domain','range','inverse','function notation')

DOCUMENT();

loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "extraAnswerEvaluators.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
           "PGcourse.pl",
);

TEXT(beginproblem());

Context("Numeric");
Context()->strings->add( unknown=>{} );

$showPartialCorrectAnswers = 1;

$x0 = random(5,9,2);
$y0 = random(-3,-1,2);
$x1 = random(2,4,2);
$y1 = random(6,8,2);

@quest = ("\( j(h($y1)) = \)","\( j($y1) = \)","\( h(j($y1)) = \)",
       "\( j($x1) = \)","\( h^{-1}($y0) = \)","\( j^{-1}($y0) = \)",
           "\( h($x0) = \)");

@other = ("\( \left( h($y0) \right)^{-1} = \)",
          "\( \left( h($x1) \right)^{-1} = \)");

@work = ("\( j(h($y1)) = h^{-1} \left( h($y1) \right) = $y1 \)",
         "We don't know \( j($y1) \)",
         "\( h(j($y1)) = h \left( h^{-1}($y1) \right) = $y1 \)",
         "\( j($x1) = $y1 \)",
         "We don't know \( h^{-1}($y0) \)",
         "\( j^{-1}($y0) = $x0 \)",
         "We don't know \( h($x0) \)" );

@ans = ($y1, "unknown", $y1, $y1, "unknown", $x0, "unknown");

@other_work = ("\( \left( h($y0) \right)^{-1} = ($x0)^{-1} = \frac{1}{$x0} \)",
               "We don't know \( h($x1) \), so we can't evaluate
                 \( \left( h($x1) \right)^{-1} \)" );

@other_ans = ( "1/$x0", "unknown");

@perm1 = shuffle(7);
@perm2 = shuffle(2);
@quest = @quest[@perm1];
@ans = @ans[@perm1];
@work = @work[@perm1];
@other = @other[@perm2];
@other_ans = @other_ans[@perm2];
@other_work = @other_work[@perm2];

for ($i = 7; $i <=8; $i++) { $quest[$i] = $other[$i-7];
                             $ans[$i] = $other_ans[$i-7];
                             $work[$i] = $other_work[$i-7]};


Context()->texStrings;
BEGIN_TEXT

Suppose that \( j(x)=h^{-1}(x) \) and that both \( j \) and \( h \) are
defined for all values of \( x \). Let \( h($y1)=$x1 \) and
\( j($x0) = $y0 \).  Evaluate if possible and enter the value of the
expression in the blank. If you do not have enough given information
to evaluate the expression, enter $BBOLD unknown $EBOLD in the blank beside
the expression.
$PAR
(a) $quest[0] \{ ans_rule(25) \} $PAR
(b) $quest[1] \{ ans_rule(25) \} $PAR
(c) $quest[2] \{ ans_rule(25) \} $PAR
(d) $quest[3] \{ ans_rule(25) \} $PAR
(e) $quest[4] \{ ans_rule(25) \} $PAR
(f) $quest[5] \{ ans_rule(25) \} $PAR
(g) $quest[6] \{ ans_rule(25) \} $PAR
(h) $quest[7] \{ ans_rule(25) \} $PAR
(i) $quest[8] \{ ans_rule(25) \}

END_TEXT
Context()->normalStrings;

# ANS(fun_cmp( $ans[0],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[1],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[2],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[3],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[4],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[5],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[6],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[7],vars=>['N','O','E'] ) );
# ANS(fun_cmp( $ans[8],vars=>['N','O','E'] ) );

foreach my $a ( @ans ) { ANS( Compute($a)->cmp() ); }

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR
$BBOLD  SOLUTION $EBOLD
$PAR
(a) $work[0] $PAR
(b) $work[1] $PAR
(c) $work[2] $PAR
(d) $work[3] $PAR
(e) $work[4] $PAR
(f) $work[5] $PAR
(g) $work[6] $PAR
(h) $work[7] $PAR
(i) $work[8]

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
