# DESCRIPTION
# Fundamental theorem of calculus
# ENDDESCRIPTION

## DBsubject(Calculus - single variable)
## DBchapter(Integrals)
## DBsection(Fundamental theorem of calculus)
## Date(04/17/2017)
## Institution(Hope College)
## Author(Paul Pearson)
## KEYWORDS('calculus', 'fundamental theorem of calculus')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGML.pl",
"scaffold.pl",
"parserFunctionPrime.pl",
"PGcourse.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric")->variables->are(x=>'Real',t=>'Real');
parser::FunctionPrime->Enable();
parserFunction("F(x)" => "3sin(x^2)+e^(pi*x)-2.63"); # something students are not going to guess

$n = random(3,5,1);
$a = random(6,9,1);
do { $c = random(3,9,1); } until ($c != $n && $c != $a);

$g = Formula("x^$n");
$gp = $g->D('x');
$Fp1 = Formula("F'(x^($n)) * $gp");
$ft = Formula("sin(t) / ($c + t)");
$f = Formula("sin(x) / ($c + x)");
$Fp2 = Formula("sin(x^$n) / ($c + x^$n) * $n * x^($n-1)");

Scaffold::Begin(is_open=>"correct_or_first_incorrect");

Section::Begin('Part 1: A derivative computation using the chain rule');
BEGIN_PGML
Suppose [`F(x)`] is a differentiable function for all real numbers [`x`].  Evaluate the following derivative.  Enter the derivative of [`F(x)`] using prime notation, i.e., as [| F'(x) |].

[``\frac{d}{dx} \left( F(x^{[$n]}) \right) = ``] [_____________]{$Fp1}
END_PGML
Section::End();

Section::Begin('Part 2: The derivative of a definite integral');
BEGIN_PGML
Suppose [``F(x) = \int_{[$a]}^{x} \left( [$ft] \right) \, dt``].  Use the Fundamental of Theorem of Calculus to calculate [``F'(x)``].

[``F'(x) = ``] [___________________]{$f}
END_PGML
Section::End();


Section::Begin('Part 3: The derivative of a definite integral and the chain rule');
BEGIN_PGML
Suppose [``F(x) = \int_{[$a]}^{x} \left( [$ft] \right) \, dt``].  Use the Fundamental of Theorem of Calculus to calculate [``\frac{d}{dx} \left( F(x^{[$n]}) \right)``].

[``\frac{d}{dx} \left( F(x^{[$n]}) \right) = ``] [___________________]{$Fp2}
END_PGML
Section::End();

Scaffold::End();

ENDDOCUMENT();