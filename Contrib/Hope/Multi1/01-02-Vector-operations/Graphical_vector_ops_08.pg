## DESCRIPTION
## The geometry of vectors in R^n
## ENDDESCRIPTION

## KEYWORDS('vectors','vector operations')

## DBsubject('Linear Algebra')
## DBchapter('Geometry of Real n-Space')
## DBsection('Points and Vectors')
## Date('December 2015')
## Author('Paul Pearson')
## Institution('Hope College')
## MO(1)

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "contextLimitedVector.pl",

  "parserMultiAnswer.pl",
  "PGML.pl",
  "scaffold.pl",
  "PGcourse.pl"
);
TEXT(beginproblem());
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;

Context("Numeric")->variables->are(
  'v1' => ['Real','TeX'=>'\mathbf{v_1}'],
  'v2' => ['Real','TeX'=>'\mathbf{v_2}'],
);

#  construct graph canvases
$pixels = 301;
($xmin,$xmax) = (-7,7);
($ymin,$ymax) = (-7,7);

# linear transformation that will be applied to the 1x1 square grid
$a11 = 2; $a12 = -1;
$a21 = 1; $a22 = 1;

# basis vectors
#$v1 = Vector($a11, $a21);
#$v2 = Vector($a12, $a22);

foreach my $i (0) {
    $gr[$i] = init_graph($xmin,$ymin,$xmax,$ymax, size=>[$pixels,$pixels]);
    $gr[$i] -> lb('reset');

    #  manually draw the grid
    foreach my $x ($xmin..$xmax) {
      my $x1 = $a11 * $x + $a12 * $ymin;
      my $y1 = $a21 * $x + $a22 * $ymin;
      my $x2 = $a11 * $x + $a12 * $ymax;
      my $y2 = $a21 * $x + $a22 * $ymax;
      $gr[$i] -> moveTo($x1,$y1); # moveTo($x,$ymin);
      $gr[$i] -> lineTo($x2,$y2,'gray',1); # lineTo($x,$ymax,'gray',1);
    }
    foreach my $y ($ymin..$ymax) {
      my $x1 = $a11 * $xmin + $a12 * $y;
      my $y1 = $a21 * $xmin + $a22 * $y;
      my $x2 = $a11 * $xmax + $a12 * $y;
      my $y2 = $a21 * $xmax + $a22 * $y;
      $gr[$i] -> moveTo($x1,$y1); # moveTo($xmin,$y);
      $gr[$i] -> lineTo($x2,$y2,'gray',1); # lineTo($xmax,$y,'gray',1);
    }

   $gr[$i] -> moveTo(0,0);
   $gr[$i] -> arrowTo($a11,$a21,'blue',2); # first basis vector
   $gr[$i] -> lb(new Label ($a11,$a21,'v1','blue','left','bottom'));

   $gr[$i] -> moveTo(0,0);
   $gr[$i] -> arrowTo($a12,$a22,'blue',2); # second basis vector
   $gr[$i] -> lb(new Label ($a12,$a22,'v2','blue','right','bottom'));

} # end constructing graph canvas

#  coordinate vectors relative to custom basis
($ax,$ay) = (random(1,3,1), random(1,3,1));
($bx,$by) = (-1, random(2,4,1));
($cx,$cy) = (random(-3,-1,1), random(-3,-3,1));
($dx,$dy) = (0,random(-6,-1,1));

# coordinates relative to standard basis
($Ax,$Ay) = ($a11 * $ax + $a12 * $ay, $a21 * $ax + $a22 * $ay);
($Bx,$By) = ($a11 * $bx + $a12 * $by, $a21 * $bx + $a22 * $by);
($Cx,$Cy) = ($a11 * $cx + $a12 * $cy, $a21 * $cx + $a22 * $cy);
($Dx,$Dy) = ($a11 * $dx + $a12 * $dy, $a21 * $dx + $a22 * $dy);

foreach my $i (0) {

    #  plot points A, B, C, D
    $gr[$i]->stamps(closed_circle($Ax, $Ay, 'blue'));
    $gr[$i]->lb(new Label($Ax, $Ay+0.25, 'A', 'blue', 'center', 'bottom'));

    $gr[$i]->stamps(closed_circle($Bx, $By, 'blue'));
    $gr[$i]->lb(new Label($Bx, $By+0.25, 'B', 'blue', 'center', 'bottom'));

    $gr[$i]->stamps(closed_circle($Cx, $Cy, 'blue'));
    $gr[$i]->lb(new Label($Cx, $Cy+0.25, 'C', 'blue', 'center', 'bottom'));

    $gr[$i]->stamps(closed_circle($Dx, $Dy, 'blue'));
    $gr[$i]->lb(new Label($Dx, $Dy+0.25, 'D', 'blue', 'center', 'bottom'));

}

$k = random(-1,1,2) * random(2,10,1);

Scaffold::Begin(
    can_open => "always",
    is_open  => "incorrect",
    hardcopy_is_open => "always",
);

BEGIN_PGML
The figure below shows four named points [`A`], [`B`], [`C`], and [`D`] on a grid generated by two vectors [`\mathbf{v_1}`], [`\mathbf{v_2}`] in [`\mathbb{R}^2`].

>> [@ image(insertGraph($gr[0]), width=>$pixels, height=>$pixels, tex_size=>900).$PAR @]* <<
END_PGML

Section::Begin("Part 1");
BEGIN_PGML
Write each point as a sum of scalar multiples of [`\mathbf{v_1}`] and [`\mathbf{v_2}`].  Enter [|v1|] for [`\mathbf{v_1}`] and [|v2|] for [`\mathbf{v_2}`].

[`A=`] [____________]{"$ax * v1 + $ay * v2"}

[`B=`] [____________]{"$bx * v1 + $by * v2"}

[`C=`] [____________]{"$cx * v1 + $cy * v2"}

[`D=`] [____________]{"$dx * v1 + $dy * v2"}
END_PGML
Section::End();

Section::Begin("Part 2");
BEGIN_PGML
Write each vector as a sum of scalar multiples of [`\mathbf{v_1}`] and [`\mathbf{v_2}`].  Enter [|v1|] for [`\mathbf{v_1}`] and [|v2|] for [`\mathbf{v_2}`].

[`\overrightarrow{CA} = `] [____________]{Compute("($ax - $cx) * v1 + ($ay - $cy) * v2")}

[`\overrightarrow{BA} - \overrightarrow{DA} = `] [____________]{Compute("($dx - $bx) * v1 + ($dy - $by) * v2")}

[`\overrightarrow{BA} - \overrightarrow{DA} + \overrightarrow{DC} =`] [____________]{Compute("($cx - $bx) * v1 + ($cy - $by) * v2")}

[`\overrightarrow{AB} + \overrightarrow{BC} + \overrightarrow{BA} - \overrightarrow{DC} = `] [______________________]{Compute("($dx - $bx) * v1 + ($dy - $by) * v2")}
END_PGML
Section::End();

Scaffold::End();
ENDDOCUMENT();
