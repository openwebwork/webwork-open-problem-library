## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION


## DBsubject(Linear algebra)
## DBchapter(Euclidean spaces)
## DBsection(Subspaces)
## Date(July 2013)
## Institution(Hope College)
## Author(Paul Pearson)
## KEYWORDS('linear algebra','vector space','subspaces')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"unionLists.pl",
"unionTables.pl",
"PGgraphmacros.pl",
"parserPopUp.pl",
"PGcourse.pl",
);

$showPartialCorrectAnswers = 0;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Vector2D')->strings->add( 'CLOSED' => {caseSensitive=>0} );

$q = random(1,4,1);  # quadrant selection

#
#  Graph canvas
#
$gr = init_graph(-5,-5,5,5,axes=>[0,0],pixels=>[200,200]);

#
#  Graph labels
#
$gr->lb('reset');
$gr->lb( new Label(4.5,0.35,'x','black','center','middle'));
$gr->lb( new Label(0.35,4.5,'y','black','center','middle'));


#
#  Define new graph colors
#
$gr->new_color("lightblue", 214,230,244); # RGB
$gr->new_color("darkblue",  100,100,255);
$gr->new_color("lightgreen", 187, 255, 153); 
$gr->new_color("darkgreen",    0, 208, 0);
$gr->new_color("lightred",  245,234,229); # light red-purple
$gr->new_color("darkred",   159, 64, 16); # red-brown


#
#  Choose colors
#
$light = "lightgreen";
$dark = "darkgreen";

#
#  Graph the function and the filled region
#

if ($q == 1) {

  $quadrant = 'first quadrant';
  $gr->moveTo(5,0);
  $gr->lineTo(0,0,$dark,2);
  $gr->lineTo(0,5,$dark,2);
  $gr->fillRegion([1,1,$light]); 
  $Htex = "\lbrace (x,y) \mid x \geq 0, y \geq 0 \rbrace";

} elsif ($q == 2) {

  $quadrant = 'second quadrant';
  $gr->moveTo(-5,0);
  $gr->lineTo(0,0,$dark,2);
  $gr->lineTo(0,5,$dark,2);
  $gr->fillRegion([-1,1,$light]); 
  $Htex = "\lbrace (x,y) \mid x \leq 0, y \geq 0 \rbrace";

} elsif ($q == 3) {

  $quadrant = 'third quadrant';
  $gr->moveTo(-5,0);
  $gr->lineTo(0,0,$dark,2);
  $gr->lineTo(0,-5,$dark,2);
  $gr->fillRegion([-1,-1,$light]); 
  $Htex = "\lbrace (x,y) \mid x \leq 0, y \leq 0 \rbrace";

} else {

  $quadrant = 'fourth quadrant';
  $gr->moveTo(5,0);
  $gr->lineTo(0,0,$dark,2);
  $gr->lineTo(0,-5,$dark,2);
  $gr->fillRegion([1,-1,$light]); 
  $Htex = "\lbrace (x,y) \mid x \geq 0, y \leq 0 \rbrace";

}


$zero = PopUp(['choose','H contains the zero vector of V','H does not contain the zero vector of V'],'H contains the zero vector of V');
$subspace = PopUp(['choose','H is a subspace of V','H is not a subspace of V'],'H is not a subspace of V');


$list1 = List("CLOSED");
if ($q == 1) { $list2 = List(Real(-1),Vector(1,1)); }
if ($q == 2) { $list2 = List(Real(-1),Vector(-1,1)); }
if ($q == 3) { $list2 = List(Real(-1),Vector(-1,-1)); }
if ($q == 4) { $list2 = List(Real(-1),Vector(1,-1)); }

Context()->texStrings;
BEGIN_TEXT
\{
ColumnTable(
"Let \( H \) be the set of all points in the $quadrant
in the plane \( V = \mathbb{R}^2 \).
That is, \( H = $Htex \).
Is \( H \) a subspace of the vector space \( V \)?
$BR
$BR".BeginList('OL')."
$ITEM Does \( H \) contain the zero vector of \( V \)? $BR".$zero->menu()."
$ITEMSEP
$ITEM Is \( H \) closed under addition?  If it is, enter ${BITALIC}CLOSED${EITALIC}.
If it is not, enter two vectors in \( H \) whose sum is not in \( H \), 
using a comma separated list and syntax such as \( \verb+<1,2>, <3,4>+ \).
$BR".$list1->ans_rule(30)."
$ITEMSEP
$ITEM Is \( H \) closed under scalar multiplication?  If it is, enter ${BITALIC}CLOSED${EITALIC}.
If it is not, enter a scalar in \( \mathbb{R} \) and a vector in \( H \) whose product is not in \( H \),
using a comma separated list and syntax such as \( \verb+2, <3,4>+ \).
$BR".$list2->ans_rule(30)."
$ITEMSEP
$ITEM Is \( H \) a subspace of the vector space \( V \)? 
You should be able to justify your answer by writing a complete, coherent, and detailed proof 
based on your answers to parts 1-3.

$BR".$subspace->menu().EndList('OL')
,
image( insertGraph($gr),height=>200,width=>200,tex_size=>500 )
,
indent => 0, separation => 30, valign => "TOP"
);
\}
END_TEXT
Context()->normalStrings;

install_problem_grader(~~&std_problem_grader);

sub mycheck {

  my ($correct, $student, $ansHash, $value) = @_;
  my @s = @{$student};
  my $score = 0;
  my @errors = ();

  return 0 if !defined($s[1]);

  my $c = Real(0);  # the student's scalar will be assigned to $c later
  my $v = Vector(0,0); # the student's vector will be assigned to $v later
  my $z = Real(0);
  if ( ($s[0]->class eq 'Real') and ($s[1]->class eq 'Vector') ) { $c = $s[0]; $v = $s[1]; }
  if ( ($s[1]->class eq 'Real') and ($s[0]->class eq 'Vector') ) { $c = $s[1]; $v = $s[0]; }
  my ($vx,$vy) = $v->value;

  if ( ($q == 1) and ( $vx >= $z ) and ( $vy >= $z ) and ( ($c * $vx < $z) or ($c * $vy < $z) ) ) { $score = 2; } 
  if ( ($q == 2) and ( $vx <= $z ) and ( $vy >= $z ) and ( ($c * $vx > $z) or ($c * $vy < $z) ) ) { $score = 2; } 
  if ( ($q == 3) and ( $vx <= $z ) and ( $vy <= $z ) and ( ($c * $vx > $z) or ($c * $vy > $z) ) ) { $score = 2; } 
  if ( ($q == 4) and ( $vx >= $z ) and ( $vy <= $z ) and ( ($c * $vx < $z) or ($c * $vy > $z) ) ) { $score = 2; } 

  return ($score,@errors);

}

ANS($zero->cmp);
ANS($list1->cmp);
ANS($list2->cmp(list_checker=>~~&mycheck));
ANS($subspace->cmp);
COMMENT('MathObject version.  Randomly chooses one of the four quadrants.');
ENDDOCUMENT();