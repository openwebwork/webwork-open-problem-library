## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('linear algebra','vector space','subspaces')

## DBsubject(Linear algebra)
## DBchapter('Abstract vector spaces')
## DBsection('Subspaces')
## Date('July 2013')
## Author('Paul Pearson')
## Institution('Hope College')
## TitleText1('')
## AuthorText1('')
## EditionText1('')
## Section1('')
## Problem1('')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"unionLists.pl",
"unionTables.pl",
"parserPopUp.pl",
"PGcourse.pl",
);

$showPartialCorrectAnswers = 0;
$refreshCachedImages = 1;
TEXT(beginproblem()); 

Context('Matrix')->strings->add( 'CLOSED' => {caseSensitive=>0} );

$zero = PopUp(['choose','H contains the zero vector of V','H does not contain the zero vector of V'],'H contains the zero vector of V');
$subspace = PopUp(['choose','H is a subspace of V','H is not a subspace of V'],'H is not a subspace of V');


$list1 = List(Matrix([[1,0],[0,0]]),Matrix([[1,0],[0,1]]));
$list2 = List(Real(2),Matrix([[1,0],[0,1]]));

Context()->texStrings;
BEGIN_TEXT
A square matrix \( A \) is idempotent if \( A^2 = A \).  
$BR
$BR
Let \( V \) be the vector space of all \( 2 \times 2 \) matrices with real entries.  
Let \( H \) be the set of all \( 2 \times 2 \) idempotent matrices with real entries.
Is \( H \) a subspace of the vector space \( V \)?
$BR
$BR \{ BeginList('OL') \}
$ITEM Does \( H \) contain the zero vector of \( V \)? $BR \{ $zero->menu() \}
$ITEMSEP
$ITEM Is \( H \) closed under addition?  If it is, enter ${BITALIC}CLOSED${EITALIC}.
If it is not, enter two matrices in \( H \) whose sum is not in \( H \), 
using a comma separated list and syntax such as \( \verb+[[1,2],[3,4]], [[5,6],[7,8]]+ \)
for the answer \(\{Matrix([[1,2],[3,4]])\},\{Matrix([[5,6],[7,8]])\}\).
(Hint: to show that \( H \) is not closed under addition, it is sufficient to find two 
idempotent matrices \( A \) and \( B \) such that \( (A+B)^2 \ne (A+B) \).)
$BR \{ $list1->ans_rule(30) \}
$ITEMSEP
$ITEM Is \( H \) closed under scalar multiplication?  If it is, enter ${BITALIC}CLOSED${EITALIC}.
If it is not, enter a scalar in \( \mathbb{R} \) and a matrix in \( H \) whose product is not in \( H \),
using a comma separated list and syntax such as \( \verb+2, [[3,4],[5,6]]+ \) for the
answer \( 2, \{Matrix([[3,4],[5,6]])\} \).
(Hint: to show that \( H \) is not closed under scalar multiplication, it is sufficient to find a real number
\( r \) and an idempotent matrix \( A \) such that \( (rA)^2 \ne (rA) \).)
$BR \{ $list2->ans_rule(30) \}
$ITEMSEP
$ITEM Is \( H \) a subspace of the vector space \( V \)? 
You should be able to justify your answer by writing a complete, coherent, and detailed proof 
based on your answers to parts 1-3.

$BR \{ $subspace->menu() \} \{ EndList('OL') \}
END_TEXT
Context()->normalStrings;

install_problem_grader(~~&std_problem_grader);

sub mycheck_add {

  my ($correct, $student, $ansHash, $value) = @_;
  my @s = @{$student};
  my $score = 0;
  my @errors = ();

  return 0 if !defined($s[1]);

  if ( ($s[0]->class eq 'Matrix') and ($s[1]->class eq 'Matrix') ) {
    my $a = Matrix($s[0]);
    my $b = Matrix($s[1]);
    my @adim = $a->dimensions;
    my @bdim = $b->dimensions;
    return 0 if (($adim[0] != 2) or ($adim[1] != 2) or ($bdim[0] != 2) or ($bdim[1] != 2));
    
    if ( ($a**2 == $a) and ($b**2 == $b) and ( ($a + $b)**2 != ($a + $b) ) ) { 
      $score = 2; 
    } 
  } 

  return ($score,@errors);

}


sub mycheck_mult {

  my ($correct, $student, $ansHash, $value) = @_;
  my @s = @{$student};
  my $score = 0;
  my @errors = ();

  return 0 if !defined($s[1]);

  my $k = Real(0);  # the student's scalar will be assigned to $c later
  my $a = Matrix([[0,0],[0,0]]); # the student's matrix will be assigned to $a later
  my $z = Real(0);
  if ( ($s[0]->class eq 'Real') and ($s[1]->class eq 'Matrix') ) { $k = $s[0]; $a = $s[1]; }
  if ( ($s[1]->class eq 'Real') and ($s[0]->class eq 'Matrix') ) { $k = $s[1]; $a = $s[0]; }
  my @adim = $a->dimensions;
  return 0 if (($adim[0] != 2) or ($adim[1] != 2));

  if ( ($a**2 == $a) and ( ($k * $a)**2 != $k * $a) ) { $score = 2; } 

  return ($score,@errors);

}


ANS($zero->cmp);
ANS($list1->cmp(list_checker=>~~&mycheck_add));
ANS($list2->cmp(list_checker=>~~&mycheck_mult));
ANS($subspace->cmp);
COMMENT('MathObject version');
ENDDOCUMENT();