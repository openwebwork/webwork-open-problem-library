# DESCRIPTION
# Problem from Holt Linear Algebra, 1st ed.
# WeBWorK problem written by Gavin LaRose,
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Matrix Operations')
## KEYWORDS('matrix multiplication, transpose, identity matrix')
## TitleText1('Linear Algebra')
## EditionText1('1')
## AuthorText1('Holt')
## Section1('3.2')
## Problem1('1')
## Author('Gavin LaRose')
## Institution('UMich')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
# "compoundProblem.pl",
"parserPopUp.pl",
);

# make sure we're in the context we want
Context("Matrix");

# make A or C 3x2
$is3x2 = list_random('a', 'c');

# some matrices
$mat1 = Matrix( [[ random(-5,5,1), random(-3,3,1) ],
		 [ random(-3,3,1), random(-5,5,1) ],
		 [ random(-5,5,1), random(-3,3,1) ]] );
$mat2 = Matrix( [[ random(-3,3,1), random(-3,3,1) ],
		 [ random(-3,3,1), random(-3,3,1) ]] );
$bmat = Matrix( [[ random(-3,3,1), random(-3,3,1) ],
		 [ random(-3,3,1), random(-3,3,1) ]] );

# popups give whether a given calculation is possible
$canABpI = PopUp( [ '?', 'can be calculated', 'cannot be calculated' ],
		  'can be calculated' );

if ( $is3x2 eq 'a' ) {
    $amat = $mat1;  $cmat = $mat2;
    $ac = 'C';

    $canApB = PopUp( [ '?', 'can be calculated', 'cannot be calculated' ],
		     'cannot be calculated' );
    $canBpC = PopUp( [ '?', 'can be calculated', 'cannot be calculated' ],
		     'can be calculated' );

    $bpc = $bmat + $cmat;
    $abpi = $cmat * $bmat + Value::Matrix->I(2);
} else {
    $amat = $mat2;  $cmat = $mat1;
    $ac = 'A';

    $canApB = PopUp( [ '?', 'can be calculated', 'cannot be calculated' ],
		     'can be calculated' );
    $canBpC = PopUp( [ '?', 'can be calculated', 'cannot be calculated' ],
		     'cannot be calculated' );

    $apb = $amat + $bmat;
    $abpi = $amat * $bmat + Value::Matrix->I(2);
}

# $cp = new compoundProblem( parts=>2, weights=>[1,3], nextStyle=>'Forced' );

##### start part 1

$showPartialCorrectAnswers = 0;

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT
${BITALIC}(Note that this is a compound problem, for which the
second part of the problem is shown after the true/false questions
in the first part are answered correctly.)$EITALIC
$PAR

If
\[ A = $amat, B = $bmat, C = $cmat \]
indicate if it is possible to find each of the following.
${BITALIC}(If it is not, be sure you can explain why not.
Note that partial correct answers are not shown for this
problem part because answers are multiple choice.)$EITALIC

$PAR
${BBOLD}(a)$EBOLD
\(A + B\) \{ $canApB->menu() \}

$PAR
${BBOLD}(b)$EBOLD
\($ac B + I_2\)  \{ $canABpI->menu() \}

$PAR
${BBOLD}(c)$EBOLD
\(B + C\)  \{ $canBpC->menu() \}

END_TEXT
Context()->normalStrings;

ANS( $canApB->cmp() );
ANS( $canABpI->cmp() );
ANS( $canBpC->cmp() );

$ans_hash1 = $canApB->cmp()->evaluate( $inputs_ref->{ANS_NUM_TO_NAME(1)} );
$ans_hash2 = $canABpI->cmp()->evaluate( $inputs_ref->{ANS_NUM_TO_NAME(2)} );
$ans_hash3 = $canBpC->cmp()->evaluate( $inputs_ref->{ANS_NUM_TO_NAME(3)} );

if ( $ans_hash1->{score} == 1 && $ans_hash2->{score} == 1 &&
     $ans_hash3->{score} == 1 ) {
$showPartialCorrectAnswers = 1;

# we include the pop-ups from before to suppress input errors

Context()->texStrings;
BEGIN_TEXT

$PAR
Find the result of each possible calculation.

END_TEXT

if ( $is3x2 eq 'a' ) {
BEGIN_TEXT

$PAR
${BBOLD}(a)$EBOLD
\(A + B\)  ${BITALIC}Cannot be calculated.$EITALIC

END_TEXT
} else {
BEGIN_TEXT

$PAR
${BBOLD}(a)$EBOLD
\(A + B = \)  \{ $apb->ans_array() \}

END_TEXT
Context()->normalStrings;

ANS( $apb->cmp() );
} # end if is3x2 eq a/else

Context()->texStrings;
BEGIN_TEXT

$PAR
${BBOLD}(b)$EBOLD
\($ac B + I_2 = \)  \{ $abpi->ans_array() \}

END_TEXT
Context()->normalStrings;

ANS( $abpi->cmp() );

if ( $is3x2 eq 'a' ) {

Context()->texStrings;
BEGIN_TEXT
$PAR
${BBOLD}(c)$EBOLD
\(B + C = \)  \{ $bpc->ans_array() \}

END_TEXT
Context()->normalStrings;

ANS( $bpc->cmp() );

} else {

Context()->texStrings;
BEGIN_TEXT
$PAR
${BBOLD}(c)$EBOLD
\(B + C \)  ${BITALIC}Cannot be calculated.$EITALIC

END_TEXT
Context()->normalStrings;

} # end if is3x2 eq a
} # end part conditional
##### end part 2

Context()->texStrings;
if ( $is3x2 eq 'a' ) {
    $atxt =<<EOT;
This cannot be calculated, because \(A\) is a \(3\times2\) matrix
while \(B\) is \(2\times2\).
EOT
    $ctxt =<<EOT;
This can be calculated, because \(B\) and \(C\) are both \(2\times2\)
matrices:
\[ B + C = $bmat + $cmat = $bpc. \]
EOT
} else {
    $atxt =<<EOT;
This can be calculated, because \(A\) and \(B\) are both \(2\times2\)
matrices:
\[ A + B = $amat + $bmat = $apb. \]
EOT
    $ctxt =<<EOT;
This cannot be calculated, because \(C\) is a \(3\times2\) matrix
while \(B\) is \(2\times2\).
EOT
}
Context()->normalStrings;

$abmat = $mat2 * $bmat;
$i2 = Value::Matrix->I(2);

Context()->texStrings;
BEGIN_SOLUTION

${BBOLD}(a)$EBOLD
\( A + B \)
$atxt

$PAR
${BBOLD}(b)$EBOLD
\( $ac B + I_2 \)
This may be calculated, as \($ac\), \(B\) and \(I_2\) are
all \(2\times 2\) matrices:
\[$ac B + I_2 = $mat2 $bmat + $i2 = $abmat + $i2 = $abpi. \]

$PAR
${BBOLD}(c)$EBOLD
\( B + C \)
$ctxt

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
