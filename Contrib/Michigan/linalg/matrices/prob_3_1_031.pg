# DESCRIPTION
# Problem from Holt Linear Algebra, 1st ed.
# WeBWorK problem written by Gavin LaRose,
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Linear Transformations')
## KEYWORDS('linear transformations, geometry of linear transformations')
## TitleText1('Linear Algebra')
## EditionText1('1')
## AuthorText1('Holt')
## Section1('3.1')
## Problem1('31')
## Author('Gavin LaRose')
## Institution('UMich')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGgraphmacros.pl",
"parserPopUp.pl",
"unionTables.pl",
);

# make sure we're in the context we want
Context("Matrix");
$refreshCachedImages = 1;

# the matrix we're using for our transformation
$a11 = random(1,3,1);
$a12 = random(-4,-1,1);
$a21 = $a11 + random(1,3,1);
$a22 = $a11 + non_zero_random(-2,2,1);
$a22 = $a21 + 1 if ( $a22 == $a21 || $a22 == 0 || $a22 == $a12 );
@allMats = ();
$allMats[0] = Matrix( [ [ $a11, $a12 ], [ $a21, $a22 ] ] );

# some others to show
$allMats[1] = Matrix( [ [ 0, $a12 ], [ $a21, $a22 ] ] );
$allMats[2] = Matrix( [ [ $a11, 0 ], [ $a21, $a22 ] ] );
$allMats[3] = Matrix( [ [ $a11, $a12 ], [ 0, $a22 ] ] );
$allMats[4] = Matrix( [ [ $a11, $a12 ], [ $a21, 0 ] ] );
$allMats[5] = Matrix( [ [ -1*$a11, $a12 ], [ $a21, $a22 ] ] );
$allMats[6] = Matrix( [ [ $a11, -1*$a12 ], [ $a21, $a22 ] ] );
$allMats[7] = Matrix( [ [ -$a21, -$a22 ], [ $a12, $a11 ] ] );
$allMats[8] = Matrix( [ [ -1*$a11, $a12 ], [ -1*$a21, $a22 ] ] );

# the coordinates of the transformed vertices of the unit square
@usq = ( [0,0], [1,0], [1,1], [0,1] );
@pts = ();
for ( my $i=0; $i<@allMats; $i++ ) {
    $pts[$i] = [ ];
    for ( my $j=0; $j<4; $j++ ) {
	my $tpt = [ $allMats[$i]->element(1,1) * $usq[$j]->[0] +
		    $allMats[$i]->element(1,2) * $usq[$j]->[1],
		    $allMats[$i]->element(2,1) * $usq[$j]->[0] +
		    $allMats[$i]->element(2,2) * $usq[$j]->[1] ];
	push( @{$pts[$i]}, $tpt );
    }
}

# the graphs and images we insert into the problem
@gr  = ();
@img = ();
for ( my $i=0; $i<@allMats; $i++ ) {

    # work out a good domain on which to graph the transformation
    $minx = 0;  $maxx = 0;
    $miny = 0;  $maxy = 0;
    for ( my $j=0; $j<4; $j++ ) {
	$minx = $pts[$i]->[$j]->[0] if ( $pts[$i]->[$j]->[0] < $minx );
	$maxx = $pts[$i]->[$j]->[0] if ( $pts[$i]->[$j]->[0] > $maxx );
	$miny = $pts[$i]->[$j]->[1] if ( $pts[$i]->[$j]->[1] < $miny );
	$maxy = $pts[$i]->[$j]->[1] if ( $pts[$i]->[$j]->[1] > $maxy );
    }
    $minx--; $miny--; $maxx++; $maxy++;
    $minx = -1 if ( $minx >= 0 );  $maxx = 1 if ( $maxx <= 0 );
    $miny = -1 if ( $minx >= 0 );  $maxy = 1 if ( $maxy <= 0 );

    $gr[$i] = init_graph( $minx,$miny,$maxx,$maxy, axes=>[0,0],
			  ticks=>[$maxx-$minx,$maxy-$miny], size=>[200,200] );
    $gr[$i]->new_color("lightblue", 214,230,244);
    $gr[$i]->moveTo( $pts[$i]->[3]->[0], $pts[$i]->[3]->[1] );
    for ( my $j=0; $j<4; $j++ ) {
	$gr[$i]->lineTo( $pts[$i]->[$j]->[0], $pts[$i]->[$j]->[1], 'blue', 2 );
    }
    $gr[$i]->fillRegion( [ $pts[$i]->[2]->[0]/2, $pts[$i]->[2]->[1]/2,
			   "lightblue" ] );
    $img[$i] = image( insertGraph($gr[$i]), width=>200, height=>200,
    		      tex_size=>250, extra_html_tags=>'alt="graph of ' .
    		      'the quadrilateral having vertices (0,0), ' .
    		      '(' . $pts[$i]->[1]->[0] . ',' . $pts[$i]->[1]->[1] .
    		      '), ' .
    		      '(' . $pts[$i]->[2]->[0] . ',' . $pts[$i]->[2]->[1] .
    		      '), and ' .
    		      '(' . $pts[$i]->[3]->[0] . ',' . $pts[$i]->[3]->[1] .
    		      ')."' );
}

# randomly order these
@reorder = shuffle( scalar(@allMats) );
@img = @img[@reorder];
# the correct answer is where 0 ended up
@inv = invert( @reorder );
$cind = $inv[0];
$correct = $cind + 1;

# the selector
@allNums = ( 1 .. scalar(@allMats) );
$selGraph = PopUp( [ '?', @allNums ], $correct );

# the table of graphs
$grTable = BeginTable();
for ( my $i=0; $i<@img; $i+=3 ) {
    my $j = $i + 1;
    my $k = $i + 2;
    my $l = $i + 3;
    $grTable .= AlignedRow( [ "${BBOLD}$j.$EBOLD$SPACE" . $img[$i],
			      "${BBOLD}$k.$EBOLD$SPACE" . $img[$i+1],
			      "${BBOLD}$l.$EBOLD$SPACE" . $img[$i+2] ] );
}
$grTable .= EndTable();

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

Suppose that \(T(\mathbf{x}) = A\mathbf{x}\) for \( A = $allMats[0] \).
Sketch a graph of the image under \(T\) of the unit square in the
first quadrant.  Which of the following is the correct image?
$BR
graph \{ $selGraph->menu() \}
$PAR
$PAR
$grTable

END_TEXT
Context()->normalStrings;

ANS( $selGraph->cmp() );

Context()->texStrings;
BEGIN_SOLUTION

We can determine the graph by transforming the vertices of the
unit square, \((0,0)\), \((1,0)\), \((1,1)\), and \((0,1)\) and
graphing the resulting quadrilateral.  In this case we have
\[T((0,0)) = $allMats[0] \begin{bmatrix} 0\\ 0\end{bmatrix} =
    \begin{bmatrix} 0\\ 0\end{bmatrix},\]
as we would expect.  Similarly,
\[T((1,0)) = $allMats[0] \begin{bmatrix} 1\\ 0\end{bmatrix} =
    \begin{bmatrix} $pts[0]->[1]->[0]\\ $pts[0]->[1]->[1]\end{bmatrix},\]
and so on:
\(T((1,1)) = \begin{bmatrix} $pts[0]->[2]->[0]\\
$pts[0]->[2]->[1]\end{bmatrix}\) and
\(T((0,1)) = \begin{bmatrix} $pts[0]->[3]->[0]\\
$pts[0]->[3]->[1]\end{bmatrix}\).  Thus we have graph ${BBOLD}$correct$EBOLD,
$BR
$BCENTER
$img[$cind]
$ECENTER

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
