# DESCRIPTION
# Problem from Holt Linear Algebra, 1st ed.
# WeBWorK problem written by Gavin LaRose,
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Linear Transformations')
## KEYWORDS('linear transformations, one-to-one, onto')
## TitleText1('Linear Algebra')
## EditionText1('1')
## AuthorText1('Holt')
## Section1('3.1')
## Problem1('28')
## Author('Gavin LaRose')
## Institution('UMich')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserVectorUtils.pl",
"parserPopUp.pl",
);

# make sure we're in the context we want
Context("Matrix");
Context()->variables->add( a=>'Real' );
Context()->strings->add(none=>{});

# $\displaystyle A = \begin{bmatrixr}
#                     1 & 2 & -5 \\
#                     3 & 7 & -8 \\
#                     -2 & -4 & 6
#                     \end{bmatrixr}$\vspace*{3pt}
# decide if we're going to be one-to-one and onto or not,
#    favoring the former
$whichoo = random(0,3,1);
@row1 = ( 1, random(1,3,1), random(-4,-2,1) );
@row2 = ( random(1,5,1), random(1,5,1), random(-5,-1,1) );
# add a negative component
$mult = random(-4,-2,1);
$m2 = -1*$mult + $r2vals[0];

if ( $whichoo ) {
    $oneonto = 'both one-to-one and onto';
    $not = '';

    @off  = ( 0, 0, 1 );
    @row3 = map { $mult*$row1[$_] - $row2[$_] + $off[$_] } ( 0, 1, 2 );
    $amat = Matrix( [ [@row1], [@row2], [@row3] ] );

} else {
    $oneonto = 'neither one-to-one nor onto';
    $not = 'not';

    @off  = ( 0, 0, 0 );
    @row3 = map { $mult*$row1[$_] - $row2[$_] } ( 0, 1, 2 );
}
$amat = Matrix( [ [@row1], [@row2], [@row3] ] );

# set up the pop-up
$char = PopUp( [ '?', 'one-to-one', 'onto', 'both one-to-one and onto',
		 'neither one-to-one nor onto' ],
	       $oneonto );

# a second matrix
$mult2 = random(1,3,1);
@newRow3 = map { $mult2*$row1[$_] - $row2[$_] } ( 0, 1, 2 );
$amat2 = Matrix( [ [@row1], [@row2],
		   [$newRow3[0], $newRow3[1], Compute("a")] ] );
# possible values for a
$aval1 = Compute( $newRow3[2] - 1 );
$aval2 = Compute( $newRow3[2] - 1 );
$aval3 = Compute( $newRow3[2] - 1 );
$aval4 = Compute( $newRow3[2] );

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

Let \(T(\mathbf{x}) = A\mathbf{x}\).
$PAR
${BBOLD}(a)$EBOLD
If \(A = $amat\), \(T\) is \{ $char->menu() \}.

$PAR
${BBOLD}(b)$EBOLD
Now consider \( A = $amat2 \), where \(a\) is a constant.
Give a value of \(a\) that makes \(T\) each of the following:$BR
one-to-one:          \( a = \) \{ $aval1->ans_rule() \} $BR
onto:                \( a = \) \{ $aval2->ans_rule() \} $BR
one-to-one and onto: \( a = \) \{ $aval3->ans_rule() \} $BR
neither one-to-one nor onto: \( a = \) \{ $aval4->ans_rule() \} $BR

END_TEXT
Context()->normalStrings;

ANS( $char->cmp() );
ANS( $aval1->cmp( checker=>sub {
		      my ($cor, $stu, $ans) = @_;
		      my $m2 = Matrix( [ [@row1], [@row2],
					 [$newRow3[0], $newRow3[1], $stu] ] );
		      return $m2->det();
		  } ) );
ANS( $aval2->cmp( checker=>sub {
		      my ($cor, $stu, $ans) = @_;
		      my $m2 = Matrix( [ [@row1], [@row2],
					 [$newRow3[0], $newRow3[1], $stu] ] );
		      return $m2->det();
		  } ) );
ANS( $aval3->cmp( checker=>sub {
		      my ($cor, $stu, $ans) = @_;
		      my $m2 = Matrix( [ [@row1], [@row2],
					 [$newRow3[0], $newRow3[1], $stu] ] );
		      return $m2->det();
		  } ) );
ANS( $aval4->cmp( checker=>sub {
		      my ($cor, $stu, $ans) = @_;
		      my $m2 = Matrix( [ [@row1], [@row2],
					 [$newRow3[0], $newRow3[1], $stu] ] );
		      return ($m2->det() == 0);
		  } ) );

$m3 = -1*$row3[0];

@rrRow2 = map { $row2[$_] - $row2[0]*$row1[$_] } ( 0, 1, 2 );
@rrRow3 = map { $row3[$_] + $m3*$row1[$_] } ( 0, 1, 2 );
$c2 = -$row2[0] + $m3;

@v = ( $amat->element(1,1), $amat->element(1,2), $amat->element(1,3) );

Context()->texStrings;
BEGIN_SOLUTION

${BBOLD}(a)$EBOLD
Because the matrix \(A\) is \(3\times3\) we know that the
transformation is one-to-one and onto if the columns of
\(A\) are linearly independent.  For \(A = $amat\), we can
check for linear independence by row-reducing the augmented
matrix corresponding to \(A\mathbf{x} = \mathbf{b}\):
\[ \begin{array}{ccc}
   \begin{bmatrix}
    $row1[0] & $row1[1] & $row1[2] & b_1 \\
    $row2[0] & $row2[1] & $row2[2] & b_2 \\
    $row3[0] & $row3[1] & $row3[2] & b_3
   \end{bmatrix}
   & \overset{\begin{aligned}\scriptstyle -$row2[0] R_1 &\scriptstyle + R_2 \Rightarrow R_2\\
	    \scriptstyle $m3 R_1 &\scriptstyle + R_3 \Rightarrow R_3\end{aligned}}{\sim} &
   \begin{bmatrix}
    $v[0] & $v[1] & $v[2] & b_1 \\
    0 & $rrRow2[1] & $rrRow2[2] & -$row2[0] b_1 + b_2 \\
    0 & $rrRow3[1] & $rrRow3[2] & $m3 b_1 + b_3
   \end{bmatrix} \\
   &\overset{R_2 + R_3 \Rightarrow R_3}{\sim}&
   \begin{bmatrix}
    $v[0] & $v[1] & $v[2] & b_1 \\
    0 & $rrRow2[1] & $rrRow2[2] & -$row2[0] b_1 + b_2 \\
    0 & 0 & $off[2] & $c2 b_1 + b_2 + b_3
   \end{bmatrix}.
   \end{array}
\]
This does $not have a solution, so the columns are $not linearly
independent, and the transformation is $oneonto.
$PAR

${BBOLD}(b)$EBOLD
In each of the first three cases we need to find a value for
\(a\) such that the columns of \(A = $amat2\) are linearly
independent; there are many possible values, one of which
is \(a = $aval1\).  For the last, we need to make the
columns linearly dependent, which we can do by making the third
a linear combination of the other two; this may be accomplished
by taking \(a = $aval4\).

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
