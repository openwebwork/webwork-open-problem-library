# DESCRIPTION
# Problem from Holt Linear Algebra, 1st ed.
# WeBWorK problem written by Gavin LaRose, 
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Linear Transformations')
## KEYWORDS('linear transformations, range')
## TitleText1('Linear Algebra')
## EditionText1('1')
## AuthorText1('Holt')
## Section1('3.1')
## Problem1('7')
## Author('Gavin LaRose')
## Institution('UMich')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserPopUp.pl",
);

# make sure we're in the context we want
Context("Matrix");

# define a matrix A
if ( random(0,1,1) ) {
    $v1 = 0;  $v2 = 1;
} else {
    $v1 = 1;  $v2 = 0;
}
$a1 = random(1,2,1);
$a2 = random(-2,-1,1);
$a3mult = random(2,3,1);
$a3 = $a3mult*$a1;
$a4 = random(1,3,1);
$amat = Compute( "[[$a1,$a2,$v1],[$a3,$a4,$v2]]" );
# columns of A are defined to span R^2, so we know the vector
#    will be in the range of T(x)
$inRange = PopUp( [ "?", "yes", "no" ], "yes" );

# pick a vector x to generate y
$x1 = random(-2,-1,1);
$x2 = random(1,2,1);
$x3 = random(2,4,1);
$xvec = Compute( "[[$x1],[$x2],[$x3]]" );
$yvec = $amat * $xvec;

# the components of y
($y1, $y2) = ( $yvec->element(1,1), $yvec->element(2,1) );

# then we've picked A so that taking -$a3mult R1 + R2 gives a
#    zero in the second row, first column
@brow = ( 0, $a4 - $a3mult*$a2, $v2 - $a3mult*$v1, $y2 - $a3mult*$y1 );
$bmat = Matrix( "[[$a1,$a2,$v1,$y1],[$brow[0],$brow[1],$brow[2],$brow[3]]]" );

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

Let \( A = $amat \) and \( T(\mathbf{x}) = A\mathbf{x}\).
$PAR
${BBOLD}(a)$EBOLD
Let \(\mathbf{y} = $yvec\).
$BR
Is this vector in the range of the linear transformation?
\{ $inRange->menu() \}
$PAR
${BBOLD}(b)$EBOLD
If your answer to (a) is "yes," give a vector \(\mathbf{x}\)
in the domain of \(T\) that gives \(\mathbf{y}\).  If not, give a
vector \(\mathbf{x}\) that is in the range of \(T\).
$BR
\(\mathbf{x} = \) \{ $xvec->ans_array() \}

$PAR
\($la\)
$PAR
\($ra\)

END_TEXT
Context()->normalStrings;

ANS( $inRange->cmp() );
ANS( $xvec->cmp( checker=>sub {
		     my ($cor, $stu, $ans) = @_;
		     return $amat * $stu == $yvec; } ) );

# I suspect this could be done with MathObjects calls,
#  though the formatting might not be quite so clean
($n,$d) = reduce( $brow[3], $brow[1] );
$s = $n > 0 ? '' : '-';
$el2 = ( $d == 1 ) ? $n : "$s\frac{" . abs($n) . "}{$d}";
($n,$d) = reduce( ($y1*$brow[1] - $a2*$brow[3]), ($brow[1]*$a1) );
$s = $n > 0 ? '' : '-';
$el1 = ( $d == 1 ) ? $n : "$s\frac{" . abs($n) . "}{$d}";
@x1 = ( $el1, $el2, 0 );

# The kernel of the transformation is then
($n,$d) = reduce( -$brow[2], $brow[1] );
$s = $n > 0 ? '' : '-';
$el2 = ( $d == 1 ) ? $n : "$s\frac{" . abs($n) . "}{$d}";
($n,$d) = reduce( (-$v1*$d - $a2*$n), ($a1*$d) );
$s = $n > 0 ? '' : '-';
$el1 = ( $d == 1 ) ? $n : "$s\frac{" . abs($n) . "}{$d}";
@x2 = ( $el1, $el2, 1 );

Context()->texStrings;
BEGIN_SOLUTION

${BBOLD}(a)$EBOLD
Note that the columns of \(A\) span \(\mathbf{R}^2\), so we know
that the transformation \(T\) is onto.  Thus we know that \(\mathbf{y}\)
must be in the range of the linear transformation.  We can also
row-reduce the corresponding augmented matrix to obtain the echelon form
\[ \begin{bmatrix} $a1 & $a2 & $v1 & $y1\\
   $a3 & $a4 & $v2 & $y2 \end{bmatrix} \sim $bmat \]
Back substitution yields
\[ \mathbf{x} = \begin{bmatrix} $x1[0]\\ $x1[1]\\ $x1[2]\end{bmatrix}
   + s \begin{bmatrix} $x2[0]\\ $x2[1]\\ $x2[2]\end{bmatrix}, \]
where \(s\) can be any real number.

$PAR
${BBOLD}(b)$EBOLD
There are many possible answers, obtained by picking different values
of \(s\).  One such is
\[ \mathbf{x} = $xvec \]

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
