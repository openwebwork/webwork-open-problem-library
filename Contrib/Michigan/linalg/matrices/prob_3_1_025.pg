# DESCRIPTION
# Problem from Holt Linear Algebra, 1st ed.
# WeBWorK problem written by Gavin LaRose,
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Linear Transformations')
## KEYWORDS('linear transformations, one-to-one, onto')
## TitleText1('Linear Algebra')
## EditionText1('1')
## AuthorText1('Holt')
## Section1('3.1')
## Problem1('25')
## Author('Gavin LaRose')
## Institution('UMich')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"parserPopUp.pl",
);

# make sure we're in the context we want
Context("Matrix");
Context()->variables->add( a=>'Real' );

# decide if we're going to be one-to-one or not,
#    favoring the former
$whichoo = random(0,3,1);
$val1 = 1;
$val2 = random(-4,-1,1);
$val3 = random(2,4,1);
$mult = random(-3,-2,1);
if ( $whichoo ) {
    $oneonto = 'one-to-one';
    $not = '';

    $val4 = $mult*$val1;
    $val5 = $mult*$val2 - 1;
    $val6 = ($mult-1)*$val3;
} else {
    $oneonto = 'neither one-to-one nor onto';
    $not = 'not';

    $val4 = $mult*$val1;
    $val5 = $mult*$val2;
    $val6 = $mult*$val3;
}
$amat = Matrix( [[$val1, $val4],[$val2, $val5],[$val3, $val6]] );

$char = PopUp( [ '?', 'one-to-one', 'onto', 'both one-to-one and onto',
		 'neither one-to-one nor onto' ],
	       $oneonto );

# a new matrix
$amat2 = Matrix( [[$val1, $mult*$val1],[$val2, $mult*$val2],
		  [Compute("a"), $mult*$val3]] );
# possible values
$aval1 = Compute( $val3 - 1 );
$aval2 = Compute( "none" );
$aval3 = Compute( "none" );
$aval4 = Compute( $val3 );
# typeMatch=>Value::Complex

# the second column vector is
$v1 = ColumnVector( $mult*$val1, $mult*$val2, $mult*$val3 );

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT

Let \(T(\mathbf{x}) = A\mathbf{x}\).
$PAR
${BBOLD}(a)$EBOLD
If \(A = $amat\), \(T\) is \{ $char->menu() \}.

$PAR
${BBOLD}(b)$EBOLD
Now consider \( A = $amat2 \), where \(a\) is a constant.
Give a value of \(a\) that makes \(T\) each of the following
${BITALIC}(if it is not possible to find such a value of \(a\),
enter ${BBOLD}none$EBOLD)$EITALIC:$BR
one-to-one:          \( a = \) \{ $aval1->ans_rule() \} $BR
onto:                \( a = \) \{ $aval2->ans_rule() \} $BR
one-to-one and onto: \( a = \) \{ $aval3->ans_rule() \} $BR
neither one-to-one nor onto: \( a = \) \{ $aval4->ans_rule() \} $BR

END_TEXT
Context()->normalStrings;

ANS( $char->cmp() );
ANS( $aval1->cmp( checker=>sub {
		      my ($cor, $stu, $ans) = @_;
		      my $v2 = ColumnVector( $val1, $val2, $stu );
		      return ! $v1->isParallel($v2);
		  } ) );
ANS( $aval2->cmp( typeMatch=>Value::Real ) );
ANS( $aval3->cmp( typeMatch=>Value::Real ) );
ANS( $aval4->cmp() );

Context()->texStrings;
BEGIN_SOLUTION

${BBOLD}(a)$EBOLD
Because the matrix \(A\) is \(2\times3\) we know that the
transformation cannot be onto (it maps \(R^2\to R^3\)).  It is
one-to-one if the columns of \(A\) are linearly independent.
For \(A = $amat\), the columns are $not linearly independent,
so it is $oneonto.
$PAR

${BBOLD}(b)$EBOLD
In the first case we need to find a value for
\(a\) such that the columns of \(A = $amat2\) are linearly
independent; there are many possible values, one of which
is \(a = $aval1\).  For the second and third cases, we know
it is impossible to make the transformation be onto, so no
values will work.  For the last, we need to make the
columns linearly dependent, which we can do by making them
a constant multiple of each other, so take \(a = $aval4\).

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
