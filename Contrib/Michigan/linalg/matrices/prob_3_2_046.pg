# DESCRIPTION
# Problem from Holt Linear Algebra, 1st ed.
# WeBWorK problem written by Gavin LaRose,
# <glarose(at)umich(dot)edu>
# ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Matrix Operations')
## KEYWORDS('matrix algebra')
## TitleText1('Linear Algebra')
## EditionText1('1')
## AuthorText1('Holt')
## Section1('3.2')
## Problem1('46')
## Author('Gavin LaRose')
## Institution('UMich')

DOCUMENT();
loadMacros(
"PGstandard.pl",
"MathObjects.pl",
# "compoundProblem.pl",
"parserPopUp.pl",
"parserMultiAnswer.pl",
);

# make sure we're in the context we want
Context("Matrix");

# a list of statements
@states = ( 'If \(AB = BA\), then either \(A = I_n\) or \(B = I_n\).',
	    'If \(AB = BA\), then either \(A = 0_{nn}\) or \(B = 0_{nn}\).',
	    'If \(A\) and \(B\) are diagonal, then \(AB = BA\).',
	    'For all \(A\) and \(B\), \(AB^T = BA^T\).',
	    '\((AB)^T \ne A^TB^T\) for any \(A\) or \(B\).'
	    );
# and their truth
@truths = ( 'False', 'False', 'True', 'False', 'False' );
# pick two, being sure to get one of the first two
$ind1 = random(0,1,1);
$ind2 = random(2,4,1);

$tfState1 = PopUp( [ '?', 'True', 'False' ], $truths[$ind1] );
$tfState2 = PopUp( [ '?', 'True', 'False' ], $truths[$ind2] );

# the follow-up questions
@follow = ( 'Give a pair of \(2\times 2\) matrices \(A\) and \(B\) ' .
	        '(not equal to \(I_n\)) for which \(AB = BA\).',
	    'Give a pair of \(2\times 2\) matrices \(A\) and \(B\) ' .
	        '(not equal to \(0_{nn}\)) for which \(AB = BA\).' );
# explanations
if ( $ind1 ) {
    $stdMat = 'I_{n}';
    $smat   = Matrix( [[1,0],[0,1]] );
    $smat2  = Matrix( [[0,0],[0,0]] );
} else {
    $stdMat = '0_{nn}';
    $smat   = Matrix( [[0,0],[0,0]] );
    $smat2  = Matrix( [[1,0],[0,1]] );
}

$amat = Matrix( [[ 1, 0 ], [ 0, -1 ]] );
$bmat = Matrix( [[ 3, 0 ], [ 0, 2 ]] );

$abCheck = MultiAnswer( $amat, $bmat )->with(
    singleResult=>1,
    checker     => sub {
	my ( $cor, $stu, $ans ) = @_;
	return $stu->[0]*$stu->[1] == $stu->[0]*$stu->[1] &&
	  $smat2 != $stu->[0] && $smat2 != $stu->[1];
});

# $cp = new compoundProblem( parts=>2, weights=>[1,3], nextStyle=>'Forced' );

$showPartialCorrectAnswers = 0;

TEXT(beginproblem());
Context()->texStrings;
BEGIN_TEXT
${BITALIC}(Note that this is a compound problem, for which the
second part of the problem is shown after the true/false questions
in the first part are answered correctly.)$EITALIC
$PAR

In the following, assume that \(A\) and \(B\) are \(n\times n\) matrices.
Determine if the statements are true or false.  In the second part of
the problem you will justify your answers.
$PAR
${BBOLD}(a)$EBOLD
$states[$ind1]  \{ $tfState1->menu() \}
$PAR

${BBOLD}(b)$EBOLD
$states[$ind2]  \{ $tfState2->menu() \}

END_TEXT
Context()->normalStrings;

# this screws up the advance at the end of the first part
# install_problem_grader( ~~&std_problem_grader );

ANS( $tfState1->cmp() );
ANS( $tfState2->cmp() );

$ans_hash1 = $tfState1->cmp()->evaluate( $inputs_ref->{ANS_NUM_TO_NAME(1)} );
$ans_hash2 = $tfState2->cmp()->evaluate( $inputs_ref->{ANS_NUM_TO_NAME(2)} );

if ( $ans_hash1->{score} == 1 && $ans_hash2->{score} == 1 ) {

Context()->texStrings;
BEGIN_TEXT

$PAR
$follow[$ind1]
$PAR
\(A = \) \{ $abCheck->ans_array() \} $BR
\(B = \) \{ $abCheck->ans_array() \}

END_TEXT
Context()->normalStrings;

ANS( $abCheck->cmp() );

} # end if ( $cp->part > 1 )

$abmat = $amat*$bmat;

Context()->texStrings;
BEGIN_SOLUTION

$BBOLD(a)$EBOLD
$states[$ind1]  This is $truths[$ind1].
$PAR
${BBOLD}(b)$EBOLD
$states[$ind2]  This is $truths[$ind2].

$PAR
Any diagonal matrices \(A\) and \(B\) will have \(AB = BA\).
For example, with \( A = $amat \) and \( B = $bmat \), we have
\(AB = BA = $abmat\).  Alternately, taking \(A\) or \(B\) to
be \($stdMat = $smat\) will also work.

END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();
