## DESCRIPTION
## Linear Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 5/3/06

## DBsubject(Linear algebra)
## DBchapter(Matrix factorizations)
## DBsection(QR factorization)
## Date(July 2013)
## Institution(Rochester and Hope College)
## Author(Paul Pearson)
## Level(3)
## MO(1)
## TitleText1('Linear Algebra with Applications')
## AuthorText1('Jeffrey Holt')
## EditionText1('1')
## Section1('8.3')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGcourse.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context('Matrix');

#$myQ = new Matrix(3,2);
#$myR = new Matrix(2,2);
#$M = new Matrix(3,2);

$norm = 7;

@entr1 = (2,3,6);
@entr2 = (6,2,-3);

$sign1 = random(-1,1,2);
$sign2 = random(-1,1,2);

@slice = NchooseK(3,3);

foreach $i (0..2) {
	$myq[$i][0] = $entr1[$slice[$i]] * $sign1;
	$myq[$i][1] = $entr2[$slice[$i]] * $sign2;
	#$myQ->assign($i+1,1, $myq[$i][0]);
	#$myQ->assign($i+1,2, $myq[$i][1]);
}

$myQ = Matrix([
[ $myq[0][0], $myq[0][1] ],
[ $myq[1][0], $myq[1][1] ],
[ $myq[2][0], $myq[2][1] ],
]);

#$myR->assign(1,1, random(1,3,1));
#$myR->assign(1,2, non_zero_random(-5,5,1));
#$myR->assign(2,1, 0);
#$myR->assign(2,2, random(1,3,1));

$myR = Matrix([
[random(1,3,1),non_zero_random(-5,5,1)],
[0,random(1,3,1)],
]);

$M = $myQ * $myR;

#$Q = new Matrix(3,2);
#$R = new Matrix(2,2);

foreach $i (0..2) {
	foreach $j (0..1) { 
 	       	$q[$i][$j] = $myq[$i][$j]/$norm;
		#$Q->assign($i+1,$j+1, $q[$i][$j]);
	}
}

$Q = Matrix([
[ $q[0][0], $q[0][1] ],
[ $q[1][0], $q[1][1] ],
[ $q[2][0], $q[2][1] ],
]);

$R = $myR * $norm;

$e1=ColumnVector(1,0);
$e2=ColumnVector(0,1);
$v1=$M*$e1;
$v2=$M*$e2;
$u1=$Q*$e1;
$u2=$Q*$e2;

Context()->texStrings;
BEGIN_TEXT
Let \(\vec v_1=$v1\) and \(\vec v_2=$v2\). These vectors form a basis for a subspace \(V\) of \(\mathbb R^3\). Starting with \(\vec v_1,\vec v_2\), use the Gram-Schmidt process to find an orthonormal basis \(\vec u_1,\vec u_2\) for \(V\).
$BR
\(\vec u_1=\) \{$u1->ans_array()\};
\(\vec u_2=\) \{$u2->ans_array()\}.
END_TEXT
Context()->normalStrings;

ANS($u1->cmp);
ANS($u2->cmp);
;
ENDDOCUMENT();       # This should be the last executable line in the problem.
