#Problem APEX 4.1.10

DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(
    "PGstandard.pl",
    "MathObjects.pl",
    "PGgraphmacros.pl",
);

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Newton's method)
## Institution('Valdosta State University')
## Author('S. V. Ault')
## TitleText1('APEX Calculus')
## AuthorText1('Hartman')
## EditionText1('3.0')
## Section1('4.1')
## Problem1('10')

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$a1 = random(5,10,1);

$f = Formula("x^17 - 2x^13 - 10x^8 + $a1");
$df=$f->D('x');

$fx = "x^{17} - 2x^{13} - 10x^8 + $a1";

### Root Finding ###
$xa0 = -1;
$xa1 = $xa0 - ($f->eval(x=>$xa0))/($df->eval(x=>$xa0));
$xa2 = $xa1 - ($f->eval(x=>$xa1))/($df->eval(x=>$xa1));
$xa3 = $xa2 - ($f->eval(x=>$xa2))/($df->eval(x=>$xa2));
$xa4 = $xa3 - ($f->eval(x=>$xa3))/($df->eval(x=>$xa3));
$xa5 = $xa4 - ($f->eval(x=>$xa4))/($df->eval(x=>$xa4));

$xb0 = 1;
$xb1 = $xb0 - ($f->eval(x=>$xb0))/($df->eval(x=>$xb0));
$xb2 = $xb1 - ($f->eval(x=>$xb1))/($df->eval(x=>$xb1));
$xb3 = $xb2 - ($f->eval(x=>$xb2))/($df->eval(x=>$xb2));
$xb4 = $xb3 - ($f->eval(x=>$xb3))/($df->eval(x=>$xb3));
$xb5 = $xb4 - ($f->eval(x=>$xb4))/($df->eval(x=>$xb4));

$xc0 = 1.5;
$xc1 = $xc0 - ($f->eval(x=>$xc0))/($df->eval(x=>$xc0));
$xc2 = $xc1 - ($f->eval(x=>$xc1))/($df->eval(x=>$xc1));
$xc3 = $xc2 - ($f->eval(x=>$xc2))/($df->eval(x=>$xc2));
$xc4 = $xc3 - ($f->eval(x=>$xc3))/($df->eval(x=>$xc3));
$xc5 = $xc4 - ($f->eval(x=>$xc4))/($df->eval(x=>$xc4));

$ans = List($xa5, $xb5, $xc5);

########################################
## Graphs

$w = 400;  # graph size
$tw = 400; # graph size in TeX
$xmin = -2;
$xmax = 2;
$xr = $xmax - $xmin;

$graph = init_graph($xmin,-10,$xmax,10,'axes'=>[0,0],
  'ticks'=>[$xr,20],'size'=>[$w,$w]);

$p = FEQ("$fx for x in [$xmin,$xmax] using color:blue weight:2");

plot_functions($graph,$p);

###################################
# Main text

Context()->texStrings;
BEGIN_TEXT
Use Newton's Method to approximate all roots of the given
function, within the given interval, 
accurate to 4 places after the decimal.  Use
the graph below to obtain good initial approximations.
\[  
   f(x) = $fx, \quad \textrm{on} \; (-2, 2)
\] 
\{image(insertGraph($graph),width=>$w,height=>$w,tex_size=>$tw)\}
$PAR
Root(s): \{ ans_rule(30) \}  (Separate multiple answers by commas.)
END_TEXT
Context()->normalStrings;

###################################
# Answers

Context()->flags->set(
  tolerance => 0.0001,
  tolType => "absolute",
);
ANS($ans->cmp());

###################################


Context()->texStrings;

SOLUTION(EV3(<<'END_SOLUTION'));
$BR$BBOLD Solution:$EBOLD 
$PAR
Set up the iterative formula for Newton's Method:
\[
  x_{n+1} = x_n - \dfrac{f(x_n)}{f'(x_n)} 
  = x_n - \dfrac{x_n^{17} - 2x_n^{13} - 10x_n^8 + $a1}
  {17x_n^{16} - 26x_n^{12} - 80x_n^7}
\]
$PAR
There are three roots.  The smallest is near \(x = $xa0\).
Using Newton's Method,
\[
  \begin{array}{rcl}
    x_0 &=& $xa0 \\
    &&\\
    x_1 &\approx& $xa1 \\
    &&\\
    x_2 &\approx& $xa2 \\
    &&\\
    x_3 &\approx& $xa3 \\
    &&\\
    x_4 &\approx& $xa4 \\
    &&\\
    x_5 &\approx& $xa5 \\
  \end{array}
\]
$PAR
The next root is near \(x = $xb0\).
Using Newton's Method,
\[
  \begin{array}{rcl}
    x_0 &=& $xb0 \\
    &&\\
    x_1 &\approx& $xb1 \\
    &&\\
    x_2 &\approx& $xb2 \\
    &&\\
    x_3 &\approx& $xb3 \\
    &&\\
    x_4 &\approx& $xb4 \\
    &&\\
    x_5 &\approx& $xb5 \\
  \end{array}
\]
$PAR
The largest root is near \(x = $xc0\).
Using Newton's Method,
\[
  \begin{array}{rcl}
    x_0 &=& $xc0 \\
    &&\\
    x_1 &\approx& $xc1 \\
    &&\\
    x_2 &\approx& $xc2 \\
    &&\\
    x_3 &\approx& $xc3 \\
    &&\\
    x_4 &\approx& $xc4 \\
    &&\\
    x_5 &\approx& $xc5 \\
  \end{array}
\]
END_SOLUTION
ENDDOCUMENT();    

