## DESCRIPTION
## This problem asks student to check if an equation is an line or not.
## ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Linear equations and functions)
## DBsection(Graphs of lines)
## Date(September 5, 2008)
## Institution(Fitchburg State University)
## Author(Peter Staab)
## Level(1)
## KEYWORDS('lines')

## updated 2022.09.10 by pstaab

DOCUMENT();    # This should be the first executable line in the problem.

loadMacros(
    'PGstandard.pl',         'PGML.pl',
    'parserPopUp.pl', 'PGtikz.pl',
    'niceTables.pl',         'PGcourse.pl'
);

TEXT(beginproblem);

Context('Numeric');

sub describeSlope {
    my $m = shift;
    if    (abs($m - 1) < 0.001)   { return 'Equal to 1'; }
    elsif (abs($m + 1) < 0.001)   { return 'Equal to -1'; }
    elsif (abs($m) < 0.001)       { return 'Equal to 0'; }
    elsif (($m > 0) && ($m < 1))  { return 'Between 0 and 1'; }
    elsif ($m > 1)                { return 'Greater than 1'; }
    elsif (($m < 0) && ($m > -1)) { return 'Between -1 and 0'; }
    elsif ($m < -1)               { return 'Less than -1'; }
    else                          { return 'Undefined'; }
}

sub boundBox {
    my ($m, $b) = @_;
    if ($m > 1) {
        return ((-8 - $b) / $m, (8 - $b) / $m, -8, 8);
    } elsif ($m >= -1 && $m <= 1) {
        return (-8, 8, -8 * $m + $b, 8 * $m + $b);
    } else {
        return ((8 - $b) / $m, (-8 - $b) / $m, 8, -8);
    }
}

sub lineGraph {
    my ($m, $b) = @_;
    ($x1, $x2, $y1, $y2) = boundBox($m, $b);
    $graph = createTikZImage();
    $graph->tikzLibraries('arrows.meta');
    $graph->tikzOptions('every node/.style={scale=1.5}');
    $graph->BEGIN_TIKZ
    \tikzset{>={Stealth[scale=1.5]}}
\filldraw[
    draw=LightBlue,
    fill=white,
    rounded corners=10pt,
    thick,use as bounding box
] (-9,-9) rectangle (9,9);
	\draw[->,thick] (-8.5,0) -- (8.5,0) node[above left,outer sep=2pt]{\(x\)};
	\draw[->,thick] (0,-8.5) -- (0,8.5) node[below right,outer sep=2pt]{\(y\)};
	\draw[thin, lightgray] (-8,-8) grid (8,8);
	\foreach \x in {-8,-6,...,-2,2,4,...,8}
        \draw[thin] (\x,5pt) -- (\x,-5pt) node[below]{\(\x\)};
	\foreach \y in {-8,-6,...,-2,2,4,...,8}
        \draw[thin] (5pt,\y) -- (-5pt,\y) node[left]{\(\y\)};
	\draw[<->,ForestGreen,very thick] ($x1,$y1) -- ($x2,$y2);
END_TIKZ
    return $graph;
}


# find where the line exits the box for simplying plotting and making it look nice.

$line_choices = [
    'Less than -1',
    'Equal to -1',
    'Between -1 and 0',
    'Equal to 0',
    'Between 0 and 1',
    'Equal to 1',
    'Greater than 1',
    'Undefined'
];

@b = map { random(-20, 20) / 4 } (0..3);
@m =  map { tan(random(0, 360, 15) / 180 * $PI) } (0..3);

@radios = map { DropDown($line_choices, describeSlope($m[$_])) } (0..3);
@graphs = map {lineGraph($m[$_], $b[$_]) } (0..3);

BEGIN_PGML

For each of the following determine what best fits the slope:

[@ LayoutTable([
    [PGML('[! alt !]{$graphs[0]}{300}'), PGML('[! alt !]{$graphs[1]}{300}')],
    [PGML('[_]{$radios[0]}'),PGML('[_]{$radios[1]}')],
    [PGML('[! alt !]{$graphs[2]}{300}'), PGML('[! alt !]{$graphs[3]}{300}')],
    [PGML('[_]{$radios[2]}'),PGML('[_]{$radios[3]}')]
    ])
 @]*

END_PGML


BEGIN_PGML_SOLUTION

Recall that a horizontal line has slope of 0.

If the line runs from the SW to the NE (or rises from left to right), then the slope
is a positive number.  A slope of +1 rises one unit for every one unit of run.
(For example the 45 degree line \(y=x\) has slope 1.)  If a line is not as steep as
this line, then it must have slope between 0 and 1. If a line still has positive slope
but is steeper than the \( y=x \) line then the slope is greater than one.

If a line runs from the NW to the SE (or falls from left to right), then the slope
is a negative number.  The line \( y=-x\) has a slope of -1 and falls one unit for
each unit of run. If a line with negative slope is less steep than \( y=-x \) then
its slope is between -1 and 0, and such a line that is steeper will have a slope less than -1.

END_PGML_SOLUTION

ENDDOCUMENT();    # This should be the last executable line in the problem.

