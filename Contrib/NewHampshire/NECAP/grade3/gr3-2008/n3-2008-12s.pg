DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");
($WIDTH,$HEIGHT,$TEXSIZE)=(500,100,150);

# now initialize the graph
$graph = init_graph(0,0, 5,1,size=>[$WIDTH,$HEIGHT]);

$graph->moveTo(.3,.5);
$graph->lineTo(4.8 ,.5 ,'black');
$b=.5; $a=.3;$c=.3; $d=.3;

         $circle_object1 = closed_circle( $a+$d,$b,'red' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle(2*$a+$d ,$b,'green' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(3*$a+$d ,$b,'blue' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(4*$a+$d,$b,'yellow' );
         $graph -> stamps($circle_object1);
         $circle_object1 = closed_circle( 6*$a+$d,$b,'red' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(7*$a+$d,$b,'green' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(8*$a+$d ,$b,'blue' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(9*$a+$d ,$b,'yellow' );
         $graph -> stamps($circle_object1);

        $circle_object1 = closed_circle( 11*$a+$d,$b,'red' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle( 12*$a+$d,$b,'green' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(13*$a+$d ,$b,'blue' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(14*$a+$d,$b,'yellow' );
         $graph -> stamps($circle_object1);

$graph->moveTo(.3,.6);
$graph->lineTo(.3 ,.4 ,'black');
$graph->moveTo(1.8,.4);
$graph->lineTo(1.8 ,.6 ,'black');
$graph->moveTo(3.3,.4);
$graph->lineTo(3.3 ,.6 ,'black');
$graph->moveTo(4.8,.4);
$graph->lineTo(4.8 ,.6 ,'black');
$a=.35; $b=.4;
         $label1=  new Label(.28 ,$b  , ' 0','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label($a+1.5 , $b  , '25 ','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label($a+3 ,  $b  , '50 ','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label($a+4.5 ,  $b , '75 ','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);

#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
$radio=new_multiple_choice();
$radio->qa("What color is the dot that represents 65 ", "blue ");
$radio->extra("yellow ", "red ", "green  ");

BEGIN_TEXT
Look at this number line 
$BR

#\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}

$PAR
\{$radio->print_q()\}
\{$radio->print_a()\}

END_TEXT
ANS(radio_cmp($radio->correct_ans()));
BEGIN_SOLUTION
$PAR Solution $PAR
the red dot after 50 is 55.  The green dot after it is 60. $BR
The blue dot after that is 65.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject('NECAP')
## DBchapter('Grade 3')
## DBsection('2008')

$graph->moveTo(.3,.5);
$graph->lineTo(3.3 ,.5 ,'black');
$b=.5; $a=.3;$c=.3; $d=.3;

         $circle_object1 = closed_circle( $a+$d,$b,'red' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(2*$a+$d ,$b,'green' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(3*$a+$d ,$b,'blue' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(4*$a+$d,$b,'black' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle( 6*$a+$d,$b,'red' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(7*$a+$d,$b,'green' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(8*$a+$d ,$b,'blue' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(9*$a+$d ,$b,'black' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle( 11*$a+$d,$b,'red' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle( 12*$a+$d,$b,'green' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(13*$a+$d ,$b,'blue' );
         $graph -> stamps($circle_object1);

         $circle_object1 = closed_circle(14*$a+$d,$b,'black' );
         $graph -> stamps($circle_object1);

for ($a=  ; $a<  ; $a++)
{$b=$a*  ;
$graph->moveTo(,);
$graph->lineTo( , ,'black');
}
$blue = $graph->im->colorAllocate(20,150,255);
$red = $graph->im->colorAllocate(255,100,100);
$green = $graph->im->colorAllocate(55,255,100);
$yellow = $graph->im->colorAllocate(255,250,20);
$purple = $graph->im->colorAllocate(155,50,255);
$graph->moveTo(,);
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');

$graph->moveTo(,);
$graph->lineTo( , ,'black');

         $label1=  new Label( ,  , ' ','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label( ,  , ' ','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label( ,  , ' ','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label( ,  , ' ','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);
         $label5=  new Label( ,  , ' ','black',('center','center'));
         $label5->font(GD::Font->Giant);
         $graph -> lb($label5);
         $label6=  new Label( ,  , ' ','black',('center','center'));
         $label6->font(GD::Font->Giant);
         $graph-> lb($label6);
         $label7=  new Label( ,  , ' ','black',('center','center'));
         $label7->font(GD::Font->Giant);
         $graph -> lb($label7);
         $label8=  new Label( ,  , ' ','black',('center','center'));
         $label8->font(GD::Font->Giant);
         $graph -> lb($label8);
         $label9=  new Label( ,  , ' ','black',('center','center'));
         $label9->font(GD::Font->Giant);
         $graph -> lb($label9);
         $label10=  new Label( ,  , ' ','black',('center','center'));
         $label10->font(GD::Font->Giant);
         $graph -> lb($label10);
         $label11=  new Label( ,  , ' ','black',('center','center'));
         $label11->font(GD::Font->Giant);
         $graph -> lb($label11);
         $label12=  new Label( ,  , ' ','black',('center','center'));
         $label12->font(GD::Font->Giant);
        $graph -> lb($label12);
         $label13=  new Label( ,  , ' ','black',('center','center'));
         $label13->font(GD::Font->Giant);
         $graph -> lb($label13);
         $label14=  new Label( ,  , ' ','black',('center','center'));
         $label14->font(GD::Font->Giant);
         $graph -> lb($label14);
         $label15=  new Label( ,  , ' ','black',('center','center'));
         $label15->font(GD::Font->Giant);
         $graph -> lb($label15);
         $label16=  new Label( ,  , ' ','black',('center','center'));
         $label16->font(GD::Font->Giant);
         $graph -> lb($label16);
         $label17=  new Label( ,  , ' ','black',('center','center'));
         $label17->font(GD::Font->Giant);
         $graph -> lb($label17);
         $label18=  new Label( ,  , ' ','black',('center','center'));
         $label18->font(GD::Font->Giant);
         $graph -> lb($label18);
         $label19=  new Label( ,  , ' ','black',('center','center'));
         $label19->font(GD::Font->Giant);
         $graph -> lb($label19);
         $label20=  new Label( ,  , ' ','black',('center','center '));
         $label20->font(GD::Font->Giant);
          $graph -> lb($label20);



#TWO HALVES OF A CIRCLE
$func = Compute("2+sqrt{1-(x-3)**2}");
$fund = Compute("2-sqrt{1-(x-3)**2}");
plot_functions( $graph, "$func for x in " .
"<2,4> using color:blue " .
"and weight:3");
plot_functions( $graph, "$fund for x in " .
"<$2,4> using color:blue " .
"and weight:1");

         $circle_object1 = closed_circle( ,,'black' );
         $graph -> stamps($circle_object1);
 the domain is
$xmin = -2;
$xmax = $root2 + 1;
# and the number of gridlines we graph
$xgrid = $xmax + 2;
$ygrid = $ymax - int($ymin) + 2;

$graph = init_graph($xmin, int($ymin)-1, $xmax,
$ymax+1, axes=>[0,0], grid=>[$xgrid,$ygrid],
size=>[150,150]);


#arrow
$poly2 = new GD::Polygon;
foreach $pt ([3.75,1.23], [3.7,1.20], [3.7,1.26])
   {$poly2->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$black = $graph->im->colorAllocate(0,0,00);
$graph->im->filledPolygon($poly2,$black);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly2,$graph->{colors}{black});
$graph->im->setThickness(1);

IF YOU ARE PRACTICING FOR THE NECAP EXAMINATION, DO THIS WITHOUT$BR A CALCULATOR 
 THIS IS A NECAP PROBLEM FOR WHICH A  CALCULATOR $BR WOULD NOT BE ALLOWED.$PAR 


IN THIS PROBLEM ON THE NECAP EXAM YOU WERE EXPECTED $BR
 TO SHOW YOUR WORK.  SOMETHING SIMILAR TO THE SOLUTION $BR
 ABOVE WOULD BE APPROPRIATE.    
$graph->moveTo(,);
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');
$graph->lineTo( , ,'black');

$graph->moveTo(,);
$graph->lineTo( , ,'black');

         $label1=  new Label( ,  , ' ','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label( ,  , ' ','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label( ,  , ' ','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label( ,  , ' ','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);
         $label5=  new Label( ,  , ' ','black',('center','center'));
         $label5->font(GD::Font->Giant);
         $graph -> lb($label5);
         $label6=  new Label( ,  , ' ','black',('center','center'));
         $label6->font(GD::Font->Giant);
         $graph-> lb($label6);
         $label7=  new Label( ,  , ' ','black',('center','center'));
         $label7->font(GD::Font->Giant);
         $graph -> lb($label7);
         $label8=  new Label( ,  , ' ','black',('center','center'));
         $label8->font(GD::Font->Giant);
         $graph -> lb($label8);
         $label9=  new Label( ,  , ' ','black',('center','center'));
         $label9->font(GD::Font->Giant);
         $graph -> lb($label9);
         $label10=  new Label( ,  , ' ','black',('center','center'));
         $label10->font(GD::Font->Giant);
         $graph -> lb($label10);
         $label11=  new Label( ,  , ' ','black',('center','center'));
         $label11->font(GD::Font->Giant);
         $graph -> lb($label11);
         $label12=  new Label( ,  , ' ','black',('center','center'));
         $label12->font(GD::Font->Giant);
        $graph -> lb($label12);
         $label13=  new Label( ,  , ' ','black',('center','center'));
         $label13->font(GD::Font->Giant);
         $graph -> lb($label13);
         $label14=  new Label( ,  , ' ','black',('center','center'));
         $label14->font(GD::Font->Giant);
         $graph -> lb($label14);
         $label15=  new Label( ,  , ' ','black',('center','center'));
         $label15->font(GD::Font->Giant);
         $graph -> lb($label15);
         $label16=  new Label( ,  , ' ','black',('center','center'));
         $label16->font(GD::Font->Giant);
         $graph -> lb($label16);
         $label17=  new Label( ,  , ' ','black',('center','center'));
         $label17->font(GD::Font->Giant);
         $graph -> lb($label17);
         $label18=  new Label( ,  , ' ','black',('center','center'));
         $label18->font(GD::Font->Giant);
         $graph -> lb($label18);
         $label19=  new Label( ,  , ' ','black',('center','center'));
         $label19->font(GD::Font->Giant);
         $graph -> lb($label19);
         $label20=  new Label( ,  , ' ','black',('center','center '));
         $label20->font(GD::Font->Giant);
          $graph -> lb($label20);



#TWO HALVES OF A CIRCLE
$func = Compute("2+sqrt{1-(x-3)**2}");
$fund = Compute("2-sqrt{1-(x-3)**2}");
plot_functions( $graph, "$func for x in " .
"<2,4> using color:blue " .
"and weight:3");
plot_functions( $graph, "$fund for x in " .
"<$2,4> using color:blue " .
"and weight:1");

         $circle_object1 = closed_circle( ,,'black' );
         $graph -> stamps($circle_object1);
 the domain is
$xmin = -2;
$xmax = $root2 + 1;
# and the number of gridlines we graph
$xgrid = $xmax + 2;
$ygrid = $ymax - int($ymin) + 2;

$graph = init_graph($xmin, int($ymin)-1, $xmax,
$ymax+1, axes=>[0,0], grid=>[$xgrid,$ygrid],
size=>[150,150]);


#arrow
$poly2 = new GD::Polygon;
foreach $pt ([3.75,1.23], [3.7,1.20], [3.7,1.26])
   {$poly2->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$black = $graph->im->colorAllocate(0,0,00);
$graph->im->filledPolygon($poly2,$black);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly2,$graph->{colors}{black});
$graph->im->setThickness(1);

IF YOU ARE PRACTICING FOR THE NECAP EXAMINATION, DO THIS WITHOUT$BR A CALCULATOR 
 THIS IS A NECAP PROBLEM FOR WHICH A  CALCULATOR $BR WOULD NOT BE ALLOWED.$PAR 


IN THIS PROBLEM ON THE NECAP EXAM YOU WERE EXPECTED $BR
 TO SHOW YOUR WORK.  SOMETHING SIMILAR TO THE SOLUTION $BR
 ABOVE WOULD BE APPROPRIATE.    