DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");

sub triangle
{#scale factor, lower left x, lower left y, angle of lower edge,dashed edges (1 or 0,
$pi=atan2(1,1)*4;
my $cs=shift; #scaling
my @x;
 my @y;
$x[0] =shift; # lower left coordinates,
$y[0]=shift;
my $ang=shift; # Angle of bottom side from horizontal (in radians, < pi/2).
$xhunit=$cs*cos($ang);#these are changes when moving analogue of horizontal
$yhunit=$cs*sin($ang);
$x[1]=$x[0]+$xhunit;
$y[1]=$y[0]+$yhunit;
$xvunit=$cs*cos($pi/2+$ang);#these are changes when moving analogue of vertical
$yvunit=$cs*sin($pi/2+$ang);
$x[2]=$x[0] + .5*$xhunit + .866*$xvunit;
$y[2]=$y[0] + .5*$yhunit + .866*$yvunit;

$graph->moveTo($x[1],$y[1]);
$graph->lineTo($x[0] ,$y[0] ,'black');
$graph->lineTo($x[2] ,$y[2] ,'black');
$graph->lineTo($x[1],$y[1],'black');
#warn "ang=$ang, cs=$cs, xhunit=$xhunit,yhunit=$yhunit,xvunit=$xvunit,yvunit=$yvunit ";
#for(my $i=0;$i<3;$i++) {warn "for $i, ($x[$i],$y[$i]) ";}
}
sub square
{#scale factor, lower left x, lower left y, angle of lower edge,dashed edges (1 or 0,
$pi=atan2(1,1)*4;
my $cs=shift; #scaling for square
my @x;
 my @y;
$x[0] =shift; # lower left coordinates,
$y[0]=shift;
my $ang=shift; # Angle of bottom side from horizontal (in radians, < pi/2).

$xhunit=$cs*cos($ang);#these are changes when moving analogue of horizontal
$yhunit=$cs*sin($ang);
$x[1]=$x[0]+$xhunit;
$y[1]=$y[0]+$yhunit;
$xvunit=$cs*cos($pi/2+$ang);#these are changes when moving analogue of vertical
$yvunit=$cs*sin($pi/2+$ang);
$x[2]=$x[0]+$xvunit;
$y[2]=$y[0]+$yvunit;
$x[3]=$x[1]+$xvunit;
$y[3]=$y[1]+$yvunit;
$graph->moveTo($x[1],$y[1]);
$graph->lineTo($x[3] ,$y[3] ,'black');
$graph->lineTo($x[2] ,$y[2] ,'black');
$graph->lineTo($x[0] ,$y[0] ,'black');
$graph->lineTo($x[1] ,$y[1] ,'black');

#for(my $i=0;$i<4;$i++) {warn "for $i, ($x[$i],$y[$i]) ";}
}
sub arrow
{#scale factor, angle of shaft, x coord of shaftpoint, y coord of shaftpoint
 #length of unscaled arrowhead =1, point at shaftpoint at (0,0)
my $cs=shift;
my $ang=shift; #0 is horizontal shaft pointed leftward
my $pi=atan2(1,1)*4;
my @x;
my @y;
 $x[0]=shift;
 $y[0]=shift;
 $x[1]=$x[0]+$cs*cos($ang);
 $y[1]=$y[0]+$cs*sin($ang);
 $x[2]=$x[0]+$cs*cos($ang+$pi/2)/2;
 $y[2]=$y[0]+$cs*sin($ang+$pi/2)/2;
 $x[3]=$x[0]-$cs*cos($ang+$pi/2)/2;
 $y[3]=$y[0]-$cs*sin($ang+$pi/2)/2;
#warn "ang=$ang,x[0]=$x[0], y[0]=$y[0],x[1]=$x[1], y[1]=$y[1],x[2]=$x[2], y[2]=$y[3],x[3]=$x[3], y[3]=$y[3]";
my $scale=100;
my $poly = new GD::Polygon;
foreach $pt ([$x[1],$y[1]], [$x[2],$y[2]], [$x[3],$y[3]])
   {$poly->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$black = $graph->im->colorAllocate(0,0,00);
$graph->im->filledPolygon($poly,$black);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly,$graph->{colors}{black});
$graph->im->setThickness(1);
}

($WIDTH,$HEIGHT,$TEXSIZE)=(800,400,300);
$pi=atan2(1,1)*4;
# now initialize the graph
$graph = init_graph(0,0, 8,4,size=>[$WIDTH,$HEIGHT]);
$graph->moveTo(.1,3);
$graph->lineTo(3.8 ,3 ,'black',3);
$graph->moveTo(7.9,3);
$graph->lineTo(4.2 ,3 ,'black',3);
$graph->moveTo(1.9,3);
$graph->lineTo(1.9 ,2.8 ,'black',3);
$graph->lineTo(6.1 ,2.8 ,'black',3);
$graph->lineTo(6.1 ,3 ,'black',3);
$graph->moveTo(4,2.77);
$graph->lineTo(4 ,2.5 ,'black');
arrow(.1,$pi/2,4 ,1.4 );   

square(.18,.5,3.03,0);
square(.18,1,3.03,0);
square(.18,1.5,3.03,0);

square(.18,4.2,3.03,0);
square(.18,4.7,3.03,0);
square(.18,5.2,3.03,0);
square(.18,5.7,3.03,0);
triangle(.25,2.,3.03,0);
triangle(.25,2.5,3.03, 0);
triangle(.25,3,3.03, 0);
triangle(.25,3.5,3.03, 0);
triangle(.25,6.2,3.03, 0);

$graph->moveTo(.1,.9);
$graph->lineTo(3.8 ,.9 ,'black',3);
$graph->moveTo(7.9,1.1);
$graph->lineTo(4.2 ,1.1 ,'black',3);
$graph->moveTo(1.9,.9);
$graph->lineTo(1.9 ,.7 ,'black',3);
$graph->lineTo(6.1 ,.9 ,'black',3);
$graph->lineTo(6.1 ,1.1 ,'black',3);
$graph->moveTo(4,.77);
$graph->lineTo(4.03 ,.5 ,'black');
arrow(.1,1.3,4.03 ,3.5 );
square(.18,1,.93,0);
square(.18,1.7,.93,0);
#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
BEGIN_TEXT
The scale at the top of the diagram is balanced.

$BR

\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}

$PAR

\{ans_rule(1 )\} triangles must be put on the right side of the scale at
 the bottom of the diagram so that it balances.
END_TEXT
ANS(Real(6)->cmp);
BEGIN_SOLUTION
$PAR Solution $PAR
If you remove 3 squares and 1 triangle from each side of the scale at the top $BR
since the same amount has been removed from each side.  Now 3 triangles remain
$BR on the left and one square remains on the right.  So one square has the $BR
weight as 3 triangles.  That means that 2 squares have the same weight as 6 triangles.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject(NECAP)
## DBchapter(Grade 7)
## DBsection(2007)
## MO(1)
