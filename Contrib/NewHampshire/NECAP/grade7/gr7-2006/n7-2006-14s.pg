DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");


# now initialize the graph
$graph = init_graph(-.1,-.1, 6.2,4.5);
$graph->moveTo(0,0);
$graph->lineTo(6.1 ,0 ,'black');
$graph->lineTo(6.1 ,4 ,'black');
$graph->lineTo(0 ,4 ,'black');
$graph->lineTo(0 ,0 ,'black');

$graph->moveTo(0,1);
$graph->lineTo(6 , 1,'black');

$graph->moveTo(0,2);
$graph->lineTo(6 ,2 ,'black');

$graph->moveTo(0,3);
$graph->lineTo(6 ,3 ,'black');

$graph->moveTo(1.3,0);
$graph->lineTo(1.3 ,4 ,'black');


$graph->moveTo(4.6,0);
$graph->lineTo(4.6 ,4 ,'black');

$graph->moveTo(1.4,3.2);
$graph->lineTo(2.0 ,3.2 ,'black');
$graph->lineTo(2.0 ,3.8 ,'black');
$graph->lineTo(1.4 ,3.8 ,'black');
$graph->lineTo(1.4 ,3.2 ,'black');

$graph->moveTo(1.43,3.22);
$graph->lineTo(1.97 ,3.22 ,'black');
$graph->lineTo(1.97 ,3.78 ,'black');
$graph->lineTo(1.43 ,3.78 ,'black');
$graph->lineTo(1.43 ,3.22 ,'black');

$graph->moveTo(1.4,2.2);
$graph->lineTo(2.6 ,2.2 ,'black');
$graph->lineTo(2.6 ,2.8 ,'black');
$graph->lineTo(1.4 ,2.8 ,'black');
$graph->lineTo(1.4 ,2.2 ,'black');

$graph->moveTo(1.43,2.22);
$graph->lineTo(2.57 ,2.22 ,'black');
$graph->lineTo(2.57 ,2.78 ,'black');
$graph->lineTo(1.43 ,2.78 ,'black');
$graph->lineTo(1.43 ,2.22 ,'black');


$graph->moveTo(1.985,2.22);
$graph->lineTo(1.985 ,2.78 ,'black');
$graph->moveTo(2.015,2.22);
$graph->lineTo(2.015 ,2.78 ,'black');

$graph->moveTo(1.4,1.2);
$graph->lineTo(3.2 ,1.2 ,'black');
$graph->lineTo(3.2 ,1.8 ,'black');
$graph->lineTo(1.4 ,1.8 ,'black');
$graph->lineTo(1.4 ,1.2 ,'black');

$graph->moveTo(1.43,1.23);
$graph->lineTo(3.17 ,1.23 ,'black');
$graph->lineTo(3.17 ,1.78 ,'black');
$graph->lineTo(1.43 ,1.78 ,'black');
$graph->lineTo(1.43 ,1.23 ,'black');


$graph->moveTo(1.985,1.22);
$graph->lineTo(1.985 ,1.78 ,'black');
$graph->moveTo(2.015,1.22);
$graph->lineTo(2.015 ,1.78 ,'black');
$graph->moveTo(2.585,1.22);
$graph->lineTo(2.585 ,1.78 ,'black');
$graph->moveTo(2.615,1.22);
$graph->lineTo(2.615 ,1.78 ,'black');

$graph->moveTo(1.4,.2);
$graph->lineTo(3.8 ,.2 ,'black');
$graph->lineTo(3.8 ,.8 ,'black');
$graph->lineTo(1.4 ,.8 ,'black');
$graph->lineTo(1.4 ,.2 ,'black');

$graph->moveTo(1.43,.23);
$graph->lineTo(3.77 ,.23 ,'black');
$graph->lineTo(3.77 ,.78 ,'black');
$graph->lineTo(1.43 ,.78 ,'black');
$graph->lineTo(1.43 ,.23 ,'black');


$graph->moveTo(1.985,.22);
$graph->lineTo(1.985 ,.78 ,'black');
$graph->moveTo(2.015,.22);
$graph->lineTo(2.015 ,.78 ,'black');
$graph->moveTo(2.585,.22);
$graph->lineTo(2.585 ,.78 ,'black');
$graph->moveTo(2.615,.22);
$graph->lineTo(2.615 ,.78 ,'black');
$graph->moveTo(3.185,.22);
$graph->lineTo(3.185 ,.78 ,'black');
$graph->moveTo(3.215,.22);
$graph->lineTo(3.215 ,.78 ,'black');
         $label1=  new Label(2.5 , 4.1 , "Jocelyn's Pattern ",'black',('bottom','left'));
         $graph -> lb($label1);
         $label2=  new Label(.1 , 3.5 , 'Figure 1 ','black',('bottom','left'));
         $graph -> lb($label2);
         $label3=  new Label(.1 ,2.5  , 'Figure 2 ','black',('bottom','left'));
         $graph -> lb($label3);
         $label4=  new Label(.1 , 1.5 , 'Figure 3 ','black',('bottom','left'));
         $graph -> lb($label4);
         $label5=  new Label(.1 ,.5  , 'Figure 4 ','black',('bottom','left'));
         $graph -> lb($label5);
         $label6=  new Label(4.65 ,3.5  , '4 Toothpicks ','black',('bottom','left'));
         $graph-> lb($label6);
         $label7=  new Label(4.65 ,2.5  , '7 Toothpicks ','black',('bottom','left'));
         $graph -> lb($label7);
         $label8=  new Label( 4.65,1.5  , '10 Toothpicks ','black',('bottom','left'));
         $graph -> lb($label8);
         $label9=  new Label(4.65 ,.5  , '13 Toothpicks ','black',('bottom','left'));
         $graph -> lb($label9);
$radio=new_multiple_choice();
$radio->qa("A rule for the number of toothpicks needed for n is  ", "3n+1 ");
#FIRST PAREN IS QUESTION, SECOND PAREN IS CORRECT ANSWER
$radio->extra("4n+1 ", "4n-1 ", "3n-1  ");
   


#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
BEGIN_TEXT
Jocelyn used toothpicks to make the first four figures in this pattern.
$BR

\{ image( insertGraph($graph), tex_size=>100,
    height=>500, width=>600
    ) \}

$PAR
Jocelyn needs \{ans_rule(2 )\} for Figure 5.
$PAR
\{$radio->print_q()\}
\{$radio->print_a()\}

END_TEXT
ANS(Real(16)->cmp);
ANS(radio_cmp($radio->correct_ans()));
BEGIN_SOLUTION
$PAR Solution $PAR
Notice that for each box past the first, three toothpicks must be added, one at the top,$BR one at the bottom, and one at the right (the one at the left is already there).$BR Now to see the pattern, start with the toothpick at the very left. Each box, including$BR the first, is now obtained by adding 3 toothpicks, so the rule for n is 3n+1.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();

## DBsubject(NECAP)
## DBchapter(Grade 6)
## DBsection(2007)
## MO(1)

