DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");

($WIDTH,$HEIGHT,$TEXSIZE)=(320,170,150);
# now initialize the graph


$graph = init_graph(-.1,.4, 3.1,2.1,size=>[$WIDTH,$HEIGHT]);

$graph->moveTo(0,1);
$graph->lineTo(1.4 ,1 ,'black',2);
$graph->moveTo(1.6,1);
$graph->lineTo(3 ,1 ,'black',2);

$graph->moveTo(.7,1);
$graph->lineTo(.7 ,.9 ,'black',2);
$graph->lineTo(2.3 ,.9 ,'black',2);
$graph->lineTo(2.3 ,1 ,'black',2);
         $circle_object1 = closed_circle(1.5 ,.9 ,'black' );
         $graph -> stamps($circle_object1);

$graph->moveTo(1.3 ,.5 );
$graph->lineTo(1.7 ,.5 ,'black',2);

$graph->moveTo(1.5,.9);
$graph->arrowTo(1.5 ,.6 ,'black',2);
$graph->moveTo(1.5,.9);
$graph->lineTo(1.3 ,.5 ,'black');
$graph->moveTo(1.5,.9);
$graph->lineTo(1.7 ,.5 ,'black');
$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->arc(280,100,20,20,0,360,$blue);

   

$graph->moveTo(.05,1.02);
$graph->lineTo(.20 ,1.02 ,'red');
$graph->lineTo(.20 ,1.22 ,'red');
$graph->lineTo(.05 ,1.22 ,'red');
$graph->lineTo(.05 ,1.02 ,'red');
$graph->moveTo(.05,1.22);
$graph->lineTo(.11 ,1.27 ,'red');
$graph->lineTo(.26 ,1.27 ,'red');
$graph->lineTo(.2 ,1.22 ,'red');
$graph->moveTo(.2,1.02);
$graph->lineTo(.26 ,1.07 ,'red');
$graph->lineTo(.26 ,1.27 ,'red');

$graph->moveTo(.25,1.02);
$graph->lineTo(.40 ,1.02 ,'red');
$graph->lineTo(.40 ,1.22 ,'red');
$graph->lineTo(.25 ,1.22 ,'red');
$graph->lineTo(.25 ,1.02 ,'red');
$graph->moveTo(.25,1.22);
$graph->lineTo(.31 ,1.27 ,'red');
$graph->lineTo(.46 ,1.27 ,'red');
$graph->lineTo(.4 ,1.22 ,'red');
$graph->moveTo(.4,1.02);
$graph->lineTo(.46 ,1.07 ,'red');
$graph->lineTo(.46 ,1.27 ,'red');

$graph->im->arc(68,100,20,20,0,360,$blue);
$graph->im->arc(92,100,20,20,0,360,$blue);
$graph->im->arc(116,100,20,20,0,360,$blue);
$graph->im->arc(140,100,20,20,0,360,$blue);

$graph->moveTo(1.75,1.02);
$graph->lineTo(1.9 ,1.02 ,'red');
$graph->lineTo(1.9 ,1.22 ,'red');
$graph->lineTo(1.75 ,1.22 ,'red');
$graph->lineTo(1.75 ,1.02 ,'red');
$graph->moveTo(1.75,1.22);
$graph->lineTo(1.81 ,1.27 ,'red');
$graph->lineTo(1.96 ,1.27 ,'red');
$graph->lineTo(1.9 ,1.22 ,'red');
$graph->moveTo(1.9,1.02);
$graph->lineTo(1.96 ,1.07 ,'red');
$graph->lineTo(1.96 ,1.27 ,'red');

$graph->moveTo(2.05,1.02);
$graph->lineTo(2.2 ,1.02 ,'red');
$graph->lineTo(2.2 ,1.22 ,'red');
$graph->lineTo(2.05 ,1.22 ,'red');
$graph->lineTo(2.05 ,1.02 ,'red');
$graph->moveTo(2.05,1.22);
$graph->lineTo(2.11 ,1.27 ,'red');
$graph->lineTo(2.26 ,1.27 ,'red');
$graph->lineTo(2.2 ,1.22 ,'red');
$graph->moveTo(2.2,1.02);
$graph->lineTo(2.26 ,1.07 ,'red');
$graph->lineTo(2.26 ,1.27 ,'red');

$graph->moveTo(2.35,1.02);
$graph->lineTo(2.5 ,1.02 ,'red');
$graph->lineTo(2.5 ,1.22 ,'red');
$graph->lineTo(2.35 ,1.22 ,'red');
$graph->lineTo(2.35 ,1.02 ,'red');
$graph->moveTo(2.35,1.22);
$graph->lineTo(2.41 ,1.27 ,'red');
$graph->lineTo(2.56 ,1.27 ,'red');
$graph->lineTo(2.5 ,1.22 ,'red');
$graph->moveTo(2.5,1.02);
$graph->lineTo(2.56 ,1.07 ,'red');
$graph->lineTo(2.56 ,1.27 ,'red');


 $gra = init_graph(-.1,.4, 3.1,2.1,size=>[$WIDTH,$HEIGHT]);

$gra->moveTo(0,1);
$gra->lineTo(1.4 ,1 ,'black',2);
$gra->moveTo(1.6,1);
$gra->lineTo(3 ,1 ,'black',2);

$gra->moveTo(.7,1);
$gra->lineTo(.7 ,.9 ,'black',2);
$gra->lineTo(2.3 ,.9 ,'black',2);
$gra->lineTo(2.3 ,1 ,'black',2);
         $circle_object1 = closed_circle(1.5 ,.9 ,'black' );
         $gra -> stamps($circle_object1);

$gra->moveTo(1.3 ,.5 );
$gra->lineTo(1.7 ,.5 ,'black',2);

$gra->moveTo(1.5,.9);
$gra->arrowTo(1.5 ,.6 ,'black',2);
$gra->moveTo(1.5,.9);
$gra->lineTo(1.3 ,.5 ,'black');
$gra->moveTo(1.5,.9);
$gra->lineTo(1.7 ,.5 ,'black');


 $blue = $gra->im->colorAllocate(100,100,255);
$gra->moveTo(.55,1.02);
$gra->lineTo(.70 ,1.02 ,'red');
$gra->lineTo(.70 ,1.22 ,'red');
$gra->lineTo(.55 ,1.22 ,'red');
$gra->lineTo(.55 ,1.02 ,'red');
$gra->moveTo(.55,1.22);
$gra->lineTo(.61 ,1.27 ,'red');
$gra->lineTo(.76 ,1.27 ,'red');
$gra->lineTo(.7 ,1.22 ,'red');
$gra->moveTo(.7,1.02);
$gra->lineTo(.76 ,1.07 ,'red');
$gra->lineTo(.76 ,1.27 ,'red');

$gra->im->arc(220,100,20,20,0,360,$blue);
$gra->im->arc(250,100,20,20,0,360,$blue);

$grb = init_graph(-.1,.4, 3.1,2.1,size=>[$WIDTH,$HEIGHT]);

$grb->moveTo(0,1);
$grb->lineTo(1.4 ,1 ,'black',2);
$grb->moveTo(1.6,1);
$grb->lineTo(3 ,1 ,'black',2);

$grb->moveTo(.7,1);
$grb->lineTo(.7 ,.9 ,'black',2);
$grb->lineTo(2.3 ,.9 ,'black',2);
$grb->lineTo(2.3 ,1 ,'black',2);
         $circle_object1 = closed_circle(1.5 ,.9 ,'black' );
         $grb -> stamps($circle_object1);

$grb->moveTo(1.3 ,.5 );
$grb->lineTo(1.7 ,.5 ,'black',2);

$grb->moveTo(1.5,.9);
$grb->arrowTo(1.5 ,.6 ,'black',2);
$grb->moveTo(1.5,.9);
$grb->lineTo(1.3 ,.5 ,'black');
$grb->moveTo(1.5,.9);
$grb->lineTo(1.7 ,.5 ,'black');




$blue = $grb->im->colorAllocate(100,100,255);
$grb->moveTo(.55,1.02);
$grb->lineTo(.70 ,1.02 ,'red');
$grb->lineTo(.70 ,1.22 ,'red');
$grb->lineTo(.55 ,1.22 ,'red');
$grb->lineTo(.55 ,1.02 ,'red');
$grb->moveTo(.55,1.22);
$grb->lineTo(.61 ,1.27 ,'red');
$grb->lineTo(.76 ,1.27 ,'red');
$grb->lineTo(.7 ,1.22 ,'red');
$grb->moveTo(.7,1.02);
$grb->lineTo(.76 ,1.07 ,'red');
$grb->lineTo(.76 ,1.27 ,'red');

$grb->im->arc(220,100,20,20,0,360,$blue);
$grb->im->arc(250,100,20,20,0,360,$blue);
$grb->im->arc(190,100,20,20,0,360,$blue);
$grb->im->arc(280,100,20,20,0,360,$blue);



 $grc = init_graph(-.1,.4, 3.1,2.1,size=>[$WIDTH,$HEIGHT]);

$grc->moveTo(0,1);
$grc->lineTo(1.4 ,1 ,'black',2);
$grc->moveTo(1.6,1);
$grc->lineTo(3 ,1 ,'black',2);

$grc->moveTo(.7,1);
$grc->lineTo(.7 ,.9 ,'black',2);
$grc->lineTo(2.3 ,.9 ,'black',2);
$grc->lineTo(2.3 ,1 ,'black',2);
         $circle_object1 = closed_circle(1.5 ,.9 ,'black' );
         $grc -> stamps($circle_object1);

$grc->moveTo(1.3 ,.5 );
$grc->lineTo(1.7 ,.5 ,'black',2);

$grc->moveTo(1.5,.9);
$grc->arrowTo(1.5 ,.6 ,'black',2);
$grc->moveTo(1.5,.9);
$grc->lineTo(1.3 ,.5 ,'black');
$grc->moveTo(1.5,.9);
$grc->lineTo(1.7 ,.5 ,'black');

$grc->moveTo(.55,1.02);
$grc->lineTo(.70 ,1.02 ,'red');
$grc->lineTo(.70 ,1.22 ,'red');
$grc->lineTo(.55 ,1.22 ,'red');
$grc->lineTo(.55 ,1.02 ,'red');
$grc->moveTo(.55,1.22);
$grc->lineTo(.61 ,1.27 ,'red');
$grc->lineTo(.76 ,1.27 ,'red');
$grc->lineTo(.7 ,1.22 ,'red');
$grc->moveTo(.7,1.02);
$grc->lineTo(.76 ,1.07 ,'red');
$grc->lineTo(.76 ,1.27 ,'red');


$grc->moveTo(.25,1.02);
$grc->lineTo(.40 ,1.02 ,'red');
$grc->lineTo(.40 ,1.22 ,'red');
$grc->lineTo(.25 ,1.22 ,'red');
$grc->lineTo(.25 ,1.02 ,'red');
$grc->moveTo(.25,1.22);
$grc->lineTo(.31 ,1.27 ,'red');
$grc->lineTo(.46 ,1.27 ,'red');
$grc->lineTo(.4 ,1.22 ,'red');
$grc->moveTo(.4,1.02);
$grc->lineTo(.46 ,1.07 ,'red');
$grc->lineTo(.46 ,1.27 ,'red');


$grc->moveTo(.85,1.02);
$grc->lineTo(1.00 ,1.02 ,'red');
$grc->lineTo(1.00 ,1.22 ,'red');
$grc->lineTo(.85 ,1.22 ,'red');
$grc->lineTo(.85 ,1.02 ,'red');
$grc->moveTo(.85,1.22);
$grc->lineTo(.91 ,1.27 ,'red');
$grc->lineTo(1.06 ,1.27 ,'red');
$grc->lineTo(1.0 ,1.22 ,'red');
$grc->moveTo(1.0,1.02);
$grc->lineTo(1.06 ,1.07 ,'red');
$grc->lineTo(1.06 ,1.27 ,'red');
$grc->im->arc(203,100,20,20,0,360,$blue);
$grc->im->arc(226,100,20,20,0,360,$blue);
$grc->im->arc(180,100,20,20,0,360,$blue);
$grc->im->arc(272,100,20,20,0,360,$blue);
$grc->im->arc(249,100,20,20,0,360,$blue);

 $grd = init_graph(-.1,.4, 3.1,2.1,size=>[$WIDTH,$HEIGHT]);

$grd->moveTo(0,1);
$grd->lineTo(1.4 ,1 ,'black',2);
$grd->moveTo(1.6,1);
$grd->lineTo(3 ,1 ,'black',2);

$grd->moveTo(.7,1);
$grd->lineTo(.7 ,.9 ,'black',2);
$grd->lineTo(2.3 ,.9 ,'black',2);
$grd->lineTo(2.3 ,1 ,'black',2);
         $circle_object1 = closed_circle(1.5 ,.9 ,'black' );
         $grd -> stamps($circle_object1);

$grd->moveTo(1.3 ,.5 );
$grd->lineTo(1.7 ,.5 ,'black',2);

$grd->moveTo(1.5,.9);
$grd->arrowTo(1.5 ,.6 ,'black',2);
$grd->moveTo(1.5,.9);
$grd->lineTo(1.3 ,.5 ,'black');
$grd->moveTo(1.5,.9);
$grd->lineTo(1.7 ,.5 ,'black');

$blue = $gra->im->colorAllocate(100,100,255);
$grd->moveTo(.55,1.02);
$grd->lineTo(.70 ,1.02 ,'red');
$grd->lineTo(.70 ,1.22 ,'red');
$grd->lineTo(.55 ,1.22 ,'red');
$grd->lineTo(.55 ,1.02 ,'red');
$grd->moveTo(.55,1.22);
$grd->lineTo(.61 ,1.27 ,'red');
$grd->lineTo(.76 ,1.27 ,'red');
$grd->lineTo(.7 ,1.22 ,'red');
$grd->moveTo(.7,1.02);
$grd->lineTo(.76 ,1.07 ,'red');
$grd->lineTo(.76 ,1.27 ,'red');

$grd->moveTo(.95,1.02);
$grd->lineTo(1.10 ,1.02 ,'red');
$grd->lineTo(1.10 ,1.22 ,'red');
$grd->lineTo(.95 ,1.22 ,'red');
$grd->lineTo(.95 ,1.02 ,'red');
$grd->moveTo(.95,1.22);
$grd->lineTo(1.01 ,1.27 ,'red');
$grd->lineTo(1.16 ,1.27 ,'red');
$grd->lineTo(1.1 ,1.22 ,'red');
$grd->moveTo(1.1,1.02);
$grd->lineTo(1.16 ,1.07 ,'red');
$grd->lineTo(1.16 ,1.27 ,'red');

 $grd->im->arc(203,100,20,20,0,360,$blue);
$grd->im->arc(226,100,20,20,0,360,$blue);
$grd->im->arc(180,100,20,20,0,360,$blue);
$grd->im->arc(272,100,20,20,0,360,$blue);
$grd->im->arc(295,100,20,20,0,360,$blue);
$grd->im->arc(249,100,20,20,0,360,$blue);
 
         $label1=  new Label(1.5 ,1.8  , 'Scale W ','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $gra -> lb($label1);
         $label2=  new Label(1.5 , 1.8 , 'Scale X ','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $grb -> lb($label2);
         $label3=  new Label(1.5 , 1.8 , 'Scale Y ','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $grc -> lb($label3);
         $label4=  new Label(1.5 , 1.8 ,'Scale Z' ,'black',('center','center'));
         $label4->font(GD::Font->Giant);
         $grd -> lb($label4);

#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
$radio=new_multiple_choice();
$radio->qa("Which Scale is correctly balanced? ", "Scale Z ");
#FIRST PAREN IS QUESTION, SECOND PAREN IS CORRECT ANSWER
$radio->extra("Scale W ", "Scale X ", "Scale  Y ");
BEGIN_TEXT
IF YOU ARE PRACTICING FOR THE NECAP EXAMINATION, DO THIS WITHOUT$BR A CALCULATO
 THIS IS A NECAP PROBLEM FOR WHICH A  CALCULATOR $BR WOULD NOT BE ALLOWED.$PAR 
 
The scale below is balanced.$BR
$BR
\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
$PAR One scale below is balanced.
$PAR
\{ image( insertGraph($gra), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
\{ image( insertGraph($grb), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
$PAR
\{ image( insertGraph($grc), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
\{ image( insertGraph($grd), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}

\{$radio->print_q()\}
\{$radio->print_a()\}


END_TEXT
ANS(radio_cmp($radio->correct_ans()));
BEGIN_SOLUTION
$PAR Solution $PAR
If you remove 2 red cubes and 1 blue ball from each side of the balanced scale $BR you see that 1 red cube balances 3 blue balls.  On scale Z,$BR 2 red cubes must then balance six blue balls.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();
## DBsubject('NECAP')
## DBchapter('Grade 7')
## DBsection('2009')

