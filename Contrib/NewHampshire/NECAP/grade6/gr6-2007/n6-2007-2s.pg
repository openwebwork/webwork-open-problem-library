DOCUMENT();
loadMacros(
"PGstandard.pl",
"PGchoicemacros.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGauxiliaryFunctions.pl", #for lcm, gcd,etc
);	

# make sure we're in the context we want
Context("Numeric");
$a=2;
($WIDTH,$HEIGHT,$TEXSIZE)=(400,520,300);
# now initialize the graph
$graph = init_graph(-.1,-.3, 4.1,5.1,size=>[$WIDTH,$HEIGHT]);

#$graph->moveTo(,);
#$graph->lineTo( , ,'black');

         $label1=  new Label($a ,4.2 , 'Top Rectangle ','black',('center','center'));
         $label1->font(GD::Font->Giant);
         $graph -> lb($label1);
         $label2=  new Label($a ,2.14  , 'Rectangle I ','black',('center','center'));
         $label2->font(GD::Font->Giant);
         $graph -> lb($label2);
         $label3=  new Label($a ,1.1  , 'Rectangle J ','black',('center','center'));
         $label3->font(GD::Font->Giant);
         $graph -> lb($label3);
         $label4=  new Label($a ,.01  , 'Rectangle K ','black',('center','center'));
         $label4->font(GD::Font->Giant);
         $graph -> lb($label4);
         $label5=  new Label($a ,3.19  , 'Rectangle H ','black',('center','center'));
         $label5->font(GD::Font->Giant);
         $graph -> lb($label5);
$scale = 100;
 $poly = new GD::Polygon;
foreach $pt ([.1,.8], [.1,.1], [3.9,.1], [3.9,.8])
   {$poly->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly,$graph->{colors}{black});
$graph->im->setThickness(1);

 $poly2 = new GD::Polygon;
foreach $pt ([.1,1.8], [.1,1.1], [1.1,1.1], [1.1,1.8])
   {$poly2->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly2,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly2,$graph->{colors}{black});
$graph->im->setThickness(1);

$graph->moveTo(1.05,3.95);
$graph->lineTo(4 ,3.95,'black',3);
$graph->lineTo(4 ,3.22 ,'black',3);
$graph->lineTo(1.05 ,3.22 ,'black',3);
$graph->moveTo(2.05,3.22,'black');
$graph->lineTo(2.05 ,3.95 ,'black',3);
$graph->moveTo(3.05,3.22,'black');
$graph->lineTo(3.05 ,3.95 ,'black',3);

  $poly3 = new GD::Polygon;
foreach $pt ([.1,2.8], [.1,2.1], [.9,2.1], [.9,2.8])
   {$poly3->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly3,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly3,$graph->{colors}{black});
$graph->im->setThickness(1);
 
  $poly4 = new GD::Polygon;
foreach $pt ([.9,2.8], [.9,2.1], [1.7,2.1], [1.7,2.8])
   {$poly4->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly4,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly4,$graph->{colors}{black});
$graph->im->setThickness(1);

$graph->moveTo(1.7,2.91);
$graph->lineTo(4 ,2.91,'black',3);
$graph->lineTo(4 ,2.19 ,'black',3);
$graph->lineTo(1.7 ,2.19 ,'black',3);
$graph->moveTo(2.5,2.19,'black');
$graph->lineTo(2.5 ,2.91 ,'black',3);
$graph->moveTo(3.30,2.19,'black');
$graph->lineTo(3.30 ,2.91 ,'black',3);

  $poly5 = new GD::Polygon;
foreach $pt ([.1,3.8], [.1,3.1], [.5,3.1], [.5,3.8])
   {$poly5->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly5,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly5,$graph->{colors}{black});
$graph->im->setThickness(1);
   
  $poly6 = new GD::Polygon;
foreach $pt ([.5,3.8], [.5,3.1], [.9,3.1], [.9,3.8])
   {$poly6->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly6,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly6,$graph->{colors}{black});
$graph->im->setThickness(1);

$graph->moveTo(.85,1.87);
$graph->lineTo(4 ,1.87,'black',3);
$graph->lineTo(4 ,1.15 ,'black',3);
$graph->lineTo(.85 ,1.15 ,'black',3);
$graph->moveTo(2.5,1.15,'black');
$graph->lineTo(2.5 ,1.87 ,'black',3);
$graph->moveTo(3.30,1.15,'black');
$graph->lineTo(3.30 ,1.87 ,'black',3);
$graph->moveTo(2.9,1.15,'black');
$graph->lineTo(2.9 ,1.87 ,'black',3);
$graph->moveTo(3.65,1.15,'black');
$graph->lineTo(3.65 ,1.87 ,'black',3);
$graph->moveTo(2.1,1.15,'black');
$graph->lineTo(2.1 ,1.87 ,'black',3);
$graph->moveTo(1.7,1.15,'black');
$graph->lineTo(1.7 ,1.87 ,'black',3);
$graph->moveTo(1.30,1.15,'black');
$graph->lineTo(1.30 ,1.87 ,'black',3);
   
  $poly7 = new GD::Polygon;
foreach $pt ([.1,4.8], [.1,4.1], [.4,4.1], [.4,4.8])
   {$poly7->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly7,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly7,$graph->{colors}{black});
$graph->im->setThickness(1);
  
  $poly8 = new GD::Polygon;
foreach $pt ([1,4.8], [1,4.1], [.7,4.1], [.7,4.8])
   {$poly8->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly8,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly8,$graph->{colors}{black});
$graph->im->setThickness(1);
  
  $poly9 = new GD::Polygon;
foreach $pt ([.7,4.8], [.7,4.1], [.4,4.1], [.4,4.8])
   {$poly9->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly9,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly9,$graph->{colors}{black});
$graph->im->setThickness(1);
  
  $poly10 = new GD::Polygon;
foreach $pt ([1.3,4.8], [1.3,4.1], [1,4.1], [1,4.8])
   {$poly10->addPt($pt->[0]*$scale,$pt->[1]*$scale)}
#$blue = $graph->im->colorAllocate(100,100,255);
$graph->im->filledPolygon($poly10,$blue);
$graph->im->setThickness(3);
$graph->im->openPolygon($poly10,$graph->{colors}{black});
$graph->im->setThickness(1);


 
$graph->moveTo(1.25,.84);
$graph->lineTo(4 ,.84,'black',3);
$graph->lineTo(4 ,.11 ,'black',3);
$graph->lineTo(1.25 ,.11 ,'black',3);
$graph->moveTo(1.55,.11,'black');
$graph->lineTo(1.55 ,.84 ,'black',3);
$graph->moveTo(3.35,.11,'black');
$graph->lineTo(3.35 ,.84 ,'black',3);
$graph->moveTo(2.75,.11,'black');
$graph->lineTo(2.75 ,.84 ,'black',3);
$graph->moveTo(3.05,.11,'black');
$graph->lineTo(3.05 ,.84 ,'black',3);
$graph->moveTo(2.15,.11,'black');
$graph->lineTo(2.15 ,.84 ,'black',3);
$graph->moveTo(1.85,.11,'black');
$graph->lineTo(1.85 ,.84 ,'black',3);
$graph->moveTo(2.45,.11,'black');
$graph->lineTo(2.45 ,.84 ,'black',3);  
$graph->moveTo(3.68,.11,'black');
$graph->lineTo(3.68 ,.84 ,'black',3);

#NOTE  Actual size of box is in the image below
TEXT(beginproblem());
$radio=new_multiple_choice();
$radio->qa("Which rectangle is colored blue to represent 0.4 ", "Rectangle I");
#FIRST PAREN IS QUESTION, SECOND PAREN IS CORRECT ANSWER
$radio->extra("Rectangle H ", "Rectangle K ", "Rectangle J  ");
BEGIN_TEXT
The top rectangle is coloreded blue to represent 1.
$BR
\{ image( insertGraph($graph), tex_size=>$TEXSIZE,
    height=>$HEIGHT, width=>$WIDTH
    ) \}
$PAR
\{$radio->print_q()\}
\{$radio->print_a()\}

END_TEXT
ANS(radio_cmp($radio->correct_ans()));
BEGIN_SOLUTION
$PAR Solution $PAR
\(0.4=\frac{4}{10}=\frac{2}{5}\).  Notice that Rectangle I has 2 of its (equal-sized) 5 parts colored blue.
END_SOLUTION

COMMENT('MathObject version');
ENDDOCUMENT();

## DBsubject('NECAP')
## DBchapter('Grade 6')
## DBsection('2007')
