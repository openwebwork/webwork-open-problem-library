# Problem from Business Calculus with Excel, Mike May, Anneke Bart
# WeBWorK problem written by Mike May, <mike.may@slu.edu>

## Author('Megan Nigg, Mike May');
## DBsubject(Algebra)
## DBchapter(Systems of equations and inequalities )
## DBsection(Nonlinear systems)
## Institution(Saint Louis University)
## Level(2)
## MO(1)
## TitleText1('Business Calculus with Excel')
## AuthorText1('May')
## Chapter('1')
## Section('6').
## Problem('10')
## KEYWORDS('calculus','nonlinear','systems')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl",
"parserSolutionFor.pl",
);

TEXT(beginproblem());

Context("Vector");

$a = random(10,20,1);
$b = random(1,3,1);
$c = random(5,9,1);
$d = random(0.01,0.9,0.01);

#Newton's method for first intersection -- might need some work
# Move starting point close to first zero
$t0=0;
do {$t0=$t0-.01} while ($d*$t0<=$a*ln($b*$t0+$c));
for ($n=1; $n < 1000; $n++)
{
$t=$t0-($a*ln($b*$t0+$c)-$d*$t0)/($a*$b/($b*$t0+$c)-$d);
$t0=$t;
}
$t0=Compute("$t0");
$y0=Compute("$t0*$d");

#Newton's Method for second intersection
# Move x out to beyong max value of f
$t1=$t0+1000;
for ($n=1; $n < 300; $n++)
{
$s=$t1-($a*ln($b*$t1+$c)-$d*$t1)/($a*$b/($b*$t1+$c)-$d);
$t1=$s;
}
$t1=Compute("$t1");
$y1=Compute("$t1*$d");

$answer = List(Point("($t0,$d*$t0)"), Point("($t1,$d*$t1)"));
#$answer ="($t0,$d*$t0),($t1,$d*$t1)";


Context()->texStrings;
#test code
#a=$a, b=$b, c=$c, d=$d,
#$BR
#t0=$t0, t1=$t1
#$BR
BEGIN_TEXT
Use Goal Seek to find all intersection POINTS of \(f(t)=$a ln($b t+$c)\) and \(g(t)=$d t\) (separate by commas).  Note:  You may need to cover a larger domain (in the hundreds) in order to see all of the intersection points.
$BR
\{ans_rule()\}


END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $answer->cmp() );


Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:${PAR}

Use Goal Seek to find the \(x\)-values where the difference of the two functions is zero:
$BR
\(x_0=$t0\) and \(x_1=$t1\).
$BR
Plug these values into \(g(x)\) to get
($t0, $y0) and ($t1, $y1)


END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version.');

ENDDOCUMENT();