## DESCRIPTION
## Problem from Business Calculus with Excel, Mike May, Anneke Bart
## WeBWorK problem written by Mike May, <mike.may@slu.edu>

## Author('Megan Nigg, Mike May');
## DBsubject(Algebra)
## DBchapter(Linear equations and )
## DBsection(Linear equations )
## Institution(Saint Louis University)
## Level(2)
## MO(1)
## TitleText1('Business Calculus with Excel')
## AuthorText1('May')
## EditionText1('1')
## Chapter('1')
## Section('1')
## Problem('15')
## KEYWORDS('calculus','linear','functions')
DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"parserSolutionFor.pl",
);

TEXT(beginproblem());

Context("Vector");
Context()->variables->add(q=>'Real');

$y = non_zero_random(-5,5,1);

$answer1 = Compute("0");
$answer21 = Compute("none");
$answer22 = Compute("$y");

$answerc = SolutionFor("q*0+y=$y", [-1,$y]);

do {$q1=non_zero_random(-5,5,1);} until ( $answer22 != $q1 );
do {$q2=non_zero_random(-5,5,1);} until ( $answer22 != $q2 and $q1 != $q2 );



Context()->texStrings;
BEGIN_TEXT

Given the equation \(p=$y\):
$BR
a. Give the slope of the line or say that the slope is undefined:
\{ ans_rule(20) \}
$BR
$BR
b. Give the q-intercept or, if there is no intercept, say none: q=
\{ ans_rule(20) \}
$BR
Give the p-intercept or, if there is no intercept, say none : p=
\{ ans_rule(20) \}
$BR
$BR
c. Give two points that are on the line but not on the axes: 
$BR
(q,p)=\{ ans_rule(20) \}
$BR
(q,p)=\{ ans_rule(20) \}
$BR
\{ AnswerFormatHelp("points") \}

END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $answer1->cmp() );
ANS( $answer21 -> cmp() );
ANS( $answer22 -> cmp() );
ANS( $answerc -> cmp() );
ANS( $answerc -> cmp() );

Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:${PAR}

a. The slope is \(0\)
$BR
$BR
b. The p-intercept is \(p=$y\). There is no q-intercept
$BR
$BR
c. No matter what \(q\) we choose the \(p\) value will always be \($y\). So we can pick any two values of \(q\) (not 0 to avoid the intercept). For instance \((q,p)=($q1,$y)\), \((q,p)=($q2, $y)\), etc are all points on the line.

END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version.');

ENDDOCUMENT();   
