# Problem from Business Calculus with Excel, Mike May, Anneke Bart
# WeBWorK problem written by Mike May, <mike.may@slu.edu>

## Author('Megan Nigg, Mike May');
## DBsubject(Calculus - multivariable )
## DBchapter(Differentiation of multivariable functions )
## DBsection(Extreme values and optimization)
## Institution(Saint Louis University)
## Level(2)
## MO(1)
## TitleText1('Business Calculus with Excel')
## AuthorText1('May')
## Chapter('6')
## Section('3').
## Problem('6')
## KEYWORDS('calculus','partial derivatives', 'critical points')

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGcourse.pl",
"PGessaymacros.pl",
"parserPopUp.pl",
);

TEXT(beginproblem());

Context("Vector");
Context()->variables->add(G => 'Real');
Context()->variables->add(W => 'Real');



$a = random(25,35);
$b = random(0.85,0.95,0.01);
$c = random(140,160);
$d = random(240,260);


$f = Compute("$a-10");
$g = random(0.86,0.96,0.01);
$h = Compute("$c-100");
$j = Compute("$d+100");

$pricex = Compute("$a*$b^(x/$c)-y/$d");
$pricey = Compute("$f*$g^(y/$h)-x/$j");


# Set up partials for generalized Newton's method.
$rev = Compute("x*$pricex+y*$pricey");
$revx=$rev->D('x');
$revy=$rev->D('y');
$revxx=$rev->D('x','x');
$revxy=$rev->D('x','y');
$revyy=$rev->D('y','y');
$topx=$revx*$revyy-$revy*$revxy;
$topy=$revy*$revxx-$revx*$revxy;
$bottom=$revxx*$revyy-$revxy*$revxy;


$ansa1 = Compute("$a *$b^(x/$c) + ($a* x ln($b)* $b^(x/$c))/$c - (y ($d + $j))/($d *$j)");
$ansa2 = Compute("-(x ($d + $j))/($d* $j) + $f *$g^(y/$h) + ($f *y *ln($g) *$g^(y/$h))/$h");

$critx1 = Compute("1");
$crity1 = Compute("1");

$count=0;

while($count<20)
{
$revxP=$revx->eval(x=>$critx1, y=>$crity1);
$revyP=$revy->eval(x=>$critx1, y=>$crity1);
$revxxP=$revxx->eval(x=>$critx1, y=>$crity1);
$revxyP=$revxy->eval(x=>$critx1, y=>$crity1);
$revyyP=$revyy->eval(x=>$critx1, y=>$crity1);
$topxP=$revxP*$revyyP-$revyP*$revxyP;
$topyP=$revyP*$revxxP-$revxP*$revxyP;
$bottomP=$revxxP*$revyyP-$revxyP*$revxyP;

$critx1 = Compute("$critx1-$topxP/$bottomP");
$crity1 = Compute("$crity1-$topyP/$bottomP");
$count=$count+1;
}

$ansb = Point($critx1,$crity1);

$popup1 = PopUp(
  ["?","maxima","minima","saddle point"],
  "maxima",
);

#$popup2 = PopUp(
#  ["?","maxima","minima","saddle point"],
#  "?",
#);

#$popup3 = PopUp(
#  ["?","maxima","minima","saddle point"],
#  "?",
#);


Context()->texStrings;
BEGIN_TEXT
$BR
The function is the revenue function for selling widgets and gizmos with demand price functions
$BR
$BCENTER
\(PriceGizmos=$a*$b^{QuantityGizmos/$c}-\frac{QuantityWidgets}{$d}\)
$BR
\(PriceWidgets=$f*$g^{QuantityWidgets/$h}-\frac{QuantityGizmos}{$j}\)
$BR
$ECENTER
$BR
To solve this problem, rename QuantityGizmos to \(x\) and QuantityWidgets \(y\). This will make using Wolfram Alpha slightly easier, and symbol manipulation a tad more straight forward.
$BR
$BR
a. Find the revenue function.
$BR
\(Revenue(x,y)=\) \{ans_rule(40)\}
$BR
$BR
b. Find the partial derivatives of the original function.
$BR
\(Revenue_x(x,y)=\) \{ans_rule(40)\}
$BR
\(Revenue_y(x,y)=\) \{ans_rule(40)\}
$BR
$BR
c. Find the critical points. (Format your answer like \((x_1,y_1)\) )
$BR
\{ans_rule\}
$BR
$BR
d. Produce a small graph around the critical point. Submit your graph to your instructor.
$BR
$BR
e. Determine if the critical point is a maxima, minima, or saddle point. 
$BR
\{ $popup1->menu() \}


END_TEXT
Context()->normalStrings;

$showPartialCorrectAnswers = 1;

ANS( $rev->cmp() );
ANS( $ansa1->cmp() );
ANS( $ansa2->cmp() );
ANS( $ansb->cmp() );
ANS( $popup1->cmp() );

Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:${PAR}

a. Find the revenue function
$BR
\(Revenue(x,y)=$rev\)
$BR
b. Find the partial derivatives of the original function.
$BR
\(Revenue_x(x,y)=$ansa1\)
$BR
\(Revenue_y(x,y)=$ansa2\)
$BR
$BR
c. Find and list any critical points in the region. 
$BR
There are critical points at \($ansb\)
$BR
$BR
e. Determine if the critical points are maxima, minima, or saddle points.
$BR
The critical point \(($critx1,$crity1)\) a local maximum.
$BR
$BR
END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version.');

ENDDOCUMENT();