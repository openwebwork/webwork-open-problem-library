##DESCRIPTION
##  Problem Set-1: Complex Numbers, representing polar form complex numbers in cartesian form (special angles).
##ENDDESCRIPTION

## DBsubject('Complex analysis')
## DBchapter('Arithmetic')
## DBsection('Conversion to/from polar form')
## Author('Utku Demir, Gaurav Sharma')
## Institution('University of Rochester')
## KEYWORDS('Complex','algebra', 'polar','cartesian')
## Level('')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
# TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context("Complex");

$pi = Real("pi");

##############################################################
#
#  Text
#
#

$mag1 = 2;
$phi1 = 0;
$mag2 = 1;
$phi2 = -90;
$mag3 = 1;
$phi3 = 135;
$mag4 = 5*sqrt(2);
$phi4 = -135;
$mag5 = 2;
$phi5 = 30;
$mag6 = 0.5;
$phi6 = -60;
$mag7 = 6;
$phi7 = -120;

$first = Compute($mag1*cos($phi1*pi/180) + $mag1*sin($phi1*pi/180)*j);
$second = Compute($mag2*cos($phi2*pi/180) + $mag2*sin($phi2*pi/180)*j);
$third = Compute($mag3*cos($phi3*pi/180) + $mag3*sin($phi3*pi/180)*j);
$fourth = Compute($mag4*cos($phi4*pi/180) + $mag4*sin($phi4*pi/180)*j);
$fifth = Compute($mag5*cos($phi5*pi/180) + $mag5*sin($phi5*pi/180)*j);
$sixth = Compute($mag6*cos($phi6*pi/180) + $mag6*sin($phi6*pi/180)*j);
$seventh = Compute($mag7*cos($phi7*pi/180) + $mag7*sin($phi7*pi/180)*j);

Context()->texStrings;
BEGIN_TEXT
$BBOLD Representing polar form complex numbers in cartesian form (special angles) $EBOLD
$PAR
For the complex number given in polar representation in each of the following parts, give the Cartesian representation (\(x + j y \)) by filling in the boxes provided.
$PAR
$BBOLD Hint:  Sketching the numbers on the complex plane should allow you to readily figure out the answers for this problem. Additionally, you may find it helpful to look up values of trignometric functions for "special angles" such as \(0, \pm \pi/6, \pm \pi/4, \pm 2\pi/6, \pi \). $EBOLD 

$PAR
$BBOLD a) $EBOLD \( $mag1 e^{j 0} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR
$BBOLD b) $EBOLD \( $mag2  e^{-j \pi/2} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR
$BBOLD c) $EBOLD \( $mag3 e^{j 3\pi/4} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR
$BBOLD d) $EBOLD \( 5 \sqrt{2} e^{-j 3\pi/4} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR
$BBOLD e) $EBOLD \( $mag5 e^{j \pi/6} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR
$BBOLD f) $EBOLD \( $mag6 e^{-j \pi/3} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR
$BBOLD g) $EBOLD \( $mag7 e^{-j 2\pi/3} \) $BR
Cartesian form = \{ans_rule(10)\} \(+\) \{ans_rule(10)\}\(j\)
$PAR

END_TEXT
Context()->normalStrings;


##############################################################
#
#  Answers
#
#
ANS(Re($first)->cmp());
ANS(Im($first)->cmp());
ANS(Re($second)->cmp());
ANS(Im($second)->cmp());
ANS(Re($third)->cmp());
ANS(Im($third)->cmp());
ANS(Re($fourth)->cmp());
ANS(Im($fourth)->cmp());
ANS(Re($fifth)->cmp());
ANS(Im($fifth)->cmp());
ANS(Re($sixth)->cmp());
ANS(Im($sixth)->cmp());
ANS(Re($seventh)->cmp());
ANS(Im($seventh)->cmp());

# relative tolerance --3.1412 is incorrect but 3.1413 is correct
# default tolerance is .01 or one percent.

#$ans = ($a) + ($b); #--> for numeric context only
#ANS(num_cmp($ans, mode=>'strict')); #--> for numeric context only


#Enter a value for \(\pi\) if you don't mind are you still the same PLEASE: \{$pi->ans_rule\}
#$PAR
#Calculate the following: 
#$PAR
#\( $a + $b  \): \{ans_rule(20)\}
#ANS($pi->with(tolerance=>.0001)->cmp);
#ANS(($a + $b)->cmp()); #--> for complex context


ENDDOCUMENT();        