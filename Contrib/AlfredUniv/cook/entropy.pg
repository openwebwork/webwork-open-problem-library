##DESCRIPTION
##  
##ENDDESCRIPTION

##KEYWORDS('definite' 'integral' 'enthalpy')

## DBsubject('Calculus')
## DBchapter('Applications of Integration')
## DBsection('Applications to Physics and Engineering')
## Date('10/9/2010')
## Author('Darwyn Cook')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "parserNumberWithUnits.pl",
   "Alfredmacros.pl",
   "unionTables.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->are(T=>"Real");

@ConstantPressureCoefficients =(
["Ag(s)",21.3,8.54,1.51,298,1234],
["BaO(s)",53.3,4.35,-8.30,298,2286],
["Fe(\alpha)",37.12,6.17,0,298,1183],
["O_2(g)",29.96,4.18,-1.67,298,3000]);

Context()->texStrings;
BEGIN_TEXT
Fitting coefficients for \(C_p = a + bT + \frac{c}{T^2}\) in \(\frac{J}{mol K}\)
$BR
\{ begintable(4) \}
\{ row( "", "\(a\)", "\(bx10^3\)", "\(cx10^{-5}\)" ) \}
\{ row( "\($ConstantPressureCoefficients[0][0]\)",$ConstantPressureCoefficients[0][1] ,$ConstantPressureCoefficients[0][2] ,$ConstantPressureCoefficients[0][3] ) \}
\{ row( "\($ConstantPressureCoefficients[1][0]\)",$ConstantPressureCoefficients[1][1] ,$ConstantPressureCoefficients[1][2] ,$ConstantPressureCoefficients[1][3] ) \}
\{ row( "\($ConstantPressureCoefficients[2][0]\)",$ConstantPressureCoefficients[2][1] ,$ConstantPressureCoefficients[2][2] ,$ConstantPressureCoefficients[2][3] ) \}
\{ row( "\($ConstantPressureCoefficients[3][0]\)",$ConstantPressureCoefficients[3][1] ,$ConstantPressureCoefficients[3][2] ,$ConstantPressureCoefficients[3][3] ) \}
\{ endtable() \}
$BR
END_TEXT
Context()->normalStrings;


for($substance = 0;$substance <= $#ConstantPressureCoefficients;$substance++){
$nummoles = Compute(random(1,99));

$T1 = Compute(random($ConstantPressureCoefficients[$substance][4],($ConstantPressureCoefficients[$substance][4]+$ConstantPressureCoefficients[$substance][5])/2));

$T2 = Compute(random($ConstantPressureCoefficients[$substance][4]+100,$ConstantPressureCoefficients[$substance][5]));

$Cp = Formula("$ConstantPressureCoefficients[$substance][1]/T+
$ConstantPressureCoefficients[$substance][2]*10^(-3)+
$ConstantPressureCoefficients[$substance][3]*10^5/T^3");  

$intCp = Formula("$nummoles($ConstantPressureCoefficients[$substance][1]*ln(T)+
$ConstantPressureCoefficients[$substance][2]*10^(-3)*T-
$ConstantPressureCoefficients[$substance][3]*10^5/(-2*T^2))");  

$entropy =$intCp->substitute(T=>"$T2")-$intCp->substitute(T=>"$T1"); 
$entropyunits = NumberWithUnits("$entropy","J/degK");  

##############################################################
#
#  Text
#
#

$count = Compute($substance+1);
Context()->texStrings;
BEGIN_TEXT

$BR
$BR
\($count\). Determine the change in entropy when the temperature of \($nummoles\) moles of substance  \($ConstantPressureCoefficients[$substance][0]\) is changed from \($T1 K\) to \($T2 K\). Your final answer must include units.
$BR 
$BR
\{ BeginTable(center=>0).
      Row(['\(\Delta S = S($T2)-S($T1)=\)',ans_rule(4),tableintegral(),ans_rule(35),'\( dT\)'],separation=>1).
   EndTable();
\}
\{ BeginTable(center=>0).
      Row(['\(\hskip 100pt=\)',ans_rule(40),tableevaluate],separation=>1).
   EndTable();
\}
\{ BeginTable(center=>0).
      Row(['\(\hskip 100pt=\)',ans_rule()],separation=>1).
   EndTable();
\}
$BR
\{helpLink('Units')\}

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#
ANS($nummoles->cmp());
ANS($T1->cmp() );
ANS($T2->cmp() );
ANS($Cp->cmp() );

ANS($intCp->cmp() );
ANS($T1->cmp() );
ANS($T2->cmp() );

ANS($entropyunits->cmp() );
}#End for loop
ENDDOCUMENT();        
