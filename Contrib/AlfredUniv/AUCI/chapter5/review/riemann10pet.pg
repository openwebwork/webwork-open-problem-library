##DESCRIPTION
#
# File Created: 10/29/2008
# Last Modified: 10/29/2008
# Problem Author: Darwyn Cook
# WeBWorK Entry: 
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS()
##

## DBsubject('Calculus')
## DBchapter('Techniques of Integration')
## DBsection('Approximating Integrals')
## Date('5/13/2008')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('')
## Problem1('')

DOCUMENT();

# Load the macro file to create graphs.
loadMacros("PGgraphmacros.pl");

# Load whatever macros you need for the problem
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
           "unorderedAnswer.pl",);
 
## Show partial correct answers
$showPartialCorrectAnswers = 1;
## Display the problem information
TEXT(beginproblem());

## Function definition
$a1 = Compute(non_zero_random(2,5,.25));
$f = Formula("$a1*ln x")->reduce;
$F= Formula("$a1*(xln(x)-x)")->reduce;

###############################################
### Compute the Riemann Sums
$a = Compute(random(1,3,.25));
$n = Compute(random(4,6));
$deltax = Compute(random(.5,2,.25));
$b = $a + $n*$deltax;

# Array of endpoints, we only need mids, but the code is here for the rest.
@leftpoints = ();
@midpoints = ();
@rightpoints = ();
#Array of heights
@leftheights = ();
@rightheights = ();
@midheights = ();

# Riemann sums
$left = Real("0");
$midpoint = Real("0");
$right = Real("0");

for ($i = 0;$i<$n;$i++){  
    $leftpoints[$i] = Real($a + $i*$deltax);
    $midpoints[$i] = Real($a + $deltax/2 + $i*$deltax);
    $rightpoints[$i] = Real($a + ($i+1)*$deltax);  
    $leftheights[$i] = Compute($f->eval(x=>$leftpoints[$i]))->cmp();
    $midheights[$i] = Compute($f->eval(x=>$midpoints[$i]))->cmp();
    $rightheights[$i] = Compute($f->eval(x=>$rightpoints[$i]))->cmp();
    $left = Compute($left + ($f->eval(x=>$leftpoints[$i]))*$deltax);
    $midpoint = Compute($midpoint + ($f->eval(x=>$midpoints[$i]))*$deltax);
    $right = Compute($right + ($f->eval(x=>$rightpoints[$i]))*$deltax)   
}

$trap = ($left+$right)/2;
$simp = (2*$midpoint + $trap)/3;
$exact = Compute($F->eval(x=>$b)-$F->eval(x=>$a));

Context()->texStrings;
BEGIN_TEXT
Estimate \(\int_{$a}^{$b} $f dx\) by using a midpoint approximation with \(n = $n\) subintervals of equal width. 
$BR$BR
(a)  The width of each subinterval is \(\Delta x = \) \{ans_rule(10)\}.
END_TEXT
ANS($deltax->cmp());

Context()->texStrings;
###### MIDPOINT
BEGIN_TEXT
$BR$BR
(b) The midpoints are \{ans_rule(30)\} (as a comma-separated list).
$BR$BR
(c)  The midpoint approximation is
$BR$BR
\(M_{$n} \) = \(\Big(\)
END_TEXT
ANS(Compute(List(@midpoints))->cmp());

BEGIN_TEXT
\{ans_rule(6)\}
END_TEXT
#ANS(Compute("$midrectangles[0]")->cmp() );

for (my $i = 1;$i<$n;$i++){
BEGIN_TEXT
+ \{ans_rule(6)\}
END_TEXT
#ANS(Compute("$midrectangles[$i]")->cmp() );
}
UNORDERED_ANS(@midheights);
BEGIN_TEXT
\(\Big) \)  
\{ans_rule(6)\}
END_TEXT
ANS($deltax->cmp() );

BEGIN_TEXT
\(=\) \{ans_rule(50)\}
END_TEXT
ANS($midpoint->cmp);

ENDDOCUMENT();





