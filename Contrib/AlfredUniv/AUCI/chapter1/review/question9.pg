##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('integration', 'net', 'change', 'linear')

## DBsubject('Calculus')
## DBchapter('Integrals')
## DBsection('The Fundamental Theorem of Calculus')
## Date('8/16/2011')
## Author(Darwyn Cook')
## Institution('Alfred University')
## TitleText1('AUCI')
## EditionText1('1')
## AuthorText1('Cook, Petrillo, Frey')
## Section1('1.6')
## Problem1('')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "PGcourse.pl",      # Customization file for the course
   "parserFormulaUpToConstant.pl",
   "parserFormulaWithUnits.pl",
   "parserNumberWithUnits.pl",
   "weightedGrader.pl",
   "answerHints.pl",
   "unionTables.pl",
);

install_weighted_grader();


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->variables->are(t=>"Real",dt=>"Real");

$vel  = Compute(random(-40,-20));
$v = NumberWithUnits("$vel","m/s");
$velt = Formula("$vel*t");
$negvel = Compute("-$vel");
$negvelt = Compute("-$velt");

$s0 =  Compute(random(300,700));
$sinit = NumberWithUnits("$s0","m");

$displ = Formula("$vel*t+$s0");
$s = FormulaWithUnits("$displ","m");

$timezero = Compute("-$s0/$vel");  
$t = NumberWithUnits("$timezero","s"); 

$time0 = Compute(random(0,floor($timezero),.25));
$time1 = Compute(random(ceil($timezero),ceil($timezero)+random(5,10),.25));

$t0 = NumberWithUnits("$time0","s");
$t1 = NumberWithUnits("$time1","s");

$st0 = $displ->substitute(t=>"$time0");
$st1 = $displ->substitute(t=>"$time1");

$FTC = FormulaWithUnits("$st1-$st0","m");
$distance = FormulaWithUnits("$st0-$st1","m");
##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT
(a) If an object travels along a line with constant velocity \($v\), then the general formula for the position of the object is 
$BR
$BR
$SPACE $SPACE $SPACE \( \displaystyle s = \int \)\{ans_rule(10)\} \(=\) \{ans_rule\}.
$BR
$BR
${BITALIC} (Your final answer in each of the remaining parts require \{ helpLink('units') \}. )$EITALIC
$BR
$BR
(b)  If the object has initial position \($sinit\), then we can find the unknown constant \(C\). In this case, the position function is 
$BR
$BR
$SPACE $SPACE $SPACE \(s(t) = \) \{ans_rule\}.
$BR
$BR
(c)  Using the position function, we find that the object is at the origin at time 
$BR
$BR
$SPACE $SPACE $SPACE \(t =\) \{$t->ans_rule(7)\}.
$BR
$BR
(d) The net change in the object's position (i.e., the displacement) from time \($t0\) to time \($t1\) is
$BR
$BR
\{
 BeginTable(center=>0).
     Row(['$SPACE$SPACE$SPACE','\(s\Big(\)',ans_rule(3),'\(\Big)\)','\(-s\Big(\)',ans_rule(3),'\(\Big)=\)',ans_rule(3).$BR.'\(\displaystyle\int\)'.$BR.ans_rule(3),ans_rule(3),'\(dt\) = ',ans_rule(3),ans_rule(3).$BR.'\(\Big\vert\)'.$BR.ans_rule(3),' = ',ans_rule(25),
     ],separation=>2).
   EndTable();
\}
$BR
$BR
(e)  The total distance traveled over the same time period is 
$BR
$BR
\{
 BeginTable(center=>0).
     Row(['$SPACE$SPACE$SPACE',ans_rule(3).$BR.'\(\displaystyle\int\)'.$BR.ans_rule(3),ans_rule(3),'\(dt\) = ',ans_rule(3),ans_rule(3).$BR.'\(\Big\vert\)'.$BR.ans_rule(3),' = ',ans_rule(25),
     ],separation=>2).
   EndTable();
\}
$BR
$SPACE $SPACE $SPACE (Note: Your answer should not contain an absolute value.)
END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS(Formula("$vel*dt")->cmp()->withPostFilter(AnswerHints(
                $vel => "You seem to have forgotten dt.")));
ANS(FormulaUpToConstant("$vel*t")->cmp());

ANS($s->cmp());
ANS($t->cmp());

#net change in velocity
ANS($time1->cmp());
ANS($time0->cmp());
ANS($time1->cmp());
ANS($time0->cmp());
ANS($vel->cmp());
ANS($velt->cmp());
ANS($time1->cmp());
ANS($time0->cmp());
ANS($FTC->cmp());

#distance traveled
ANS($time1->cmp());
ANS($time0->cmp());
ANS($negvel->cmp());
ANS($negvelt->cmp());
ANS($time1->cmp());
ANS($time0->cmp());
ANS($distance->cmp());

ENDDOCUMENT();        