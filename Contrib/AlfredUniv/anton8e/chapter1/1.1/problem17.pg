##DESCRIPTION
#
# File Created: 5/13/2008
# Last Modified: 5/13/2008
# Problem Author: Darwyn Cook
# WeBWorK Entry: 
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS()
##

## DBsubject('WeBWorK')
## DBchapter('WeBWorK Tutorial')
## DBsection('Alfred Samples')
## Date('5/13/2008')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')


DOCUMENT();        # This should be the first executable line in the problem.
#"PGstandard.pl",
#           "PGunion.pl",
#           "Parser.pl",
#           "contextABCD.pl",
#           "imageChoice.pl",
#           "PGcourse.pl",
#           "PGgraphmacros.pl"

# a rather exhuastive list of macros
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "MathObjects.pl", "Parser.pl",
           "PGunion.pl",
           "imageChoice.pl",
           "PGcourse.pl",
           "PGgraphmacros.pl",
           "unionTables.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;

TEXT($BEGIN_ONE_COLUMN);


## Overide the default computing numbers to six decimal places.
Context()->{format}{number} = "";
Context()->strings->are(A=>{},B=>{},C=>{},D=>{},E=>{});
$xmin = -5;
$xmax = 5;
$ymin = -5;
$ymax = 5;
$dh = 1;

###########################################################
# Define the function f we are looking for
$xintercept1 = random(-4,-2);
$xintercept2 = random(2,4);
$yintercept = non_zero_random(-5,5);
## Define the function f and it's derivative
$f = Formula("$yintercept*(x-$xintercept1)*(x-$xintercept2)/($xintercept1*$xintercept2)");


############################################################
# Define the other graphs we will have the students look at
$f1= Formula("($yintercept+1)*(x-$xintercept1)*(x-$xintercept2)/($xintercept1*$xintercept2)");
$f2= Formula("($yintercept-1)*(x-$xintercept1)*(x-$xintercept2)/($xintercept1*$xintercept2)");
$f3= Formula("($yintercept)*(x-$xintercept1+1)*(x-$xintercept2)/(($xintercept1-1)*$xintercept2)");
$f4= Formula("($yintercept)*(x-$xintercept1)*(x-$xintercept2-1)/($xintercept1*($xintercept2+1))");

##########################################################
## Create the list of values to be put into the table for f.
my $i;
my @input  = ();
my @output = ();

foreach $i (0..10) {

push(@input,spf($xmin+$i*$dh , "%12.8g") );
push(@output, spf( $f->eval(x=>"$xmin+$i*$dh") , "%12.8g")     );
}

##########################################################
# Now create the graphs
#  Graph size
$size = [300,300];

#
#  The plot defaults
#
@Goptions = (
  $xmin,$ymin,$xmax,$ymax,                            # dimensions of graph
  axes => [0,0], grid => [$xmax-$xmin,$ymax-$ymin],   # number of grid lines
  size => $size                               # pixel dimension
);

$plotdomain  = "x in <$xmin,$xmax>";
$plotoptions = "using color:black and weight=2";

# Create the graphs
# graph label coordinates
$lbx = -4.5;
$lby = 4.7;

@QA = ();
@answers = ();
@randomlist = ();
@answers = ('A','B','C','D','E');
@randomlist = shuffle(5);

$G = init_graph(@Goptions);
plot_functions($G,"$f for $plotdomain $plotoptions");
$index = 0;
while($randomlist[$index]){$index++;}
$label = String($answers[$index]);
$G->lb( new Label($lbx,$lby,$label->string,'black','center','center'));
push(@QA,$G);
$correct = String($answers[$index]);

$G1 = init_graph(@Goptions);
plot_functions($G1,"$f1 for $plotdomain $plotoptions");
$index = 0;
while($randomlist[$index]!=1){$index++;}
$label = String($answers[$index]);
$G1->lb( new Label($lbx,$lby,$label->string,'black','center','center'));
push(@QA,$G1);

$G2 = init_graph(@Goptions);
plot_functions($G2,"$f2 for $plotdomain $plotoptions");
$index = 0;
while($randomlist[$index]!=2){$index++;}
$label = String($answers[$index]);
$G2->lb( new Label($lbx,$lby,$label->string,'black','center','center'));
push(@QA,$G2);

$G3 = init_graph(@Goptions);
plot_functions($G3,"$f3 for $plotdomain $plotoptions");
$index = 0;
while($randomlist[$index]!=3){$index++;}
$label = String($answers[$index]);
$G3->lb( new Label($lbx,$lby,$label->string,'black','center','center'));
push(@QA,$G3);

$G4 = init_graph(@Goptions);
plot_functions($G4,"$f4 for $plotdomain $plotoptions");
$index = 0;
while($randomlist[$index]!=4){$index++;}
$label = String($answers[$index]);
$G4->lb( new Label($lbx,$lby,$label->string,'black','center','center'));
push(@QA,$G4);

Context()->texStrings;
# Present the text.
BEGIN_TEXT
Given the following table of values for the function f(x):
END_TEXT

### Create the table
TEXT(
&begintable(1+scalar(@input)),
&row("x",@input),
&row("f(x)",@output),
&endtable()
);
$len = 1;
$INPUTSPACE = M3( qq! \\rule{${len}in}{.01in}!,
               qq!\begin{rawhtml}<INPUT TYPE = "TEXT" NAME="dh"
                  VALUE="$dh">\end{rawhtml}!,
              qq!<INPUT TYPE = "TEXT" NAME="dh" VALUE="$dh">!
              );
### End table

$fig[0] = image( insertGraph($QA[$randomlist[0]]),height=>200, width=>200,tex_size=>450);
$fig[1] = image( insertGraph($QA[$randomlist[1]]),height=>200, width=>200,tex_size=>450);
$fig[2] = image( insertGraph($QA[$randomlist[2]]) ,height=>200, width=>200,tex_size=>450);
$fig[3] = image( insertGraph($QA[$randomlist[3]]),height=>200, width=>200,tex_size=>450);
$fig[4] = image( insertGraph($QA[$randomlist[4]]),height=>200, width=>200,tex_size=>450);

BEGIN_TEXT
$BR
which is the graph of f(x)? \{ pop_up_list(['A','B','C','D','E']) \}
$BR
$BCENTER
\{
BeginTable().
  AlignedRow([$fig[0],$fig[1]]).
  TableSpace(5,0).
  AlignedRow(["A","B"]).
  TableSpace(25,6).
  AlignedRow([$fig[2],$fig[3]]).
  TableSpace(5,0).
  AlignedRow(["C","D"]).
  TableSpace(25,6).
  AlignedRow([$fig[4]]).
  TableSpace(5,0).
  AlignedRow(["E"]).
EndTable();
\}
$BR
(Click on a graph to enlarge it.)
$ECENTER
END_TEXT
Context()->normalStrings;

ANS($correct->cmp);
TEXT($END_ONE_COLUMN);
ENDDOCUMENT();        # This should be the last executable line in the problem.
