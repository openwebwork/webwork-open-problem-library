## DESCRIPTION
##   Use Level Curves to Identify Critical Points
## ENDDESCRIPTION

## KEYWORDS()
## Tagged by nhamblet

## DBsubject('Calculus')
## DBchapter('Parametric Equations and Polar Coordinates')
## DBsection('Surfaces')
## Date('')
## Author('Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('15.4')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "Parser.pl",
  "PGcourse.pl",
  "MathObjects.pl"
);


#TEXT(&beginproblem);
BEGIN_PROBLEM();
Context("Numeric");
Context()->strings->are(
  'A' => {},
  'B' => {},
  'C' => {},
  'D' => {},
  'E' => {},
  'F' => {}
);

$a = random(2,5);
$b = random($a+1,10);

##############################################
#  Main text
Context()->texStrings;
BEGIN_TEXT
  Match the parametric surface with the correct statement.
$BR
\(x = $a\cos(\theta)\cos(\phi), y = $a\sin(\theta)\cos(\phi), z = $a\sin(\phi)\) \{ans_rule(10)\}
$BR
\(x = \sin(u)+3, y = v, z = \cos(u)\) \{ans_rule(10)\}
$BR
\(x = $a\cos(t), y = $a t, z = $a\sin(t)\) \{ans_rule(10)\}
$BR
\(x = v\cos($a u), y = $a v, z = v\sin($a u)\) \{ans_rule(10)\}
$BR
\(x = $a\cos(u)+$a\cos(u)\cos(v), y = $a\cos(u)+$a\cos(u)\sin(v),z =$a\sin(u)\) \{ans_rule(10)\}
$BR
\(x = \frac{\cos(u)}{v}, y = v,z = \frac{\sin(u)}{v}\) \{ans_rule(10)\}
$PAR
A) A cylinder parallel to the y-axis with center at \(x = $a\).
$BR
B) A sphere with radius $a.
$BR
C) A torus with major radius $a and minor radius $a.
$BR
D) A helix spiraling around the y axis with radius $a.
$BR
E) The equation \(z = \frac{1}{y}\) revolved around the y-axis.
$BR
F) A cone parallel to the y-axis.  
END_TEXT
Context()->normalStrings;
##################################################
#  Answers

$showPartialCorrectAnswers = 0;

ANS(Compute("B")->cmp);
ANS(Compute("A")->cmp);
ANS(Compute("D")->cmp);
ANS(Compute("F")->cmp);
ANS(Compute("C")->cmp);
ANS(Compute("E")->cmp);

##################################################

END_PROBLEM();
ENDDOCUMENT();        # This should be the last executable line in the problem.
