##DESCRIPTION
#
# File Created: 5/13/2008
# Last Modified: 11/17/2011
# Problem Author: Darwyn Cook
# WeBWorK Entry: 
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS()
##

## DBsubject('Calculus')
## DBchapter('Infinite Sequences and Series')
## DBsection('Strategy for Testing Series')
## Date('11/17/2010')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('')
## Problem1('')


DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGgraphmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGcourse.pl"
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


my @all,@correct,%difference;

###############################################################################
##
## The list of series tests
##
Context()->strings->add("Converges"=>{},"Converges Absolutely"=>{},"Converges Conditionally"=>{},"Diverges"=>{});
Context()->strings->add("Divergence Test"=>{},"Geometric Series"=>{},"Integral Test"=>{},"P-Series"=>{},"Comparison Test"=>{},"Limit Comparison Test"=>{},"Ratio Test"=>{},"Alternating Series Test"=>{},"Ratio Test for Absolute Convergence"=>{},"Integral Test for Absolute Convergence"=>{},"Limit Comparison Test for Absolute Convergence"=>{});
Context()->strings->add("NA"=>{},"Conclusive"=>{},"Inconclusive"=>{});

$blank = String("");
$na = String("NA");
$conclusive = String("Conclusive");
$inconclusive = String("Inconclusive");
$converges = String("Converges");
$convergesabs = String("Converges Absolutely");
$convergescond = String("Converges Conditionally");
$diverges = String("Diverges");



##############################################################################
##############################################################################
##
##  Set up the infinite series
##    
##  To change the problem change $n the start value for the series, $an the 
## terms of the series, $correct which is the list of test that can be used 
## for the series, $ans which is whether the series converges or not.

Context()->variables->are(n=>"Real");

$n = 1; # starting value for the series
$an = Formula("1/n")->TeX;
$ans = $diverges;

###############################################################################
##
## For each test there is an array of the tests name, the value computed from ## the test (which can be NA), and whether or not the test is conclusive or not.
## The value answer should be a list so that students may enter NA or a number.
##

@divergence = (String("Divergence Test"),List(0),$inconclusive);
@geometric = (String("Geometric Series"),List($na),$na);
@integral = (String("Integral Test"),List("infinity"),$conclusive);
@pseries = (String("P-Series"),List(1),$conclusive);
@comparison = (String("Comparison Test"),List($na),$na);
@limitcomparison = (String("Limit Comparison Test"),List($na),List($na),$na);
@ratio = (String("Ratio Test"),List(1),$inconclusive);
@alternating = (String("Alternating Series Test"),List($na),$na);
@absratio = (String("Ratio Test for Absolute Convergence"),List($na),$na);
@absintegral = (String("Integral Test for Absolute Convergence"),List($na),$na);
@abslimitcomparison = (String("Limit Comparison Test for Absolute Convergence"),List($na),List($na),$na);



BEGIN_TEXT
Apply the following series convergence tests to the series  \(\sum\limits_{n=$n}^\infty $an\). If the test isn't applicable type NA, use infinity or inf for \(\infty\).
$BR
$BR
Using the \{$divergence[0]\} we compute the limit as  \{ans_rule(7)\}. Therefore the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR
Using the \{$geometric[0]\} we compute the limit as  \{ans_rule(7)\}. Therefore the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR

Using the \{$integral[0]\} we compute the integral as  \{ans_rule(7)\}. Therefore the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR

Using the \{$pseries[0]\} we compute p as \{ans_rule(7)\}. Therefore the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR

Using the \{$comparison[0]\} with the series \(\sum\)\{ans_rule(15)\} the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR

Using the \{$limitcomparison[0]\} with the series \(\sum\)\{ans_rule(15)\} we compute the limit as  \{ans_rule(7)\}. Therefore the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR

Using the \{$ratio[0]\} we compute the limit as  \{ans_rule(7)\}. Therefore the test is 
\{pop_up_list([$blank->string,$conclusive->string,$inconclusive->string,$na->string]) \}.
$BR

$BR$BR
The series \{pop_up_list([$blank->string,$converges->string,$convergesabs->string,$convergescond->string,$diverges->string]) \}
END_TEXT

ANS($divergence[1]->cmp);
ANS($divergence[2]->cmp);
ANS($geometric[1]->cmp);
ANS($geometric[2]->cmp);
ANS($integral[1]->cmp);
ANS($integral[2]->cmp);
ANS($pseries[1]->cmp);
ANS($pseries[2]->cmp);
ANS($comparison[1]->cmp);
ANS($comparison[2]->cmp);
ANS($limitcomparison[1]->cmp);
ANS($limitcomparison[2]->cmp);
ANS($limitcomparison[3]->cmp);
ANS($ratio[1]->cmp);
ANS($ratio[2]->cmp);
#ANS($alternating[1]->cmp);
#ANS($alternating[2]->cmp);
#ANS($absratio[1]->cmp);
#ANS($absratio[2]->cmp);
#ANS($absintegral[1]->cmp);
#ANS($absintegral[2]->cmp);
#ANS($abslimitcomparison[1]->cmp);
#ANS($abslimitcomparison[2]->cmp);
#ANS($abslimitcomparison[3]->cmp);


ANS($ans->cmp);
ENDDOCUMENT();
