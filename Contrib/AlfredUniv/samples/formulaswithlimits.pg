##DESCRIPTION
#
# File Created: 5/13/2008
# Last Modified: 5/13/2008
# Problem Author: Darwyn Cook
# WeBWorK Entry: 
# Location: Alfred University
#
##ENDDESCRIPTION

##KEYWORDS()
##

## DBsubject('WeBWorK')
## DBchapter('WeBWorK Tutorial')
## DBsection('WeBWorK Tutorial')
## Date('5/13/2008')
## Author('Darwyn Cook')
## Institution('Alfred University')
## TitleText1('Calculus: with Early Transcendentals')
## EditionText1('8')
## AuthorText1('Anton')
## Section1('')
## Problem1('')

DOCUMENT();

# Load the macro file to create graphs.
loadMacros("PGgraphmacros.pl");

# Load whatever macros you need for the problem
loadMacros("PG.pl",
           "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl");
 
## Show partial correct answers
$showPartialCorrectAnswers = 1;
## Display the problem information
TEXT(beginproblem());

## This is a simple problem, but without defining limits on the formula $f
## we run the risk that webwork will try to test the formula at a point where f ## is undefined, making the problem report an error to the student

 
## Function definition
$f = Formula("(x^2+1)/x")->reduce;
## Since $f is not defined at zero we need to tell webwork that.
$f->{limits} = [.001,12];
## I have not figured out how to make a union of intervals yet.

## Note that you can also set the limits of the variables in the context
## 
## Context()->flags->set(limits => [-2,2],# limits for variables in formulas
## num_points => 5,# the number of test points );
##
## or the actual points to be tested
## $f->{test_points} = [[11],[11.5],[12]];

## Note that if you have added a variable to the context, like k, webwork will 
## still believe that the default variable x is also a variable. If you define 
## a funtion of k that function actually has two variables in it, x and k, you
## need to know this when you are defining the test points.

Context()->texStrings;
BEGIN_TEXT
Type in the function \($f\) \{ans_rule(20)\}
$BR

END_TEXT
Context()->normalStrings;
ANS($f->cmp);
COMMENT('Webwork tests to see if two formulas are equal by plugging values into each. This problem demonstrates several methods for limiting the domain of a formula so that WeBWorK will not attempt to test points not in the domain.');
ENDDOCUMENT();
