
## This problem is a modification of the following problem
## Library/Wiley/setAnton_Section_0.1/Question2.pg
## Modifications were made by R. Noonan Heale and M. Osman

## ORIGINAL PROBLEM DESCRIPTION:

# ************************************
#
#   Comments + Keyword Clarification
#
#    Anton, Calculus, 0.1.2
# ************************************
# DESCRIPTION
# Evaluate function values using the given table of (x,y) values
#
# ENDDESCRIPTION
## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Definition, concept)
## Institution(John Wiley & Sons)
## Level(1)
## MO(1)
## TitleText1('Calculus')
## AuthorText1('Anton')
## EditionText1('9')
## Section1('0.1')
## Problem1('2')
## KEYWORDS('Functions', 'Polynomial')
#***************************************************************
#   Initialization - Load standard PG and MathObjects macros   
#***************************************************************
DOCUMENT();
loadMacros("PGstandard.pl","MathObjects.pl","alignedChoice.pl","littleneck.pl");
#
rand_button();
#
# Set Up - Set up variable context and formulation of problem
#
$CT = Context("Numeric");
$CT->texStrings;
#*************************************
#   Create array of numeric strings
#      X values will be 8 consecutive values starting at a random negative value
#      The y values will be random, with the restrictions:
#         o The 2nd and 5th will be the same
#         o No others will duplicate
#*************************************
$Ydup = random(1,4,1);
$Xstart = random(-5,-2,1);
@x = ();
@y = ();
@Xyle0 = ();
@Xrow = ();
@Yrow = ();
$Miny = 99;
$Maxy = -99;
$idx = 0;
for ($i = 0; $i < 8; $i++)
{
  $x[$i] = Compute("$Xstart + $i");
  $Xrow[$i] = "\($x[$i]\)";
  if ( ($i == 1) || ($i == 4) )
  {
    $y[$i] = $Ydup;
  }
  else
  {
    $ytmp = random(-5,4,1);
    #*********************
    #   Avoid the dups!
    #*********************
    while ($ytmp == $Ydup) {$ytmp = random(-5,4,1);}
    $match = 1;
    while ($match == 1)
    {
      $count = 0;
      $iy = 0;
      while ( ($count == 0) && ($iy < $i) )
      {
        if ($y[$iy] == $ytmp) {$count++;}
        $iy++;
      }
      if ($count > 0) {$ytmp = random(-5,4,1);}
      else {$match = 0;}
    }
    $y[$i] = $ytmp;
  }
  $Yrow[$i] = "\($y[$i]\)";
  if ($y[$i] < $Miny)
  {
    $Miny = $y[$i];
    $Minx = $x[$i];
  }
  if ($y[$i] > $Maxy)
  {
    $Maxy = $y[$i];
    $Maxx = $x[$i];
  }
  #****************************************
  #   Save all the x values where y <= 0
  #****************************************
  if ($y[$i] <= 0)
  {
    if ($idx == 0) {$Xyle0[$idx] = "$x[$i]";}
    else {$Xyle0[$idx] = ",$x[$i]";}
    $idx++;
  }
}
$CT->strings->add(none=>{}, N=>{alias=>"none"});
$XvalspartA = List("$x[1],$x[4]");
$XvalpartB = Compute("N");
$YvalpartC = Compute("$y[4]");
$XvalpartD = List("@Xyle0");
$YvalpartE = Compute("$Miny");
$XvalpartE = Compute("$Minx");
$YvalpartF = Compute("$Maxy");
$XvalpartF = Compute("$Maxx");

$length = scalar @Yrow;

foreach my $i (0..$length-1) {
    $Yrow[$i] = "$SPACE $Yrow[$i] $SPACE";
    $Xrow[$i] = "$SPACE $Xrow[$i] $SPACE";
}

#*********************
#   Problem Statement
#*********************
$Qlist = new_aligned_list(ans_rule_len=>15, align=>"LEFT", numbered=>0, equals=>0, tex_spacing=>"3pt");
$Qlist->qa("(a) For what values of \( \small{x \;\mbox{is}\; f(x) = $Ydup}? \)", $XvalspartA->cmp,
           "(b) For what values of \( \small{x \;\mbox{is}\; f(x) = 5}? \)",     $XvalpartB->cmp,
           "(c) What is the value of \( \small{f \;\mbox{when}\; x = $x[4]}? \)", $YvalpartC->cmp,
           "(d) For what values of \( \small{x \;\mbox{is}\; f(x) \le 0}? \)",   $XvalpartD->cmp);

TEXT(beginproblem());
#
# Strings in Tex form (formula)
#
BEGIN_TEXT
Use the table below to answer the following questions. If there is more than one answer to a question,
enter as a comma-separated list of values. Enter $BBOLD N $EBOLD if there is no answer.
$BCENTER
\{ begintable(9) \}
  \{ row( "$SPACE \( x \) $SPACE", @Xrow ) \}
  \{ row( "$SPACE \( f(x) \) $SPACE", @Yrow ) \}
\{ endtable() \}
$PAR
\{ $Qlist->print_q \}
$PAR
$ECENTER
END_TEXT
#
# Expect strings in standard form
#
$CT->normalStrings;
# *******************************
#   Answer and Solution section
# *******************************
#
# Check student solution
#
ANS($Qlist->correct_ans);

#***************************
#  Explanation of solution  
#***************************
$CT->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
Referring to the table:
$PAR
(a) \( \small{y = $Ydup \;\mbox{at}\; x = $XvalspartA} \).
$BR
(b) There is no value for \( \small{x \;\mbox{where}\; y = 5} \).
$BR
(c) \( \small{x = $x[4] \;\mbox{at}\; y = $YvalpartC} \).
$BR
(d) \( \small{y \le 0 \;\mbox{at}\; x = $XvalpartD} \).
$BR

END_SOLUTION
$CT->normalStrings;
ENDDOCUMENT();