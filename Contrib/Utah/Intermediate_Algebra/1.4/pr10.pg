## DESCRIPTION
## Write a function given verbally as a table and algebraic rule
## ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection(' Definition, concept')
## Date('2018')
## Author('Moh Osman')
## Institution('University of Utah/Harvard')
## KEYWORDS('function', 'multiple representations')

##############################################################
#  Initialization
##############################################################

DOCUMENT();      

loadMacros(
    "PGstandard.pl",
    "MathObjects.pl",
    "PG.pl",
    "PGbasicmacros.pl",
           "PGchoicemacros.pl",
           "PGanswermacros.pl",
           "PGgraphmacros.pl",
           "PGauxiliaryFunctions.pl",
           "PGgraphmacros.pl",
           "MathObjects.pl",
           "PGcourse.pl",
"parserImplicitEquation.pl"
);

TEXT(beginproblem());

##############################################################
#  Problem Setup
##############################################################

Context("Numeric");
Context()->flags->set(
  tolerance => 0.1,
  tolType => "absolute",
);

##############################################################
#  Text
##############################################################
Context()->variables->add(a=> 'Real');
Context()->variables->add(b=> 'Real');
Context()->variables->add(c=> 'Real');
Context()->variables->add(d=> 'Real');

Context()->variables->add(f=> 'Real');

$num_one_add = random(1, 9, 1);

$row_one_spot_pos = random(1, 9, 1);
$row_two_spot = random(3.1, 3.9, .1);
$row_three_spot = random(-9, -1, 1);

@letters = (a, b, c, d, f);
$random_letter_index = random(0, 4, 1);
$letter_spot = $letters[$random_letter_index];


$k_num = random(2, 9, 1); 
$space_add = random(1, 3, 1);


if ($k_num == $num_one_add) {
    $num_two_times = $k_num + $space_add;
} 
else {
    $num_two_times = $k_num;
}





@array_row = ($row_one_spot_pos, $row_two_spot, $row_three_spot, $letter_spot);
$k = scalar @array_row;
foreach my $i (0..$k-1) {
    $Array_row[$i] = "$SPACE $array_row[$i] $SPACE";
}


Context()->texStrings;
BEGIN_TEXT
$PAR
For the description below, make a table of four \((x, y)\) pairs that fit the description.  
$PAR

$BBOLD relationship : $EBOLD The \(y\)-coordinate is \($num_one_add\) added to \($num_two_times\) times the \(x\)-coordinate

$PAR
(a) Use the relationship to fill in the table : 
$BR
\{ begintable(7) \}
\{ row( "$SPACE $BBOLD x $EBOLD $SPACE", @Array_row ) \}
\{ row( "$SPACE $BBOLD y $EBOLD $SPACE" , ans_rule(6), ans_rule(6), ans_rule(6), ans_rule(6) ) \}
\{ endtable() \}

$BR

(b) Write an equation to demonstrate the relationship,  \{ ans_rule(10) \}.  $BR
(Note: The equation should have the form \(y = \) an expression of \(x\). WeBWorK is case-sensitive. Use lower case y and x in this). 


$BR
$BR

(c) Write a rule for the function \(f\) to demonstrate the relationship.  \(f(x) =\)  \{ ans_rule(10) \}.




END_TEXT


##############################################################
#  Answers and Solutions
##############################################################
Context()->texStrings;



$ans1 = Compute($row_one_spot_pos * $num_two_times + $num_one_add);
ANS($ans1->cmp());
$ans2 = Compute($row_two_spot * $num_two_times + $num_one_add);
ANS($ans2->cmp());
$ans3 = Compute($row_three_spot * $num_two_times + $num_one_add);
ANS($ans3->cmp());



$ans4 = Compute("$num_one_add + $num_two_times*$letter_spot");
ANS($ans4->cmp());
##ANS(str_cmp($ans4, 'remove_whitespace'));


Context()->variables->add(y=> 'Real');
Context("ImplicitEquation");
Context()->variables->set(
x=>{limits=>[-10,10]},
y=>{limits=>[-1000,1000]}
);


$eqn5 = ImplicitEquation("y =$num_one_add + $num_two_times*x");
$ans5 = Compute("$num_one_add + $num_two_times*x");
ANS($eqn5->cmp());
##$ans5 = "y = $num_one_add + $num_two_times x";
##ANS(str_cmp($ans5, 'remove_whitespace'));

##$eqn6 = ImplicitEquation("f(x) = $num_one_add + $num_two_times*x");
$ans6 = Compute("$num_one_add + $num_two_times*x");
ANS($ans6->cmp());
##$ans6 = "f(x) = $num_one_add + $num_two_times x";
##ANS(str_cmp($ans6, 'remove_whitespace'));

ENDDOCUMENT();
