##DESCRIPTION
##  Problem Description
##ENDDESCRIPTION

##KEYWORDS('sample')

## DBsubject('Course')
## DBchapter('Section')
## DBsection('Subsection')
## Date('04/21/2020')
## Author('Stephen Flood')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')



########################################################################



DOCUMENT();

# Load whatever macros you need for the problem
loadMacros(
        "PGstandard.pl",     # Standard macros for PG language
        "PGcourse.pl",       
	"PGML.pl",
	"MathObjects.pl",
	 # "PGchoicemacros.pl",	# For multiple select, multiple matching, and true/false questions
        # "PGgraphmacros.pl",	   # For dynamic graphs
    	# "parserMultiAnswer.pl",  # For answer checkers that reference MULTIPLE answer blanks
    	 "parserPopUp.pl",	   # Create popup lists for selecting entries
    	# "contextInequalities.pl",
);


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;


##############################################################
#  Setup

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
# Context()->flags->set(tolerance => 0.01);
# Context()->variables->add(t => 'Real');
# See http://webwork.maa.org/wiki/Introduction_to_contexts for more options



$a   = non_zero_random(1,1,1); ## TEMPORARILY simplified - leading coeff always positive and 1
$b   = non_zero_random(-4,4,2);
$c   = non_zero_random(2,10,1);
$n   = random(2,5,1);

$np1 = Compute("$n+1");
$np2 = Compute("$n+2");

$f = Compute("$a*x^($np2)/$np2 + $b*x^($np1)/$np1 + $c")->reduce();
## f will have DERIVATIVE 
##  f' = a * x^(n+1) + b x^n = x^n * (ax + b)


$Critical = List("0, -$b/$a");



if($a>0) #if leading coefficient is positive, it will end as an increasing function
{
    if( $n % 2) # check if $n is ODD using modulus operator  
    {   
        # if $n is odd, then the slope *will* change at both critical numbers
        # the sign chart will be + ,-, +
        $sign_chart = PopUp([
                "Select the correct sign chart for f'",
                "+,+,+",    "+,+,-",    "+,-,+",    "+,-,-",
                "-,+,+",    "-,+,-",    "-,-,+",    "-,-,-",
        ],"+,-,+");    

        if(-$b/$a > 0) # if this crit pt is to the right of 0, 
        {
            $Max = List("0");
            $Min = List("-$b/$a");
        }
        else # if this crit pt is to the left of 0,
        {
            $Max = List("-$b/$a");
            $Min = List("0");
        }
        
    }
    else
    {
        # if $n is even, then the slope will *not* change at x=0
        # the sign chart will be -,-,+   OR   -,+,+
        
        if(-$b/$a > 0) # if this crit pt is to the right of 0, 
        {
            $sign_chart = PopUp([
                "Select the correct sign chart for f'",
                 "+,+,+",    "+,+,-",    "+,-,+",    "+,-,-",
                 "-,+,+",    "-,+,-",    "-,-,+",    "-,-,-",
            ],"-,-,+");
            $Max = List("DNE");
            $Min = List("-$b/$a");
        }
        else # if this crit pt is to the left of 0, 
        {
            $sign_chart = PopUp([
                "Select the correct sign chart for f'",
                 "+,+,+",    "+,+,-",    "+,-,+",    "+,-,-",
                 "-,+,+",    "-,+,-",    "-,-,+",    "-,-,-",
            ],"-,+,+");
            $Max = List("DNE");
            $Min = List("-$b/$a");
        }
    }
    
}
else #if leading coefficient is NEGATIVE, it will end as a DECREASING function
{
    if( $n % 2) # check if $n is ODD using modulus operator  
    {   
        # if $n is odd, then the slope *will* change at both critical numbers
        # the sign charrt will be - ,+, -
        
        $sign_chart = PopUp([
                "Select the correct sign chart for f'",
                "+,+,+",    "+,+,-",    "+,-,+",    "+,-,-",
                "-,+,+",    "-,+,-",    "-,-,+",    "-,-,-",
        ],"-,+,-");    

        if(-$b/$a > 0) # if this crit pt is to the right of 0, 
        {
            $Max = List("-$b/$a");
            $Min = List("0");
        }
        else # if this crit pt is to the left of 0,
        {
            $Max = List("0");
            $Min = List("-$b/$a");
        }
        
    }
    else
    {
        # if $n is even, then the slope will *not* change at x=0
        # the sign chart will be +,-,- OR  +,+,-
                if(-$b/$a > 0) # if this crit pt is to the right of 0, 
        {
            $sign_chart = PopUp([
                "Select the correct sign chart for f'",
                 "+,+,+",    "+,+,-",    "+,-,+",    "+,-,-",
                 "-,+,+",    "-,+,-",    "-,-,+",    "-,-,-",
            ],"+,+,-");
            $Max = List("-$b/$a");
            $Min = List("DNE");
        }
        else # if this crit pt is to the left of 0, 
        {
            $sign_chart = PopUp([
                "Select the correct sign chart for f'",
                 "+,+,+",    "+,+,-",    "+,-,+",    "+,-,-",
                 "-,+,+",    "-,+,-",    "-,-,+",    "-,-,-",
            ],"+,-,-");
            $Max = List("-$b/$a");
            $Min = List("DNE");
        }
   
    }
    

}




#################################################
# Write Problem 
#
# PGML syntax at 
# 	http://webwork.maa.org/wiki/Introduction_to_PGML#.V8CReFQko2w
# 	http://webwork.maa.org/wiki/Category:PGML_Syntax#.V8DHHVQko2w


BEGIN_PGML

Let [`f(x) = [$f] `]. 

1.  Find  [`f'(x) = `]  [________________________________________]{$f->D()}  
[`\ `]

2.  Find the critical numbers for [`f`].  Enter your answers as a list of *comma separated numbers* (for example:   [`2,-4/3`]  )  
[_______________________________]{$Critical}  
[`\ `]

3.  By hand, find the intervals where [`f`] is increasing and decreasing.  Then, use the drop down list below to identify the *sign of the derivative [`f'`]* on the intervals you have identified.  
[_________________________]{$sign_chart}  
[`\ `]

4. Identify the [`x`] values where [`f`] achieves a local maximum and minimum. Enter [`DNE`] if no such extrema exists.    
[`\ `]
Maxima occur at [`x=`] [_______________]{$Max}  
[`\ `]
Minima occur at [`x=`] [_______________]{$Min}  



END_PGML


ENDDOCUMENT();
