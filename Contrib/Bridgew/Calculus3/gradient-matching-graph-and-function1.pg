## DESCRIPTION
##   Identify Level Curves
## ENDDESCRIPTION


## DBsubject(Calculus - multivariable)
## DBchapter()
## DBsection()
## Date(3/31/17)
## Institution(Bridgewater State University)
## Author(Stephen Flood)
## KEYWORDS('Graph', 'Multivariable', 'Level Curve','Gradient')

####RESOURCES('contour13.png','contour14.png','contour15.png','contour16.png')


DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
#  "MathObjects.pl",
#  "contextABCD.pl",
  "PGunion.pl",            # Union College utilities
  "imageChoice.pl",
  "PGcourse.pl",
"unionTables.pl",
"PGgraders.pl",
);

$refreshCachedImages=1;

###############################
#  Set-up

$size = [200,200];   # the size of the images
$tsize = 450;        # tex size of the images

#
#  Array of functions and their associated GIFs or PNGs
#

@QA = (
"\( f(x,y) = 2xy \)",
"gradient-2xy.gif",
"\( f(x,y) = 3x-5y \)",
"gradient-3+5y.gif",
"\( f(x,y) = x^2-y^2 \)",
"gradient-x2-y2.gif",
"\( f(x,y) = x^2+y^2 \)",
"gradient-x2+y2.gif",
);

$ml = new_image_match_list(
  link => 1,                #  do not link to separate image
  size => $size,            #  image size in pixels
  tex_size => $tsize,       #  tex size in precent times 10
  columns => 2,             #  number of columns
);
$ml->{separation} = 3;      # separation for questions in the list

$ml->rf_print_q(~~&pop_up_list_print_q); # use pop-up-lists
$ml -> ra_pop_up_list([ No_answer=>"?", A=>"A", B=>"B", C=>"C", D=>"D" ] );

$ml->qa(@QA);               #  set the questions and answers
$ml->choose(4);             #  select 5 of them
#$ml->choose_extra(1);       #  and show the other 1



#############################
#  Main Text

TEXT(beginproblem());

BEGIN_TEXT
\{
ColumnTable(
"For each of the following functions,
$BR
$BR
$BBOLD First$EBOLD compute the gradient function, and plot it at several points. 
$BR$BR
Then, $BBOLD using your graph$EBOLD, match the function with the plot of its gradient. 
$BR
Click on a graph to make it larger.  ".
$BR.
$BR.
$ml->print_q(),
$ml->print_a(),
indent => 0, separation => 30, valign => "TOP"
);
\}
END_TEXT


##############################
#  Answer evaluators

#Context("ABCD")->strings->add("E" => {},"F" => {},"?"=>{},"No_answer"=>{});

#install_problem_grader(~~&std_problem_grader);

install_problem_grader(~~&custom_problem_grader_fluid);
$ENV{'grader_numright'} = [2,4];
$ENV{'grader_scores'} = [0.5,1];
$ENV{'grader_message'} = "You can earn " .
"50% partial credit for 2 - 3 correct answers.";

$showPartialCorrectAnswers = 0;

ANS(str_cmp($ml->ra_correct_ans));


;
ENDDOCUMENT();
