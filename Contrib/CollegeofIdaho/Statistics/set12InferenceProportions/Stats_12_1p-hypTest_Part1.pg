## DESCRIPTION
## DBsubject(Statistics)
## DBchapter(Confidence intervals)
## DBsection(One sample proportion)
## Date(2016/11)
## Institution(The College of Idaho)
## Author(R Cruz)
## Level(2)
## KEYWORDS('statistics', 'proportion', 'inference')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "answerHints.pl",
   "RserveClient.pl",
  "parserPopUp.pl",
   "contextPercent.pl"
);

COMMENT("This problem requires a connection to an R server.");

######################################
#  Setup

SRAND($psvn); #This makes the connected problems have the same seed

$p=random(0.8,0.95,.01);
$n=random(200,500,100);
$s=$p*$n;
$level1 = list_random(90,95);
$level2 = $level1==95 ? 99 : list_random(95,99);
$condition1 = $n*$p;
$condition2 = $n*(1-$p);
$ans_a = $condition1>=10 && $condition2>=10 ? "YES" : "NO" ;
$popup_a = PopUp(["?", "NO", "YES"], $ans_a);

rserve_start();  ##START R SESSION
rserve_eval(" result1<- prop.test($s,$n,conf.level=$level1/100)");
$CI11 = join ", ", rserve_eval('round(result1$conf.int[1],5)'); 
$CI12 = join ", ", rserve_eval('round(result1$conf.int[2],5)'); 
rserve_eval(" result2<- prop.test($s,$n,conf.level=$level2/100)");
$CI21 = join ", ", rserve_eval('round(result2$conf.int[1],5)'); 
$CI22 = join ", ", rserve_eval('round(result2$conf.int[2],5)'); 
rserve_finish();  # END R SESSION

Context("LimitedPercent");
Context()->flags->set(
	  decimalPlaces => 3,
	  tolerance => .00005,
	);

$ci11 = Percent("1*$CI11");  #For some reason, it won't convert without an operation
$ci12 = Percent("1*$CI12");
$ci21 = Percent("1*$CI21");  
$ci22 = Percent("1*$CI22");

######################################
#  Main text

TEXT(beginproblem());

BEGIN_TEXT
$BBOLD This question has two parts.  Part 2 follows this problem.$EBOLD
$BR $BR
${BBOLD}PART 1:$EBOLD
$BR
You are interested in estimating the proportion of college graduates at local 
colleges who 
found a job within one year of completing their undergraduate degree.  Suppose
we conduct a survey and find out that \($s\) of \($n\) randomly sampled graduates
found jobs.
$BR
For this problem, we are interested in estimating the percentage, \(p,\) of all graduates from local colleges
who have a job within a year of graduation.  Use ${BBOLD}R$EBOLD to find the following:
$PAR
(a) Check if the success-failure conditions for constructing a confidence interval based on these data
are met: 
$BR $SPACE $SPACE
\(n \hat{p} = \)  \{ans_rule(10)\}
$BR $SPACE $SPACE
\(n (1 - \hat{p}) = \)  \{ans_rule(10)\}
$PAR
(b) Form a \($level1\)$PERCENT confidence interval for the percentage of all local college graduates who have a job within a year of graduation.
$BR $SPACE $SPACE
Answer: \{ans_rule(10)\} \( \leq p \leq \) \{ans_rule(10)\}
$PAR
(c) Form a \($level2\)$PERCENT confidence interval for the percentage of all local college graduates
who have a job within a year of graduation.
$BR $SPACE $SPACE
Answer: \{ans_rule(10)\} \( \leq p \leq \) \{ans_rule(10)\}
END_TEXT

######################################
#  Answers

$showPartialCorrectAnswers = 1;

Context("Numeric");
$ans_a1 = Compute($condition1);
$ans_a2 = Compute($condition2);
ANS($ans_a1->cmp);
ANS($ans_a2->cmp);
#ANS( $popup_a->cmp() );

#$ans_a = Percent("1*$p");
#ANS($ans_a->cmp->withPostFilter(AnswerHints(
#sub{
#     my ($correct,$student,$ans)=@_;
#     return abs($student - $correct) <= .05;
#} => ["Your answer is close to the correct response."]
#)));

ANS( $ci11->cmp() );
ANS( $ci12->cmp() );
ANS( $ci21->cmp() );
ANS( $ci22->cmp() );

######################################
#  Solution

BEGIN_SOLUTION
$PAR SOLUTION $PAR
$BR
(a) Note that \(\hat{p} = \frac{$s}{$n} = $p\)  
$BR
\(n \hat{p} = $n($p) = $condition1\)  
$BR 
\(n (1 - \hat{p}) =$n(1-$p) =$condition2\)  
$BR $BR
(b)  \($level1\)$PERCENT confidence interval: \($ci11 \leq p \leq $ci12\)
$BR $BR
(c)  \($level2\)$PERCENT confidence interval: \($ci21 \leq p \leq $ci22\)
END_SOLUTION
COMMENT("This problem uses R to calculate the CI's. Put the 2 parts back together when multipart problems can have different number of attempts per part.");
ENDDOCUMENT(); # This should be the last executable line in the problem.
