## DESCRIPTION
## Author('R Cruz, T Deroin') 2016/3 LAD added Punnet square
## DBsubject(Probability)
## DBchapter(Sample Space)
## DBsection(Probability: direct computation, inclusion/exclusion)
## Institution(The College of Idaho)
## Level(2)
## TitleText1('Statistics')
## AuthorText1('McClave and Sincich')
## EditionText1('12e')
## Section1('03')
## Problem1('3 34')
## KEYWORDS('Probability', 'genetics')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "MathObjects.pl",
  "niceTables.pl"
);

TEXT(beginproblem);

######################################
#  Setup

@q = ("Both parents have the gene pair Bb.",
      "One parent has the gene pair Bb while the other has blue eyes.",
      "One parent has the gene pair BB.",
      "Both parents have blue eyes.");
@ans = (.25, .5, 0, 1.0);
@pick = NchooseK(4,4); #use the last pick for the example table LAD

@suppose = ("both parents have the gene pair Bb",
      "the father has the gene pair Bb while the mother has blue eyes",
      "the father has the gene pair BB while the mother has blue eyes",
      "both parents have blue eyes");
@mother1 = ("B","b","b","b");
@mother2 = ("b","b","b","b");
@father1 = ("B","B","B","b");
@father2 = ("b","b","B","b");

@prob = ("\dfrac{1}{4}=0.25","\dfrac{2}{4}=0.5","\dfrac{0}{4}=0","\dfrac{4}{4}=1");

######################################
#  Main text

BEGIN_TEXT
An individual's genetics makeup is determined by the genes obtained from each parent.  For every genetic trait, each parent possesses a gene pair, and each parent contributes one-half of this gene pair, with equal probability, to his or her offspring, forming a new gene pair. The offspring's traits (eye color, baldness, etc.) come from this new gene pair, each gene of which possesses some characteristic.
$PAR
For the gene pair that determines eye color, each gene trait may be one of two types: dominant brown (\(B\)) or recessive (\(b\)). A person possessing the gene pair \(BB\) or \(Bb\) has brown eyes, whereas the gene pair \(bb\) produces blue eyes.
$PAR
For example, suppose $suppose[$pick[3]].
\{
LayoutTable(
  [
    [[" ",midrule=>1],"Mother \($mother1[$pick[3]]\)","Mother \($mother2[$pick[3]]\)"],
    [["Father \($father1[$pick[3]]\)",midrule=>1], "\($father1[$pick[3]]$mother1[$pick[3]]\)",  "\($father1[$pick[3]]$mother2[$pick[3]]\)" ],
    ["Father \($father2[$pick[3]]\)", "\($father2[$pick[3]]$mother1[$pick[3]]\)", "\($father2[$pick[3]]$mother2[$pick[3]]\)"  ]
  ], 
  align => 'c | c | c',
  allcellcss => 'padding:6px;',
);
\}
From the table (called a Punnett square) we see that in the above case, the probability of a child having blue eyes is:
$BR
\(P(blue)=P(bb) = $prob[$pick[3]]\) 
$PAR
Note: The order of the gene pair doesn't affect the child's eye color. \(Bb=bB\) would yield brown eyes.
$PAR
What is the probability of a child having blue eyes given the following situations? Note that you will need to make a new Punnett square for each situation.
$PAR
a) $q[$pick[0]]
$BR $SPACE $SPACE
Answer: \{ans_rule(15)\} 
$PAR
b) $q[$pick[1]]
$BR $SPACE $SPACE
Answer: \{ans_rule(15)\} 
$PAR
c) $q[$pick[2]]
$BR $SPACE $SPACE
Answer: \{ans_rule(15)\} 
END_TEXT

######################################
#  Answers

$answer_a = Real($ans[$pick[0]]);
ANS($answer_a->cmp);

$answer_b = Real($ans[$pick[1]]);
ANS($answer_b->cmp);

$answer_c = Real($ans[$pick[2]]);
ANS($answer_c->cmp);

$showPartialCorrectAnswers = 0;


######################################
# Solutions

Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
For each part draw a new square using parents with the given gene pair.  For example: when $suppose[$pick[0]], the top row of your square has labels Mother \($mother1[$pick[0]] | \)Mother \($mother2[$pick[0]].\)  Add the left side labels for the father.  Then write in the possible gene pairs inherited by the child.
$PAR
The correct answers are 
$BR
(a) \($answer_a\)
$BR
(b) \($answer_b\)
$BR
(c) \($answer_c\)
END_SOLUTION

######################################

ENDDOCUMENT();       # This should be the last executable line in the problem.