# DESCRIPTION
# Asks to find an area function of a piece of cardboard after cutting out a square from it.
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 05: Polynomials, Polynomial Functions, and Factoring')
## DBsection('Introduction to Polynomials and Polynomial Functions')
## KEYWORDS('polynomials')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextLimitedPolynomial.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("LimitedPolynomial-Strict");
$a1 = random(2,6,1);
$b1 = non_zero_random(-7,7,1);
$a2 = random(2,6,1);
do {$b2 = non_zero_random(-7,7,1)} until (abs($b1) != abs($b2));
$cut = random(1,min($a1,$a2)-1);
$dc = ($cut == 1) ? "x" : "$cut x";
$e1 = $a1*$a2 - ($cut)**2;
$e2 = $a2*$b1 + $a1*$b2;
$e3 = $b1*$b2;
$ans = ($e1 == 0) ? Formula("$e2 x + $e3")->reduce : Formula("$e1 x^2 + $e2 x + $e3")->reduce;


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Suppose you are given a rectangular piece of cardboard having length \( $a1 x + $b1 \) inches and width \($a2 x + $b2\) inches. Then you cut out a square from this piece of cardboard having side length \($dc\) inches. Find the area of the remaining piece of cardboard expressed in terms of \(x\).
$PAR
Answer: \{ans_rule(25)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Hint:${EBOLD} Draw a picture!
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();