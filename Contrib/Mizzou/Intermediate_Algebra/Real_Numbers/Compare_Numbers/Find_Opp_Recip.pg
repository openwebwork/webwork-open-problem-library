# DESCRIPTION
# Gives a number, opposite, or reciprocal and asks to find the others
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 01: Algebra, Mathematical Models, and Problem Solving')
## DBsection('Operations with Real Numbers and Simplifying Algebraic Expressions')
## KEYWORDS('real numbers')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals")->texStrings;
$num = random(2,19)*random(-1,1,2);
do {$den = random(2,19)} until ($num/$den != 1);
$case1 = random(0,1,1); # 0 - no fraction, 1 - fraction
$n = ($case1 == 0) ? Fraction($num,1) : Fraction($num,$den);

$case2 = 0; #random(0,1,2); # 0 - gives number, 1 - opposite, 2 - reciprocal
if ($case2 == 0) {
  $question = "Given the number \($n\), find its opposite and reciprocal.";
  $dispq1 = "Opposite:";
  $dispq2 = "Reciprocal:";
  $ans1 = -$n;
  $ans2 = 1/$n;
} elsif ($case2 == 1) {
  $question = "Given that \($n\) is the opposite of a number, find the number and that number's reciprocal:";
  $dispq1 = "Number:";
  $dispq2 = "Number's reciprocal";
  $ans1 = -$n;
  $ans2 = -1/$n;
} else {
  $question = "Given that \($n\) is the reciprocal of a number, find the number and that number's opposite:";
  $dispq1 = "Number:";
  $dispq2 = "Number's opposite";
  $ans1 = 1/$n;
  $ans2 = -1/$n;
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
$question
$PAR
(a) $dispq1 \{ans_rule(10)\}
$PAR
(b) $dispq2 \{ans_rule(10)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans1)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans2)->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} (a) \($ans1\), $SPACE (b) \($ans2\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();