# DESCRIPTION
# Gives a number, opposite, or reciprocal and asks to find the others
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 01: Algebra, Mathematical Models, and Problem Solving')
## DBsection('Operations with Real Numbers and Simplifying Algebraic Expressions')
## KEYWORDS('real numbers')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "unionTables.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals")->texStrings;
$num = random(2,19)*random(-1,1,2);
do {$den = random(2,19)} until ($num/$den != 1);
$case1 = random(0,1,1); # 0 - no fraction, 1 - fraction
$n = ($case1 == 0) ? Fraction($num,1) : Fraction($num,$den);

$c1 = random(0,2,1);
do {$c2 = random(0,2,1)} until ($c2 != $c1);
do {$c3 = random(0,2,1)} until ($c3 != $c1 && $c3 != $c2);

if ($c1 == 0) {
  $table_row2  = ["\[$n\] ", ans_rule(10), ans_rule(10)];
  $ans1 = -$n;
  $ans2 = 1/$n;
  $ans_row2 = ["\[$n\]", "\[$ans1\]", "\[$ans2\]"];
} elsif ($c1 == 1) {
  $table_row2  = [ans_rule(10), "\[$n\] ", ans_rule(10)];
  $ans1 = -$n;
  $ans2 = -1/$n;
  $ans_row2 = ["\[$ans1\]", "\[$n\]", "\[$ans2\]"];
} else {
  $table_row2  = [ans_rule(10), ans_rule(10),  "\[$n\] "];
  $ans1 = 1/$n;
  $ans2 = -1/$n;
  $ans_row2 = ["\[$ans1\]", "\[$ans2\]","\[$n\]"];
}

if ($c2 == 0) {
  $table_row3  = [ "\[$n\] ", ans_rule(10), ans_rule(10)];
  $ans3 = -$n;
  $ans4 = 1/$n;
  $ans_row3 = ["\[$n\]", "\[$ans3\]", "\[$ans4\]"];
} elsif ($c2 == 1) {
  $table_row3  = [ans_rule(10), "\[$n\] ", ans_rule(10)];
  $ans3 = -$n;
  $ans4 = -1/$n;
  $ans_row3 = ["\[$ans3\]", "\[$n\]", "\[$ans4\]"];
} else {
  $table_row3  = [ans_rule(10), ans_rule(10),  "\[$n\] "];
  $ans3 = 1/$n;
  $ans4 = -1/$n;
  $ans_row3 = ["\[$ans3\]", "\[$ans4\]","\[$n\]"];
}

if ($c3 == 0) {
  $table_row4  = [ "\[$n\] ", ans_rule(10), ans_rule(10)];
  $ans5 = -$n;
  $ans6 = 1/$n;
  $ans_row4 = ["\[$n\]", "\[$ans5\]", "\[$ans6\]"];
} elsif ($c3 == 1) {
  $table_row4  = [ans_rule(10), "\[$n\] ", ans_rule(10)];
  $ans5 = -$n;
  $ans6 = -1/$n;
  $ans_row4 = ["\[$ans5\]", "\[$n\]", "\[$ans6\]"];
} else {
  $table_row4  = [ans_rule(10), ans_rule(10),  "\[$n\] "];
  $ans5 = 1/$n;
  $ans6 = -1/$n;
  $ans_row4 = ["\[$ans5\]", "\[$ans6\]","\[$n\]"];
}

$table_row1  = ["$BBOLD Number $EBOLD", "$BBOLD Opposite $EBOLD", " $BBOLD Reciprocal $EBOLD " ];


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Complete the table below. 
$PAR
$BCENTER
\{ 
BeginTable(border=>1, tex_border=>"1pt", spacing=>1, padding=>10).
AlignedRow($table_row1, align=>CENTER, separation=>0).
AlignedRow($table_row2, align=>CENTER, separation=>0).
AlignedRow($table_row3, align=>CENTER, separation=>0).
AlignedRow($table_row4, align=>CENTER, separation=>0).
EndTable()
\}
$ECENTER


END_TEXT





###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans1)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans2)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans3)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans4)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans5)->cmp(studentsMustReduceFractions=>1));
ANS(Compute($ans6)->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD}
$PAR
$BCENTER
\{ 
BeginTable(border=>1, tex_border=>"1pt", spacing=>1, padding=>10).
AlignedRow($table_row1, align=>CENTER, separation=>0).
AlignedRow($ans_row2, align=>CENTER, separation=>0).
AlignedRow($ans_row3, align=>CENTER, separation=>0).
AlignedRow($ans_row4, align=>CENTER, separation=>0).
EndTable()
\}
$ECENTER
  $BR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();