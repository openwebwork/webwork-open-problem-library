# DESCRIPTION
# Asks to simplify a complex algebraic fraction
# ENDDESCRIPTION

## DBsubject('Algebra') 
## DBchapter('Basic Algebra') 
## DBsection('Algebraic Fractions') 
## KEYWORDS('algebraic fractions', 'complex fractions')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "parserMultiAnswer.pl",
  "PGunion.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@vars = ("x","y","z","p","q","r","a","b","c","r","s","t");
$ch = random(0,11,1);
$v = $vars[$ch];
Context()->variables->are($v=>"Real");

do {
  $a = random(2,9);
  $k = random(2,9);
  $b = $a*$k;
  $d = random(2,9);
  $m = random(2,9);
  $c = $m*$d;
} until (gcd($a,$c) == 1 && gcd($b,$d) == 1);

$frac = "\dfrac{\dfrac{$c}{$a $v}}{\dfrac{$d}{$b $v}}";

$num = Formula("$m*$k")->reduce;
$den = Formula("1")->reduce;


$multians = MultiAnswer($num, $den)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
      my ( $correct, $student, $self ) = @_;
      my ( $f1stu, $f2stu ) = @{$student};
      my ( $f1, $f2 ) = @{$correct};
 
      if ( ( $f1==$f1stu &&  $f2==$f2stu) || 
           (-$f1==$f1stu && -$f2==$f2stu) ) {
          return [1,1];
      } elsif ( $f1==$f1stu || -$f1==$f1stu) {
          return [1,0];
      } elsif ( $f2==$f2stu || -$f2==$f2stu ) {
          return [0,1];
      } elsif ( ($numbogus==$f1stu || -$numbogus==$f1stu) ||
                ($denbogus==$f2stu || -$denbogus==$f2stu) ) {
          $self->setMessage(1,"Both answer blanks must be filled");
          $self->setMessage(2,"Both answer blanks must be filled");
          return [0,0];
      } elsif ( $f1*$f2stu==$f1stu*$f2 ) {
          $self->setMessage(1,"Simplify your answer further");
          $self->setMessage(2,"Simplify your answer further");
          return [0,0];
      } else {
          return [0,0];
      }
  }
);

if ($displayMode eq 'TeX') {
  $displayfrac =
  "\[ $frac = ".$multians->ans_rule(10).$multians->ans_rule(10)." \]";
} else {
  $displayfrac =
  ColumnTable(
  "\( \displaystyle $frac = \)",
  $multians->ans_rule(20).$BR.$HR.$multians->ans_rule(20),
  indent => 0, separation => 10, valign => "MIDDLE"
  );
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Perform the indicated operation, and simplify if possible.  Assume any factors you cancel are not zero.
$PAR
$BCENTER
$displayfrac
$ECENTER
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($multians->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($num\)
  $PAR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();