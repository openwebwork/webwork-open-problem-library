# DESCRIPTION
# Asks to solve a linear inequality
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter(Equations and Inequalities')
## DBsection('Linear Inequalities')
## KEYWORDS('linear', 'inequalities')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "AnswerFormatHelp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Interval");
$a = random(2,5);
do {$b = non_zero_random(-7,7)} until ($b != $a);
$c = random(1,3,1);
$d = non_zero_random(-7,7);
do {$d1 = random(2,6)} until (gcd($d1,$b) == 1);
do {$d2 = random(2,4)*$d1} until ($d1*$d - $d2*$b != 0);
$r = non_zero_random(-3,3);

for ($i = 0; $i < random(10,50,1); $i++) {
  $case = random(0,3,1);
}

$qden = $d1*$d - $d2*$b;
$qnum = $d1*$d2*$r+$d1*$c-$d2*$a;
$q = $qnum/$qden;
$dispqnum = $qnum/gcd($qnum,$qden);
$dispqden = $qden/gcd($qnum,$qden);
if (sgn($dispqnum) == sgn($dispqden)) {
  $tmp1 = abs($dispqnum);
  $tmp2 = abs($dispqden);
  $dispq = "\frac{$tmp1}{$tmp2}";
} else {
  $tmp1 = abs($dispqnum);
  $tmp2 = abs($dispqden);
  $dispq = "-\frac{$tmp1}{$tmp2}";
}
if ($case == 0) {
  if ($qden < 0) {
    $ans = Compute("($q,inf)");
    $dispans = "\displaystyle \left($dispq, \infty\right)";
  } else {
    $ans = Compute("(-inf,$q)");
    $dispans = "\displaystyle \left(-\infty, $dispq\right)";
  }
  $sign = "<";
} elsif ($case == 1) {
  if ($qden < 0) {
    $ans = Compute("[$q,inf)");
    $dispans = "\displaystyle \left[$dispq, \infty\right)";
  } else {
    $ans = Compute("(-inf,$q]");
    $dispans = "\displaystyle \left(-\infty, $dispq\right]";
  }
  $sign = "\leq";
} elsif ($case == 2) {
  if ($qden < 0) {
    $ans = Compute("(-inf,$q)");
    $dispans = "\displaystyle \left(-\infty, $dispq\right)";
  } else {
    $ans = Compute("($q,inf)");
    $dispans = "\displaystyle \left($dispq, \infty\right)";
  }
  $sign = ">";
} else {
  if ($qden < 0) {
    $ans = Compute("(-inf,$q]");
    $dispans = "\displaystyle \left(-\infty, $dispq\right]";
  } else {
    $ans = Compute("[$q,inf)");
    $dispans = "\displaystyle \left[$dispq, \infty\right)";
  }
  $sign = "\geq";
}

if ($b == 1) {
  $dispineq = "\displaystyle \frac{$a - x}{$d1}";
} elsif ($b == -1) {
  $dispineq = "\displaystyle \frac{$a + x}{$d1}";
} else {
  $dispineq = "\displaystyle \frac{$a - $b x}{$d1}";
} 

if ($d == 1) {
  $dispineq = $dispineq."- \frac{$c -  x}{$d2} $sign $r";
} elsif ($d == -1) {
  $dispineq = $dispineq."- \frac{$c +  x}{$d2} $sign $r";
} else {
  $dispineq = $dispineq."- \frac{$c - $d x}{$d2} $sign $r";
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Solve the following inequality. Write your answer using interval notation.
$PAR
\[
$dispineq
\]
$PAR
Answer: \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($dispans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} \{AnswerFormatHelp("intervals", "Click here for help entering intervals as answers.")\}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();