##DESCRIPTION
##  Compound Interest: Compute Down Payment for House
##ENDDESCRIPTION

##KEYWORDS('financial mathematics', 'compound interest')

## DBsubject('Financial Mathematics')
## DBchapter('Introduction to Interest')
## DBsection('Compound Interest')
## Date('Spring 2012')
## Author1('David Covert')
## Author2('Jason Aubrey')
## Institution('University of Missouri')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextCurrency.pl",
   "PGcourse.pl",      # Customization file for the course
   "PGauxiliaryFunctions.pl",
   "PeriodicRerandomization.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

Context("Numeric");

$house_value = random(150000,250000,2000);
$down = random(12.5,17.5,0.5);
$annual_interest_rate = random(2,6,0.001);
$months = random(15,36,3);
$amount = $house_value*$down/100;
$e = Real("e");
$answer = $amount*($e**(-$annual_interest_rate*$months/1200));

Context("Currency");
$house_value = Currency($house_value);
$amount = Currency($amount);
$answer = Currency($answer);

##############################################################
#
#  Text
#

Context()->texStrings;
BEGIN_TEXT

Mike and Terri estimate that they want to buy a house for \($house_value\), and they need to make a down payment of \($down $PERCENT\) of the cost of their house.  If they have \($months\) months to save for the down payment, how much do they need to invest into an account earning \($annual_interest_rate $PERCENT\) compounded continuously so that they can reach their goal?

$PAR
Mike and Terri need to invest \{ANS_RULE(10)\}.
$PAR

(${BBOLD}Note:$EBOLD Your answer should have a dollar sign and be accurate to two decimal places)

END_TEXT
Context()->normalStrings;

PeriodicRerandomization("5"); #Problem resets itself after 3 attempts

PeriodicStatus(
 "Generate a new version of this problem",
 "You have ${attempts_modp_remaining} attempt(s) remaining before you will receive a new version of this problem."
 );

##############################################################
#
#  Answers
#
#
ANS($answer->with(tolerance=>.05)->cmp);

COMMENT('MathObject version', 'Features PeriodicRerandomization');
ENDDOCUMENT();