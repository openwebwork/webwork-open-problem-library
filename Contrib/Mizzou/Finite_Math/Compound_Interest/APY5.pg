##DESCRIPTION
##  Problems from Math 1300:Finite Mathematics FS09 Exam 1
##ENDDESCRIPTION

##KEYWORDS()

## DBsubject()
## DBchapter()
## DBsection()
## Date('9/30/2009')
## Author('Jason Aubrey')
## Institution('University of Missouri -Columbia')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextCurrency.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

$orig_rate = random(2,9,.2);

sub set_compounding {
  $previous = shift;
  $n = random(0,3,1);
  if($n == $previous) {
    set_compounding($previous);
  } elsif($n == 0) {
    return ("weekly", 52, $n);
  }
  elsif($n == 1) {
    return ("monthly", 12, $n);
  }
  elsif($n == 2) {
    return ("quarterly", 4, $n);
  }
  elsif($n == 3) {
    return ("semi-annually", 2, $n);
  }
}

($comp1, $m1, $n) = set_compounding();
($comp2, $m2) = set_compounding($n);

$APY = (1 + $orig_rate/(100*$m2))**$m2 - 1;
$eq_nom_rate_dec = $m1*(($APY + 1)**(1/$m1) - 1);
$eq_nom_rate = 100*$eq_nom_rate_dec;

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

What annual nominal rate compounded $comp1 has the same APY as $orig_rate$PERCENT compounded $comp2?  Express your answer as a percentage correct to three decimal places.
$PAR
Equivalent nominal rate compounded $comp1 = \{ans_rule(5)\} $PERCENT

END_TEXT
Context()->normalStrings;

##############################################################
#
#  Answers
#
#

ANS(Real($eq_nom_rate)->with(tolerance=>.001, tolType=>'absolute')->cmp);
# relative tolerance --3.1412 is incorrect but 3.1413 is correct
# default tolerance is .01 or one percent.

COMMENT('MathObject version');
ENDDOCUMENT();        
