## DESCRIPTION
## Systems of Linear Equations
## ENDDESCRIPTION

## KEYWORDS('Algebra' 'Linear Equations' 'Matrix' 'Matrices')
## Tagged by tda2d

## DBsubject('Algebra')
## DBchapter('Systems of Equations and Inequalities')
## DBsection('Systems of Linear Equations')
## Date('')
## Author('')
## Institution('ASU')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
"PGmatrixmacros.pl",
"PGasu.pl",
#"extraAnswerEvaluators.pl",
"MathObjects.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
#$ENV{'partial_weights'} = [4,4,4,4,4,4,4,4,4,4,4,4,18,18,16];
#install_problem_grader(~~&weighted_partial_grader);

###
#  row echelon form         [ 1  e  a| b]
#                           [ 0  1  c| d]
#                           [ 0  0  0| 0] 
# row1 = row1,  row2 = c2 * row1 + c2 * row2, row3 = c3*row1+c4* row 2
Context("Numeric");
Context()->variables->add(t=>'Real');

$a = non_zero_random(-4,4,1);
$b = non_zero_random(-5,5,1);
$c = non_zero_random(-4,4,1);
$d = non_zero_random(-4,4,1);
$e = non_zero_random(-5,5,1);

$c1 = non_zero_random(-3,3,1);
$c2 = non_zero_random(-3,3,1);
$c3 = non_zero_random(-3,3,1);
do {$c4 = non_zero_random(-3,3,1);} until ($c1*$c4 != $c2*$c3);

$a22 = $c1*$e + $c2;
$a23 = $c1*$a +$c2*$c;
$a24 = $c1*$b + $c2*$d;
$a32 = $c3*$e + $c4;
$a33 = $c3*$a + $c4*$c;
$a34 = $c3*$b + $c4*$d;

$ls1 = nicestring([1,$e,$a],['x','y','z']);
$ls2 = nicestring([$c1, $a22,$a23],['x','y','z']);
$ls3 = nicestring([$c3, $a32, $a33],['x','y','z']);
 

BEGIN_TEXT
Solve the system by finding the reduced row-echelon form of the augmented
matrix.
\[ \left\{ "\{"; \}
\begin{array}{ll}
        $ls1 &= $b \\
        $ls2 &= $a24 \\
        $ls3 & = $a34
\end{array}\right.
\]
$BR
$BR
reduced row-echelon form: $BCENTER
\{display_matrix([[ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5)],
[ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5)],
[ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5)]],
'align'=>"ccc|c")
\}
$ECENTER

END_TEXT

$d1 = $b-$e*$d;
$d2 = $a-$e*$c;
$ans3 = "$d1-$d2*t";
$ans4 = "$d - $c*t";
$ans5 = "t";

ANS(num_cmp(1));  ANS(num_cmp(0));  ANS(num_cmp($d2)); ANS(num_cmp($d1));
ANS(num_cmp(0));  ANS(num_cmp(1));  ANS(num_cmp($c)); ANS(num_cmp($d));
ANS(num_cmp(0));  ANS(num_cmp(0));  ANS(num_cmp(0)); ANS(num_cmp(0));


BEGIN_TEXT

$HR

$BR
If there is one solution, give its coordinates in the answer spaces below.  
$PAR
If there
are infinitely many solutions, enter ${BITALIC}t$EITALIC in the answer blank for \(z\),
enter a formula for \(y\) in terms of \(t\) in the answer blank for \(y\) and
enter a formula for \(x\) in terms of \(t\) in the answer blank for \(x\).  
$PAR
If there are no solutions, leave the answer blanks for \(x\), \(y\) and \(z\) empty.
$BR$BR
\(x = \) \{ans_rule(40) \}
$BR$BR
\(y = \) \{ans_rule(40) \}
$BR$BR
\(z = \) \{ans_rule(40) \}

END_TEXT

# we use fun_cmp so it doesn't give a syntax error if they try functions
# it still works since we are comparing to a "constant" function, which
# is the same as comparing to a number

ANS(fun_cmp("$ans3",vars=>["t"]));
ANS(fun_cmp("$ans4",vars=>["t"]));
ANS(fun_cmp("$ans5",vars=>["t"]));

# If there were no solutions, we would use
# ANS(auto_right("this answer can be left blank")); 
# ANS(auto_right("this answer can be left blank"));

ENDDOCUMENT();        # This should be the last executable line in the problem.


