## DESCRIPTION
## Discrete Mathematics
## ENDDESCRIPTION

## KEYWORDS('set theory','subset','union','intersection')
## Tagged by cmd6a 5/8/06

## DBsubject('Discrete Mathematics')
## DBchapter('Set Theory')
## DBsection('Basic Operations')
## Date('')
## Author('')
## Institution('Rochester')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGgraphmacros.pl"
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

@slice = NchooseK(9,9);
@A = ($slice[1], $slice[2], $slice[3], $slice[4], $slice[5]);
@B = ($slice[1], $slice[2], $slice[3], $slice[6]);
@C = ($slice[1], $slice[4], $slice[6], $slice[7], $slice[8], $slice[0]);
@AiB = ($slice[1], $slice[2], $slice[3]);
@AuB = ($slice[1], $slice[2], $slice[3], $slice[4], $slice[5], $slice[6]);
@BUCiA = ($slice[1], $slice[2], $slice[3], $slice[4]);
@BuCIA = ($slice[1], $slice[2], $slice[3], $slice[4], $slice[6]);

for ($k=4; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($A[$i]>$A[$k]) {
       $b = $A[$i];
       $A[$i] = $A[$k];
       $A[$k] = $b;
    }
  }
}

for ($k=3; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($B[$i]>$B[$k]) {
       $b = $B[$i];
       $B[$i] = $B[$k];
       $B[$k] = $b;
    }
  }
}

for ($k=5; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($C[$i]>$C[$k]) {
       $b = $C[$i];
       $C[$i] = $C[$k];
       $C[$k] = $b;
    }
  }
}

for ($k=2; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($AiB[$i]>$AiB[$k]) {
       $b = $AiB[$i];
       $AiB[$i] = $AiB[$k];
       $AiB[$k] = $b;
    }
  }
}

for ($k=5; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($AuB[$i]>$AuB[$k]) {
       $b = $AuB[$i];
       $AuB[$i] = $AuB[$k];
       $AuB[$k] = $b;
    }
  }
}

for ($k=3; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($BUCiA[$i]>$BUCiA[$k]) {
       $b = $BUCiA[$i];
       $BUCiA[$i] = $BUCiA[$k];
       $BUCiA[$k] = $b;
    }
  }
}

for ($k=4; $k>0; $k-=1) {
  for ($i=0; $i<$k; $i+=1){
    if($BuCIA[$i]>$BuCIA[$k]) {
       $b = $BuCIA[$i];
       $BuCIA[$i] = $BuCIA[$k];
       $BuCIA[$k] = $b;
    }
  }
}

$LEFT_BRACE = '\{';
$RIGHT_BRACE = '\}';

BEGIN_TEXT

Let \( A= ${LEFT_BRACE} $A[0], \ $A[1], \ $A[2], \ $A[3], \  $A[4] ${RIGHT_BRACE}\) , \( \ \)
\( B= ${LEFT_BRACE} $B[0], \ $B[1], \ $B[2], \ $B[3]  ${RIGHT_BRACE}\) , \( \ \)
\( C= ${LEFT_BRACE} $C[0], \ $C[1], \ $C[2], \ $C[3], \ $C[4], \ $C[5] ${RIGHT_BRACE}\). $BR
List the elements of the following sets in the increasing order: $BR

\( A \cap B = ${LEFT_BRACE} \) \{ans_rule(2)\}, \( \ \) \{ans_rule(2)\}, \( \ \)\{ans_rule(2)\} \(${RIGHT_BRACE}\) $BR
END_TEXT
ANS(num_cmp($AiB[0], mode=>"arith"));
ANS(num_cmp($AiB[1], mode=>"arith"));
ANS(num_cmp($AiB[2], mode=>"arith"));

BEGIN_TEXT
\( A \cup B = ${LEFT_BRACE} \) \{ans_rule(2)\}, \( \ \) \{ans_rule(2)\}, \( \ \)\{ans_rule(2)\} , \( \ \)\{ans_rule(2)\} , \( \ \)\{ans_rule(2)\} , \( \ \)\{ans_rule(2)\} \(${RIGHT_BRACE}\) $BR
END_TEXT
ANS(num_cmp($AuB[0], mode=>"arith"));
ANS(num_cmp($AuB[1], mode=>"arith"));
ANS(num_cmp($AuB[2], mode=>"arith"));
ANS(num_cmp($AuB[3], mode=>"arith"));
ANS(num_cmp($AuB[4], mode=>"arith"));
ANS(num_cmp($AuB[5], mode=>"arith"));

BEGIN_TEXT
\( (B \cup C) \cap A = ${LEFT_BRACE} \) \{ans_rule(2)\}, \( \ \) \{ans_rule(2)\}, \( \ \)\{ans_rule(2)\} , \( \ \)\{ans_rule(2)\} \(${RIGHT_BRACE}\) $BR
END_TEXT
ANS(num_cmp($BUCiA[0], mode=>"arith"));
ANS(num_cmp($BUCiA[1], mode=>"arith"));
ANS(num_cmp($BUCiA[2], mode=>"arith"));
ANS(num_cmp($BUCiA[3], mode=>"arith"));

BEGIN_TEXT
\( B \cup (C \cap A) = ${LEFT_BRACE} \) \{ans_rule(2)\}, \( \ \) \{ans_rule(2)\}, \( \ \)\{ans_rule(2)\} , \( \ \)\{ans_rule(2)\} , \( \ \)\{ans_rule(2)\} \(${RIGHT_BRACE}\) $BR
END_TEXT
ANS(num_cmp($BuCIA[0], mode=>"arith"));
ANS(num_cmp($BuCIA[1], mode=>"arith"));
ANS(num_cmp($BuCIA[2], mode=>"arith"));
ANS(num_cmp($BuCIA[3], mode=>"arith"));
ANS(num_cmp($BuCIA[4], mode=>"arith"));

ENDDOCUMENT();       # This should be the last executable line in the problem.
