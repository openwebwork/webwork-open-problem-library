## DESCRIPTION
## Future Value: Compute Future Value and Interest
## ENDDESCRIPTION

##KEYWORDS('financial mathematics', 'interest', 'future value')

## DBsubject('Financial Mathematics')
## DBchapter('Introduction to Interest')
## DBsection('Future Value')
## Date('Fall 2011')
## Author1('David Covert')
## Author2('Jason Aubrey')
## Institution('University of Missouri')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "contextCurrency.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   #"PGcourse.pl",      # Customization file for the course
   "PeriodicRerandomization.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

$fv = Real(random(100000,210000,1000));
$pmt = Real(random(300,600,1));
$r = Real(random(3,7.5,0.01));
$i = Real(random(0.03,0.08,0.001));
$n = Real(random(20,50,1));
$d = Real(random(150,250,10));
$t= Real(random(3,15,1));
$ans1 = $pmt*(((1 + $r/1200)**(12*$t) - 1)/($r/1200));
$ans2 = $ans1 - (12*$t*$pmt);

Context("Currency");

$pmt = Currency($pmt);
$fv = Currency($fv);
$ans1 = Currency($ans1);
$ans2 = Currency($ans2);

##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_TEXT

If you make monthly deposits of \($pmt\) into an ordinary annuity earning an annual interest rate of \( $r  $PERCENT\), how much will be in the account after \( $t \) years?  How much interest did you earn in those \( $t \) years?



$PAR
How much is in the interest after \( $t \) years? \{ANS_RULE(10)\} 
$PAR
How much interest was earned in those \( $t \) years? \{ANS_RULE(10)\}
$PAR
(${BBOLD}Note: $EBOLD Your answer is a dollar amount and should include a dollar sign)
$PAR $BR
END_TEXT
Context()->normalStrings;


PeriodicRerandomization("5"); #Problem resets itself after 5 attempts

PeriodicStatus(
 "Generate a new version of this problem",
 "You have ${attempts_modp_remaining} attempt(s) remaining before you will receive a new version of this problem."
 );


##############################################################
#
#  Answers
#
#

ANS(Compute($ans1)->with(tolerance=>.05)->cmp);
ANS(Compute($ans2)->with(tolerance=>.05)->cmp);

COMMENT('MathObject version', 'Features PeriodicRerandomization');
ENDDOCUMENT();