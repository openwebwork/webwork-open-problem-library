# DESCRIPTION
# Solve an equation of the form (a - bx)^2 = c, where a,b,c > 0 integers.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter(Equations and Inequalities')
## DBsection('Quadratic Equations')
## KEYWORDS('equations', 'quadratic')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "fracListChecker.pl", # contains custom checker and restricts context
  "MUHelp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;

##### force simplified square roots
package my::Function::numeric;
our @ISA = ('Parser::Function::numeric');
sub sqrt {
  my $self = shift;
  my $value = $self->context->flag("setSqrt");
  return $value+1 if $value && $_[0] == 1; # force sqrt(1) to be incorrect
  return $value if $value;
  return $self->SUPER::sqrt(@_);
}
package main;


###########################################################################
# setup contexts and variables 
###########################################################################
setFracListFunctions(); # set up context for custom checker
Context()->strings->add("no solutions"=>{}, "infinitely many"=>{}, "no solution"=>{alias=>"no solutions"}, "none"=>{alias=>"no solutions"}, "all reals"=>{alias=>"infinitely many"});
$var = list_random('x','y','z','w','p','q','r','s','t','u','v');
Context()->variables->are($var=>"Real");
Context()->functions->set(sqrt=>{class=>'my::Function::numeric'});
Context()->flags->set(reduceConstantFunctions=>0);

$a = random(2,10);
do {$b = random(2,15)} until (gcd($a,$b) == 1);
$c = random(2,9)**2;

$n1 = $a - sqrt($c);
$n2 = $a + sqrt($c);
$answer = List(Fraction($n1, $b), Fraction($n2, $b));
$eqn = "($a - $b $var)^2 = $c";


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Solve for \($var\):
$PAR \[$eqn\] $PAR
\($var = \) \{ans_rule(20)\}
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($answer->cmp(checkFracList()));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($var = $answer\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  $BBOLD Help: $EBOLD \{ MUHelp("quadeqns") \}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization. Edited and updated in 2012/2013.
$BR
Desc: Solve an equation of the form (a - bx)^2 = c, where a,b,c > 0 integers.');
ENDDOCUMENT();