# DESCRIPTION
# Gives an exp graph and asks for the correct equation
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Graphs of Functions')
## KEYWORDS('functions', 'exponential', 'graphs')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Interval");
$x[0] = random(-8,-3);
$x[1] = $x[0] + random(2,5);
$x[2] = $x[1] + random(2,5);
$flip = -1;random(-1,1,2);
$y[0] = random(-8,-3)*$flip;
$y[1] = $y[0] + random(2,3)*$flip;
$y[2] = $y[1] + random(5,8)*$flip;
$oc1 = random(0,1,1);
$oc2 = random(0,1,1);
if ($oc1 == 1 && $oc2 == 1) {
  if ($flip == 1) {
    $domain = Compute("[$y[0],$y[2]]");
  } else {
    $domain = Compute("[$y[2],$y[0]]");
  }
  $range = Compute("[$x[0],$x[2]]");
} elsif ($oc1 == 1) {
  if ($flip == 1) {
    $domain = Compute("[$y[0],$y[2])");
  } else {
    $domain = Compute("($y[2],$y[0]]");
  }
  $range = Compute("[$x[0],$x[2])");
} elsif ($oc2 == 1) {
  if ($flip == 1) {
    $domain = Compute("($y[0],$y[2]]");
  } else {
    $domain = Compute("[$y[2],$y[0])");
  }
  $range = Compute("($x[0],$x[2]]");
} else {
  if ($flip == 1) {
    $domain = Compute("($y[0],$y[2])");
  } else {
    $domain = Compute("($y[2],$y[0])");
  }
  $range = Compute("($x[0],$x[2])");
}
$maxx = max(abs($x[0]),abs($x[2]),abs($y[0]),abs($y[2]),2)+2;
$maxy = $maxx;
$minx = -$maxx;
$miny = -$maxx;
$gsize = 450;

$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($j = $minx; $j <= $maxx; $j++) {
  $graph->moveTo($j,$miny);
  $graph->lineTo($j,$maxy,'gray',1);
}
for ($j = $miny; $j <= $maxy; $j++) {
  $graph->moveTo($minx,$j);
  $graph->lineTo($maxx,$j,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));
for ($j = $minx+1; $j < $maxx; $j++) {
  if ($j != 0 && $j % 2 == 0) {
    $graph->lb(new Label($j,-0.1,$j, 'black', 'top','center'));
  }
}
for ($j = $miny+1; $j < $maxy; $j++) {
  if ($j != 0 && $j % 2 == 0) {
    $graph->lb(new Label(-0.1,$j,$j, 'black', 'middle', 'right'));
  }
}

$graph->moveTo($x[0],$y[0]);
$graph->lineTo($x[1],$y[1],'blue',2);
$graph->lineTo($x[2],$y[2],'blue',2);
if ($oc1 == 0) {
  $graph->stamps(open_circle($x[0],$y[0],'blue'));
} else {
  $graph->stamps(closed_circle($x[0],$y[0],'blue'));
}
#$graph->stamps(new Circle($x[1],$y[1],1,'blue','blue'));
if ($oc2 == 0) {
  $graph->stamps(open_circle($x[2],$y[2],'blue'));
} else {
  $graph->stamps(closed_circle($x[2],$y[2],'blue'));
}

$fig = image(insertGraph($graph), width=>$gsize, height=>$gsize, tex_size=>500 );


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
$BCENTER
\{ 
$fig
\}
$ECENTER 
$PAR
The graph of \(f(x)\) is given above. Determine the domain and range of \(f^{-1}(x)\) using interval notation.
$PAR
Domain of \(f^{-1}(x)\): \{ans_rule(20)\}
$PAR
Range of \(f^{-1}(x)\): \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($domain)->cmp());
ANS(Compute($range)->cmp());

###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} domain of \(f^{-1}(x)\) is \($domain\), range is \($range\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} \{AnswerFormatHelp("intervals", "Click here for help entering intervals.")\}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();