# DESCRIPTION
# Asks to determine which movers are better
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Equations and Inequalities')
## DBsection('Linear Inequalities')
## KEYWORDS('inequalities','applications')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.6')
## Problem1('40 41')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextCurrency.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
do {
  $x = random(1500,7500,100);
  $I = random(300,700);
  $r1 = random(2.5,7,0.5);
  $r2 = random(3,7.5,0.5);
  $total = (100*$I - $r1*$x + $r2*$x)/$r2;
} until ($r2 > $r1 && $total == floor($total) && abs($total - $x) > 1000);

Context("Currency")->currency->addSymbol("dollars","dollar");
$x = Currency($x);
$total = Currency($total);
$I = Currency($I);


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Sarah plans to invest \($total\), part at \($r1%\) simple interest and the rest at \($r2%\) simple interest. What is the most that she can invest at \($r1%\) and still be guaranteed at least \($I\) in interest per year? Round your answer to the nearest cent and include units.
$PAR
Most at \($r1%\): \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($x)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($x\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();