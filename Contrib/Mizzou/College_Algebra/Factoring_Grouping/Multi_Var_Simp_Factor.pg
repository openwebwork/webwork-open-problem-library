# DESCRIPTION
# Factor an expression in two variables by grouping where only a -1 or 1 can be factored 
# out of last 2 terms.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Expanding and Factoring')
## KEYWORDS('factoring','grouping')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "parserMultiAnswer.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@vars = ("x","y","m","n","s","t","u","v");
$ch = random(0,6,2);
$v1 = $vars[$ch];
$v2 = $vars[$ch+1];
Context()->variables->are($v1=>"Real", $v2=>"Real");

$c = non_zero_random(-7,7,1);
do {$d = non_zero_random(-7,7,1)} until (gcd($c,$d) == 1);
do {
  $k = random(1,6);
  $a = abs($c)*$k;
  $b = sgn($c)*$d*$k;
} until ($a != 1 || abs($b) != 1);

$afac1 = Formula("sgn($c)*$c $v2 +  sgn($c)*$d ")->reduce;
$afac2 = Formula("$k $v1 + sgn($c)")->reduce;
if ($a == 1) {
  $disp = "$v1 $v2";
} else {
  $disp = "$a $v1 $v2";
}

if ($b == 1) {
  $disp = $disp."$v1";
} elsif ($b == -1) {
  $disp = $disp."-$v1";
} else {
  $disp = $disp."+ $b $v1";
}

if ($c == 1) {
  $disp = $disp."+ $v2";
} elsif ($c == -1) {
  $disp = $disp."- $v2";
} else {
  $disp = $disp."+ $c $v2";
}
$disp = $disp."+ $d";

$answer = MultiAnswer($afac1, $afac2)->with(
  singleResult => 0,
  allowBlankAnswers => 1,
  checker => sub {
    my ( $correct, $student, $self ) = @_;
    my ( $c1, $c2 ) = @{$correct};
    my ( $s1, $s2 ) = @{$student};
    $s1 = Formula($s1) unless ($s1->type eq 'Formula' || $s1->type eq 'String');
    $s2 = Formula($s2) unless ($s2->type eq 'Formula' || $s2->type eq 'String');
    $s1 = Formula("0.1$v1^{1000}") if ($s1->type eq 'String'); #bogus answer
    $s2 = Formula("0.01$v1^{500}") if ($s2->type eq 'String'); #bogus answer
    if (($c1 == $s1 && $c1 == $s2) || ($c2 == $s1 && $c2 == $s2)) {
      return [1,0];
    } elsif (($c1 == -$s1 && $c1 == -$s2) || ($c2 == -$s1 && $c2 == -$s2)) {
      return [1,0];
    } elsif (($c1 == $s1 && $c2 == $s2) || ($c1 == $s2 && $c2 == $s1)) {
      return [1,1];
    } elsif (($c1 == -$s1 && $c2 == -$s2) || ($c1 == -$s2 && $c2 == -$s1)) {
      return [1,1];
    } elsif (($c1 == $s1 && $c2 != $s2) || ($c2 == $s1 && $c1 != $s2)) {
      return [1,0];
    } elsif (($c1 == -$s1 && $c2 == $s2) || ($c2 == -$s1 && $c1 == $s2)) {
      return [0,1];
    } elsif (($c1 == $s2 && $c2 != $s1) || ($c2 == $s2 && $c1 != $s1)) {
      return [0,1];
    }
    return [0,0];
  }
);
$texanswer = "\(($afac1)($afac2)\)";


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Factor the expression and simplify your answer as much as possible:
$PAR $BCENTER 
\($disp = \big( \) \{ $answer->ans_rule(20) \} \( \big) \big( \) \{ $answer->ans_rule(20) \} \( \big) \) 
$ECENTER
END_TEXT
Context()->normalStrings;


###########################################################################
# check the answer  
###########################################################################
ANS($answer->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
Context()->texStrings;
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $texanswer
  $PAR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization. Edited and updated in 2012/2013.
$BR
Desc: Factor an expression in two variables by grouping where only a -1 or 1 can be factored out of last 2 terms.');
ENDDOCUMENT();