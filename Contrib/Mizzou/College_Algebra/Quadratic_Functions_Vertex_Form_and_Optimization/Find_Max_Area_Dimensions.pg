# DESCRIPTION
# Asks for the area function, 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('relative extrema', 'area', 'domain', 'range')
## Author1('Rick Lynch')
## Author2('Teri Christiansen')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "contextInequalities.pl",
  "unionTables.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$secs = random(2,4);
$tfence = 2*($secs+1)*random(3,10,1);
$area = Formula("-($secs+1) x^2 + $tfence x");
$width = $tfence/(2*($secs+1));
$length = ($tfence - ($secs+1)*$width);
$maxarea = $area->eval(x=>$width);

if ($secs == 2) {
  $dispsecs = "two";
} elsif ($secs == 3) {
  $dispsecs = "three";
} else {
  $dispsecs = "four";
}

$gsize = 540*2/3;
$fig1 = image( "Garden_$secs.png", width=>$gsize, height=>147, tex_size=>500 );
$case = random(0,1,1);

###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$BCENTER
\{
$fig1
\}
$ECENTER
$PAR

Tessa has $tfence ft of fencing available to construct a fence that will divide her garden into $dispsecs rectangular sections. Her house forms one side of the garden and \(x\) represents the width, as shown above.
END_TEXT

if ($case == 0) {
BEGIN_TEXT
Determine the dimensions that yield the maximum area.
$PAR
Width: \{ans_rule(5)\} ft
$PAR
Length: \{ans_rule(5)\} ft
END_TEXT
} else {
BEGIN_TEXT
Determine the largest total area that can be enclosed.
$PAR
Largest Area: \{ans_rule(5)\} sq ft
END_TEXT
}


###########################################################################
# check the answer  
###########################################################################
if ($case == 0) {
ANS(Compute($width)->cmp());
ANS(Compute($length)->cmp());
} else {
ANS(Compute($maxarea)->cmp());
}


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  if ($case == 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD width is $width ft, length is $length ft
    $PAR
    END_TEXT
  } else {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD $maxarea sq ft
    $PAR
    END_TEXT
  }
} else {
    BEGIN_TEXT
    $BR
    END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();