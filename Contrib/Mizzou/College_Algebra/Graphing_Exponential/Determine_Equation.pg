# DESCRIPTION
# Gives an exp graph and asks for the correct equation
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Graphs of Functions')
## KEYWORDS('functions', 'exponential', 'graphs')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "parserAssignment.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@bases = (2..10);
push(@bases,exp(1));
$choice = list_random(@bases);

$c1 = random(0,3);
do {$c2 = random(0,3)} until ($c2 != $c1 && !($c1 == 2 && $c2 == 3) && !($c1 == 3 && $c2 == 2) && !($c1 == 1 && $c2 == 3) && !($c1 == 3 && $c2 == 1));
@trans = (0,0,0,0); # 0 - V shift, 1 - H shift, 2 - V refl, 3 - H refl
for ($i = 0; $i < 4; $i++) {
  if ($i == $c1 || $i == $c2) {
    $trans[$i] = 1;
  }
}

if ($trans[1] == 1) {
  $a = non_zero_random(-5,5);
} else {
  $a = 0;
}

if ($trans[0] == 1) {
  do {$b = non_zero_random(-5,5)} until ($b != $a);
} else {
  $b = 0;
}

$dispans = "y = ";
if ($trans[2] == 1) {
  $dispans = "y = -";
}
if ($choice == exp(1)) {
  $dispans = ($dispans)."e^";
} else {
  $dispans = ($dispans)."$choice^";
}

if ($trans[3] == 1 && $trans[1] == 1) {
  $dispans = ($dispans)."{-(x-$a)}";
} elsif ($trans[3] == 1) {
  $dispans = ($dispans)."{-x}";
} elsif ($trans[1] == 1) {
  $dispans = ($dispans)."{x-$a}";
} else {
  $dispans = ($dispans)."{x}";
}

if ($trans[0] == 1) {
  $dispans = ($dispans)."+$b";
}

if ($choice == exp(1)) {
  $dispeqn = "y = e^x";
} else {
  $dispeqn = "y = $choice^x";
}
Context()->variables->are(x=>"Real", y=>"Real");
parser::Assignment->Allow;
$ans = Formula($dispans)->reduce;

$maxx = max(abs($a),abs($b))+3;
$maxy = ceil(max($choice,1/$choice)+max(abs($a),abs($b))+2);
$minx = -$maxx;
$miny = -$maxy;
$gsize = 450;

$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($j = $minx; $j <= $maxx; $j++) {
  $graph->moveTo($j,$miny);
  $graph->lineTo($j,$maxy,'gray',1);
}
for ($j = $miny; $j <= $maxy; $j++) {
  $graph->moveTo($minx,$j);
  $graph->lineTo($maxx,$j,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));
for ($j = $minx+1; $j < $maxx; $j++) {
  if ($j != 0) {
    $graph->lb(new Label($j,-0.1,$j, 'black', 'top','center'));
  }
}
for ($j = $miny+1; $j < $maxy; $j++) {
  if ($j != 0 && $j % 2 == 0) {
    $graph->lb(new Label(-0.1,$j,$j, 'black', 'middle', 'right'));
  }
}


# set up plots
if ($trans[0] == 1 && $trans[1] == 1 && $trans[2] == 0 && $trans[3] == 0) {
  $expn = sub { my $x = shift(); ($choice)**($x-$a)+$b };
  $fun = new Fun($expn, $graph);
  $fun->domain($minx,$a+5);
  $fun->steps(1500);
  for ($i = $miny-2; $i < $maxy+2; $i = $i + 2) {
    $graph->moveTo($i-0.5, $b-0.05);
    $graph->lineTo($i+0.5, $b-0.05,'red',3);
  }
} elsif ($trans[0] == 1 && $trans[1] == 0 && $trans[2] == 1 && $trans[3] == 0) {
  $expn = sub { my $x = shift(); -($choice)**($x)+$b };
  $fun = new Fun($expn, $graph);
  $fun->domain($minx,5);
  $fun->steps(1500);
  for ($i = $miny-2; $i < $maxy+2; $i = $i + 2) {
    $graph->moveTo($i-0.5, $b+0.05);
    $graph->lineTo($i+0.5, $b+0.05,'red',3);
  }
} elsif ($trans[0] == 1 && $trans[1] == 0 && $trans[2] == 0 && $trans[3] == 1) {
  $expn = sub { my $x = shift(); ($choice)**(-$x)+$b };
  $fun = new Fun($expn, $graph);
  $fun->domain(-5,$maxx);
  $fun->steps(1500);
  for ($i = $miny-2; $i < $maxy+2; $i = $i + 2) {
    $graph->moveTo($i-0.5, $b-0.05);
    $graph->lineTo($i+0.5, $b-0.05,'red',3);
  }
} elsif ($trans[0] == 0 && $trans[1] == 1 && $trans[2] == 1 && $trans[3] == 0) {
  $expn = sub { my $x = shift(); -($choice)**($x-$a) };
  $fun = new Fun($expn, $graph);
  $fun->domain($minx,$a+5);
  $fun->steps(1500);
  for ($i = $miny-2; $i < $maxy+2; $i = $i + 2) {
    $graph->moveTo($i-0.5, $b+0.05);
    $graph->lineTo($i+0.5, $b+0.05,'red',3);
  }
} elsif ($trans[0] == 0 && $trans[1] == 1 && $trans[2] == 0 && $trans[3] == 1) {
  $expn = sub { my $x = shift(); ($choice)**(-($x-$a)) };
  $fun = new Fun($expn, $graph);
  $fun->domain($a-5,$maxx);
  $fun->steps(1500);
  for ($i = $miny-2; $i < $maxy+2; $i = $i + 2) {
    $graph->moveTo($i-0.5, -0.05);
    $graph->lineTo($i+0.5, -0.05,'red',3);
  }
} elsif ($trans[0] == 0 && $trans[1] == 0 && $trans[2] == 1 && $trans[3] == 1) {
  $expn = sub { my $x = shift(); -($choice)**(-$x) };
  $fun = new Fun($expn, $graph);
  $fun->domain(-5,$maxx);
  $fun->steps(1500);
  for ($i = $miny-2; $i < $maxy+2; $i = $i + 2) {
    $graph->moveTo($i-0.5, 0.05);
    $graph->lineTo($i+0.5, 0.05,'red',3);
  }
}

$fig = image(insertGraph($graph), width=>$gsize, height=>$gsize, tex_size=>500 );


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Write an equation that represents the graph below by using transformations from \($dispeqn\).
$PAR
$BCENTER
\{ 
$fig
\}
$ECENTER 
$PAR
Equation: \{ans_rule(25)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($dispans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} \{AnswerFormatHelp("equations", "Click here for help entering equations.")\}
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();