# DESCRIPTION
# Gives the graph of a piecewise function with three parts:
# 2 non zero sloped lines and a constant piece.
# The constant piece is in the middle.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Piecewise Defined Functions')
## KEYWORDS('functions', 'piecewise', 'graphs')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "unionTables.pl",
  "parserPopUp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$maxx = 16;
$minx = -$maxx;
$gsize = 500;

$graph = init_graph($minx, $minx, $maxx, $maxx, size=>[$gsize,$gsize]);
for ($i = 1; $i <= $maxx ; $i++) {
  $graph->moveTo($i,$minx);
  $graph->lineTo($i, $maxx, 'gray', 1);
  $graph->moveTo(-$i,$maxx);
  $graph->lineTo(-$i, $minx, 'gray', 1);
  $graph->moveTo($minx, $i);
  $graph->lineTo($maxx, $i, 'gray', 1);
  $graph->moveTo($minx, -$i);
  $graph->lineTo($maxx, -$i, 'gray', 1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $minx);
$graph->arrowTo(0, $maxx, 'black', 2);
$graph->arrowTo(0, $minx, 'black', 2);
$graph->lb(new Label($maxx-0.1, -0.2, 'x', 'black', 'top', 'right'));
$graph->lb(new Label(0.4, $maxx-0.1, 'y', 'black', 'top', 'left'));
$graph->lb(new Label(1,-0.1,'1', 'black', 'top','center'));
$graph->lb(new Label(5,-0.1,'5', 'black', 'top','center'));
$graph->lb(new Label(10,-0.1,'10', 'black', 'top','center'));
$graph->lb(new Label(-5,-0.1,'-5', 'black', 'top','center'));
$graph->lb(new Label(-10,-0.1,'-10', 'black', 'top','center'));
$graph->lb(new Label(-0.1,0.7,'1', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,4.7,'5', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,9.7,'10', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,-5.3,'-5', 'black', 'bottom', 'right'));
$graph->lb(new Label(-0.1,-10.3,'-10', 'black', 'bottom', 'right'));

$x1 = random(-13,-6);
$x2 = random(-5,-2);
$x3 = random(2,5);
$x4 = random(6,13);
$y21 = random(-11,11); # 1st piece right y
do {
  $y1 = random(-11,11);
  $m1 = ($y21 - $y1)/($x2 - $x1);
  $b1 = $y1 - $m1*$x1;
  $yL = $m1*$minx+$b1;
} while ($y1 == $y21 || ($yL < $minx+1) || ($yL > $maxx+1)); # 1st piece left y
do {$y22 = non_zero_random(-11,11)} until ($y22 != $y21); # 2nd piece left y
$y31 = $y22; # 2nd piece right y
do {$y32 = random(-11,11)} until ($y32 != $y31); # 3rd piece left y
do {
  $y4 = random(-11,11);
  $m2 = ($y4 - $y32)/($x4 - $x3);
  $b2 = $y4 - $m2*$x4;
  $yR = $m2*$maxx+$b2;
} while ($y4 == $y32 || ($yR < $minx+1) || ($yR > $maxx-1)); #3rd piece right y

$graph->moveTo($x2,$y21);
$graph->arrowTo($minx,$yL,'blue',2);
$graph->moveTo($x2,$y22);
$graph->lineTo($x3,$y31,'blue',2);
$graph->moveTo($x3,$y32);
$graph->arrowTo($maxx,$yR,'blue',2);
$graph->stamps(closed_circle($x1, $y1,'blue'));
$graph->stamps(closed_circle($x4, $y4,'blue'));

$oc1 = random(0,1);
$oc2 = random(0,1);
if ($oc1 == 0) {
  $graph->stamps(open_circle($x2,$y21,'blue'));
  $graph->stamps(closed_circle($x2,$y22,'blue'));
  $ineq1 = PopUp(["select", "<=", "<"], "<");
  $ineq2 = PopUp(["select", "<=", "<"], "<=");
  $ineq1ans = "<";
  $ineq2ans = "\leq";
} else {
  $graph->stamps(closed_circle($x2,$y21,'blue'));
  $graph->stamps(open_circle($x2,$y22,'blue'));
  $ineq1 = PopUp(["select", "<=", "<"], "<=");
  $ineq2 = PopUp(["select", "<=", "<"], "<");
  $ineq1ans = "\leq";
  $ineq2ans = "<";
}

if ($oc1 == 0) {
  $graph->stamps(open_circle($x3,$y31,'blue'));
  $graph->stamps(closed_circle($x3,$y32,'blue'));
  $ineq3 = PopUp(["select", "<=", "<"], "<");
  $ineq4 = PopUp(["select", ">=", ">"], ">=");
  $ineq3ans = "<";
  $ineq4ans = "\geq";
} else {
  $graph->stamps(closed_circle($x3,$y31,'blue'));
  $graph->stamps(open_circle($x3,$y32,'blue'));
  $ineq3 = PopUp(["select", "<=", "<"], "<=");
  $ineq4 = PopUp(["select", ">=", ">"], ">");
  $ineq3ans = "\leq";
  $ineq4ans = ">";
}

# to display the piecewise function properly
$showpiecewise =
  ColumnTable(
  "\( \displaystyle f(x) = \left$LBRACE \begin{array}{cc}
 &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\ &\\
\end{array}\right.\)",
  ans_rule(20)."$SPACE $SPACE $SPACE $SPACE  for \(x\) $SPACE".$ineq1->menu()."$SPACE".ans_rule(3).$PAR.ans_rule(20)."$SPACE $SPACE $SPACE $SPACE for $SPACE".ans_rule(3)."$SPACE".$ineq2->menu()."$SPACE \(x\) $SPACE".$ineq3->menu()."$SPACE".ans_rule(3).$PAR.ans_rule(20)."$SPACE $SPACE $SPACE $SPACE for \(x\) $SPACE".$ineq4->menu()."$SPACE".ans_rule(3),
  indent => 0, separation => 10, valign => "MIDDLE"
);

$piece1 = Formula("$m1 (x-$x1)+$y1")->reduce;
$piece2 = Formula("$y22")->reduce;
$piece3 = Formula("$m2 (x-$x4)+$y4")->reduce;

Context()->texStrings;
$num1 = ($y21 - $y1)/gcd($y21 - $y1, $x2 - $x1);
$den1 = ($x2 - $x1)/gcd($y21 - $y1, $x2 - $x1);
$num2 = ($y4 - $y32)/gcd($y4 - $y32, $x4 - $x3);
$den2 = ($x4 - $x3)/gcd($y4 - $y32, $x4 - $x3);

if ($num1 < 0) {
  $tmp1 = -$num1;
  if ($den1 == 1) {
    $dispeq1 = "-$tmp1 x";
  } else {
    $dispeq1 = "-\frac{$tmp1}{$den1}x";
  }
} else {
  if ($den1 == 1) {
    $dispeq1 = "$num1 x";
  } else {
    $dispeq1 = "\frac{$num1}{$den1}x";
  }
}

if ($num2 < 0) {
  $tmp2 = -$num2;
  if ($den2 == 1) {
    $dispeq2 = "-$tmp2 x";
  } else {
    $dispeq2 = "-\frac{$tmp2}{$den2}x";
  }
} else {
  if ($den2 == 1) {
    $dispeq2 = "$num2 x";
  } else {
    $dispeq2 = "\frac{$num2}{$den2}x";
  }
}

$b1num = ($y1*$den1 - $num1*$x1)/gcd($y1*$den1 - $num1*$x1, $den1);
$b1den = $den1/gcd($y1*$den1 - $num1*$x1, $den1);
$b2num = ($y4*$den2 - $num2*$x4)/gcd($y4*$den2 - $num2*$x4, $den2);
$b2den = $den2/gcd($y4*$den2 - $num2*$x4, $den2);

if ($b1num < 0) {
  $tmp3 = -$b1num;
  if ($b1den == 1) {
    $dispeq1 = ($dispeq1)."- $tmp3";
  } else {  
    $dispeq1 = ($dispeq1)."- \frac{$tmp3}{$b1den}";
  }
} else {
  if ($b1den == 1) {
    $dispeq1 = ($dispeq1)."+$b1num";
  } else {
    $dispeq1 = ($dispeq1)."+\frac{$b1num}{$b1den}";
  }
}

if ($b2num < 0) {
  $tmp4 = -$b2num;
  if ($b2den == 1) {
    $dispeq2 = ($dispeq2)."- $tmp4";
  } else {
    $dispeq2 = ($dispeq2)."- \frac{$tmp4}{$b2den}";
  }
} else {
  if ($b2den == 1) {
    $dispeq2 = ($dispeq2)."+$b2num";
  } else {
    $dispeq2 = ($dispeq2)."+\frac{$b2num}{$b2den}";
  }
}


$dispans = "f(x) = \left$LBRACE\begin{array}{lcl}
$dispeq1 & \quad & \mbox{for } x $ineq1ans $x2 \\
$y22 & \quad & \mbox{for } $x2 $ineq2ans x $ineq3ans $x3 \\
$dispeq2 & \quad & \mbox{for } x $ineq4ans $x3\\
\end{array} \right.";


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$PAR
$BCENTER
\{ image(insertGraph($graph), width=>$gsize, height=>$gsize, tex_size=>500 ); \}
$ECENTER 
$PAR

The graph of a piecewise function, \(f(x)\), is depicted above. Find its equation:


$PAR
$BCENTER
$showpiecewise
$ECENTER
$PAR

END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($piece1)->cmp());
ANS($ineq1->cmp());
ANS(Compute("$x2")->cmp());
ANS(Compute($piece2)->cmp());
ANS(Compute("$x2")->cmp());
ANS($ineq2->cmp());
ANS($ineq3->cmp());
ANS(Compute("$x3")->cmp());
ANS(Compute($piece3)->cmp());
ANS($ineq4->cmp());
ANS(Compute("$x3")->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    ${BBOLD}Answer:${EBOLD}
    $PAR
    \[
    $dispans
    \]
    $PAR
    END_TEXT
} else {
    BEGIN_TEXT
    $PAR
    ${BBOLD}Remarks:${EBOLD} Note that ${LQ}<=${RQ} stands for ${LQ}less than or equal${RQ} and ${LQ}>=${RQ} stands for ${LQ}greater than or equal.${RQ} You must have your browser window expanded wide enough to correctly display the above formula. \{AnswerFormatHelp("formulas","Click here for help entering formulas.") \} 
    $BR
    END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();