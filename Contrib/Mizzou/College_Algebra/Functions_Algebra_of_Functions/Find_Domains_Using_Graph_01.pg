# DESCRIPTION
# Gives graph of a parabola (F) and an abs value (G) and asks for the domain of:
# F+G, F-G, FG, F/G, G/F
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Piecewise Defined Functions')
## KEYWORDS('functions', 'piecewise', 'graphs')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "contextFraction.pl",
  "unionTables.pl",
  "parserPopUp.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");

# parabola
do {
  $a = random(-6,6);
  do {$b = random(-8,8)} until (abs($a - $b) != 1 && abs($a - $b) != 2 && abs($a - $b) != 3);
  $c = non_zero_random(-1,1,0.5);
  $y = $c*((($a+$b)/2) - $a)*((($a+$b)/2) - $b);
  $x1 = min($a,$b) - random(3,4);
  $y1 = $c*($x1 - $a)*($x1 - $b);
  $x2 = max($a,$b) + random(1,4);
  $y2 = $c*($x2 - $a)*($x2 - $b);
} until (abs($y) < 15 && abs($y1) < 25 && abs($y2) < 25);
$expn1 = sub { my $x = shift(); $c*($x - $a)*($x - $b) };

do {
  $r1 = random(min($a,$b)-3,min($a,$b)+1);
  do {$r2 = random(min($a,$b)+2,max($a,$b)+3)} until ($r2 != max($a,$b));
  $d = non_zero_random(1,2)*sgn($c);
  $e = ($r1+$r2)/2;
  $f = ($r1 - $e)*$d;
  $x3 = $r1 - random(1,2);
  $y3 = -$d*abs($x3 - $e) - $f;
  $x4 = $r2 + random(2,4);
  $y4 = -$d*abs($x4 - $e) - $f;
} until (abs($f) < 10 && abs($y3) < 15 && abs($y4) < 15 && $x3 != $x1 && $x4 != $x2);
$expn2 = sub { my $x = shift(); -$d*abs($x - $e) - $f };

$minx = floor(min($x1,$x2,$x3,$x4,-1)-3);
$miny = floor(min($y,$y1,$y2,-$f,$y3,$y4,-1)-3);
$maxx = ceil(max($x1,$x2,$x3,$x4,1)+3);
$maxy = ceil(max($y,$y1,$y2,-$f,$y3,$y4,1)+3);
$gsize = 500;

$graph = init_graph($minx, $miny, $maxx, $maxy, size=>[$gsize,$gsize]);
for ($i = $minx; $i <= $maxx; $i++) {
  $graph->moveTo($i,$miny);
  $graph->lineTo($i,$maxy,'gray',1);
}
for ($i = $miny; $i <= $maxy; $i++) {
  $graph->moveTo($minx,$i);
  $graph->lineTo($maxx,$i,'gray',1);
}
$graph->moveTo($minx, 0);
$graph->arrowTo($maxx, 0, 'black', 2);
$graph->arrowTo($minx, 0, 'black', 2);
$graph->moveTo(0, $miny);
$graph->arrowTo(0, $maxy, 'black', 2);
$graph->arrowTo(0, $miny, 'black', 2);
$graph->lb(new Label($maxx-0.1, 0.4, 'x', 'black', 'bottom', 'right'));
$graph->lb(new Label(0.4, $maxy-0.1, 'y', 'black', 'top', 'left'));

for ($i = $minx+1; $i < $maxx; $i++) {
  if ($i != 0 && $i % 5 == 0 || $i == 1) {
    $graph->lb(new Label($i,-0.1,$i, 'black', 'top','center'));
  }
}

for ($i = $miny+1; $i < $maxy; $i++) {
  if ($i != 0 && $i % 5 == 0 || $i == 1) {
    $graph->lb(new Label(-0.1,$i,$i, 'black', 'middle', 'right'));
  }
}

$graph->stamps(closed_circle($x1,$y1,'blue'));
$graph->stamps(closed_circle($x2,$y2,'blue'));
$graph->stamps(closed_circle(($a+$b)/2,$y,'blue'));
$graph->stamps(closed_circle($a,0,'blue'));
$graph->stamps(closed_circle($b,0,'blue'));
$graph->stamps(closed_circle($x3,$y3,'red'));
$graph->stamps(closed_circle($x4,$y4,'red'));
$graph->stamps(closed_circle($e,-$f,'red'));
if ($r1 == $a) {
  $graph->stamps(closed_circle($r1,0,'black'));
} else {
  $graph->stamps(closed_circle($r1,0,'red'));
}
$graph->stamps(closed_circle($r2,0,'red'));
$graph->lb(new Label($x1-0.2,$y1-0.2,'F', 'blue', 'middle','right'));
$graph->lb(new Label($x3-0.2,$y3-0.2,'G', 'red', 'middle','right'));
$fun1 = new Fun($expn1, $graph);
$fun1->steps(1500);
$fun1->domain($x1,$x2);
$fun2 = new Fun($expn2, $graph);
$fun2->steps(1500);
$fun2->domain($x3,$x4);
$fun2->color('red');

Context("Interval");
$domainF = Compute("[$x1,$x2]");
$domainG = Compute("[$x3,$x4]");
$domL = max($x1,$x3);
$domR = min($x2,$x4);
$domainFolG = Compute("[$domL,$domR]"); # F overlap (ol) G 
$domainFoG = Compute("$domainFolG - {$r1,$r2}"); # F over (o) G
$domainGoF = Compute("$domainFolG - {$a,$b}"); # G over (o) F



###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$PAR
$BCENTER
\{ image(insertGraph($graph), width=>$gsize, height=>$gsize, tex_size=>500 ); \}
$ECENTER 
$PAR

Using the graph of \(F\) and \(G\) above, find the following and write your answers in interval notation:
$PAR
(a) Domain of \(F\): $SPACE\{ans_rule(20)\}
$PAR
(b) Domain of \(FG\): $SPACE\{ans_rule(20)\}
$PAR
(c) Domain of \(F/G\): $SPACE\{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($domainF)->cmp());
ANS(Compute($domainFolG)->cmp());
ANS(Compute($domainFoG)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD}
  $PAR
  (a) \($domainF\)
  $PAR
  (b) \($domainFolG\)
  $PAR
  (c) \($domainFoG\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Help:${EBOLD} \{AnswerFormatHelp("intervals","Click here for help entering intervals.") \} 
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();