##DESCRIPTION
##  Logarithms: Properties of Logarithms
##ENDDESCRIPTION

## KEYWORDS('logarithm', 'laws of logarithms')

## DBsubject('Algebra') 
## BookTitle('Exponential and Logarithmic Functions')
## DBchapter('Laws of Logarithms') 
## Date('Spring 2012')
## Author1('David Covert')
## Author2('Teri Christiansen')
## Institution('University of Missouri')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('5.4')

##################################
#  Initialization

DOCUMENT();

loadMacros(
   "PGstandard.pl",
   "PGchoicemacros.pl",
   "PGunion.pl",
   "MathObjects.pl",
   "PGcourse.pl",
   "AnswerFormatHelp.pl",
   "parserMultiAnswer.pl",
"PeriodicRerandomization.pl",
"contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");

###################################
# Setup


$a = non_zero_random(-10,10,1);
do {$b = random(2,10,1)} until (gcd($a,$b) ==1);
$f = "\log($b - $a x )";
if ($a == 1) {
$f = "\log($b -  x )";
} elsif ($a == -1) {
$f = "\log($b + x )";
}
Context("Fraction-NoDecimals");
$endpt = Fraction($b,$a);

Context("Interval");
if ($a >= 0) {
$ans = Compute(" (-inf, $endpt)");
Context()->texStrings;
$dans = "\(\left(-\infty, $endpt\right)\)";
} elsif ($a < 0) {
$ans = Compute(" ($endpt, inf)");
Context()->texStrings;
$dans = "\(\left($endpt,\infty\right)\)";
}

###################################
# Main text

Context()->texStrings;
BEGIN_TEXT
Find the domain of the function \(f(x) = $f\).  Write your answer using \{AnswerFormatHelp("interval", "interval notation")\}. 
$PAR
$SPACE The domain of \(f(x)\)  is \{ans_rule(20)\}.

END_TEXT

###################################
# Answers

$showPartialCorrectAnswers = 0;

ANS( $ans->cmp(studentsMustReduceFractions=>1) );

###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $dans
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('MathObject version');
ENDDOCUMENT();