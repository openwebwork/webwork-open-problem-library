# DESCRIPTION
# Tests the inverse properties of logarithms
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Exponential and Logarithmic Functions')
## DBsection('Laws of Logarithms')
## KEYWORDS('logarithms', 'laws of logarithms', 'inverse')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("2");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$base = list_random(exp(1),10,2,3,4,5,6,7,8,9);
$num = random(11,999,1);
$case = random(0,1);
if ($case == 0) {
  if ($base == exp(1)) {
    $dispq = "e^{\ln $num}";
  } elsif ($base == 10) {
    $dispq = "{10}^{\log $num}";
  } else {
    $dispq = "$base^{\log_{$base} $num}";
  }
} else {
  if ($base == exp(1)) {
    $dispq = "\ln\left(e^{$num}\right)";
  } elsif ($base == 10) {
    $dispq = "\log\left(10^{$num}\right)";
  } else {
    $dispq = "\log_{$base}\left($base^{$num}\right)";
  }
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Simplify: 
$PAR
\($dispq = \) \{ans_rule(15)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($num)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} 
  \($num\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();