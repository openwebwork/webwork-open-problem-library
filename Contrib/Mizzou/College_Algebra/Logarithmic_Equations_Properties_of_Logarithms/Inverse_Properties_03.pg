# DESCRIPTION
# Asks to simplify a simple logarithmic expression using inverse properties and power rule
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Exponential and Logarithmic Functions')
## DBsection('Laws of Logarithms')
## KEYWORDS('logarithms', 'laws of logarithms', 'inverse')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Fraction-NoDecimals");
Context()->variables->are(x=>"Real", y=>"Real");
$base = list_random(exp(1),10,2,3,4,5,6,7,8,9);
$a = random(-1,1,2)*random(2,4);
$b = random(2,5);
if ($a < 0) {
  $ans = Fraction(1,($b)**(abs($a)));
} else {
  $ans = Fraction(($b)**($a),1);
}

if ($base == exp(1)) {
  $dispq = "e^{$a \ln $b}";
} elsif ($base == 10) {
  $dispq = "10^{$a \log $b}";
} else {
  $dispq = "$base^{$a \log_{$base} $b}";
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Simplify assuming all variables are positive: 
$PAR
\(\displaystyle $dispq = \) \{ans_rule(15)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} 
  \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();