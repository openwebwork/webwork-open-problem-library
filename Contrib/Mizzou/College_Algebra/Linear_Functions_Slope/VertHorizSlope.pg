##DESCRIPTION
##  Lines: Slope
##ENDDESCRIPTION

## KEYWORDS('lines', 'slope')

## DBsubject('Algebra') 
## BookTitle('Basic Algebra')
## DBchapter('Lines') 
## Date('Spring 2012')
## Author1('David Covert')
## Author2('Teri Christiansen')
## Author3('Rick Lynch')
## Institution('University of Missouri')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.2')



DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"contextFraction.pl",
"AnswerFormatHelp.pl",
"PeriodicRerandomization.pl",
"PGcourse.pl",
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");

$showPartialCorrectAnswers = 1;

$x1 = non_zero_random(-10,10,1);
$y1 = non_zero_random(-10,10,1);

#$case = random(1,3,1);
$case = 3;


Context("Fraction-NoDecimals");

if($case ==1){
   do {$x2 = random(-10,10,1)} until ($x1 != $x2);
   $y2 = random(-10,10,1);
   $m = Fraction($y1 - $y2,$x1 - $x2);
   ANS( Compute($m) -> cmp(studentsMustReduceFractions=>1) );
}
elsif($case ==2){
   do {$x2 = random(-10,10,1)} until ($x1 != $x2);
   $y2 = $y1;
   $m = 0;
   ANS( Compute($m) -> cmp() );
}

Context()->strings->add("Does Not Exist"=>{},"None"=>{alias=>"Does Not Exist"});
Context()->strings->add("undefined");

if($case ==3){
   do {$y2 = random(-10,10,1)} until ($y2 != $y1);
   $x2 = $x1;
   ANS( String("undefined")-> cmp() );
}




Context()->texStrings;

BEGIN_TEXT
Find the slope of the line containing the points \(($x1,$y1)\) and \( ($x2,$y2)\) if it exists or write ${BBOLD}undefined${EBOLD} if the slope is undefined. You must reduce your answer completely.
$PAR
\(m = \) \{ans_rule(10)\}
END_TEXT


if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD
    The slope does not exist.
    $PAR
    END_TEXT
} else {
    BEGIN_TEXT
    $BR
    END_TEXT
}

Context()->normalStrings;

PeriodicStatus(); 




ENDDOCUMENT();        # This should be the last executable line in the problem.