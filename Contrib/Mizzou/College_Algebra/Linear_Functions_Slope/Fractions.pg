##DESCRIPTION
##  Lines: Slope
##ENDDESCRIPTION

## KEYWORDS('lines', 'slope')

## DBsubject('Algebra') 
## BookTitle('Basic Algebra')
## DBchapter('Lines') 
## Date('Spring 2012')
## Author1('David Covert')
## Author2('Teri Christiansen')
## Author3('Rick Lynch')
## Institution('University of Missouri')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.2')



DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"contextFraction.pl",
"AnswerFormatHelp.pl",
"PeriodicRerandomization.pl",
"PGcourse.pl",
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");

$showPartialCorrectAnswers = 1;

$numx1 = non_zero_random(-5,5,1);
$denx1 = non_zero_random(2,5,1);
$numy1 = non_zero_random(-5,5,1);
$deny1 =  non_zero_random(2,5,1);
$numx2 = non_zero_random(-5,5,1);
do {$denx2 = non_zero_random(2,5,1)} until ($numx1*$denx2 != $denx1*$numx2);
$numy2 = non_zero_random(-5,5,1);
$deny2 = non_zero_random(2,5,1);

Context("Fraction-NoDecimals");

$x1 = Fraction($numx1,$denx1);
$y1 = Fraction($numy1,$deny1);
$x2 = Fraction($numx2,$denx2);
$y2 = Fraction($numy2,$deny2);
Context()->strings->add("Does Not Exist"=>{},"None"=>{alias=>"Does Not Exist"});

$m = Fraction( ($numy2*$deny1 - $numy1*$deny2)*($denx2*$denx1) , ($numx2*$denx1 - $numx1*$denx2)*($deny2*$deny1) );
ANS( Compute($m) -> cmp(studentsMustReduceFractions=>1) );



Context()->strings->add("undefined");


Context()->texStrings;
BEGIN_TEXT
Find the slope of the line containing the points
\(\left(  $x1 , $y1 \right)\) 
and 
\( \left( $x2  , $y2\right)\)   if it exists or write ${BBOLD}undefined${EBOLD} if the slope is undefined. You must reduce your answer completely.
$PAR
\(m = \) \{ans_rule(10)\}
END_TEXT


if ($attempts_modp == 0 && $actualAttempts != 0) {
    BEGIN_TEXT
    $PAR
    $BBOLD Answer: $EBOLD
    \(m = $m\)
    $PAR
    END_TEXT
} else {
    BEGIN_TEXT
    $BR
    END_TEXT
}

Context()->normalStrings;

PeriodicStatus(); 




ENDDOCUMENT();        # This should be the last executable line in the problem.