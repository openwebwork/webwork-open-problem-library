# DESCRIPTION
# Asks to find the average rate of change in tuition over a period of time
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('functions', 'algebra, application of linear equations')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextFraction.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
do {
  $years = random(3,6,1);
  $increase = random(600,2500,50);
} until (floor($increase/$years) == $increase/$years && $increase/$years > 200);
$year2 = random(2001,2011,1);
$year1 = $year2 - $years;
$tuit2 = random(6000,9950,50);
$tuit1 = $tuit2 - $increase;

Context("LimitedFraction")->texStrings;
$ans = Compute("$increase/$years")->reduce;


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
The tuition and fees for undergraduate students at MU for the academic year changed from $$tuit1 in $year1 to $$tuit2 in $year2. Find the average rate of change in tuition and fees over this period of time.
$PAR
Average Rate of Change: $SPACE $ \{ans_rule(5)\} per year
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} $$ans per year
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();