# DESCRIPTION
# Asks for the hourly wage from the given information.
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Modeling with Functions')
## KEYWORDS('functions', 'algebra, application of linear equations')
## TitleText1('College Algebra')
## EditionText1('4')
## AuthorText1('Beecher, Penna, Bittinger')
## Section1('1.5')
## Problem1('47')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextCurrency.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
do {
  $hoursover = random(2,10,1);
  $totalhours = 40 + $hoursover;
  $hourly = random(8,20,0.5);
  $paychk = (40 + 1.5*$hoursover)*$hourly;
} until ($paychk == floor($paychk));

Context("Currency")->currency->addSymbol("dollars","dollar");
$hourly = Currency($hourly);
$paychk = Currency($paychk);

###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Jeane worked $totalhours hours one week and earned a \($paychk\) paycheck. She earns time and a half (1.5 times her regular hourly wage) for the number of hours she works in excess of 40. What is Jeane's regular hourly wage?
$PAR
Hourly wage: \{ans_rule(6)\} per hour
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($hourly)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($hourly\) per hour
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 


ENDDOCUMENT();