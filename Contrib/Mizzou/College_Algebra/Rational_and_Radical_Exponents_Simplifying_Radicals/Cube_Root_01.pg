# DESCRIPTION
# 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter()
## DBsection()
## KEYWORDS()
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextLimitedPowers.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
@vars = ("x","y","z","w","u","v","p","q","r");
$ch1 = random(0,scalar(@vars)-1,1);
do {$ch2 = random(0,scalar(@vars)-1,1)} until ($ch2 != $ch1);
$v1 = $vars[$ch1];
$v2 = $vars[$ch2];
Context()->variables->are($v1=>"Real",$v2=>"Real");
LimitedPowers::OnlyPositiveIntegers();

$a = list_random(2,3,5);
$b = non_zero_random(-1,1,2)*list_random(2,3,5);
$c = $a*(($b)**3);
$k1 = random(2,10);
$p1 = 3*$k1;
do {$k2 = random(2,10)} until ($k2 != $k1);
$add = random(1,2,1);
$p2 = 3*$k2+$add;
$expression = "\displaystyle \sqrt[3]{$c $v1^{$p1} $v2^{$p2}}";
$ansA = Formula("$b $v1^{$k1} $v2^{$k2}");
$ansB = Formula("$a $v2^{$add}")->reduce;


#Context()->operators->undefine("**","^");
Context()->functions->disable('sqrt');


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Simplify completely.  If
$PAR
\[$expression = A \sqrt[3]{B} \]
$PAR
then 
$PAR
\(A = \) \{ans_rule(10)\}, \(B = \) \{ans_rule(10)\}.
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ansA->cmp(studentsMustReduceFractions=>1));
ANS($ansB->cmp(studentsMustReduceFractions=>1));


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \(A = $ansA\), \(B = $ansB\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Hint:${EBOLD} It is possible that \(A\) and/or \(B\) could equal \(1\).
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();