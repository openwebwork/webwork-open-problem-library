# DESCRIPTION
# MC question that asks to graph a polynomial
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Graphs of Functions')
## KEYWORDS('functions', 'polynomials', 'graphs')
## Author1('Rick Lynch')
## Author2('Teri Christiansen')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "AnswerFormatHelp.pl",
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "parserMultiAnswer.pl",
  "unionTables.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("1");
$refreshCachedImages = 1;
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("Numeric");
$c1 = 3; #random(3,5);
$c2 = 1; #random(1,5);
if ($c1 == 3 && $c2 == 1) {
  $c3 = random(1,10);
  $total = 10;
} elsif ($c1 == 4 && $c2 == 1) {
  $c3 = random(1,9);
  $total = 15;
}
$width = 591;
$height = 616;

@pos = (0..3);
@posspos = (0..3);
for ($i = 0; $i < 4; $i++) {
  $pos[$i] = list_random(@posspos);
  for ($j = 0; $j < scalar(@posspos); $j++) {
    if ($posspos[$j] == $pos[$i] ) {
      $tmp = $posspos[$j];
      $posspos[$j] = $posspos[scalar(@posspos)-1];
      $posspos[scalar(@posspos)-1] = $tmp;
      pop(@posspos);
      $j--;
    }
  }
}

@choices = (0..3);
$choices[$pos[0]] = $c3;
for ($i = 1; $i < 4; $i++) {
  $choices[$pos[$i]] = random(1,$total);
  for ($j = 0; $j < $i; $j++) {
    if ($choices[$pos[$j]] == $choices[$pos[$i]]) {
      $i--;
    }  
  }
}

@figs = (0..3);
for ($i = 0; $i < 4; $i++) {
  if ($choices[$i] < 10) {
    $tmp = "MC_0".($c1)."/00".($c2)."/0".($choices[$i]).".png";
  } else {
    $tmp = "MC_0".($c1)."/00".($c2)."/".($choices[$i]).".png"
  }
$figs[$i] = image($tmp, width=>$width/2, height=>$height/2, tex_size=>300 );
}
Context()->strings->add(A=>{}, B=>{}, C=>{}, D=>{}, E=>{}, "none"=>{});
@possans = ("A", "B", "C", "D", "E");
$ans = $possans[$pos[0]];

if ($c1 == 3) {
  if ($c2 == 1) {
    if ($c3 == 1) {
      $dispeqn = "f(x) = -2(x+1)(x-1)(x-4)";   
    } elsif ($c3 == 2) {
      $dispeqn = "f(x) = -2(x+1)(x-1)(x+4)";         
    } elsif ($c3 == 3) {
      $dispeqn = "f(x) = 2(x+1)(x-1)(x-4)";
    } elsif ($c3 == 4) {
      $dispeqn = "f(x) = 2(x+1)(x-1)(x+4)";   
    } elsif ($c3 == 5) {
      $dispeqn = "f(x) = -(x-2)(x-1)(x+4)";   
    } elsif ($c3 == 6) {
      $dispeqn = "f(x) =-(x+2)(x-1)(x-4)";   
    } elsif ($c3 == 7) {
      $dispeqn = "f(x) = -2(x-1)^2(x-4)";   
    } elsif ($c3 == 8) {
      $dispeqn = "f(x) = -2(x-1)^2(x+4)";   
    } elsif ($c3 == 9) {
      $dispeqn = "f(x) = (x-2)(x-1)(x+4)";   
    } elsif ($c3 == 10) {
      $dispeqn = "f(x) = (x+2)(x-1)(x-4)";   
    }
  }
}

if ($c1 == 4) {
  if ($c2 == 1) {
    if ($c3 == 1) {
      $dispeqn = "f(x) = (x+3)(x-3)(x+2)(x-2)";   
    } elsif ($c3 == 2) {
      $dispeqn = "f(x) = (x-3)^2(x+2)^2";         
    } elsif ($c3 == 3) {
      $dispeqn = "f(x) = (x+3)^2(x-2)^2";
    } elsif ($c3 == 4) {
      $dispeqn = "f(x) = x^2(x-3)(x+2)";   
    } elsif ($c3 == 5) {
      $dispeqn = "f(x) = x^2(x+3)(x-2)";   
    } elsif ($c3 == 6) {
      $dispeqn = "f(x) = x(x+3)(x-3)(x-2)";   
    } elsif ($c3 == 7) {
      $dispeqn = "f(x) = x(x+3)(x-3)(x+2)";   
    } elsif ($c3 == 8) {
      $dispeqn = "f(x) = x(x-3)(x+2)(x-2)";   
    } elsif ($c3 == 9) {
      $dispeqn = "f(x) = x(x+3)(x+2)(x-2)";   
    }
  }
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT

$PAR
$BCENTER
\{ 
BeginTable().
  AlignedRow([$figs[0], $figs[1]]).
  TableSpace(5,0).
  AlignedRow(["A", "B"]).
  TableSpace(25,6).
  AlignedRow([$figs[2], $figs[3]]).
  TableSpace(5,0).
  AlignedRow(["C", "D"]).
EndTable();
\}
$ECENTER 
$PAR

Given that 
$PAR
\[
$dispeqn
\]
$PAR
determine which of the above graphs is the graph of \(f\).
$PAR
Correct Letter: \{ans_rule(5)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS(Compute($ans)->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 &&$actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus();


ENDDOCUMENT();