# DESCRIPTION
# Asks to write an algebraic expression representing a situation
# ENDDESCRIPTION

## DBsubject('Intermediate Algebra')
## DBchapter('Ch 01: Algebra, Mathematical Models and Problem Solving')
## DBsection('Algebra, Mathematical Models, and Problem Solving')
## KEYWORDS('problem solving', 'linear', 'equations')
## Author('Rick Lynch')
## Institution('University of Missouri-Columbia')


###########################################################################
# initialization 
###########################################################################
DOCUMENT();
loadMacros(
  "MathObjects.pl",
  "PeriodicRerandomization.pl",
  "PGstandard.pl",
  "contextLimitedPolynomial.pl",
);

TEXT(beginproblem());
PeriodicRerandomization("3");
$showPartialCorrectAnswers = 1;


###########################################################################
# setup contexts and variables 
###########################################################################
Context("LimitedPolynomial-Strict");
@list = ("integers", "odd integers", "even integers");
$var = list_random("x","y","z","r","s","t");
Context()->variables->are($var=>"Real");

for ($i = 0; $i < random(10,50); $i++) { # makes it more random when the problem regenerates?
  $c1 = random(0,2,1);
  $a = random(1,9);
}
$dispnum = ($a == 1) ? "$var" : "$a $var";

if ($c1 == 0) {
  $e1 = 3*$a;
  $e2 = 3;
  $ans = Formula("$e1 $var + $e2")->reduce;
} elsif ($c1 == 1) {
  $odd = random(1,9,2);
  $dispnum = $dispnum."+".$odd;
  $e1 = 3*$a;
  $e2 = 3*$odd + 6;
  $ans = Formula("$e1 $var + $e2")->reduce;
} else {
  $even = random(0,10,2);
  if ($even != 0) {
    $dispnum = $dispnum."+".$even;
  }
  $e1 = 3*$a;
  $e2 = 3*$even + 6;
  $ans = Formula("$e1 $var + $e2")->reduce;
}


###########################################################################
# state the problem 
###########################################################################
Context()->texStrings;
BEGIN_TEXT
Write the following as an algebraic expression and then simplify: 
$PAR
The sum of three consecutive $list[$c1] if the first integer is \($dispnum\): \{ans_rule(20)\}
END_TEXT


###########################################################################
# check the answer  
###########################################################################
ANS($ans->cmp());


###########################################################################
# use PeriodicRerandomization to write the answer and generate a new
# version of the problem
###########################################################################
if ($attempts_modp == 0 && $actualAttempts != 0) {
  BEGIN_TEXT
  $PAR
  ${BBOLD}Answer:${EBOLD} \($ans\)
  $PAR
  END_TEXT
} else {
  BEGIN_TEXT
  $BR
  END_TEXT
}
Context()->normalStrings;
PeriodicStatus(); 

COMMENT('Features Periodic Rerandomization');
ENDDOCUMENT();