##DESCRIPTION
## Find critical points, linearize, and classify for a nonlinear system of ODE
##ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Nonlinear systems)
## MLT(NonlinODE_FindCritLinearizeClassify2D)
## Author(Jiri Lebl)
## Institution(Oklahoma State University)
## Level(4)
## TitleText1('Notes on Diffy Qs: Differential Equations for Engineers')
## AuthorText1('Jiri Lebl')
## EditionText1('5')
## Section1('8.2')
## Problem1('')
## MO(1)
## KEYWORDS('ODE', 'ordinary', 'differential', 'system', 'equation', 'nonlinear', 'Jacobian matrix', 'linearization', 'stability', 'critical point')

########################################################################

###########################
# Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"MatrixCheckers.pl",
"PGcourse.pl",
);
TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

###########################
# Setup

Context("Matrix");

$a = random(2,10,1);
$b = random(-10,-2,1);

$funcx = Formula("$a+$a*x+x*y");
$funcy = Formula("$b*y+1");

$answer1 = Compute("1");

$xcritcoord = Compute("-($a*$b)/($a*$b-1)");
$ycritcoord = Compute("-1/$b");

$beh = "saddle";

$lin = Compute("[[$a - 1/$b,-($a*$b)/($a*$b - 1)],[0,$b]]");

###########################
# Main text

Context()->texStrings;
BEGIN_TEXT
Take the system \( x' = $funcx , \quad y' = $funcy \).
$BR
$BR
How many critical points are there? \{ ans_rule(5) \}.
$BR
$BR
Take the critical point with the largest x-coordinate:
( \{ ans_rule(5) \} , \{ ans_rule(5) \} ).
$BR
$BR
The linearization at this point is
\(
\begin{bmatrix}
u \\ v
\end{bmatrix} '
= A
\begin{bmatrix}
u \\ v
\end{bmatrix}
\)
where \(A\) is
$BR
\(A = {}\) \{
$lin->ans_array(5);
\}
$BR
$BR
The behavior is
\{ ans_rule(15) \}
$BR
For behavior write one of "saddle", "source", "sink", "spiral sink", "spiral source", "center".
END_TEXT
Context()->normalStrings;

###########################
# Answer evaluation

ANS ($answer1->cmp);
ANS ($xcritcoord->cmp);
ANS ($ycritcoord->cmp);

ANS($lin->cmp);

ANS( str_cmp ($beh) );

ENDDOCUMENT();
