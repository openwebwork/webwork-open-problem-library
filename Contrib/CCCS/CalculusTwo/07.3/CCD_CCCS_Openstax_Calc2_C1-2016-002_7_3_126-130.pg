## DESCRIPTION
## Calculus 2, Identify the graph that contains the polar points given. 
## ENDDESCRIPTION


## DBsubject(Calculus - single variable)
## DBchapter(Polar)
## Date(11/26/2018)
## Institution(Colorado Community College System)
## Author(Isaias Chairez Uriarte)
## MO(1)
## KEYWORDS('polar coordinates', 'polar graph')


###########################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",,
"parserAssignment.pl",
"AnswerFormatHelp.pl",
"PGML.pl",
"PGgraphmacros.pl",
"parserPopUp.pl",
"PGcourse.pl",
"scaffold.pl",
"contextLimitedPoint.pl",
"parserRadioButtons.pl",
"weightedGrader.pl",
);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

$refreshCaschedImages = 1;

##########################
#  Setup
Context("Numeric");

###Random vars for r-coord of polar point
$ap = list_random(-2,-1,);
$bp = list_random(0,1,);
$cp = list_random(2,3);
$dp = list_random(4,5);

##Values of theta-coords of polar points
$a=Compute("(5*pi)/3");
$b=Compute("(7*pi)/6");
$c=Compute("(5*pi)/6");
$d=Compute("(pi)/2");

###### Converting polar coordinates to rectangular)
$x1=Compute("$ap*cos($a)")->reduce;
$y1=Compute("$ap*sin($a)")->reduce;
$x2=Compute("$bp*cos($b)")->reduce;
$y2=Compute("$bp*sin($b)")->reduce;
$x3=Compute("$cp*cos($c)")->reduce;
$y3=Compute("$cp*sin($c)")->reduce;
$x4=Compute("$dp*cos($d)")->reduce;
$y4=Compute("$dp*sin($d)")->reduce;

#####Polar points are ($ap, $a), ($bp,$b), ($cp, $c), ($dp, $d)#######
################Corresponding Rectangular Points##############  
##Context("Point");
##$Rectang1 = Point($x1, $y1);
##$Rectang2 = Point($x2, $y2);
##$Rectang3 = Point($x3, $y3);
##$Rectang4 = Point($x4, $y4);

###############GRAPHS OF POLAR POINTS####################
###  INCORRECT GRAPH

$gr_0 = init_graph(-8,-8,8,8,
axes=>[0,0],
grid=>[8,8],
size=>[300,300]
);
##Plotting Rectangular points.
$gr_0->stamps( closed_circle(-$ap,$ap,'blue'), closed_circle($bp,$bp,'blue'), closed_circle($cp,-$cp,'blue'),closed_circle(-$dp,-$dp,'blue') );

##Labeling Rectangular points.
$gr_0->lb( new Label(-$ap,$ap,'A','black','left','bottom'), new Label($bp,$bp,'B','black','left','bottom'), new Label($cp,-$cp,'C','black','left','bottom'), new Label(-$dp,-$dp,'D','black','left','bottom'));

#####################################################################  INCORRECT GRAPH

$gr_1 = init_graph(-8,-8,8,8,
axes=>[0,0],
grid=>[8,8],
size=>[300,300]
);
##Plotting Rectangular points.
$gr_1->stamps( closed_circle(-$ap,$ap,'blue'), closed_circle($bp,$bp,'blue'), closed_circle($x2,$y2,'blue'),closed_circle($x4, $y4,'blue') );

##Labeling Rectangular points.
$gr_1->lb( new Label(-$ap,$ap,'A','black','left','bottom'), new Label($bp,$bp,'B','black','left','bottom'), new Label($x2,$y2,'C','black','left','bottom'), new Label($x4,$y4,'D','black','left','bottom'));

#####################################################################  CORRECT GRAPH

$gr_2 = init_graph(-8,-8,8,8,
axes=>[0,0],
grid=>[8,8],
size=>[300,300]
);
##Plotting equivalent Rectangular points.
$gr_2->stamps( closed_circle($x1,$y1,'blue'), closed_circle($x2,$y2,'blue'), closed_circle($x3,$y3,'blue'),closed_circle($x4,$y4,'blue') );

##Labeling equivalent Rectangular points.
$gr_2->lb( new Label($x1,$y1,'A','black','left','bottom'), new Label($x2,$y2,'B','black','left','bottom'), new Label($x3,$y3,'C','black','left','bottom'), new Label($x4,$y4,'D','black','left','bottom'));

#####################################################################   INCORRECT GRAPH

$gr_3 = init_graph(-8,-8,8,8,
axes=>[0,0],
grid=>[8,8],
size=>[300,300]
);
##Plotting Rectangular points.
$gr_3->stamps( closed_circle($ap,-$ap,'blue'), closed_circle($bp,$bp,'blue'), closed_circle($x1,$y1,'blue'),closed_circle($x3, $y3,'blue') );

##Labeling Rectangular points.
$gr_3->lb( new Label($ap,-$ap,'A','black','left','bottom'), new Label($bp,$bp,'B','black','left','bottom'), new Label($x1,$y1,'C','black','left','bottom'), new Label($x3,$y3,'D','black','left','bottom'));

#####################################################################

##Popup setup
Context("Numeric");
$popup1 = PopUp(
  ["?","I","II", "III", "IV"], "III",
);

#################################
#  Main text

BEGIN_PGML

Consider the polar points [`A([$ap],\frac{5\pi}{3}),\hspace{.1cm} B([$bp],\frac{7\pi}{6}),\hspace{.1cm} C([$cp], \frac{5\pi}{6}),\hspace{.1cm} D([$dp], \frac{\pi}{2}) `]

Choose the graph that contains the polar points given [_________________]{$popup1} 

(Click on graphs to enlarge, click on enlarged graph to zoom in.) 

>>I. [@ image(insertGraph($gr_0), width=>200, height=>200), @]*   II. [@ image(insertGraph($gr_1), width=>200, height=>200), @]* <<  

>>III. [@ image(insertGraph($gr_2), width=>200, height=>200), @]*  IV. [@ image(insertGraph($gr_3), width=>200, height=>200), @]*   <<


END_PGML

#################################
#  Solution

#BEGIN_PGML_SOLUTION
#Solution explanation goes here.
#END_PGML_SOLUTION

COMMENT('Uses PGML.');

ENDDOCUMENT();
