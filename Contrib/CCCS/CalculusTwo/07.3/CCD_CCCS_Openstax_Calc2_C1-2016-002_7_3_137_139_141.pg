## DESCRIPTION
## Calculus 2, Given a point in rectangular form, find two corresponding polar points with 0<theta<=2pi
## ENDDESCRIPTION

## DBsubject(Calculus - single variable)
## DBchapter(Polar)
## Date(11/26/2018)
## Institution(Colorado Community College System)
## Author(Isaias Chairez Uriarte)
## MO(1)
## KEYWORDS('polar coordinates', 'rectangular coordinates')

###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "imageChoice.pl",
  "PGcourse.pl",
  "parserAssignment.pl",
  "PGchoicemacros.pl",
  "PGgraphmacros.pl",
  "PGessaymacros.pl",
  "parserRadioButtons.pl",
 "AnswerFormatHelp.pl",
);

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

$refreshCaschedImages = 1;

##########################
#  Setup
Context("Numeric");

##Coordinates of rectangular coordinates ($ax,$ay), ($bx,$by), ($cx,$cy) ##
$ax=list_random(3,-3);
$ay=list_random(4,-4);
$bx=list_random(6,-6);
$by=list_random(8,-8);
$cx=list_random(3,-3);
$cy=list_random(sqrt(3),-sqrt(3));

##converting rectangular coordinates to polar##
$axp=Compute("sqrt( (($ax)**2)+(($ay)**2) )")->reduce;
$ayp=Compute("arctan($ay/$ax)")->reduce;
$bxp=Compute("sqrt( (($bx)**2)+(($by)**2) )")->reduce;
$byp=Compute("arctan($by/$bx)")->reduce;
$cxp=Compute("sqrt( (($cx)**2)+(($cy)**2) )")->reduce;
$cyp=Compute("arctan($cy/$cx)")->reduce;

##Setting up equivalent polar points. Using if/else statements to account for various quadrants and to ensure all thetas end up in [0, 2pi]##
Context("Point");
##polar for point A##
if($ax==3 and $ay==4){
$p1 = Point($axp,$ayp);
$p11 = Point(-$axp,$ayp+pi);
}
elsif($ax==3 and $ay==-4){
$p1 = Point($axp,$ayp+2*pi);
$p11 = Point(-$axp,$ayp+pi);
}
elsif($ax==-3 and $ay==-4){
$p1 = Point($axp,$ayp+pi);
$p11 = Point(-$axp,$ayp);
}
elsif($ax==-3 and $ay==4){
$p1 = Point($axp,$ayp+pi);
$p11 = Point(-$axp,$ayp+2*pi);
}
##polar for point B##
if($bx==6 and $by==8){
$p2 = Point($bxp,$byp);
$p22 = Point(-$bxp,$byp+pi);
}
elsif($bx==6 and $by==-8){
$p2 = Point($bxp,$byp+2*pi);
$p22 = Point(-$bxp,$byp+pi);
}
elsif($bx==-6 and $by==-8){
$p2 = Point($bxp,$byp+pi);
$p22 = Point(-$bxp,$byp);
}
elsif($bx==-6 and $by==8){
$p2 = Point($bxp,$byp+pi);
$p22 = Point(-$bxp,$byp+2*pi);
}
##polar for point C##
if($cx==3 and $cy==sqrt(3)){
$p3 = Point($cxp,$cyp);
$p33 = Point(-$cxp,$cyp+pi);
}
elsif($cx==3 and $cy==-sqrt(3)){
$p3 = Point($cxp,$cyp+2*pi);
$p33 = Point(-$cxp,$cyp+pi);
}
elsif($cx==-3 and $cy==-sqrt(3)){
$p3 = Point($cxp,$cyp+pi);
$p33 = Point(-$cxp,$cyp);
}
elsif($cx==-3 and $cy==sqrt(3)){
$p3 = Point($cxp,$cyp+pi);
$p33 = Point(-$cxp,$cyp+2*pi);
}

##Lists of polar points##
$L1 = List($p1, $p11);
$L2 = List($p2, $p22);
$L3 = List($p3, $p33);

## conditional statement to display $cy  as a radical not a decimal
if ( $cy == -sqrt(3) ) {

BEGIN_PGML

For each of the following rectangular points find two sets of polar points with [`0<\theta \leq2\pi`].

Use radians for [`\theta`]  and round to three decimal places.

[` A=([$ax],[$ay]), \hspace{.5cm} B=([$bx],[$by]), \hspace{.5cm} C=([$cx],-\sqrt{3})`] 
 

[`A=`][______________________]{$L1}(enter a comma separated list of ordered pairs)[@ AnswerFormatHelp("points") @]*

[`B=`][______________________]{$L2}(enter a comma separated list of ordered pairs)[@ AnswerFormatHelp("points") @]*

[`C=`][______________________]{$L3}(enter a comma separated list of ordered pairs)[@ AnswerFormatHelp("points") @]*

END_PGML

} else {

BEGIN_PGML

For each of the following rectangular points find two sets of polar points with [`0<\theta \leq2\pi`].

Use radians for [`\theta`]  and round to three decimal places.

[` A=([$ax],[$ay]), \hspace{.5cm} B=([$bx],[$by]), \hspace{.5cm} C=([$cx],\sqrt{3})`] 
 

[`A=`][______________________]{$L1}(enter a comma separated list of ordered pairs)[@ AnswerFormatHelp("points") @]*

[`B=`][______________________]{$L2}(enter a comma separated list of ordered pairs)[@ AnswerFormatHelp("points") @]*

[`C=`][______________________]{$L3}(enter a comma separated list of ordered pairs)[@ AnswerFormatHelp("points") @]*

END_PGML
}

#################################
#  Solution

#BEGIN_PGML_SOLUTION
#Solution explanation goes here.
#END_PGML_SOLUTION

COMMENT('Uses PGML.');

ENDDOCUMENT();