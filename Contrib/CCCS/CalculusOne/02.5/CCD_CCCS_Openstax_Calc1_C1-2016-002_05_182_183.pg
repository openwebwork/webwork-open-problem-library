## DESCRIPTION
## Calculus 1, use the idea of a secant line to approach the tangent line
## ENDDESCRIPTION


## DBsubject(Calculus - single variable)
## DBchapter(Limits and continuity)
## DBsection(Definitions and existence (conceptual))
## Date(07/10/2018)
## Institution(Community College of Denver, Colorado Community College System)
## Author(Teresa Adams)
## KEYWORDS('calculus', 'precise','definition','limit')

###########################
#  Initialization

###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "AnswerFormatHelp.pl",
  "PGML.pl",
  "PGcourse.pl",
  "parserAssignment.pl",
  "PGchoicemacros.pl",
  "parserPopUp.pl",
  "PGgraphmacros.pl",
  "scaffold.pl",
  "contextLimitedPoint.pl",
  "PGessaymacros.pl",
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
$refreshCachedImages=1;

###########################
#  Setup

Context("Numeric");

# allowing answers that are within 1%
Context()->flags->set(tolerance => 0.01);

# having answers to 4 decimal places AND reduced
Context()->{format}{number} = "%.4f#"; 

# adding d as a variable 
Context()->variables->add(d => 'Real');


# building the function
$m = random(-3,-1,1); #slope
$b = non_zero_random(-4,4,1); #intercept
$funct = Formula("$m*x+$b")->reduce(); 

$a = non_zero_random(-4,4,1);  # value for x, as x goes to a
$x_minus_a = Formula("x - $a")->reduce();
$L = $funct->eval(x=>$a);

# making sure the limit is on the graph
if ($a < 0) {
 $xmin = $a - 4;
 $xmax = Real(2);
 $ymin = Real(-1);
 $ymax = $L + 4;
} else {
 $xmin = Real(-1);
 $xmax = $a + 5;
 $ymin = $L - 5;
 $ymax = Real(2);
}

$xgrid = $xmax - $xmin;
$ygrid = $ymax - $ymin;


# epsilons
$epsilon2 = abs($m);
$epsilon1 = abs(2*$m);

# setting up the dynamic graph
$gr = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

# axes labels
$gr -> lb('reset'); # remove default labels
$gr->lb( new Label($xmax-0.3,0,'x', 'black', 'center', 'bottom'));
$gr->lb( new Label(0.1,$ymax-0.4,"f(x)", 'black', 'left', 'middle'));
foreach my $i (-10..10) {
  $gr->lb( new Label($i,0, $i, 'black', 'center', 'top'));
  $gr->lb( new Label(-0.1,$i, $i, 'black', 'right', 'middle'));
}


# setting up the right side of the piecewise function
add_functions($gr, "$funct  for x in <-8,8>".
  " using color:blue and weight:2");

$in=time();
$gr->gifName($gr->gifName()."$in");

$answer[1]=Compute($epsilon1/(abs($m)));
$answer[2]=Compute($epsilon2/(abs($m)));


###########################
#  Main text

BEGIN_PGML

The graph of the function `f` satisfies `\lim_{x \to [$a]} f(x) = [$L]`.

[@ image(insertGraph($gr), width=>400, height=>400), @]*   

END_PGML

BEGIN_TEXT

$HR
$BBOLD Note: $EBOLD $BITALIC You can click on the graph to enlarge the image.$EITALIC
$HR

END_TEXT

if ($L< 0) {

BEGIN_PGML

Determine a value `delta > 0` that satisfy each statement. 

(a)
if `0 < abs([$x_minus_a])<delta`, then `abs(f(x) - ([$L]))< [$epsilon1]`. A good value would be `delta le` [________] [@ AnswerFormatHelp("numbers") @]*

(b)
if `0 < abs([$x_minus_a])<delta`, then `abs(f(x) - ([$L]))< [$epsilon2]`. A good value would be `delta le` [________]


END_PGML

} else {

BEGIN_PGML

Determine a value `delta > 0` that satisfy each statement. 

(a)
if `0 < abs([$x_minus_a])<delta`, then `abs(f(x) - [$L])< [$epsilon1]`. A good value would be `delta le` [________] [@ AnswerFormatHelp("numbers") @]*

(b)
if `0 < abs([$x_minus_a])<delta`, then `abs(f(x) - [$L])< [$epsilon2]`. A good value would be `delta le` [________]


END_PGML
}

############################
# Answer evaluation 

Context()->normalStrings;

ANS($answer[1]->cmp);
ANS($answer[2]->cmp);


COMMENT('MathObject version. Uses PGML.');


ENDDOCUMENT();


