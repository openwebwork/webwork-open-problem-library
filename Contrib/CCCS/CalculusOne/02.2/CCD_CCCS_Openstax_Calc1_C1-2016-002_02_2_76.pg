## DESCRIPTION
## Calculus 1, use the idea of a secant line to approach the tangent line
## ENDDESCRIPTION


## DBsubject(Calculus - single variable)
## DBchapter(Limits and continuity)
## DBsection(Finding limits using graphs)
## Date(07/9/2018)
## Institution(Community College of Denver, Colorado Community College System)
## Author(Teresa Adams)
## KEYWORDS('calculus', 'limit')

###########################
#  Initialization

##################################################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "parserPopUp.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl", 
  "AnswerFormatHelp.pl",
  "PGML.pl",
  "PGcourse.pl",
  "parserAssignment.pl",
  "parserMultiAnswer.pl",
  "PGchoicemacros.pl",
  "parserPopUp.pl",
  "PGgraphmacros.pl",
);


#####################################################################

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


#####################################################################

Context("Numeric");
# having answers to 1 decimal places AND reduced
Context()->{format}{number} = "%.1f#"; 


$choice = random(1,4,1);

# the leftside of the piecewise function
$a = non_zero_random (-3, 3, 1); # vertical reflection 
$h = non_zero_random (-1, 1, 1); # horizontal translation 
$d = non_zero_random(-4, 4, 1); # vertical translation
$f_left = Formula("((x - $h)^2)/$a +$d")->reduce(); 

# the leftside of the piecewise function
$b = non_zero_random(-4,4,1); #slope
$f_right = Formula("x+$b")->reduce(); 


# $x is the x for the limit
$x = random (-3, 3, 1);

# this is making sure the vertex of the quadratic is shown on the graph
if ($x < $h) {
  $x = $h + 1;
}

# $c is the break in the piecewise function
$c = non_zero_random(-3, 3, 1);

# this is making sure the break in the peicewise is on the right of value for x where limit exists and setting up the max/min y-values for the graph setting
if ($c <= $x) {
  $c = $x +1;
  $L_x = $f_left->eval(x=>$x);
  $L_eval = $f_left->eval(x=>$c);
  $R_eval = $f_right->eval(x=>$c);
  $R_x = $R_eval+2;
} else {
  $L_x = $f_left->eval(x=>$x);
  $L_eval = $f_left->eval(x=>$c);
  $R_eval = $f_right->eval(x=>$c);
  $R_x = $R_eval+2;
}

@seq=($L_eval, $R_eval, $L_x, $R_x); # building the sequence
@ysorted = PGsort( sub {$_[0] < $_[1]} , @seq ); #sorting the sequence

# this is making sure the y-axis is shown on the graph
if ($ysorted[0] > 2) {
  $ymin = Real(-1);
 } else {
  $ymin = $ysorted[0] - 3;
}

if ($ysorted[3] < -3) {
  $ymax = Real(0);
 } else {
 $ymax = $ysorted[3]+2;
}

$ygrid = $ymax - $ymin;

# setting up the min/max x-value for the graph setting
@seq=($c, $x, $h); # building the sequence
@xsorted = PGsort( sub {$_[0] < $_[1]} , @seq ); #sorting the sequence

$xmin = $xsorted[0] - 2;
$xmax = $xsorted[2]+2;


$xgrid = $xmax - $xmin;


# This is always the answer 
$graph1 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p1 = FEQ("$f_left for x in <-8,$c) using color:blue weight:2");
$p2 = FEQ("$f_right for x in ($c, 8> using color:blue weight:2");

###############################################################

$graph2 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p12 = FEQ("$f_left for x in <-8,$x) using color:blue weight:2");
$p22 = FEQ("$f_right for x in ($x, 8> using color:blue weight:2");

###############################################################

$graph3 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p13 = FEQ("$f_left for x in <-8,$c] using color:blue weight:2");
$p23 = FEQ("$f_right for x in ($c, 8> using color:blue weight:2");

###############################################################

$graph4 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p14 = FEQ("$f_left for x in <-8,$x] using color:blue weight:2");
$p24 = FEQ("$f_right for x in ($x, 8> using color:blue weight:2");

plot_functions($graph1,$p1,$p2);
plot_functions($graph2,$p12,$p22);
plot_functions($graph3,$p13,$p23);
plot_functions($graph4,$p14,$p24);


if ($choice == 1) {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'D');
 } elsif ($choice == 2) {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'C');
 } elsif ($choice == 3) {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'A');
 } else {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'B');
}

Context("Interval");
$I = Interval("(",-(Infinity),Infinity,")");
$inf = Infinity;

###############################################################
BEGIN_PGML
 
Which of the following graphs represents the graph of [`y = f(x)`] with properites `i` through `iv`?  [@ $popup1->menu() @]* 

`i.` `\lim_{x \to [$x]} f(x) = [$L_x]`

`ii.` `\lim_{x \to [$c]^-} f(x) = [$L_eval]`

`iii.` `\lim_{x \to [$c]^+} f(x) = [$R_eval]`

`iv.` At `x = [$c]` is not defined.


END_PGML

if ($choice == 1) {

BEGIN_PGML
>>A. [@ image(insertGraph($graph4), width=>200, height=>200), @]*   B. [@ image(insertGraph($graph3), width=>200, height=>200), @]* <<  

>>C. [@ image(insertGraph($graph2), width=>200, height=>200), @]*  D. [@ image(insertGraph($graph1), width=>200, height=>200), @]*   <<
END_PGML

} elsif ($choice == 2) {

BEGIN_PGML
>>A. [@ image(insertGraph($graph3), width=>200, height=>200), @]*   B. [@ image(insertGraph($graph2), width=>200, height=>200), @]* <<  

>>C. [@ image(insertGraph($graph1), width=>200, height=>200), @]*  D. [@ image(insertGraph($graph4), width=>200, height=>200), @]*   <<
END_PGML

} elsif ($choice == 3) {

BEGIN_PGML
>>A. [@ image(insertGraph($graph1), width=>200, height=>200), @]*   B. [@ image(insertGraph($graph2), width=>200, height=>200), @]* <<  

>>C. [@ image(insertGraph($graph4), width=>200, height=>200), @]*  D. [@ image(insertGraph($graph3), width=>200, height=>200), @]*   <<
END_PGML

} else {
BEGIN_PGML
>>A. [@ image(insertGraph($graph3), width=>200, height=>200), @]*   B. [@ image(insertGraph($graph1), width=>200, height=>200), @]* <<  

>>C. [@ image(insertGraph($graph4), width=>200, height=>200), @]*  D. [@ image(insertGraph($graph2), width=>200, height=>200), @]*   <<
END_PGML
}


BEGIN_TEXT

$HR
$BBOLD Note: $EBOLD $BITALIC You can click on the graph to enlarge the image.$EITALIC
$HR

END_TEXT

############################
# Answer evaluation

ANS( $popup1->cmp);


COMMENT('MathObject version. Uses PGML.');

ENDDOCUMENT();

