## DESCRIPTION
## Calculus 1, use the idea of a secant line to approach the tangent line
## ENDDESCRIPTION


## DBsubject(Calculus - single variable)
## DBchapter(Limits and continuity)
## DBsection(Finding limits using graphs)
## Date(07/9/2018)
## Institution(Community College of Denver, Colorado Community College System)
## Author(Teresa Adams, updated August 2021 Brittni Lorton)
## KEYWORDS('calculus', 'limit')

###########################
#  Initialization

##################################################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "parserPopUp.pl",
  "MathObjects.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl",

  "PGML.pl",
  "PGcourse.pl",
  "parserAssignment.pl",
  "parserMultiAnswer.pl",
  "PGchoicemacros.pl",
  "parserPopUp.pl",
  "PGgraphmacros.pl",
);


#####################################################################

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


#####################################################################

Context("Numeric");
# having answers to 1 decimal places AND reduced
Context()->{format}{number} = "%.1f#";


$choice = random(1,4,1);

# the leftside of the piecewise function
$a = non_zero_random (-3, 3, 1); # vertical reflection
$h = non_zero_random (-1, 1, 1); # horizontal translation
$d = non_zero_random(-4, 4, 1); # vertical translation
$f_left = Formula("((x - $h)^2)/$a +$d")->reduce();

# the rightside of the piecewise function
$b = non_zero_random(-4,4,1); #yint of line
$f_right = Formula("x+$b")->reduce();

# $x is the x for the limit that exists - want to keep the vertex of the quadratic shown on the graph and want to have the quadratic and line not be equal here, otherwise two of the graphs appear the same to the student.
do{$x = $h + random(0, 3, 1);}until((($x - $h)**2)/$a +$d !=$x+$b);

# $c is the break in the piecewise function. Want to have the quadratic and line not be equal here, otherwise two of the graphs appear the same to the student. Also want to have the break in the piecewise function be on the right of $x.
do{$c = $x+random(1, 3, 1);}until((($c - $h)**2)/$a +$d !=$c+$b);

#Setting up the max/min y-values for the graph setting
#if ($c <= $x) {
#  $c = $x +1;
#  $L_x = $f_left->eval(x=>$x);
#  $L_eval = $f_left->eval(x=>$c);
#  $R_eval = $f_right->eval(x=>$c);
#  $R_x = $R_eval+2;
#} else {
  $L_x = $f_left->eval(x=>$x);
  $L_eval = $f_left->eval(x=>$c);
  $R_eval = $f_right->eval(x=>$c);
  $R_x = $R_eval+2;
#}

@seq=($L_eval, $R_eval, $L_x, $R_x); # building the sequence
@ysorted = PGsort( sub {$_[0] < $_[1]} , @seq ); #sorting the sequence

# this is making sure the y-axis is shown on the graph, floor and ceil functions necessary so that the grid is an integer
if ($ysorted[0] > 2) {
  $ymin = Real(-1);
 } else {
  $ymin = floor($ysorted[0]) - 3;
}

if ($ysorted[3] < -3) {
  $ymax = Real(0);
 } else {
 $ymax = ceil($ysorted[3])+2;
}

$ygrid = $ymax - $ymin;

# setting up the min/max x-value for the graph setting
@seq=($c, $x, $h); # building the sequence
@xsorted = PGsort( sub {$_[0] < $_[1]} , @seq ); #sorting the sequence

$xmin = $xsorted[0] - 2;
$xmax = $xsorted[2]+2;


$xgrid = $xmax - $xmin;


# This is always the answer
$graph1 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p1 = FEQ("$f_left for x in <-8,$c) using color:blue weight:3");
$p2 = FEQ("$f_right for x in ($c, 8> using color:blue weight:3");

###############################################################

$graph2 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p12 = FEQ("$f_left for x in <-8,$x) using color:blue weight:3");
$p22 = FEQ("$f_right for x in ($x, 8> using color:blue weight:3");

###############################################################

$graph3 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p13 = FEQ("$f_left for x in <-8,$c] using color:blue weight:3");
$p23 = FEQ("$f_right for x in ($c, 8> using color:blue weight:3");

###############################################################

$graph4 = init_graph($xmin,$ymin,$xmax,$ymax,
axes=>[0,0],
grid=>[$xgrid, $ygrid],
size=>[400,400]
);

$p14 = FEQ("$f_left for x in <-8,$x] using color:blue weight:3");
$p24 = FEQ("$f_right for x in ($x, 8> using color:blue weight:3");

plot_functions($graph1,$p1,$p2);
plot_functions($graph2,$p12,$p22);
plot_functions($graph3,$p13,$p23);
plot_functions($graph4,$p14,$p24);


if ($choice == 1) {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'D');
 } elsif ($choice == 2) {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'C');
 } elsif ($choice == 3) {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'A');
 } else {
   $popup1 = PopUp(['?','A', 'B', 'C', 'D'],'B');
}


###############################################################
BEGIN_PGML

Which of the following graphs represents the graph of [`y = f(x)`] with properites `i` through `iv`?  [@ $popup1->menu() @]*

`i.` `\lim_{x \to [$x]} f(x) = [$L_x]`

`ii.` `\lim_{x \to [$c]^-} f(x) = [$L_eval]`

`iii.` `\lim_{x \to [$c]^+} f(x) = [$R_eval]`

`iv.` At `x = [$c]` is not defined.


END_PGML

if ($choice == 1) {

BEGIN_PGML
>>A. [@ image(insertGraph($graph4), width=>300, height=>300), @]*   B. [@ image(insertGraph($graph3), width=>300, height=>300), @]* <<

>>C. [@ image(insertGraph($graph2), width=>300, height=>300), @]*  D. [@ image(insertGraph($graph1), width=>300, height=>300), @]*   <<
END_PGML

} elsif ($choice == 2) {

BEGIN_PGML
>>A. [@ image(insertGraph($graph3), width=>300, height=>300), @]*   B. [@ image(insertGraph($graph2), width=>300, height=>300), @]* <<

>>C. [@ image(insertGraph($graph1), width=>300, height=>300), @]*  D. [@ image(insertGraph($graph4), width=>300, height=>300), @]*   <<
END_PGML

} elsif ($choice == 3) {

BEGIN_PGML
>>A. [@ image(insertGraph($graph1), width=>300, height=>300), @]*   B. [@ image(insertGraph($graph2), width=>300, height=>300), @]* <<

>>C. [@ image(insertGraph($graph4), width=>300, height=>300), @]*  D. [@ image(insertGraph($graph3), width=>300, height=>300), @]*   <<
END_PGML

} else {
BEGIN_PGML
>>A. [@ image(insertGraph($graph3), width=>300, height=>300), @]*   B. [@ image(insertGraph($graph1), width=>300, height=>300), @]* <<

>>C. [@ image(insertGraph($graph4), width=>300, height=>300), @]*  D. [@ image(insertGraph($graph2), width=>300, height=>300), @]*   <<
END_PGML
}


BEGIN_TEXT

$HR
$BBOLD Note: $EBOLD $BITALIC You can click on the graph to enlarge the image.$EITALIC
$HR

END_TEXT

############################
# Answer evaluation

ANS( $popup1->cmp);


COMMENT('MathObject version. Uses PGML.');

ENDDOCUMENT();

