## DESCRIPTION
## College Algebra, Conic Graphs
## ENDDESCRIPTION


## DBsubject(Algebra)
## DBchapter(Conic sections)
## Date(09/15/2019)
## Institution(Community College of Denver, Colorado Community College System)
## Author(Brittni Lorton)



###########################
#  Initialization

DOCUMENT();

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"PGML.pl",
"PGcourse.pl",
"parserRadioButtons.pl",
"parserPopUp.pl",
"PGstandard.pl",
"PGgraphmacros.pl",
"AnswerFormatHelp.pl",
"MathObjects.pl"           # Math Object Macro
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;


###########################
#  Setup
$a = non_zero_random(-2,2,1);
do{$b = random(-4,-1,1);}until($b!=$a);
$c = random(1,3,1);
$h = random(-2,2,1);
$k = random(-1,1,1);
$r = random(1,3,1);
do{$r2 = random(1,3,1);}until($r2!=$r);
$hmr = $h-$r;
$hpr = $h+$r;
$hma = $h-$a;
$hpa = $h+$a;
$hmb = $h-$b;
$hpb = $h+$b;
$nb=-$b;
$am1=$a-1;
$ap1=$a+1;

$hypy = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$hypx = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$parabola = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$sparab = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$scircle = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$circle = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$ellipse = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);

$ellipse2 = init_graph(-6,-6,6,6,
axes=>[0,0],
grid=>[6,6],
size=>[600,600]
);


#add functions to graphs
#hyperbola opening in the y direction
add_functions($hypy, "sqrt($a*$a+$a*$a/($b*$b)*(x)^2) for x in <-6,6>" . 
  " using color:blue and weight:3");
  add_functions($hypy, "-sqrt($a*$a+$a*$a/($b*$b)*(x)^2) for x in <-6,6>" . 
  " using color:blue and weight:3");
#hyperbola opening in the x direction
add_functions($hypx, "sqrt((x-$a)^2-1) for x in <-6,$am1>". 
  " using color:blue and weight:3");
  add_functions($hypx, "sqrt((x-$a)^2-1) for x in <$ap1,6>". 
  " using color:blue and weight:3");
  add_functions($hypx, "-sqrt((x-$a)^2-1) for x in <-6,$am1>". 
  " using color:blue and weight:3");
  add_functions($hypx, "-sqrt((x-$a)^2-1) for x in <$ap1,6>". 
  " using color:blue and weight:3");
#sideways parabola
add_functions($sparab, "sqrt(x+$b)+$a for x in <$nb, 6>" . 
  " using color:blue and weight:3");
add_functions($sparab, "-sqrt(x+$b)+$a for x in <$nb, 6>" . 
  " using color:blue and weight:3");
#parabola
add_functions($parabola, "$c*(x-$a)^2-$b for x in <-6,6>". 
  " using color:blue and weight:3");
#shifted circle  
add_functions($scircle, "sqrt($r^2-(x-$h)^2)+$k for x in <$hmr,$hpr>" . 
  " using color:blue and weight:3");
  add_functions($scircle, "-sqrt($r^2-(x-$h)^2)+$k for x in <$hmr,$hpr>" . 
  " using color:blue and weight:3");
#circle centered at origin  
add_functions($circle, "sqrt($r2^2-(x)^2) for x in <-$r2,$r2>" . 
  " using color:blue and weight:3");
  add_functions($circle, "-sqrt($r2^2-(x)^2) for x in <-$r2,$r2>" . 
  " using color:blue and weight:3");  
#ellipse
add_functions($ellipse, "sqrt($b*$b-$b*$b/($a*$a)*(x-$h)^2) for x in <$hma,$hpa>" . 
  " using color:blue and weight:3");
add_functions($ellipse, "-sqrt($b*$b-$b*$b/($a*$a)*(x-$h)^2)for x in <$hma,$hpa>" . 
  " using color:blue and weight:3");
#ellipse 
add_functions($ellipse2, "sqrt($a*$a-$a*$a/($b*$b)*(x)^2) for x in <$nb,$b>" . 
  " using color:blue and weight:3");
  add_functions($ellipse2, "-sqrt($a*$a-$a*$a/($b*$b)*(x)^2)for x in <$nb,$b>" . 
  " using color:blue and weight:3");


$in=time();
$hypy->gifName($hypy->gifName()."$in");
$hypx->gifName($hypx->gifName()."$in");
$parabola->gifName($parabola->gifName()."$in");
$sparab->gifName($sparab->gifName()."$in");
$scircle->gifName($scircle->gifName()."$in");
$circle->gifName($circle->gifName()."$in");
$ellipse->gifName($ellipse->gifName()."$in");
$ellipse2->gifName($ellipse2->gifName()."$in");

Context("Numeric");
$popupA = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "A",
);
$popupB = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "B",
);
$popupC = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "C",
);
$popupD = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "D",
);
$popupE = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "E",
);
$popupF = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "F",
);
$popupG = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "G",
);
$popupG = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "G",
);
$popupH = PopUp(
  ["?","A","B", "C", "D", "E", "F", "G", "H"], "H",
);
Context()->variables->add(y => "Real");

$sparabl = Formula("x+$b")->reduce;
$sparabr = Formula("(y-$a)^2")->reduce;

$parabl = Formula("y+$b")->reduce;
$parabr = Formula("$c*(x-$a)^2")->reduce;

$circle1l = Formula("(x-$h)^2+(y-$k)^2")->reduce;
$circle1r = Compute("$r*$r");

$circle2l = Formula("(x)^2+(y)^2")->reduce;
$circle2r = Compute("$r2*$r2");

$ellipse1l = Formula("(x-$h)^2/($a)^2+(y)^2/($b)^2")->reduce;
$ellipse2l = Formula("(x)^2/($b)^2+(y)^2/($a)^2")->reduce;


$hypyl = Formula("y^2/($a)^2-x^2/($b)^2")->reduce;
$hypxl = Formula("(x-$a)^2-y^2")->reduce;

###########################
#  Main text

BEGIN_PGML
Match the following equations with their graphs.

[` [$sparabl]=[$sparabr]`] [_____]{$popupC}   [` \;\;\;\;\;\;\;\;\;\;[$hypxl]=1`] [_____]{$popupA}

[` [$parabl]=[$parabr]`] [_____]{$popupE}   [`\;\;\;\;\;\;\;\;\;\; [$circle1l]=[$circle1r]`] [_____]{$popupG}

[` [$ellipse1l]=1`] [_____]{$popupB}   [` \;\;\;\;\;\;\;\;\;\;\;\;[$circle2l]=[$circle2r]`] [_____]{$popupF}

[` [$hypyl]=1`] [_____]{$popupH}   [`\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;[$ellipse2l]=1`] [_____]{$popupD}


>>A. [@ image(insertGraph($hypx), width=>200, height=>200), @]*   B. [@ image(insertGraph($ellipse), width=>200, height=>200), @]*    C. [@ image(insertGraph($sparab), width=>200, height=>200), @]*  D. [@ image(insertGraph($ellipse2), width=>200, height=>200), @]*<<

>>E. [@ image(insertGraph($parabola), width=>200, height=>200), @]*  F. [@ image(insertGraph($circle), width=>200, height=>200), @]*  G. [@ image(insertGraph($scircle), width=>200, height=>200), @]*   H. [@ image(insertGraph($hypy), width=>200, height=>200), @]*  <<
END_PGML


############################
#  Solution

#BEGIN_PGML_SOLUTION
#Solution explanation goes here.
#END_PGML_SOLUTION

COMMENT('MathObject version. Uses PGML.');

ENDDOCUMENT();