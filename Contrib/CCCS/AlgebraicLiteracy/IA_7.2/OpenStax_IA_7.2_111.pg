## DESCRIPTION
## Add or Subtract Rational Expressions
## ENDDESCRIPTION


## DBsubject(Elementary Algebra)
## DBchapter()
## DBsection()
## Date(05/24/2019)
## Institution(Red Rocks Community College)
## Author(Martha Stevens, Craig Faulhaber)
## MO(1)
## KEYWORDS('elementary algebra')


###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl",
  "contextRationalFunction.pl",
  "bizarroArithmetic.pl",
);

##############################################
Context("RationalFunction-Strict");
$var = list_random('a', 'b', 'c', 'd', 'm', 'n', 'x', 'y', 't');
Context()->variables->are($var =>'Real');

do {
$a=non_zero_random(-6,6);
$c=random(1,6);
$d=random(1,6);
} until $a*$d/($c+$d) != $a; #this line guarantees that the numerator will not contain the denominator as a factor


$e=$c+$d;
$f=$a*$d;


$lcd = Formula("$var*($var + $a)");

#Question
$g1 = Formula("($c)/($var + $a)")->reduce;
$g2 = Formula("($d)/($var)")->reduce;

#Answers
Context("RationalFunction-Strict");
Context()->variables->are($var =>'Real');
$f = Formula("($e*$var + $f)/$lcd");

#Custom Answer Checkers

$cmp = $f->cmp(checker => sub {
  my ($correct,$student,$ans) = @_;
  return 0 unless $correct == $student;
  return 0 unless $student->{tree}->class eq "BOP" && $student->{tree}{bop} eq "/";
  my $cnum = Formula($correct->{tree}{lop});
  my $snum = Formula($student->{tree}{lop});
Value->Error("Your answer isn't reduced") unless $cnum == $snum;
  return 1;
});

##############################################

TEXT(beginproblem());

BEGIN_PGML

Add or subtract the rational expressions.

[``[$g1] + [$g2] = ``][__________]{$cmp}

END_PGML

##############################################

BEGIN_PGML_SOLUTION

END_PGML_SOLUTION

ENDDOCUMENT();