#Simplify higher order radicals
# ENDDESCRIPTION
## DBsubject()
## DBchapter()
## DBsection()
## Institution(Red Rocks Community College)
## Author(Martha Stevens)
## Date(6/2019)
## KEYWORDS()

 
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "contextFraction.pl",
  "contextLimitedRadical.pl",
  "PGcourse.pl",
  "parserRoot.pl",
);

######################################

TEXT(beginproblem());
Context("Numeric");

$a1 = non_zero_random(-9, 9);
$in1 = list_random(2, 3, 5, 6, 7);
$out1 = random(2, 5);
$rad1 = Compute("$in1*$out1**2");

$a2 = non_zero_random(-5, 5);
$out2 = list_random(2, 3, 5);
$in2 = list_random(2, 3, 5, 6, 7);
$b2 = $a2*$out2;
$rad2 = Compute("$in2*$out2**2");

Context("LimitedRadical");

$ans1 = Formula("$a1 + $out1*sqrt($in1)");
$ans2 = Formula("$a2 + sqrt($in2)");


##########################################


#####################################################

BEGIN_PGML

Simplify each radical. Assume all variables are positive.

Use *sqrt(x)* to enter [`\sqrt{x}`]. For example: [`\sqrt{2} =`]  *sqrt(2)*.

  (a)  [`` [$a1] + \sqrt{[$rad1]} = ``] [_____________]{$ans1}
  
  (b)  [`` \frac{[$b2] + \sqrt{[$rad2]}}{[$out2]} = ``] [_____________]{$ans2}

END_PGML

############################################################


BEGIN_PGML_SOLUTION
*Part A*

[`\sqrt{[$rad1]} = \sqrt{[$out1] \cdot [$out1] \cdot [$in1]} = [$out1] \sqrt{[$in1]}`]

The expression becomes:

[`[$ans1]`]

It cannot be simplified any further because there are no like radicals.

*Part B*

First simplify the radical:

[`\sqrt{[$rad2]} = \sqrt{[$out2] \cdot [$out2] \cdot [$in2]} = [$out2] \sqrt{[$in2]}`]

The expression becomes:

[``\frac{[$b2] + [$out2]\sqrt{[$in2]}}{[$out2]}``]

[``\frac{[$b2]}{[$out2]} + \frac{[$out2] \sqrt{[$in2]}}{[$out2]}``]

[`[$ans2]`]


END_PGML_SOLUTION

######################################



ENDDOCUMENT();
