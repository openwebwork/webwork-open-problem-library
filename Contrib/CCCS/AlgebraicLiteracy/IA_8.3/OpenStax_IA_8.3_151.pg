#Use laws of exponents with rational exponents.
# ENDDESCRIPTION
## DBsubject()
## DBchapter()
## DBsection()
## Institution(Red Rocks Community College)
## Author(Martha Stevens)
## Date(6/2019)
## KEYWORDS()

 
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl",
  "bizarroArithmetic.pl",
  "contextFraction.pl",
);

######################################
TEXT(beginproblem());
Context("Fraction");
Context()->flags->set(reduceConstants=>0);
Context()->flags->set(limits=>[1,10]);
Context()->operators->set(
'/' => {class => 'bizarro::BOP::divide', isCommand => 1},
'**' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
'^' => {class => 'bizarro::BOP::power', isCommand => 1, perl=>undef},
);
#Context()->flags->set(bizarroPow=>1);

#Part A: Use the product rule.
$d1a = random(2, 3, 4, 5);
$n1a = 1;
$i = random(2, 3);
$d2a = $i*$d1a;
$n2a = $d2a - ($i - 1);

#exponents
$e1a = Fraction($n1a, $d1a)->reduce;
$e2a = Fraction($n2a, $d2a)->reduce;
$e3a = Fraction($n1a*$d2a + $n2a*$d1a, $d1a*$d2a)->reduce;

#Answer
$ga = Formula("x^($e3a)" );

#Part B:  Use the power rule.
$d1b = random(3, 6);
$n1b = $d1b - 1;
$i2 = random(2, 5);
$e2b = $i2*$d1b;
$n2b = $i2*$n1b;
$e1b = Fraction($n1b,$d1b)->reduce;

#Answer
$gb = Formula("x^$n2b");

#Part C: Use the quotient rule
$d1c = list_random(3, 5, 7, 9);
$n2c = list_random(2, 4, 6, 8);
$diff = list_random(2, 4, 6);
$n1c = $n2c + $diff;
$e1c = Fraction($n2c, $d1c);
$e2c = Fraction($n1c, $d1c);
$e3c = Fraction($diff, $d1c);

#Answer
$gc = Formula("1/x^($e3c)");

#####################################################

BEGIN_PGML
Simplify by applying the laws of exponents. Write your answers with positive rational exponents only.


[``{x}^{[$e1a]}\cdot{x}^{[$e2a]} =``][__________]


[``({{x}^{[$e1b]}})^{[$e2b]} = ``][_________]


[``\frac{{x}^{[$e1c]}}{{x}^{[$e2c]}} = ``][_________]


END_PGML
####################################################

ANS($ga -> cmp(
checker=>sub{
my ( $correct, $student, $ansHash ) = @_;
return 0 if $ansHash->{isPreview} || $correct != $student;
$student = $ansHash->{student_formula};
$correct = $correct->{original_formula} if defined $correct->{original_formula};
$student = Formula("$student"); $correct = Formula("$correct");
return 0 unless ($correct == $student);
Context()->flags->set(bizarroDiv=>1,bizarroPow=>1);
delete $correct->{test_values};
delete $student->{test_values};
my $OK = (($correct == $student) or ($student == $correct));
Context()->flags->set(bizarroDiv=>0,bizarroPow=>0);
Value::Error("Your answer is equivalent, but please use the proper format") unless $OK;
return $OK;
}));

ANS($gb -> cmp(
checker=>sub{
my ( $correct, $student, $ansHash ) = @_;
return 0 if $ansHash->{isPreview} || $correct != $student;
$student = $ansHash->{student_formula};
$correct = $correct->{original_formula} if defined $correct->{original_formula};
$student = Formula("$student"); $correct = Formula("$correct");
return 0 unless ($correct == $student);
Context()->flags->set(bizarroDiv=>1,bizarroPow=>1);
delete $correct->{test_values};
delete $student->{test_values};
my $OK = (($correct == $student) or ($student == $correct));
Context()->flags->set(bizarroDiv=>0,bizarroPow=>0);
Value::Error("Your answer is equivalent, but please use the proper format") unless $OK;
return $OK;
}));

ANS($gc -> cmp(
checker=>sub{
my ( $correct, $student, $ansHash ) = @_;
return 0 if $ansHash->{isPreview} || $correct != $student;
$student = $ansHash->{student_formula};
$correct = $correct->{original_formula} if defined $correct->{original_formula};
$student = Formula("$student"); $correct = Formula("$correct");
return 0 unless ($correct == $student);
Context()->flags->set(bizarroDiv=>1,bizarroPow=>1);
delete $correct->{test_values};
delete $student->{test_values};
my $OK = (($correct == $student) or ($student == $correct));
Context()->flags->set(bizarroDiv=>0,bizarroPow=>0);
Value::Error("Your answer is equivalent, but please use the proper format") unless $OK;
return $OK;
}));

#####################################################
BEGIN_PGML_SOLUTION
To multiply expressions with exponents, we add the exponents.  You will need to find the LCD in order to do the addition.

[``{x}^{[$e1a]}\cdot{x}^{[$e2a]}``]

[`` [$e1a] + [$e2a] = [$e3a]``]

The answer is: [``x^[$e3a]``]

The power rule applies to the next problem--to raise an expression with an exponent to a power, we multiply the exponents.  You don't need an LCD to multiply fractions.

[``({{x}^{[$e1b]}})^{[$e2b]}``]

[``[$e1b] \cdot [$e2b] = [$n2b]``]

The answer is: [``x^{[$n2b]}``]

The quotient rule says we subtract exponents when dividing.  You will need an LCD to do the subtraction.

[``\frac{{x}^{[$e1c]}}{{x}^{[$e2c]}}``]

[``[$e1c] - [$e2c] = -[$e3c]``]

The answer is;  [``x^{-[$e3c]} = \frac{1}{x^{[$e3c]}}``]
END_PGML_SOLUTION

ENDDOCUMENT();
