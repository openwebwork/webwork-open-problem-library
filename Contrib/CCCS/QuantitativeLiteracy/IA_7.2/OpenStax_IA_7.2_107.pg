## DESCRIPTION
## Find a LCD of Rational Expressions
## ENDDESCRIPTION


## DBsubject(Elementary Algebra)
## DBchapter()
## DBsection()
## Date(05/24/2019)
## Institution(Red Rocks Community College)
## Author(Martha Stevens)
## MO(1)
## KEYWORDS('elementary algebra')


###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGgraphmacros.pl",
  "PGcourse.pl",
  "contextRationalFunction.pl",
 
);

##############################################
Context("RationalFunction");
Context()->variables->add(y =>'Real');

#constants
$a = list_random(2, 7);
$b = list_random(3, 5);
do{
$c = list_random(2, 3, 5, 7);
}until(($c != $b) and ($c != $a));

#exponents
$n = random(1, 4);
do{
$m = random(2, 10);
}until($m > $n);

$lcd = Formula("$a*$b*$c*x^$m*y^$m");

#Question
$g1 = Formula("($a)/($b*$c*x^$n*y^$m)")->reduce;
$g2 = Formula("($b)/($a*$c*x^$m*y^$n)")->reduce;

#Answers
Context("RationalFunction-Strict");
Context()->variables->add(y =>'Real');
$e = $m - $n;
$first = $a**2;
$last = $b**2;
$f = Formula("($first*x^$e+$last*y^$e)/$lcd");

#Custom Answer Checkers
$cmp = $f->cmp(checker => sub {
  my ($correct,$student,$ans) = @_;
  return 0 unless $correct == $student;
  return 0 unless $student->{tree}->class eq "BOP" && $student->{tree}{bop} eq "/";
  my $cnum = Formula($correct->{tree}{lop});
  my $snum = Formula($student->{tree}{lop});
Value->Error("Your answer isn't reduced") unless $cnum == $snum;
  return 1;
});

##############################################

TEXT(beginproblem());

BEGIN_PGML

Add or subtract the rational expressions.

[``[$g1] + [$g2] = ``][__________]{$cmp}

END_PGML

##############################################



BEGIN_PGML_SOLUTION

END_PGML_SOLUTION

ENDDOCUMENT();