## DBsubject(Algebra)
## DBchapter(Quadratic equations and functions)
## DBsection(Applications and models)
## Level(3)
## KEYWORDS('demand', 'price', 'cost', 'revenue', 'profit', 'optimization', 'quadratic', 'break-even')
## Author(Kyle Schlitt)
## Institution(TRU)
## Language(en)

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGML.pl",
  "contextCurrency.pl",
  "parserMultiAnswer.pl"
);

Context()->variables->add(q => 'Real');

Context()->flags->set(
  tolerance => 0.00001,
  tolType => "absolute",
);

Context()->noreduce('(-x)+y');

# optimal production level/price to maximize profit
$oq = random(500,1000,10);

# break even quantities (ensure multiples of 10)
$radius = random(200,300,10);
$q1 = $oq - $radius;
$q2 = $oq + $radius;

# generate profit function
$a = -1; $b = $q1 + $q2; $c = -($q1 * $q2);
$profit = Formula("$a q^2 + $b q + $c")->reduce;

# maximum profit obtainable
$max_profit = $profit->substitute(q => "$oq")->eval();

# generate slope for demand equation
@slopes = (0.1, 0.2, 0.25, 0.5);
$m = -$slopes[random(0,3,1)];

# optimal price for tickets
$op = $b + $m * $oq;

# demand equation intercept
$demand_intercept = $b;

# demand function
$demand = Formula("$b + $m q")->reduce;
$max_q = $b/(-$m);
$domain = Interval("[0, $max_q]");

# revenue function
$revenue = Formula("$m q^2 + $b q");

# generate break-even prices
$p1 = $b + $m * $q1;
$p2 = $b + $m * $q2;

# generate cost function
$fixed_cost = -$c;
$squared_coef = 1 + $m;
$cost = Formula("$fixed_cost + $squared_coef q^2");

# there are two break-even quantities which may be supplied in either order
$break_even_q = MultiAnswer($q1, $q2)->with(
  singleResult => 0,
  checker => sub {
    my ($correct, $student, $self) = @_;
    my ($q1stu, $q2stu) = @{$student};
    my ($Q1, $Q2) = @{$correct};
    
    if (($Q1 == $q1stu && $Q2 == $q2stu) || ($Q1 == $q2stu && $Q2 == $q1stu)) {
      return [1,1];
    } elsif ($Q1 == $q1stu || $Q2 == $q1stu) {
      return [1,0];
    } elsif ($Q1 == $q2stu || $Q2 == $q2stu) {
      return [0,1];
    } else {
      return [0,0];
    }
  }
);
BEGIN_PGML

A music production company is planning to host an exclusive VIP concert, and they have asked for your help in deciding on the price of tickets.

They predict that the demand equation for concert tickets is given by

>>[`p = [$demand]`],<<

where:

* [`p`] is the price per ticket (in $), and
* [`q`] is the number of tickets sold.

The cost of setting up the event and selling tickets (in $) is given by the function

>>[`C(q) = [$cost]`].<<

----

What are the cost, revenue, and profit functions, and what are their domains?

**Answer:**

[`C(q) = [$cost]`] with [`\text{dom}(C) = `] [_]{Interval("[0,infinity)")}

[`R(q) = `] [_]{$revenue} with [`\text{dom}(R) = `] [_]{$domain}

[`P(q) = `] [_]{$profit} with [`\text{dom}(P) = `] [_]{$domain}

END_PGML

BEGIN_PGML_HINT

To find [`R(q)`], recall that the revenue function is given by [`R(q) = pq`].  Combine this with the demand equation!
END_PGML_HINT

BEGIN_PGML

----

How many tickets must be sold to break even?

**Answer:**

Either [_]{$break_even_q} or [_]{$break_even_q} tickets must be sold to break even.

----

For what values of [`q`] will the company earn a profit, or at least not lose any money?  Express your answer using interval notation.

**Answer:** [_]{Interval("[$q1,$q2]")}

----

How many tickets should be sold in order to maximize profit?

**Answer:** The company should sell [_]{$oq} tickets to maximize profit.

----

END_PGML

Context("Currency");

BEGIN_PGML

What will be the maximum profit?

**Answer:** [_]{Currency($max_profit)}

----

In order to achieve this maximum profit, what price should the company sell their tickets at?

**Answer:** [_]{Currency($op)}

END_PGML

BEGIN_PGML_HINT

Use the demand equation!
END_PGML_HINT

ENDDOCUMENT();
