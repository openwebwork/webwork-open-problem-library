## BEGIN_DESCRIPTION
##  Compute derivatives using iterated chain rule
## END_DESCRIPTION
##
##############################################
## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Chain rule (without trigonometric functions))
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(3)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

Context("Fraction-NoDecimals");
Context()->variables->are(x=>'Real');

my @c; my @p = ([],[],[]); my $p;

@c = (random(1,3),random(1,3),non_zero_random(-2,3),random(1,3),non_zero_random(-2,3));
@p[0] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[1] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[2] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 2 } shuffle(5))[0,1])]; 
$p = random(3,7);
$f[0] = Formula("($c[0]*($c[1]*x^$p[0][0] + $c[2]*x^$p[0][1])^$p[2][0] + $c[3]*x^$p[1][0])^$p")->reduce;
$f_text[0] = $f[0];


@c = (random(1,3),random(1,3),non_zero_random(-2,3),random(1,3),non_zero_random(-2,3));
@p[0] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[1] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[2] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 2 } shuffle(5))[0,1])]; 
$p = random(3,7);
$f[1] = Formula("($c[0]*($c[1]*x^$p[0][0] + $c[2]*x^$p[0][1])^$p[2][0] + ($c[3]*x^$p[1][0]+$c[4]*x^$p[1][1])^$p[2][1])^$p")->reduce;
$f_text[1] = $f[1];

@c = (random(1,3),non_zero_random(-2,3),random(1,3),non_zero_random(-2,3));
@p[0] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[1] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[2] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 2 } shuffle(5))[0,1])]; 
$f[2] = Formula("($c[0]*x^$p[0][0] + $c[1]*x^$p[0][1])^$p[2][0]*($c[2]*x^$p[1][0]+$c[3]*x^$p[1][1])^$p[2][1]")->reduce;
$f_text[2] = $f[2];

@c = (random(1,3),non_zero_random(-2,3),random(1,3),non_zero_random(-2,3));
@p[0] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[1] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 1 } shuffle(5))[0,1])]; 
@p[2] = [PGsort(sub{$_[0] < $_[1]}, (map {$_ + 2 } shuffle(5))[0,1])]; 
$f[3] = Formula("(($c[0]*x^$p[0][0] + $c[1]*x^$p[0][1])*($c[2]*x^$p[1][0]+$c[3]*x^$p[1][1]))^$p[2][1]")->reduce;
$f_text[3] = $f[3];





Context()->texStrings;

BEGIN_TEXT

Compute derivatives of the following functions (be careful about parenthesis!):
$PAR
$BBOLD A.$EBOLD \(\quad \displaystyle f(x) = $f_text[0]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR

$BBOLD B.$EBOLD \(\quad \displaystyle f(x) = $f_text[1]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR

$BBOLD C.$EBOLD \(\quad \displaystyle f(x) = $f_text[2]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR


$BBOLD D.$EBOLD \(\quad \displaystyle f(x) = $f_text[3]\)
$BR
\(\quad f'(x) = \) \{ ans_rule(40); \}
$PAR





END_TEXT
Context()->normalStrings;

ANS( $f[0]->D('x')->cmp() );
ANS( $f[1]->D('x')->cmp() );
ANS( $f[2]->D('x')->cmp() );
ANS( $f[3]->D('x')->cmp() );


ENDDOCUMENT();        # This should be the last executable line in the problem.
       
