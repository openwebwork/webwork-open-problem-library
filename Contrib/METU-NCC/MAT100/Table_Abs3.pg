## BEGIN_DESCRIPTION
##  Complete sign table for sums of absolute value functions
## END_DESCRIPTION
##
##############################################
## DBsubject(Algebra)
## DBchapter(Absolute value expressions and functions)
## DBsection(Absolute value inequalities)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Date(October 2021)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"parserPopUp.pl",
"niceTables.pl",
"contextFraction.pl"
);

TEXT(beginproblem());

COMMENT('random slopes could make answers ugly...');

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
}

Context("Fraction");

#######################
# Sign table constants
#

$dne = "~~x{2205}";
#$dne = "X";

@popPN = (PopUp([" ","+","-"],"+"), 
          PopUp([" ","+","-"],"-")); 
@popZ = (PopUp([" ","0","$dne"],"0"), 
         PopUp([" ","0","$dne"],"$dne")); 

$br = "border-right: 3px solid;";
$bb = "border-bottom: 3px solid; height: 2px;";
$ht = "height:2px;";

#
########################

@a = PGsort(sub {$_[0] < $_[1]}, pick(3,(-4..-1,1..4)));
@m = map { random(1,3) } @a; 

$f = Formula("$m[0] abs(x-$a[0]) + $m[1] abs(x-$a[1]) + $m[2] abs(x-$a[2])")->reduce;

@crit  = ($f->eval(x=>$a[0]),$f->eval(x=>$a[1]),$f->eval(x=>$a[2]));
@crits = PGsort(sub {$_[0] < $_[1]}, @crit);

do { $b = random($crits[0]+1,$crits[2]+3); } 
until (($b != $crits[1]) && ($b != $crits[2]));

$f = Formula("$f-$b")->reduce;

@x = ();

if ($b > $crit[0]) {
  push(@x, (
   Fraction($m[0]*$a[0]+$m[1]*$a[1]+$m[2]*$a[2]-$b,
            $m[0]+$m[1]+$m[2])->reduce
  ));
}
if ($b == (PGsort(sub {$_[0] < $_[1]}, ($b,$crit[0],$crit[1])))[1]) {
  push(@x, (
   Fraction(-$m[0]*$a[0]+$m[1]*$a[1]+$m[2]*$a[2]-$b,
            -$m[0]+$m[1]+$m[2])->reduce
  ));
}
if ($b == (PGsort(sub {$_[0] < $_[1]}, ($b,$crit[1],$crit[2])))[1]) {
  push(@x, (
   Fraction(-$m[0]*$a[0]-$m[1]*$a[1]+$m[2]*$a[2]-$b,
            -$m[0]-$m[1]+$m[2])->reduce
  ));
}
if ($b > $crit[2]) { 
  push(@x, (
   Fraction($m[0]*$a[0]+$m[1]*$a[1]+$m[2]*$a[2]+$b,
            $m[0]+$m[1]+$m[2])->reduce
  ));
}

@pop_Zer = ($popZ[0], $popZ[0]);

@pop_f = ( 
  (($f->eval(x=>$x[0]-1) > 0)         ? $popPN[0] : $popPN[1]) , 
  (($f->eval(x=>($x[0]+$x[1])/2) > 0) ? $popPN[0] : $popPN[1]) , 
  (($f->eval(x=>$x[1]+1) > 0)         ? $popPN[0] : $popPN[1])
);


Context()->texStrings;
BEGIN_TEXT

Fill in the sign table for the expression 
\(\ \ \displaystyle f(x) = $f \).

$PAR
\{DataTable(
[
  ["\(x\)","",
    [ans_rule(2),colspan=>2],"",
    [ans_rule(2),colspan=>2],"" ],
  [ ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb],["",cellcss=>$bb.$br],
    ["",cellcss=>$bb],["",cellcss=>$bb] ],
  [ ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht],["",cellcss=>$ht.$br],
    ["",cellcss=>$ht],["",cellcss=>$ht] ],
  ["\(f\)",$pop_f[0]->menu(),["0",colspan=>2],
           $pop_f[1]->menu(),["0",colspan=>2],
	   $pop_f[2]->menu() ]
], 'align =>ccc|ccc|cc', midrules=>1
);\}

$PAR
In the row for \(x\):
$BR\(\quad \bullet\ \) 
fill in \(x\)-values on number line where \(f\) is zero.
$BR
In the row for \(f\):
$BR\(\quad \bullet\ \) 
choose "\(+\)" or "\(-\)" on  ${BBOLD}intervals${EBOLD} 
  to indicate \(f\) is ${BBOLD}positive${EBOLD} or ${BBOLD}negative${EBOLD}.




END_TEXT
Context()->normalStrings;

ANS( $x[0]->cmp() );
ANS( $x[1]->cmp() );

ANS( $pop_f[0]->cmp() ); 
ANS( $pop_f[1]->cmp() );
ANS( $pop_f[2]->cmp() ); 



ENDDOCUMENT();        # This should be the last executable line in the problem.
       
