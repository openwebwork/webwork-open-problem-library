## BEGIN_DESCRIPTION
##   Circle through three points (0,0) (A,0) (0,B)
## END_DESCRIPTION
##
##############################################
## DBsubject(Algebra)
## DBchapter(Linear equations and functions)
## DBsection()
## Institution(METU-NCC)
## Author(Benjamin Walter)
## MO(1)
## Static(0)
## Level(2)
## Language(en)
###############################################


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGcourse.pl",
  "MathObjects.pl",
  "parserImplicitEquation.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out; 
};

TEXT(beginproblem());

Context("ImplicitEquation");
#  webwork.maa.org example suggests blanking these error messages ???
Context()->{error}{msg}{"Can't find any solutions to your equation"} = " ";
Context()->{error}{msg}{"Can't generate enough valid points for comparison"} = " ";

my ($A,$B,$C) = map { $_ * random(-2,2,4) } pick(3,(1..5));

my $a = $A/2;  
my $b = (($C)**2 + ($B)**2 - $A*$B)/(2*$C);

# $b is usually an integer... so why not ensure it?
while ($b != ceil($b)) {  
  ($A,$B,$C) = map { $_ * random(-2,2,4) } pick(3,(1..5));

  $a = $A/2;  
  $b = (($C)**2 + ($B)**2 - $A*$B)/(2*$C);
}

Context()->flags->set(
  reduceConstants => 0,
  reduceConstantFunctions => 0,
);



if (random(0,1)==0) {
  $P = Point($A,0);  $Q = Point($B,$C);

  $ans[0] = Point($a,$b);
} else {
  $P = Point(0,$A);  $Q = Point($C,$B);

  $ans[0] = Point($b,$a);
}

($a,$b) = (abs($a),abs($b));

$ans[1] = Formula("sqrt($a**2 + $b**2)");  
@index = ("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O");

Context()->texStrings;
BEGIN_TEXT

Find the center and radius of the circle passing through the points
\((0,0)\), \($P\), \($Q\).

$PAR

Center: \{ ans_rule(25) \} $BR
Radius: \{ ans_rule(10) \}

$PAR

Hint: Use the standard form of the circle equation $BR
\(x^2 + y^2 + Ax + By = C\)

END_TEXT

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

for ($i=0;$i<=$#ans;$i++) {
  ANS( $ans[$i]->cmp() );
}



ENDDOCUMENT();        # This should be the last executable line in the problem.

