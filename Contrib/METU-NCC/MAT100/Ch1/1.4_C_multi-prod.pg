## BEGIN_DESCRIPTION
##  5x complex multiplication problems
## END_DESCRIPTION
##
##############################################
## DBsubject(Complex analysis)
## DBchapter(Arithmetic)
## DBsection(Multiplication)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(2)
## Language(en)
## MO(1)
###############################################


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGcourse.pl",
  "MathObjects.pl",
  "contextLimitedComplex.pl"
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out; 
};

TEXT(beginproblem());
COMMENT("Current setup picks 5 out of 266 possible distinct multiplication problems using complex numbers with distinct real and imaginary parts less than 5.");

Context("Complex");

my $number_of_problems = 5; 

# basic numbers to work with

my @z = (Complex(1,2),
         Complex(1,3),
         Complex(1,4),
         Complex(2,3)
);

# generate new numbers by 
#   swapping real and imaginary parts
#   changing sign on real or imaginary parts
#
# total possible numbers is @z * 6
#   consecutive pairs of numbers will give problem
#
# (this way we ensure problems are simple and unique)
# 
my @num = pick($number_of_problems*2,(0..(@z*6-1))); 

my @cx_num = map { @z[$_%@z] } @num;

for($i=0;$i<@num;$i++) {
  if ($num[$i] >= 3*@z) { $cx_num[$i] = Complex(Im($cx_num[$i]),Re($cx_num[$i])); }

  $num[$i] = (($num[$i] - ($num[$i]%@z))/@z) %3; 
  if ($num[$i] == 1) { $cx_num[$i] =  conj($cx_num[$i]); }
  if ($num[$i] == 2) { $cx_num[$i] = -conj($cx_num[$i]); }
}

for ($i=0;$i<@num/2;$i++) {
  $question[$i] = "(" . $cx_num[2*$i]->TeX . ")\,(" . $cx_num[2*$i+1]->TeX . ")";
  $ans[$i]      = $cx_num[2*$i] * $cx_num[2*$i+1];
}


# impliment poor man's alignment?
@align = ("","\phantom{-}","\phantom{-}\phantom{-}");
for ($i=0;$i<@num/2;$i++) {
  $question[$i] = $align[((Re($cx_num[2*$i])>0)   ? 1 : 0) + 
                         ((Re($cx_num[2*$i+1])>0) ? 1 : 0)] . $question[$i];
}
@align = ("","\phantom{2}","\phantom{2}\phantom{2}");
for ($i=0;$i<@num/2;$i++) {
  $question[$i] = $align[((abs(Im($cx_num[2*$i]))==1)   ? 1 : 0) + 
                         ((abs(Im($cx_num[2*$i+1]))==1) ? 1 : 0)] . $question[$i];
}


Context("LimitedComplex");

@ans = map { Compute($_) } @ans; 


@index = ("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O");

Context()->texStrings;
BEGIN_TEXT
Compute the following complex products:
$PAR

END_TEXT
for($i=0;$i<=$#ans;$i++){
BEGIN_TEXT

$BBOLD ($index[$i]) $EBOLD 
\(\quad $question[$i]= \) \{ans_rule(10);\} 

$PAR

END_TEXT
}

Context()->normalStrings;

$showPartialCorrectAnswers = 1;

for ($i=0;$i<=$#ans;$i++) {
  ANS( $ans[$i]->cmp() );
}


ENDDOCUMENT();        # This should be the last executable line in the problem.

