## BEGIN_DESCRIPTION
##  Complete a table of compositions for numerical functions
## END_DESCRIPTION
##
##############################################
## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Compositions and combinations of functions)
## Author(Benjamin Walter)
## Institution(METU-NCC)
## Language(en)
## MO(1)
## Static(0)
## Level(1)
###############################################



DOCUMENT();

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"niceTables.pl",
);

sub pick {
  my ($k, @in) = @_;
  my @out = ();
  while (@out < $k) { push( @out, splice(@in, random(0,$#in), 1) ); }
  @out;
};


TEXT(beginproblem());

Context("Numeric");

@x = (0..4); 

my @P = pick(5, (0..4));            

foreach (0..4) { $f[$P[$_]] = $P[($_+1)%5]; } # 5-cycle

do {
   @P = pick(5, (0..4));

  foreach (0..2) { $g[$P[$_]] = $P[($_+1)%3]; } # 3-cycle
  $g[$P[3]] = $P[4]; $g[$P[4]] = $P[3];         # 2-cycle

  $diff = 0; foreach (0..4) { $diff++ if ($f[$_] != $g[$_] ); }
} until ( $diff > 3 ); 

if (random(0,1)==1) { my @t = @f; @f = @g; @g = @t; }  # swap f and g

$comp[0] = "f^{-1}(x)"; 
$comp[1] = "g^{-1}(x)"; 

@finv[@f] = (0..4);
@ginv[@g] = (0..4);

@{$c[0]} = map { Real($_) } @finv;
@{$c[1]} = map { Real($_) } @ginv;

if (random(0,1)==1) {                         # fg or gf ?
 
  $comp[2] = "\bigl(f\circ g\bigr)^{-1}(x)";
  @{$c[2]} = map { Real($_) } @ginv[@finv];

} else {

  $comp[2] = "\bigl(g\circ f\bigr)^{-1}(x)";
  @{$c[2]} = map { Real($_) } @finv[@ginv];
}


if (random(0,1)==1) {                         # start at 0 or at 1 ?
  @x = map { $_ + 1 } @x;
  @f = map { $_ + 1 } @f;
  @g = map { $_ + 1 } @g;
  foreach my $i (0..2) { @{$c[$i]} = map { $_ + 1 } @{$c[$i]}; }
}


$br = "border-right: 3px double;";
$bb = "border-bottom:  3px double; width: 50px;";

Context()->texStrings;
BEGIN_TEXT

Complete the table of function values below.
 
$PAR

\{
DataTable(
  [
    [['\(x\)',headerrow =>1,cellcss=>$br.$bb],
     ['\($x[0]\)',cellcss=>$bb],
     ['\($x[1]\)',cellcss=>$bb],
     ['\($x[2]\)',cellcss=>$bb],
     ['\($x[3]\)',cellcss=>$bb],
     ['\($x[4]\)',cellcss=>$bb]],
    [['\(f(x)\)',cellcss=>$br],
      '\($f[0]\)','\($f[1]\)','\($f[2]\)','\($f[3]\)','\($f[4]\)'],
    [['\(g(x)\)',cellcss=>$br.$bb],
     ['\($g[0]\)',cellcss=>$bb],
     ['\($g[1]\)',cellcss=>$bb],
     ['\($g[2]\)',cellcss=>$bb],
     ['\($g[3]\)',cellcss=>$bb],
     ['\($g[4]\)',cellcss=>$bb]],
    [['\($comp[0]\)',cellcss=>$br],
      $c[0][0]->ans_rule(2),$c[0][1]->ans_rule(2),$c[0][2]->ans_rule(2),
      $c[0][3]->ans_rule(2),$c[0][4]->ans_rule(2)],
    [['\($comp[1]\)',cellcss=>$br],
      $c[1][0]->ans_rule(2),$c[1][1]->ans_rule(2),$c[1][2]->ans_rule(2),
      $c[1][3]->ans_rule(2),$c[1][4]->ans_rule(2)],
    [['\($comp[2]\)',cellcss=>$br],
      $c[2][0]->ans_rule(2),$c[2][1]->ans_rule(2),$c[2][2]->ans_rule(2),
      $c[2][3]->ans_rule(2),$c[2][4]->ans_rule(2)],
  ], 
  align => '| c | c | c | c | c | c |',
  midrules => 1
);
\}


END_TEXT
Context()->normalStrings;

foreach my $i (0..2) { foreach my $j (0..4) {
  ANS( $c[$i][$j]->cmp() );
} }



ENDDOCUMENT();        # This should be the last executable line in the problem.
       
