## DESCRIPTION
## Systems of ODEs: Writing solutions given eigenvalues and eigenvectors 
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Repeated eigenvalues)
## Date(11/18/2015)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(3)
## Static(0)
## MO(1)
## KEYWORDS('differential equations','systems of ODEs')


##############################
#  Initialization

DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGmatrixmacros.pl",
"parserMultiAnswer.pl",
"PGcourse.pl",
"unionTables.pl"
);

TEXT(beginproblem());

#############################
#  Setup

Context("Numeric");
Context()->variables->are(
   t=>"Real",
'c1'=>"Real",
'c2'=>"Real",
);

@v = (non_zero_random(-4,4,1), random(-4,4,1));
do { @w = (random(-4,4,1), non_zero_random(-4,4,1)); } 
  while ($v[0]*$w[1] == $v[1]*$w[0]);

$l = non_zero_random(-4,4,1);  

my $y1, $y2, $P11, $P21, $P12, $P22;

$y1 = Formula("c1 $v[0] e^($l t) + c2 ($w[0] + $v[0] t) e^($l t)")->reduce();
$y2 = Formula("c1 $v[1] e^($l t) + c2 ($w[1] + $v[1] t) e^($l t)")->reduce();

$P11 = Formula("$v[0] e^($l t)")->reduce; $P12 = Formula("($w[0] + $v[0] t) e^($l t)")->reduce;
$P21 = Formula("$v[1] e^($l t)")->reduce; $P22 = Formula("($w[1] + $v[1] t) e^($l t)")->reduce;

Context("Matrix");
my $A, $A11, $A12, $A21, $A22, $det;

$A = Matrix([$v[0], $w[0]], [$v[1], $w[1]]) *
     Matrix([$l, 1],[0, $l]) * 
     Matrix([$w[1], -$w[0]], [-$v[1], $v[0]]);

$det = $v[0]*$w[1] - $v[1]*$w[0];

$A11 = $A->element(1,1);  $A12 = $A->element(1,2);
$A21 = $A->element(2,1);  $A22 = $A->element(2,2);

Context("Numeric");
Context()->variables->are(
   t=>"Real",
'c1'=>"Real",
'c2'=>"Real",
);

$multiansA = MultiAnswer($v[0],$v[1],$l,$w[0],$w[1],$v[0],$v[1],$l)->with(
  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0'><tr>
    <td> \(c_1\ \biggl\lbrack\) </td>
    <td><table border='0' cellspacing='10'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack\ e^{%s t} \ \ +  \ \ c_2\ \biggl(\biggl\lbrack\)  </td>
    <td><table border='0' cellspacing='10'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack\ + \biggl\lbrack\)</td>
    <td><table border='0' cellspacing='10'><tr><td> %s </td></tr><tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack t\ \biggl) e^{%s t} \)</td>
  </tr></table>",
  tex_format => "c_1 \left\lbrack\begin{array}{r} %s \\ %s \end{array}\right\rbrack \ 
                      e^{%s t} \ + \  
                 c_2 \left(
                     \left\lbrack\begin{array}{r} %s \\ %s \end{array}\right\rbrack  
                     \ + \ 
                     \left\lbrack\begin{array}{r} %s \\ %s \end{array}\right\rbrack  t\ 
                     \right) e^{%s t}",
  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = (0,0);
      if ($c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) && $c[2]->typeMatch($s[2]) &&
          $c[3]->typeMatch($s[3]) && $c[4]->typeMatch($s[4]) && $c[5]->typeMatch($s[5]) &&
          $c[6]->typeMatch($s[6]) && $c[7]->typeMatch($s[7]) ) { 
        if ((($s[0] != 0) || ($s[1] != 0)) && 
            ($c[0]*$s[1] == $c[1]*$s[0]) && ($c[2] == $s[2])) {
          $score[0] = 1;
        } 
        if ( (($s[3] != 0) || ($s[4] != 0)) && (($s[5] != 0) || ($s[6] != 0)) &&  
             ($c[5]*$s[6] == $c[6]*$s[5]) && 
             (($s[3] - $s[5]/$c[5] * $c[3])*$c[1] == 
              ($s[4] - $s[5]/$c[5] * $c[4])*$c[0]) && 
             ($c[7] == $s[7]) ) {
          $score[1] = 1;
        }
      }
      return (($score[0] == 1) && ($score[1] == 1)) ? 1 : 0;
  }
);


$multiansB = MultiAnswer($P11, $P12, $P21, $P22)->with(
  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0'><tr>
    <td> \( \biggl\lbrack \)</td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s $SPACE </td><td> $SPACE %s</td></tr>
           <tr><td> %s $SPACE </td><td> $SPACE %s</td></tr></table></td>
    <td> \(\biggr\rbrack\ \biggl\lbrack\)</td>
    <td><table border='0' cellspacing='10'><tr><td> \(c_1\) </td></tr>
                                           <tr><td> \(c_2\) </td></table></td>
    <td> \(\biggr\rbrack\) </td>
   </tr></table>",
  tex_format => "\left\lbrack\begin{array}{rr} 
                      %s & %s \\ %s & %s 
                 \end{array}\right\rbrack \  
                 \left\lbrack\begin{array}{r} 
                      c_1 \\ c_2 
                 \end{array}\right\rbrack",
  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = (0,0);
      if ($c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) && 
          $c[2]->typeMatch($s[2]) && $c[3]->typeMatch($s[3])) {
        if ((($s[0] != 0) || ($s[2] != 0)) && 
            (Formula("$A11*$s[0] + $A12*$s[2]") == Formula("$det*$s[0]")->D('t')) &&
            (Formula("$A21*$s[0] + $A22*$s[2]") == Formula("$det*$s[2]")->D('t')) ) {
          $score[0] = 1;
        } 
        if ((($s[1] != 0) || ($s[3] != 0)) && 
            (Formula("$A11*$s[1] + $A12*$s[3]") == Formula("$det*$s[1]")->D('t')) &&
            (Formula("$A21*$s[1] + $A22*$s[3]") == Formula("$det*$s[3]")->D('t')) &&
            ($s[1]*$s[2] != $s[0]*$s[3]) ) {
           $score[1] = 1;
        }
      }
      return (($score[0] == 1) && ($score[1] == 1)) ? 1 : 0;
  }
);

$multiansC = MultiAnswer($y1, $y2)->with(
  singleResult => 1,
  allowBlankAnswers => 0,
  checkTypes => 1,
  format => "<table border='0'>
         <tr><td style='text-align:left'>\(x(t) = \) %s </td></tr> 
         <tr><td style='text-align:left'>\(y(t) = \) %s </td></tr> </table>",
  tex_format => "\begin{array}{l} x(t) = %s \\ y(t) = %s\end{array}",
  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @S = @{$student};
      my @c = ($P11, $P12, $P21, $P22);      
      my @score = (0, 0);
      if ($c[0]->typeMatch($S[0]) && $c[1]->typeMatch($S[1])) {  
        $S[0] = Formula("$S[0] + c1c2");  $S[1] = Formula("$S[1] + c1c2");
        my @s = ($S[0]->substitute(c1=>1,c2=>0),$S[0]->substitute(c1=>0,c2=>1),
                 $S[1]->substitute(c1=>1,c2=>0),$S[1]->substitute(c1=>0,c2=>1));
        if ((($s[0] != 0) || ($s[2] != 0)) && 
            (Formula("$A11*$s[0] + $A12*$s[2]") == Formula("$det*$s[0]")->D('t')) &&
            (Formula("$A21*$s[0] + $A22*$s[2]") == Formula("$det*$s[2]")->D('t')) ) {
           $score[0] = 1;
         } 
         if ((($s[1] != 0) || ($s[3] != 0)) && 
            (Formula("$A11*$s[1] + $A12*$s[3]") == Formula("$det*$s[1]")->D('t')) &&
            (Formula("$A21*$s[1] + $A22*$s[3]") == Formula("$det*$s[3]")->D('t')) &&
            ($s[1]*$s[2] != $s[0]*$s[3]) ) {
           $score[1] = 1;
         }
      }
      return (($score[0] == 1) && ($score[1] == 1)) ? 1 : 0;
  }
);

Context()->texStrings;

$v11 = $multiansA->ans_rule(2); $v12 = $multiansA->ans_rule(2);
if ($displayMode eq 'TeX') {
  $exp1 =
  "\( \displaystyle  e^{" .  $multiansA->ans_rule(2) . "t}\)";
} else {
  $exp1 =
    ColumnTable(
     "\( \displaystyle e\)",
     $multiansA->ans_rule(2)."\(t\)".$BR.$BR,
     indent => 0, separation => 0, valign => "BOTTOM"
    );
} 

$v21 = $multiansA->ans_rule(2); $v22 = $multiansA->ans_rule(2);
$v31 = $multiansA->ans_rule(2); $v32 = $multiansA->ans_rule(2);
if ($displayMode eq 'TeX') {
  $exp2 =
  "\( \displaystyle  e^{" .  $multiansA->ans_rule(2) . "t}\)";
} else {
 $exp2 =
    ColumnTable(
     "\( \displaystyle e\)",
     $multiansA->ans_rule(2)."\(t\)".$BR.$BR,
     indent => 0, separation => 0, valign => "BOTTOM"
    );
}
Context()->normalStrings;

######################
#  Main text

Context()->texStrings;
BEGIN_TEXT
Suppose that the matrix \(\mathrm{A}\) has repeated eigenvalue with the 
following eigenvector and generalized eigenvector:
$BR
$SPACE $SPACE \(\lambda = $l\) with eigenvector
  \( \displaystyle\boldsymbol{\vec{v}} = 
    \left\lbrack
    \begin{array}{r}
     $v[0]  \\
     $v[1]  
    \end{array}
  \right\rbrack \)
and generalized eigenvector
  \( \displaystyle\boldsymbol{\vec{w}} = 
    \left\lbrack
    \begin{array}{r}
     $w[0]  \\
     $w[1]  
    \end{array}
  \right\rbrack. \)
$PAR
Write the solution to the linear system 
  \(\boldsymbol{\vec{r}\,'} = \mathrm{A}\boldsymbol{\vec{r}}\)
in the following forms.

$BR
$PAR
$BR

$BBOLD A.$EBOLD
 In eigenvalue/eigenvector form:
$BR
\{ mbox(
 "\(\qquad \displaystyle \biggl\lbrack\begin{array}{c} x(t) \\ y(t)\end{array}\biggr\rbrack = c_1 \)",
  display_matrix([
  [$v11],[$v12] 
  ], align=>'c'),
  $exp1,
  "\( \ + \ c_2 \Biggl(\)",
  display_matrix([
  [$v21],[$v22] 
  ], align=>'c'),
  "\(\ +\ \)",
  display_matrix([
  [$v31],[$v32] 
  ], align=>'c'),
  "\(t \Biggr)\)",
  $exp2
); \}

$BR
$PAR
$BR

$BBOLD B.$EBOLD
 In fundamental matrix form: 
$BR
\{ mbox(
 "\(\qquad \displaystyle \biggl\lbrack\begin{array}{c} x(t) \\ y(t)\end{array}\biggr\rbrack = \)",
 display_matrix([
 [$multiansB->ans_rule(10),$multiansB->ans_rule(10)],
 [$multiansB->ans_rule(10),$multiansB->ans_rule(10)]
 ], align=>'cc'),
 "\( \displaystyle
    \left\lbrack
    \begin{array}{r}
     c_1  \\
     c_2 
    \end{array}
  \right\rbrack \)"
); \}

$BR
$PAR
$BR

$BBOLD C.$EBOLD
 As two equations: $BITALIC (write "c1" and "c2" for \(c_1\) and \(c_2\) ) $EITALIC
$BR
\{ mbox(
 "\(\qquad x(t) = \)", $multiansC->ans_rule(30) 
); \}
$BR
\{ mbox(
 "\(\qquad y(t) = \)", $multiansC->ans_rule(30) 
); \}


$BR
$PAR
$BR

$BBOLD Note:$EBOLD if you are feeling adventurous you could use other
eigenvectors like \(4\,\boldsymbol{\vec{v}}\) and other generalized
eigenvectors like \(\boldsymbol{\vec{w}}-3\,\boldsymbol{\vec{v}}\).
$BR
Just remember that if you change \(\boldsymbol{\vec{v}}\), you must
also change \(\boldsymbol{\vec{w}}\) for its fundamental solution!


  
END_TEXT
Context()->normalStrings;


######################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $multiansA->cmp() );
ANS( $multiansB->cmp() );
ANS( $multiansC->cmp() );

COMMENT("MathObject version. Repeated Eigenvalues, Generalized Eigenvectors");

ENDDOCUMENT();

