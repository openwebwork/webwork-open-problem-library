## DESCRIPTION
## Systems of ODEs: Nonhomogeneous Systems
## ENDDESCRIPTION


## DBsubject(Differential equations)
## DBchapter(Systems of differential equations)
## DBsection(Nonhomogeneous systems)
## Date(24/11/2015)
## Institution(METU-NCC)
## Author(Benjamin Walter)
## Level(4)
## Static(0)
## MO(1)


##################################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGmatrixmacros.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "answerHints.pl",
);


TEXT(beginproblem());

#####################################
#  Setup

Context("Numeric");
Context()->variables->are(
   t=>"Real",
);
Context()->flags->set(
   zeroLevel=>0.001,
   limits=>[0,2],
   zeroLevelTol=>0.001
);



# 1) choose eigenvalues a,bc for matrix of form
#    [ 0 -ac  ]     [ 0   ac  ]
#    [ b a+bc ]  or [ -b a+bc ]
#
# 2) phase shift to get 
#    [ p   -ac   ]
#    [ b  a+bc+p ]
#
#  eigenvalues (a+p) and (bc+p)
#  eigenvectors [c -1] and [a -b]

my $a, $b, $c, $phase, $neg, $min, $max, $l1, $l2, $v11, $v12, $v21, $v22;

$a = non_zero_random(-5,5,1); 
$c = random(1,3,1);
do { $b = non_zero_random(-5,5,1); } until (($b*$c != $a) and (abs($b*$c) < 10));

$neg = non_zero_random(-1,1,1);

$min = max(-5,-5-$a,-5-$b*$c);  $max = min(5,5-$a,5-$b*$c);
do { $phase = non_zero_random($min,$max,1); } 
until ((abs($a+$b*$c+$phase) < 10) and 
       ($a != -$phase) and 
       ($b*$c != -$phase));

$A11 =  $phase;  $A12 =  -$neg*$a*$c;              # Matrix
$A21 = $neg*$b;  $A22 =  $a+$b*$c+$phase;

$l1 = Real("$a+$phase"); $l2 = Real("$b*$c+$phase");  # eigenvalues

$v11 = Real("$c");       $v12 = Real("$a");           # eigenvectors
$v21 = Real("-$neg");    $v22 = Real("-$neg*$b");

#############################
# setup forcing functions

$a = (random(0,1)) ? $l1 : $l2;
do {$b = non_zero_random(-5,5,1); } until (($b != $l1) && ($b != $l2));

if (random(0,1)) {
  $c = $a; $a = $b; $b = $c;
}

$g1 = Formula("e^{$a t}")->reduce;
$g2 = Formula("e^{$b t}")->reduce;

#############################
# answer evaluators

my $P11, $P12, $P21, $P22;

$P11 = Formula("$v11 e^($l1 t)")->reduce;  $P12 = Formula("$v12 e^($l2 t)")->reduce;
$P21 = Formula("$v21 e^($l1 t)")->reduce;  $P22 = Formula("$v22 e^($l2 t)")->reduce;
 

# A -- Fundamental Matrix, Psi

my $Spsi11, $Spsi12, $Spsi21, $Spsi22, $sDet;

$Spsi11 = Formula("");  $Spsi12 = Formula(""); # Keep track of inverse of 
$Spsi21 = Formula("");  $Spsi22 = Formula(""); # student's version of Psi
$sDet = Formula("");

$multiansA = MultiAnswer($P11, $P12, $P21, $P22)->with(
  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0'><tr>
    <td> \( \boldsymbol{\Psi} = \biggl\lbrack \)</td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s $SPACE </td><td> $SPACE %s</td></tr>
           <tr><td> %s $SPACE </td><td> $SPACE %s</td></tr></table></td>
    <td> \(\biggr\rbrack\)</td>
   </tr></table>",
  tex_format => "\boldsymbol{\Psi} = 
                 \left\lbrack\begin{array}{rr}
                      %s & %s \\ %s & %s
                 \end{array}\right\rbrack",
  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = (0,0);
      my $msg = "";
      if ($c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) &&
          $c[2]->typeMatch($s[2]) && $c[3]->typeMatch($s[3])) {
        if (((Formula("$s[0]") != Formula("0")) || 
             (Formula("$s[2]") != Formula("0"))) &&
            (Formula("$A11*$s[0] + $A12*$s[2]") == Formula("$s[0]")->D('t')) &&
            (Formula("$A21*$s[0] + $A22*$s[2]") == Formula("$s[2]")->D('t')) ) {
          $score[0] = 1;
        } else {
          $msg = "First fundamental solution is incorrect!$BR";
        } if (((Formula("$s[1]") != Formula("0")) || 
               (Formula("$s[3]") != Formula("0"))) &&
            (Formula("$A11*$s[1] + $A12*$s[3]") == Formula("$s[1]")->D('t')) &&
            (Formula("$A21*$s[1] + $A22*$s[3]") == Formula("$s[3]")->D('t')) ) { 
          $score[1] = 1;
        } else {
          $msg = $msg . "Second fundamental solution is incorrect!$BR";
        } 
        $sDet = Formula("$s[0]*$s[3]-$s[1]*$s[2]");
        if (Formula("$s[0]*$s[3]") == Formula("$s[1]*$s[2]")) {
          $msg = $msg . "Fundamental solutions not independent!"; 
        } else {
          $Spsi11 = Formula("$s[3]")->reduce; $Spsi12 = Formula("-$s[1]")->reduce;
          $Spsi21 = Formula("-$s[2]")->reduce;$Spsi22 = Formula("$s[0]")->reduce;
          if ($score[0]*$score[1] == 1) { return 1; }
          else { Value::Error($msg); }
        }
      }
      if (length($msg) > 1) { Value::Error($msg); }
      return 0;
  }
);

# B -- Phi inverse

my $Pdet, $Pi11, $Pi12, $Pi21, $Pi22;

$Pdet = Formula("$v11*$v22 - $v12*$v21");

$Pi11 = Formula("($v22/$Pdet)*e^(-$l1*t)")->reduce;  $Pi12 = Formula("-($v12/$Pdet)*e^(-$l1*t)")->reduce; 
$Pi21 = Formula("-($v21/$Pdet)*e^(-$l2*t)")->reduce; $Pi22 = Formula("($v11/$Pdet)*e^(-$l2*t)")->reduce;

$multiansB = MultiAnswer($Pi11, $Pi12, $Pi21, $Pi22)->with(
  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format => "<table border='0'><tr>
    <td> \( \boldsymbol{\Psi}^{\mathrm{-}1} \ = \ \biggl\lbrack \)</td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s $SPACE </td><td> $SPACE %s</td></tr>
           <tr><td> %s $SPACE </td><td> $SPACE %s</td></tr></table></td>
    <td> \(\biggr\rbrack\)</td>
   </tr></table>",
  tex_format => "\boldsymbol{\Psi}^{\mathrm{-}1} = \left\lbrack\begin{array}{rr}
                      %s & %s \\ %s & %s
                 \end{array}\right\rbrack",
  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      if ($c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) &&
          $c[2]->typeMatch($s[2]) && $c[3]->typeMatch($s[3])) {
        if ((Formula("$s[0]*$sDet") == Formula("$Spsi11")) &&
            (Formula("$s[1]*$sDet") == Formula("$Spsi12")) && 
            (Formula("$s[2]*$sDet") == Formula("$Spsi21")) &&
            (Formula("$s[3]*$sDet") == Formula("$Spsi22"))) {
          return 1;
        }
      }
      return 0;
  }
);

# C -- integral of Phi inverse g

my $iPig11, $iPig12, $iPig21, $iPig22, $iPig1, $iPig2;

$iPig11 = ($a == $l1) ? Formula("t") : Formula("1/($a-$l1) e^{($a-$l1)t}");
$iPig12 = ($b == $l1) ? Formula("t") : Formula("1/($b-$l1) e^{($b-$l1)t}");
$iPig21 = ($a == $l2) ? Formula("t") : Formula("1/($a-$l2) e^{($a-$l2)t}");
$iPig22 = ($b == $l2) ? Formula("t") : Formula("1/($b-$l2) e^{($b-$l2)t}");

$iPig1 = Formula("( $v22*$iPig11 - $v12*$iPig12)/$Pdet")->reduce;
$iPig2 = Formula("(-$v21*$iPig21 + $v11*$iPig22)/$Pdet")->reduce;

$multiansC = MultiAnswer($iPig1, $iPig2)->with(
  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0'><tr>
    <td> \( \biggl\lbrack\)</td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s </td></tr>
           <tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack\)</td>
   </tr></table>",
  tex_format => "\left\lbrack\begin{array}{r}
                      %s \\ %s 
                 \end{array}\right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      if ($c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) &&
          ($Spsi11 != Formula("")) && ($Spsi12 != Formula("")) &&
          ($Spsi21 != Formula("")) && ($Spsi22 != Formula("")) ) {
        my @dS = ( Formula("$s[0]")->D('t'), Formula("$s[1]")->D('t'));
        if ((Formula("$Spsi11*$g1 + $Spsi12*$g2") == Formula("$dS[0]*$sDet")) &&
            (Formula("$Spsi21*$g1 + $Spsi22*$g2") == Formula("$dS[1]*$sDet"))){ 
          return 1;
        }
      }
      return 0;
  }
);

# D -- solution to nonhomogeneous system

my $yP1 = Formula("$P11*$iPig1 + $P12*$iPig2")->reduce;
my $yP2 = Formula("$P21*$iPig1 + $P22*$iPig2")->reduce;

$multiansD = MultiAnswer($P11, $P21, $P12, $P22, $yP1, $yP2)->with(
  singleResult => 1,
  allowBlankAnswers => 1,
  checkTypes => 0,
  format =>  "<table border='0'><tr>
    <td> \( \boldsymbol{\vec{y}} = 
         \biggl\lbrack \)</td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s </td></tr>
           <tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack c_1 + \biggl\lbrack\) </td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s </td></tr>
           <tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack c_2 + \biggl\lbrack\) </td>
    <td><table border='0' cellspacing='10'>
           <tr><td> %s </td></tr>
           <tr><td> %s </td></tr></table></td>
    <td> \(\biggr\rbrack \) </td>
   </tr></table>",
  tex_format => "\boldsymbol{\vec{y}} = 
                \left\lbrack\begin{array}{r} 
                      %s \\ %s
                 \end{array}\right\rbrack 
                 c_1 + 
                 \left\lbrack\begin{array}{r} 
                      %s \\ %s
                 \end{array}\right\rbrack 
                 c_2 + 
                 \left\lbrack\begin{array}{r} 
                      %s \\ %s
                 \end{array}\right\rbrack",

  checker => sub {
      my ( $correct, $student, $answerHash ) = @_;
      my @c = @{$correct};
      my @s = @{$student};
      my @score = (0,0);
      if ($c[0]->typeMatch($s[0]) && $c[1]->typeMatch($s[1]) &&
          $c[2]->typeMatch($s[2]) && $c[3]->typeMatch($s[3])) {
        if ((($s[0] != 0) || ($s[1] != 0)) &&
            (Formula("$A11*$s[0] + $A12*$s[1]") == Formula("$s[0]")->D('t')) &&
            (Formula("$A21*$s[0] + $A22*$s[1]") == Formula("$s[1]")->D('t')) ) {
          $score[0] = 1;
        } else {
          Value::Error("Homogeneous solution is incorrect!");
        } if ((($s[2] != 0) || ($s[3] != 0)) &&
            (Formula("$A11*$s[2] + $A12*$s[3]") == Formula("$s[2]")->D('t')) &&
            (Formula("$A21*$s[2] + $A22*$s[3]") == Formula("$s[3]")->D('t')) &&
            ($s[0]*$s[3] != $s[1]*$s[2]) ) {
          $score[1] = 1;
        } else {
          Value::Error("Homogeneous solution is incorrect!");
        }
      }
      if ($c[4]->typeMatch($s[4]) && $c[5]->typeMatch($s[5])) {
        if ((Formula("$A11*$s[4] + $A12*$s[5] + $g1") == Formula("$s[4]")->D('t')) &&
            (Formula("$A21*$s[4] + $A22*$s[5] + $g2") == Formula("$s[5]")->D('t'))) {
          return (($score[0] == 1) && ($score[1] == 1)) ? 1 : 0;
        } else {
          Value::Error("Particular solution is incorrect!");
        }
      }
      return 0;
    }
);



#####################################
#  Main text

Context()->texStrings;
BEGIN_TEXT
In this problem you will solve the nonhomogeneous system
\[
\boldsymbol{\vec{y}\,'}\  = \ 
 \left\lbrack
   \begin{array}{rr}
    $A11 & $A12 \\
    $A21 & $A22
   \end{array}
 \right\rbrack \,
\boldsymbol{\vec{y}}
\ + \ 
 \left\lbrack
   \begin{array}{r}
    $g1 \\ $g2
   \end{array}
 \right\rbrack\]

$PAR
$HR
$PAR

$BBOLD A. $EBOLD
Write a fundamental matrix for the associated homogeneous system
$BR
\{ mbox( [ 
'\( \boldsymbol{\Psi}\ =\ \) ',
display_matrix(
   [[$multiansA->ans_rule(5), $multiansA->ans_rule(5)],
    [$multiansA->ans_rule(5), $multiansA->ans_rule(5)]])
] ) \}

$PAR

$BBOLD B. $EBOLD
Compute the inverse
$BR
\{ mbox( [ 
'\( \boldsymbol{\Psi}^{\mathrm{-}1}\ =\ \) ',
display_matrix(
   [[$multiansB->ans_rule(10), $multiansB->ans_rule(10)],
    [$multiansB->ans_rule(10), $multiansB->ans_rule(10)]])
] ) \}


$PAR

$BBOLD C. $EBOLD
Multiply by \(\boldsymbol{\vec{g}}\) and integrate
$BR

\{ mbox( [ 
'\(\displaystyle  \int \boldsymbol{\Psi}^{\mathrm{-}1}\; \boldsymbol{\vec{g}}\; dt\ =\ \) ',
display_matrix(
   [[$multiansC->ans_rule(30), '\(+ c_1\)'],
    [$multiansC->ans_rule(30), '\(+ c_2\)']])
] ) \}

(Do not include \(c_1\) and \(c_2\) in your answers).

$PAR

$BBOLD D. $EBOLD
Give the solution to the system
$BR
\{ mbox( [ 
'\(\displaystyle \boldsymbol{\vec{y}}\ =\ \) ',
display_matrix(
   [[$multiansD->ans_rule(5)],
    [$multiansD->ans_rule(5)]]),
'\( c_1 + \)',
display_matrix(
   [[$multiansD->ans_rule(5)],
    [$multiansD->ans_rule(5)]]),
'\( c_2 \)'
]) \}
$BR
\{ mbox([
'\(\phantom{y = } \quad + \)',
display_matrix(
   [[$multiansD->ans_rule(65)],
    [$multiansD->ans_rule(65)]])
] ) \}

(Do not include \(c_1\) and \(c_2\) in your answers).

END_TEXT

$showHint = 2;

BEGIN_TEXT
$HR
$PAR
If you don't get this in $showHint tries, you can get a hint.
END_TEXT

BEGIN_HINT
$PAR
$SPACE $SPACE \(\bullet\) The matrix 
    \(\left\lbrack
      \begin{array}{rr}
       $A11 & $A12 \\
       $A21 & $A22
      \end{array}
    \right\rbrack\) 
  has
   \($l1\)-eigenvector 
    \(\left\lbrack
      \begin{array}{r}
       $v11 \\ $v21
      \end{array}
    \right\rbrack\)
  and
   \($l2\)-eigenvector
    \(\left\lbrack
      \begin{array}{r}
       $v12 \\ $v22
      \end{array}
    \right\rbrack\).
$PAR
$SPACE $SPACE \(\bullet\) This problem has been carefully designed so that
 integration by parts is not needed.
END_HINT

Context()->normalStrings;

#####################################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $multiansA->cmp() );
ANS( $multiansB->cmp() );
ANS( $multiansC->cmp() );
ANS( $multiansD->cmp() );

COMMENT('MathObject version.  Randomized with DISTINCT REAL integer eigenvalues.');

ENDDOCUMENT(); 
