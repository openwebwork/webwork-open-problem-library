## DESCRIPTION
## Compute the algebraic and geometric multiplicities of an eigenvalue of a 4x4 matrix.
##   All coefficients and eigenvalues will be small real integers. There will be at least 2 distinct eigenvalues.
##   The matrix will be quite simple with lots of zeros to make its eigenvalues and eigenspaces easier to compute.
##   The 6 possible answers (alg,geo) = (1,1), (2,1), (3,1), (2,2), (3,2), or (3,3) are chosen with roughly equal probability.
## ENDDESCRIPTION

## DBsubject('Linear algebra')
## DBchapter('Eigenvalues and eigenvectors')
## DBsection('Computing eigenvalues and eigenvectors')
## Date('March 22, 2020')
## Author('Nathaniel Johnston')
## Institution('Mount Allison University')
## TitleText1('Introduction to Linear and Matrix Algebra')
## EditionText1('1')
## AuthorText1('Nathaniel Johnston')
## Section1('3.3: Eigenvalues and Eigenvectors')
## Problem1('')
## KEYWORDS('linear algebra','matrix','eigenvalue','algebraic multiplicity','geometric multiplicity')
## http://www.njohnston.ca/publications/introduction-to-linear-and-matrix-algebra/

##############################################################
#  Initialization
##############################################################

DOCUMENT();      

loadMacros(
    "PGstandard.pl",
    "MathObjects.pl",
);

TEXT(beginproblem());

##############################################################
#  Problem Setup
##############################################################

Context('Matrix');

do {
    $flg = random(1,5);
    if($flg == 1) {
        $P = Matrix([[1, 0,-1, 0],[0, 1, 0, 0],[3, 0,-2, 0],[-3, 0, 4, 1]]);
        $PI = Matrix([[-2,-0, 1, 0],[0, 1, 0,0],[-3, 0, 1, 0],[6, 0,-1, 1]]);
    } elsif($flg == 2) {
        $P = Matrix([[-2,1,0,1],[0, 0, 1, 0],[1, 0, 0,-3],[-3, 1, 0, 3]]);
        $PI = Matrix([[3, 0,-2,-3],[6, 0,-3,-5],[0, 1, 0, 0],[1, 0,-1,-1]]);
    } elsif($flg == 3) {
        $P = Matrix([[0,-1, 1, 3],[0,-1, 1, 2],[1, 0, 0, 0],[0, 3,-2,-5]]);
        $PI = Matrix([[0, 0, 1,0],[1, 1, 0, 1],[-1, 4, 0, 1],[1,-1, 0, 0]]);
    } elsif($flg == 4) {
        $P = Matrix([[0,0,3,1],[1,0,0,0],[0,1,3,0],[0,0,-5,-2]]);
        $PI = Matrix([[0,1,0,0],[-6, 0, 1,-3],[2, 0, 0, 1],[-5, 0, 0,-3]]);
    } else {
        $P = Matrix([[0, 0, 1, 0],[-3, 1, 0,-2],[-1, 1, 0, 3],[-2, 1, 0, 0]]);
        $PI = Matrix([[0,-3,-2, 5],[0,-6,-4,11],[1, 0, 0, 0],[0, 1, 1,-2]]);
    }
    
    $flg = random(1,6);
    if($flg == 1) {
        do {
            $eig1 = random(-4,5);
            $eig2 = random(-4,5);
            $eig3 = random(-4,5);
            $eig4 = random(-4,5);
            
            $D = Matrix([[$eig1,0,0,0],[0,$eig2,0,0],[0,0,$eig3,0],[0,0,0,$eig4]]);
            
            $A = $P * $D * $PI;
        } until ($eig1 != $eig2 && $eig1 != $eig3 && $eig2 != $eig3 && $eig1 != $eig4 && $eig2 != $eig4 && $eig3 != $eig4);
        
        $flgb = random(1,4);
        if($flgb == 1){
            $eg = $eig1;
        } elsif($flgb == 2) {
            $eg = $eig2;
        } elsif($flgb == 3) {
            $eg = $eig3;
        } else {
            $eg = $eig4;
        }
        $ans1 = 1;
        $ans2 = 1;
    } elsif($flg == 2) {
        do {
            $eig1 = random(-4,5);
            $eig2 = random(-4,5);
            $eig3 = random(-4,5);
            
            $D = Matrix([[$eig1,1,0,0],[0,$eig1,0,0],[0,0,$eig2,0],[0,0,0,$eig3]]);
            
            $A = $P * $D * $PI;
        } until ($eig1 != $eig2 && $eig1 != $eig3);
        
        $eg = $eig1;
        $ans1 = 2;
        $ans2 = 1;
    } elsif($flg == 3) {
        do {
            $eig1 = random(-4,5);
            $eig2 = random(-4,5);
            
            $D = Matrix([[$eig1,1,0,0],[0,$eig1,1,0],[0,0,$eig1,0],[0,0,0,$eig2]]);
            
            $A = $P * $D * $PI;
        } until ($eig1 != $eig2);
        
        $eg = $eig1;
        $ans1 = 3;
        $ans2 = 1;
    } elsif($flg == 4) {
        do {
            $eig1 = random(-4,5);
            $eig2 = random(-4,5);
            $eig3 = random(-4,5);
            
            $D = Matrix([[$eig1,0,0,0],[0,$eig1,0,0],[0,0,$eig2,0],[0,0,0,$eig3]]);
            
            $A = $P * $D * $PI;
        } until ($eig1 != $eig2 && $eig1 != $eig3);
        
        $eg = $eig1;
        $ans1 = 2;
        $ans2 = 2;
    } elsif($flg == 5) {
        do {
            $eig1 = random(-4,5);
            $eig2 = random(-4,5);
            
            $D = Matrix([[$eig1,1,0,0],[0,$eig1,0,0],[0,0,$eig1,0],[0,0,0,$eig2]]);
            
            $A = $P * $D * $PI;
        } until ($eig1 != $eig2);
        
        $eg = $eig1;
        $ans1 = 3;
        $ans2 = 2;
    } else {
        do {
            $eig1 = random(-4,5);
            $eig2 = random(-4,5);
            
            $D = Matrix([[$eig1,0,0,0],[0,$eig1,0,0],[0,0,$eig1,0],[0,0,0,$eig2]]);
            
            $A = $P * $D * $PI;
        } until ($eig1 != $eig2);
        
        $eg = $eig1;
        $ans1 = 3;
        $ans2 = 3;
    }
} until ($A->norm_one < 25);

##############################################################
#  Text
##############################################################

Context()->texStrings;
BEGIN_TEXT
Compute the algebraic and geometric multiplicity of the eigenvalue \( $eg \) of the matrix \( \displaystyle $A \).
$BR
$BR
Algebraic multiplicity: \{ ans_rule(3) \}
$BR
Geometric multiplicity: \{ ans_rule(3) \}
END_TEXT
Context()->normalStrings;

##############################################################
#  Answers and Solutions
##############################################################

$showPartialCorrectAnswers = 1;

ANS( std_num_cmp($ans1) );
ANS( std_num_cmp($ans2) );

ENDDOCUMENT();
