## DESCRIPTION
## Determine the rank and nullity of a 3x3 matrix.
##   The matrix and its RREF both have small integer entries.
##   Generates a rank-1, 2, or 3 matrix with equal probability. Never produces the 0 matrix.
## ENDDESCRIPTION

## DBsubject('Linear algebra')
## DBchapter('Matrices')
## DBsection('Rank')
## Date('February 2, 2020')
## Author('Nathaniel Johnston')
## Institution('Mount Allison University')
## TitleText1('Introduction to Linear and Matrix Algebra')
## EditionText1('1')
## AuthorText1('Nathaniel Johnston')
## Section1('2.4: Bases and Rank')
## Problem1('')
## KEYWORDS('matrix','rank','nullity')
## http://www.njohnston.ca/publications/introduction-to-linear-and-matrix-algebra/

##############################################################
#  Initialization
##############################################################

DOCUMENT();      

loadMacros(
    "PGstandard.pl",
    "MathObjects.pl",
    "contextFraction.pl",
);

TEXT(beginproblem());

##############################################################
#  Problem Setup
##############################################################

Context("Matrix");

$flg = random(1,3);

if($flg == 1){
    do {
        $c1 = random(-2,3);
        $c2 = random(-2,3);
        $c3 = random(-2,3);
        $c4 = random(-2,3);
        $c5 = random(-2,3);
        $c6 = random(-2,3);
        $c7 = random(-2,3);
        $c8 = random(-2,3);
        $c9 = random(-2,3);
        $C = Matrix([[$c1,$c2,$c3],[$c4,$c5,$c6],[$c7,$c8,$c9]]);
        
        $R = Matrix([[1,0,0],[0,1,0],[0,0,1]]);
        
        $A = $C * $R;
        $ans1 = 3;
    } until (abs($C->det) > 0.1);
}elsif($flg == 2){
    do {
        $c1 = random(-2,3);
        $c2 = random(-2,3);
        $c3 = random(-2,3);
        $c4 = random(-2,3);
        $c5 = random(-2,3);
        $c6 = random(-2,3);
        $c7 = random(-2,3);
        $c8 = random(-2,3);
        $c9 = random(-2,3);
        $C = Matrix([[$c1,$c2,$c3],[$c4,$c5,$c6],[$c7,$c8,$c9]]);
        
        $r1 = random(-2,4);
        $r2 = random(-2,4);
        $R = Matrix([[1,0,$r1],[0,1,$r2],[0,0,0]]);
        
        $A = $C * $R;
        $ans1 = 2;
    } until (abs($C->det) > 0.1);
}else{
    do {
        $c1 = random(-2,3);
        $c2 = random(-2,3);
        $c3 = random(-2,3);
        $c4 = random(-2,3);
        $c5 = random(-2,3);
        $c6 = random(-2,3);
        $c7 = random(-2,3);
        $c8 = random(-2,3);
        $c9 = random(-2,3);
        $C = Matrix([[$c1,$c2,$c3],[$c4,$c5,$c6],[$c7,$c8,$c9]]);
        
        $r1 = random(-2,4);
        $r2 = random(-2,4);
        $R = Matrix([[1,$r1,$r2],[0,0,0],[0,0,0]]);
        
        $A = $C * $R;
        $ans1 = 1;
    } until (abs($C->det) > 0.1);
}
$ans2 = 3 - $ans1;

##############################################################
#  Text
##############################################################

Context()->texStrings;
BEGIN_TEXT
Compute the rank and nullity of the matrix \( \displaystyle $A \).
$BR
$BR
Rank: \{ ans_rule(3) \}
$BR
Nullity: \{ ans_rule(3) \}
END_TEXT
Context()->normalStrings;

##############################################################
#  Answers and Solutions
##############################################################

$showPartialCorrectAnswers = 1;

ANS(std_num_cmp($ans1));
ANS(std_num_cmp($ans2));

ENDDOCUMENT();
