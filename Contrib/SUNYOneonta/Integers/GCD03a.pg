## DESCRIPTION
## Formula answer template
## ENDDESCRIPTION
## DBsubject(WeBWorK)
## DBchapter(Consumer_Math)
## DBsection(Fort Lewis tutorial 2011)
## Date(04/05/2018)
## Institution(SUNY Oneonta)
## Author(Christopher Smith)
## MO(1)
## KEYWORDS('gcd','lcm','prime factorization')


###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",

  "parserMultiAnswer.pl",
  "scaffold.pl",
  "PGcourse.pl",
  "niceTables.pl",
  "PGML.pl",
  #"contextArbitraryString.pl",
);

TEXT(beginproblem());

###########################
#  Setup

Context("Complex"); # Used for decimals

# Use unique formula for prime factorization
$a1 = random(1, 4);
$b1 = random(1, 4);
$c1 = random(1, 2);
$Num01 = (2**$a1)*(3**$b1)*(13**$c1); # First number made of 2s, 3s, and 13s

$a2 = random(1, 4);
$b2 = random(1, 4);
$c2 = random(1, 2);
$Num02 = (2**$a2)*(3**$b2)*(13**$c2); # First number made of 2s, 3s, and 13s

while ($Num01 == $Num02)
{
    $a2 = random(1, 4);
    $b2 = random(1, 4);
    $c2 = random(0, 4);
    $Num02 = (2**$a2)*(3**$b2)*(13**$c2); # Ensure that each num is unique
}

#$PrimeFact01 = List(2); # List all positive factors of Num01, min value 2; only used for list format answers

if($a1 >= $a2) # Bigger var factors into lcm, lower num factors into gcd
{
    $aGCD = $a2;
    $aLCM = $a1;
}
else # a2 must be greater than a1
{
    $aGCD = $a1;
    $aLCM = $a2;
}

if($b1 >= $b2) # Bigger var factors into lcm, lower num factors into gcd
{
    $bGCD = $b2;
    $bLCM = $b1;
}
else # b2 must be greater than b1
{
    $bGCD = $b1;
    $bLCM = $b2;
}

if($c1 >= $c2) # Bigger var factors into lcm, lower num factors into gcd
{
    $cGCD = $c2;
    $cLCM = $c1;
}
else # c2 must be greater than c1
{
    $cGCD = $c1;
    $cLCM = $c2;
}

$GCD = (2**$aGCD)*(3**$bGCD)*(13**$cGCD); # GCD number made of smaller multiples

$LCM = (2**$aLCM)*(3**$bLCM)*(13**$cLCM); # LCM number made of larger multiples

# Find the least common multiple of the two series
#$LCM = ($Num01 * $Num02) / $GCD; # This is it

###########################
#  Main text

Context()->texStrings;
BEGIN_PGML
[@ $PAR @]*
Consider the numbers [$Num01] and [$Num02].
[@ $PAR @]*
END_PGML


###########################################
#  The scaffold
Scaffold::Begin();

###########################################
Section::Begin("Part 1: Prime Factorization");

BEGIN_PGML
[@ $PAR @]*
The prime factorization of each of these numbers is of the form: [`2^{a} \cdot 3^{b} \cdot 13^{c}`]
If a number does not appear in the prime factorization, enter 0.
[@ $PAR @]*
Find the prime factorization of [$Num01]: [`{a}`] = [__]{$a1} [`{b}`] = [__]{$b1} [`{c}`] = [__]{$c1}
[@ $PAR @]*
Find the prime factorization of [$Num02]: [`{a}`] = [__]{$a2} [`{b}`] = [__]{$b2} [`{c}`] = [__]{$c2}
[@ $PAR @]*
END_PGML

Section::End();

###########################################
Section::Begin("Part 2: Greatest Common Divisor");

BEGIN_PGML
[@ $PAR @]*
Find the GCD of [$Num01] and [$Num02]. [______]{$GCD}
[@ $PAR @]*
END_PGML

Section::End();

###########################################
Section::Begin("Part 3: Least Common Multiple");

BEGIN_PGML
[@ $PAR @]*
Find the LCM of [$Num01] and [$Num02]. [______]{$LCM}
[@ $PAR @]*
END_PGML

Section::End();

Scaffold::End();

Context()->normalStrings;
#\{ helpLink("numbers") \} Use this in texStrings to allows students to see formulas

############################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

#ANS( $PrimeFact01->cmp(showHints =>0, showLengthHints =>0));
#ANS( $PrimeFact02->cmp(showHints =>0, showLengthHints =>0));
#ANS(Compute($GCD)->cmp());
#ANS(Compute($LCM)->cmp());


############################
#  Solution

Context()->texStrings;
#BEGIN_SOLUTION

#< = 10, V = 1, $strAns
#END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();