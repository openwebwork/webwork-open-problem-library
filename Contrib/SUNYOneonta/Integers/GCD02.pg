#Description
#Math for Elementary Education
#End Description

# DBsubject(Divisibility)
# DBchapter(Number Theory)
# DBsection(GCDs and LCMs)
# Date(4/24/22)
# Institution(SUNY Oneonta)
# Level(2)
# KEYWORDS('gcd','lcm','prime factorization')

###################################

#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",

  "PGcourse.pl",
  "niceTables.pl",
  #"contextArbitraryString.pl",
);

TEXT(beginproblem());


###########################
#  Setup

Context("Complex"); # Used for decimals

$GCD = list_random(3, 9); # GCD is predetermined
$a = random(0,3);
$b = random(1,3);
$c = list_random(0,1);

$Num01 = $GCD * (3**$b); # First number 10-50
$Num02 = $GCD * (2**$a) * (5**$c); # First number 10-50

$PosFactors01 = List(1); # List all positive factors of Num01
for($i = 2; $i < ($Num01/2); $i++) # After halfway point, only duplicates await for $Num01 positive factors
{
    if($Num01 % $i == 0) # Check to see if value is factor of $Num01
    {
        $tempA = List($i);
        $tempB = List(($Num01/$i));

        if($tempB > $tempA) # Second value read should be greater than first value recorded
        {
            $PosFactors01 = $PosFactors01 + $tempA;
            $PosFactors01 = $PosFactors01 + $tempB;
        }
        elsif($tempB == $tempA) # Root of Num01 was found, tempA^2 = Num01
        {
            $PosFactors01 = $PosFactors01 + $tempA;
        }

    } # End of if statement for Num01 factors

} # End of Num01 for Loop
$tempA = List($Num01);
$PosFactors01 = $PosFactors01 + $tempA; # Order of student answer doesn't matter, only that all right answers are used

$PosFactors02 = List(1); # List all positive factors of Num01
for($i = 2; $i < ($Num02/2); $i++) # After halfway point, only duplicates await for $Num01 positive factors
{
    if($Num02 % $i == 0) # Check to see if value is factor of $Num01
    {
        $tempA = List($i);
        $tempB = List(($Num02/$i));

        if($tempB > $tempA) # Second value read should be greater than first value recorded
        {
            $PosFactors02 = $PosFactors02 + $tempA;
            $PosFactors02 = $PosFactors02 + $tempB;
        }
        elsif($tempB == $tempA) # Root of Num01 was found, tempA^2 = Num01
        {
            $PosFactors02 = $PosFactors02 + $tempA;
        }

    } # End of if statement for Num01 factors

} # End of Num01 for Loop
$tempA = List($Num02);
$PosFactors02 = $PosFactors02 + $tempA; # Order of student answer doesn't matter, only that all right answers are used



# Find first 10 multiples of Num01
$Mult01 = List($Num01); # First multiple x1 is itself
for($i = 2; $i <= 10; $i++) # Run through multiples 2-10 of the Num, starting at 2
{
    $tempA = List($Num01*$i);
    $Mult01 = $Mult01 + $tempA;
}

# Find first 10 multiples of Num02
$Mult02 = List($Num02); # First multiple x1 is itself
for($i = 2; $i <= 10; $i++) # Run through multiples 2-10 of the Num, starting at 2
{
    $tempA = List($Num02*$i);
    $Mult02 = $Mult02 + $tempA;
}

# Find the least common multiple of the two series
$LCM = ($Num01 * $Num02) / $GCD; # This is it

###########################
#  Main text

Context()->texStrings;
BEGIN_TEXT
$PAR
Consider the numbers $Num01 and $Num02.
$BR
When answering with multiple numbers, use a comma to separate each value. Ex. 1,2,3
$BR
$BR
$BBOLD Part A: $EBOLD
$BR
List all of the positive factors of $Num01: \{ ans_rule(30) \}
$BR
$BR
$BBOLD Part B: $EBOLD
$BR
List all of the positive factors of $Num02: \{ ans_rule(30) \}
$BR
$BR
$BBOLD Part C: $EBOLD
$BR
Find the greatest common divisor of $Num01 and $Num02: \{ ans_rule(4) \}
$BR
$BR
$BBOLD Part D: $EBOLD
$BR
List the first 10 multiples of $Num01: \{ ans_rule(60) \}
$BR
$BR
$BBOLD Part E: $EBOLD
$BR
List the first 10 multiples of $Num02: \{ ans_rule(60) \}
$BR
$BR
$BBOLD Part F: $EBOLD
$BR
Find the least common multiple of $Num01 and $Num02: \{ ans_rule(5) \}
$BR
$BR
$BBOLD Note: $EBOLD The list of multiples you found may not be sufficient to determine the LCM.
$BR You may need to compute additional multiples to complete the last part of the problem.
$BR

END_TEXT
Context()->normalStrings;
#\{ helpLink("numbers") \} Use this in texStrings to allows students to see formulas

############################
#  Answer evaluation

$showPartialCorrectAnswers = 1;

ANS( $PosFactors01->cmp(showHints =>0, showLengthHints =>0));
ANS( $PosFactors02->cmp(showHints =>0, showLengthHints =>0));
ANS(Compute($GCD)->cmp());
ANS(Compute($Mult01)->cmp(showHints =>0, showLengthHints =>0));
ANS(Compute($Mult02)->cmp(showHints =>0, showLengthHints =>0));
ANS(Compute($LCM)->cmp());


############################
#  Solution

Context()->texStrings;
#BEGIN_SOLUTION

#< = 10, V = 1, $strAns
#END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();