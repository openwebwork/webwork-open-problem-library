## DESCRIPTION
## Formula answer template
## ENDDESCRIPTION
## DBsubject(WeBWorK)
## DBchapter(Consumer_Math)
## DBsection(Fort Lewis tutorial 2011)
## Date(04/5/2018)
## Institution(SUNY Oneonta)
## Author(Christopher Smith)
## MO(1)
## KEYWORDS('gcd','lcm')


###########################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGML.pl",
  "MathObjects.pl",

  "parserMultiAnswer.pl",
  "scaffold.pl",
  "PGcourse.pl",
  "niceTables.pl",
  #"contextArbitraryString.pl",
);

TEXT(beginproblem());


###########################
#  Setup

Context("Complex"); # Used for decimals
$Num01 = random(10, 50); # First number 10-50
$Num02 = random(10, 50); # First number 10-50
while ($Num01 == $Num02)
{
    $Num02 = random(10, 50); # Ensure that each num is unique
}

$PosFactors01 = List(1); # List all positive factors of Num01
for($i = 2; $i < ($Num01/2); $i++) # After halfway point, only duplicates await for $Num01 positive factors
{
    if($Num01 % $i == 0) # Check to see if value is factor of $Num01
    {
        $tempA = List($i);
        $tempB = List(($Num01/$i));

        if($tempB > $tempA) # Second value read should be greater than first value recorded
        {
            $PosFactors01 = $PosFactors01 + $tempA;
            $PosFactors01 = $PosFactors01 + $tempB;
        }
        elsif($tempB == $tempA) # Root of Num01 was found, tempA^2 = Num01
        {
            $PosFactors01 = $PosFactors01 + $tempA;
        }

    } # End of if statement for Num01 factors

} # End of Num01 for Loop
$tempA = List($Num01);
$PosFactors01 = $PosFactors01 + $tempA; # Order of student answer doesn't matter, only that all right answers are used

$PosFactors02 = List(1); # List all positive factors of Num01
for($i = 2; $i < ($Num02/2); $i++) # After halfway point, only duplicates await for $Num01 positive factors
{
    if($Num02 % $i == 0) # Check to see if value is factor of $Num01
    {
        $tempA = List($i);
        $tempB = List(($Num02/$i));

        if($tempB > $tempA) # Second value read should be greater than first value recorded
        {
            $PosFactors02 = $PosFactors02 + $tempA;
            $PosFactors02 = $PosFactors02 + $tempB;
        }
        elsif($tempB == $tempA) # Root of Num01 was found, tempA^2 = Num01
        {
            $PosFactors02 = $PosFactors02 + $tempA;
        }

    } # End of if statement for Num01 factors

} # End of Num01 for Loop
$tempA = List($Num02);
$PosFactors02 = $PosFactors02 + $tempA; # Order of student answer doesn't matter, only that all right answers are used

$GCD = 1; # Solve for Greatest common divisor between Num01 and Num02
if($Num01 >= $Num02)
{
    for($i = 1; $i <= $Num02; $i++) # Run through each value of the lower Num, starting at 1
    {
        if($Num01 % $i == 0 && $Num02 % $i == 0) # Both Nums have a common divisor!
        {
            $GCD = $i;
        }
    }
}
else # Num02 Must be greater than Num01
{
    for($i = 1; $i <= $Num01; $i++) # Run through each value of the lower Num, starting at 1
    {
        if($Num01 % $i == 0 && $Num02 % $i == 0) # Both Nums have a common divisor!
        {
            $GCD = $i;
        }
    }
}

# Find first 10 multiples of Num01
$Mult01 = List($Num01); # First multiple x1 is itself
for($i = 2; $i <= 10; $i++) # Run through multiples 2-10 of the Num, starting at 2
{
    $tempA = List($Num01*$i);
    $Mult01 = $Mult01 + $tempA;
}

# Find first 10 multiples of Num02
$Mult02 = List($Num02); # First multiple x1 is itself
for($i = 2; $i <= 10; $i++) # Run through multiples 2-10 of the Num, starting at 2
{
    $tempA = List($Num02*$i);
    $Mult02 = $Mult02 + $tempA;
}

# Find the least common multiple of the two series
$LCM = ($Num01 * $Num02) / $GCD; # This is it

###########################
#  Main text

BEGIN_PGML
[@ $PAR @]*
Consider the numbers [$Num01] and [$Num02].
[@ $PAR @]*
When answering with multiple numbers, use a comma to separate each value. Ex. 1,2,3
[@ $PAR @]*
END_PGML

Scaffold::Begin();

###########################################
Section::Begin("Part 1: Positive Factors");

BEGIN_PGML
[@ $PAR @]*
 List all of the positive factors of [$Num01]: [____________________________]{$PosFactors01}
[@ $PAR @]*
 List all of the positive factors of [$Num02]: [____________________________]{$PosFactors02}
[@ $PAR @]*
END_PGML

Section::End();

###########################################
Section::Begin("Part 2: Greatest Common Divisor");

BEGIN_PGML
[@ $PAR @]*
 Find the GCD of [$Num01] and [$Num02]. [______]{$GCD}
[@ $PAR @]*
END_PGML

Section::End();

###########################################
Section::Begin("Part 3: Multiples");

BEGIN_PGML
[@ $PAR @]*
 List the first 10 multiples of [$Num01]: [________________________________________________]{$Mult01}
[@ $PAR @]*
 List the first 10 multiples of [$Num02]: [________________________________________________]{$Mult02}
[@ $PAR @]*
END_PGML

Section::End();

###########################################
Section::Begin("Part 4: Least Common Multiple");

BEGIN_PGML
[@ $PAR @]*
 Find the LCM of [$Num01] and [$Num02]. [______]{$LCM}
[@ $PAR @]*
END_PGML
BEGIN_TEXT
$BBOLD Note: $EBOLD The list of multiples you found may not be sufficient to determine the LCM.
$BR You may need to compute additional multiples to complete the last part of the problem.
$BR
END_TEXT

Section::End();

Scaffold::End();

Context()->normalStrings;
#\{ helpLink("numbers") \} Use this in texStrings to allows students to see formulas

############################
#  Answer evaluation

$showPartialCorrectAnswers = 0;

#Normal pg answers
#ANS( $PosFactors01->cmp(showHints =>0, showLengthHints =>0));
#ANS( $PosFactors02->cmp(showHints =>0, showLengthHints =>0));
#ANS(Compute($GCD)->cmp());
#ANS(Compute($Mult01)->cmp(showHints =>0, showLengthHints =>0));
#ANS(Compute($Mult02)->cmp(showHints =>0, showLengthHints =>0));
#ANS(Compute($LCM)->cmp());


############################
#  Solution

Context()->texStrings;
#BEGIN_SOLUTION

#< = 10, V = 1, $strAns
#END_SOLUTION
Context()->normalStrings;

ENDDOCUMENT();