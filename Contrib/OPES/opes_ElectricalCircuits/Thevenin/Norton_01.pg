# DESCRIPTION
# Norton_01
# Find the Norton Equivalent for a circuit
# WeBWorK problem written by Paul Hummel
# phummel at latech dot edu
# Louisiana Tech University
# OPES Project
# ENDDESCRIPTION

## DBsubject('Electrical Engineering and Circuits')
## DBchapter('Thevenin Equivalent')
## DBsection('Norton')
## KEYWORDS('Thevenin Equivalent','Norton')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Paul Hummel')
## Institution('Louisiana Tech')

# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 3.0 Unported License.


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"extraAnswerEvaluators.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl"
);

$showPartialCorrectAnswers = 1;

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$R1 = random(10,30,1);
$R2 = random(10,30,1);
$V1 = non_zero_random(-20,20,1);
$V2 = non_zero_random(-20,20,1);
$Is = non_zero_random(-5,5,1);

#
# Calculate Answer
#

$Ia = -($Is * $R2 - $V1 + $V2) / $R2;
$Req = $R1 * $R2 / ($R1 + $R2);
$Ib = ($Is * $R1 + $V1 - $V2) / $R1;


BEGIN_TEXT

$PAR
In the circuit below, V1 = $V1 V, V2 = $V2 V, Is = $Is A, R1 = \($R1 \Omega\), and R2 = \($R2 \Omega\). 
$BR
Find the Norton equivalent (assuming current source \(i_s\) has the arrow pointing up):
$BR (a) between terminals $BITALIC a $EITALIC and $BITALIC b $EITALIC with  terminal $BITALIC c $EITALIC removed. (Assume $BITALIC a $EITALIC is on top)
$BR (b) between terminals $BITALIC b $EITALIC and $BITALIC c $EITALIC with terminal $BITALIC a $EITALIC removed. (Assume $BITALIC b $EITALIC is on top)

$BR
$PAR
\{ image("Norton_01.png", width=>414, height=>287, tex_size=>800) \}
$PAR

$BR  
(a) \(i_s\) = \{ ans_rule(10)\} A $SPACE \(R_s\) = \{ans_rule(10)\} \(\Omega\)
$PAR
(b) \(i_s\) = \{ ans_rule(10)\} A $SPACE \(R_s\) = \{ans_rule(10)\} \(\Omega\)

END_TEXT


#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($Ia));
ANS(num_cmp($Req));
ANS(num_cmp($Ib));
ANS(num_cmp($Req));


ENDDOCUMENT();        # This should be the last executable line in the problem.


