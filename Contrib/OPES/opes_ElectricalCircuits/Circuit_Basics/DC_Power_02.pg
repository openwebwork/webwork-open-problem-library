##DESCRIPTION
## Using voltage and current to determine if power is absorbed or supplied
##ENDDESCRIPTION
## DBsubject(Electrical Engineering and Circuits)
## DBchapter(Circuit Basics)
## DBsection(DC Power)
## Institution(Louisiana Tech University)
## Author(Paul Hummel)
## KEYWORDS('Circuit Basics','DC Power','Power')
## RESOURCES('DC_Power_02.png')

# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 3.0 Unported License.

DOCUMENT();        

loadMacros(
  "PG.pl",
  "PGbasicmacros.pl",
  "PGchoicemacros.pl",
  "PGanswermacros.pl"
);

## Do NOT show partial correct answers for multiple choice
$showPartialCorrectAnswers = 0;

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

## Make a new checkbox multiple choice object
$checkbox_mc = new_checkbox_multiple_choice();

## Random option changing source values
$Option1 = random(0,1,1);

## Random option changing problem statement between absorbed and supplied
## 0 = Absorbed, 1 = Supplied
$Option2 = random(0,1,1);

if ($Option1 == 0)
{
  $V1 = random(5,15,0.5);  

  $V3 = random($V1,30,0.5);
  
  $V2 = $V1 - $V3;

  $V6 = random($V3,50,0.5);

  $V5 = $V6 - $V3;

  do {
    $I2 = random(1,5,0.5);
    $I6 = random(-1,-5,0.5);
    $I3 = random(-1,-5,0.5);
    $I4 = $I2 + $I6 + $I3;
  } until ( $I4 < 0 );

  if ($Option2 == 0)
  {
    ## Insert a question, and all correct answers
    $checkbox_mc -> qa("Which of the DC sources above are absorbing power?", V3,  i6);

    ## Insert some bogus answers
    $checkbox_mc -> extra(V1, i2, V5, i4);
  }
  else
  {
    ## Insert a question, and all correct answers
    $checkbox_mc -> qa("Which of the DC sources above are supplying power?", V1, i2, V5, i4);

    ## Insert some bogus answers
    $checkbox_mc -> extra(V3, i6);

  }
}
else
{
  $V1 = random(-5,-15,0.5);  

  $V3 = random($V1,-30,0.5);
  
  $V2 = $V1 - $V3;

  $V6 = random(5,15,0.5);

  $V5 = $V6 - $V3;

  do {
    $I2 = random(1,5,0.5);
    $I6 = random(-1,-5,0.5);
    $I3 = random(-1,-5,0.5);
    $I4 = $I2 + $I6 + $I3;
  } until ( $I4 > 0 );

  if ($Option2 == 0)
  {
    ## Insert a question, and all correct answers
    $checkbox_mc -> qa("Which of the DC sources above are absorbing power?", V1, i2, i6);

    ## Insert some bogus answers
    $checkbox_mc -> extra(V3, i4, V5);
  }
  else
  {
    ## Insert a question, and all correct answers
    $checkbox_mc -> qa("Which of the DC sources above are supplying power?", V3, i4, V5);

    ## Insert some bogus answers
    $checkbox_mc -> extra(V1, i2, i6);
  }

}

## Insert some answers which will always be at the end of the list
$checkbox_mc -> makeLast("All of the above", "None of the above");

BEGIN_TEXT

$PAR
In the circuit below:

$BR
V1 = $V1 V, $SPACE V2 = $V2 V, $SPACE V3 = $V3 V, $SPACE V5 = $V5 V, $SPACE and $SPACE V6 = $V6 V.  

$BR
i2 = $I2 A, $SPACE i3 = $I3 A, $SPACE i4 = $I4 A, $SPACE and $SPACE i6 = $I6 A.

$BR
$PAR

\{ image("DC_Power_02.png", width=>450, height=>232, tex_size=>1000) \}

$BR
\{ $checkbox_mc -> print_q \}
$BR
\{ $checkbox_mc -> print_a \}

END_TEXT

#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS( checkbox_cmp( $checkbox_mc -> correct_ans ));

ENDDOCUMENT();        # This should be the last executable line in the problem.