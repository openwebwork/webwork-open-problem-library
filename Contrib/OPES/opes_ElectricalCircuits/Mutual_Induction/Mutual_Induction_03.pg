# DESCRIPTION
# Mutual_Induction_03
# Calculate AC Voltages with mutual inductance factors
# WeBWorK problem written by Paul Hummel
# phummel at latech dot edu
# Louisiana Tech University
# OPES Project
# ENDDESCRIPTION

## DBsubject('Electrical Engineering and Circuits')
## DBchapter('Mutual Induction')
## DBsection('Mutual Induction')
## KEYWORDS('AC','Mutual Induction','AC Steady State','Frequency Domain')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Paul Hummel')
## Institution('Louisiana Tech')

# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 3.0 Unported License.


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"extraAnswerEvaluators.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl"
);

$showPartialCorrectAnswers = 1;

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$Isp = random(200,500,20);
$Isa = random(-170,170,10);

$C1 = random(700,950,10);

$L1 = random(200,500,10);
$L2 = random(200,500,10);
$M = random(20,120,5);

$Isp = 40;
$Isa = 75;

$C1 = 300;

$L1 = 400;
$L2 = 250;
$M = 80;


# Use random number to decide the orientation of the mutual induction dots

$A1 = random(0,1);
$A2 = random(0,1);

# Calculate answer

if ($A1 > 0)
 {
  $String1 = "a and b";
   }
else
 {
  $String1 = "c and d";
 }

if ($A2 > 0)
 {
  $String2 = "a and d";
 }
else
 {
  $String2 = "c and b";
 }


#
# Calculate Solutions
#

# Because of the dot configurations, either convention (a,c) or (b,d) will
# result in the same answer. The same is true for (a,d) or (c,b).

Context("Complex");  #use complex numbers

$Is = Complex($Isp*cos($Isa*pi/180)/1000, $Isp*sin($Isa*pi/180)/1000);

# Calculate VX1 (Same with either dot convention)
$VX1 = (-100*($M*i-250)*$Is) / ($L2*i+350);

$VX1p = abs($VX1);
$VX1a = arg($VX1);

$VX1a = $VX1a * 180/pi;

if ($VX1a > 180)
{
  $VX1a = $VX1a - 180;
}

if ($VX1a < -180)
{
  $VX1a = $VX1a + 180;
}


# Calculate VX2 (Same with either dot convention)
$VX2 = (100*($M*i+250)*$Is) / ($L2*i+350);

$VX2p = abs($VX2);
$VX2a = arg($VX2);

# Split the complex number into polar parts
$VX2p = abs($VX2);
$VX2a = arg($VX2)*180/pi;

if ($VX2a > 180)
{
  $VX2a = $VX2a - 180;
}

if ($VX2a < -180)
{
  $VX2a = $VX2a + 180;
}


BEGIN_TEXT

$PAR
In the figure below Is = \( ($Isp \angle $Isa ) \) mA, C1 = -j$C1 \(\Omega\), L1 = j$L1 \(\Omega\), L2 = j$L2 \(\Omega\), and M = j$M \(\Omega\)
$PAR

$Va Find \(V_x\) if $Vb
$BR(a) dots are located at $String1
$BR(b) dots are located at $String2

$PAR
$BR
\{ image("Mutual_Induction_03.png", width=>500, height=>518, tex_size=>700) \}
$BR
$PAR  

(a) \(V_{x}\) = \{ ans_rule(10)\} \(\angle\) \{ ans_rule(10)\} V
$PAR  
(b) \(V_{x}\) = \{ ans_rule(10)\} \(\angle\) \{ ans_rule(10)\} V

END_TEXT

#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($VX1p));
ANS(num_cmp($VX1a));

ANS(num_cmp($VX2p));
ANS(num_cmp($VX2a));

ENDDOCUMENT();        # This should be the last executable line in the problem.