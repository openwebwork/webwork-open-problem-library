# DESCRIPTION
# Capacitor_Graph_01
# Calculating energy, power, and current of a capacitor from a voltage graph
# WeBWorK problem written by Paul Hummel
# phummel at latech dot edu
# Louisiana Tech University
# OPES Project
# ENDDESCRIPTION

## DBsubject('Electrical Engineering and Circuits')
## DBchapter('Capacitors and Inductors')
## DBsection('Capacitance')
## KEYWORDS('Capacitance','Power','Energy','Graph','Capacitor')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Paul Hummel')
## Institution('Louisiana Tech')

# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 3.0 Unported License.


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"extraAnswerEvaluators.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl",
"PGgraphmacros.pl"
);

$refreshCachedImages = 1;        # refresh cache for images, needed for graphs
$showPartialCorrectAnswers = 1;  # show which part of answer is correct

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$C = random(20,150,2);
$V1 = random(10,15,0.1);
$T1 = random(3,7,0.1);
$V2 = random(-12,-8,0.1);
$T2 = random(7,10,0.1);
$T3 = random(3,7,0.1);
$TT = $T1 + $T2 + $T3;
$TM = (2*$T1 + $T2)/2;

#
# Calculate solution
#

$I1 = $C * 10**-9 * ($V1/$T1);
$I2 = $C * 10**-9 * ($V2-$V1)/$T2;
$P1 = $C *10**-9 * $V2*10**-3 * ($V2-$V1)/$T2;
$P2 = $C *10**-9 * $V2*10**-3 * (-$V2/$T3);
$W1 = 1/2 * $C *10**-9 * ($V1*10**-3)**2;
$W2 = 0;

#
# Create Graph
#

$GT2 = $T1 + $T2;

# Create a graph object
$GraphObj = init_graph(-1.5,$V2-1,$TT+1,$V1+1,axes=>[0,0],size=>[600,400]);

# Reset labels
$GraphObj -> lb('reset');

# Label the horizontal (time) axis
$GraphObj -> lb( new Label($TT/2,$V2,"Time (ms)",'black','center','middle'));
$GraphObj -> h_ticks(0,"black",$T1,$GT2,$TT);
$GraphObj -> lb( new Label($T1,-0.5,"$T1",'black','center','middle'));
$GraphObj -> lb( new Label($GT2,-0.5,"$GT2",'black','center','middle'));
$GraphObj -> lb( new Label($TT,0.5,"$TT",'black','center','middle'));

# Label the vertical (voltage) axis
$GraphObj -> lb( new Label(-0.8,$V1-1,"V",'black','left','middle'));
$GraphObj -> lb( new Label(-0.8,$V1-2,"o",'black','left','middle'));
$GraphObj -> lb( new Label(-0.8,$V1-3,"l",'black','left','middle'));
$GraphObj -> lb( new Label(-0.8,$V1-4,"t",'black','left','middle'));
$GraphObj -> lb( new Label(-0.8,$V1-5,"a",'black','left','middle'));
$GraphObj -> lb( new Label(-0.8,$V1-6,"g",'black','left','middle'));
$GraphObj -> lb( new Label(-0.8,$V1-7,"e",'black','left','middle'));
$GraphObj -> lb( new Label(-1.1,$V1-9,"(mV)",'black','left','middle'));
$GraphObj -> v_ticks(0,"black",$V2,$V1);
$GraphObj -> lb( new Label(0.75,$V1,"$V1",'black','center','middle'));
$GraphObj -> lb( new Label(1,$V2,"$V2",'black','center','middle'));

# Draw graph with lines
$GraphObj -> moveTo(0,0);
$GraphObj -> lineTo($T1,$V1,'blue',2);
$GraphObj -> lineTo($GT2,$V2,'blue',2);
$GraphObj -> lineTo($TT,0,'blue',2);
$GraphObj -> lineTo($TT+1,0,'blue',2);

BEGIN_TEXT
$PAR
Given a $C nF capacitor with the voltage shown in the graph below (units are mV and ms), find:
$BR (a) \(i($T1^{-})\)
$BR (b) \(i($T1^{+})\)
$BR (c) \(p($GT2^{-})\)
$BR (d) \(p($GT2^{+})\)
$BR (e) \(w($T1)\)
$BR (f) \(w($TM)\)

$BR
$PAR
\{ image( insertGraph($GraphObj), width=>600, height=>400, tex_size=>900 ) \}
$PAR
$BR

$PAR (a) \(i($T1^{-})\) = \{ ans_rule(10)\} A
$PAR (b) \(i($T1^{+})\) = \{ ans_rule(10)\} A
$PAR (c) \(p($GT2^{-})\) = \{ ans_rule(10)\} W
$PAR (d) \(p($GT2^{+})\) = \{ ans_rule(10)\} W
$PAR (e) \(w($T1)\) = \{ ans_rule(10)\} J
$PAR (f) \(w($TM)\) = \{ ans_rule(10)\} J
 
END_TEXT


#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($I1));
ANS(num_cmp($I2));
ANS(num_cmp($P1));
ANS(num_cmp($P2));
ANS(num_cmp($W1));
ANS(num_cmp($W2));


ENDDOCUMENT();        # This should be the last executable line in the problem.