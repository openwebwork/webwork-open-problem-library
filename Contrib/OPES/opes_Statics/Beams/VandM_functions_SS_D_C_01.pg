# DESCRIPTION
# VandM_functions_SS_D_C_01
# Find functions for shearing forces and bending moments in different intervals
# of a beam.
# WeBWorK problem written by Michael Swanbom (26 August 2013)
# mswanbom at latech dot edu
# Louisiana Tech University
# OPES Project
# ENDDESCRIPTION

## DBsubject('Statics_and_Mechanics_of_Materials')
## DBchapter('Beams')
## DBsection('Shear_and_Bending_Moment_Functions')
## KEYWORDS('simply supported', 'moment', 'shear', 'beam', 'function', 'bending', 'SIunits')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Michael Swanbom')
## Institution('Louisiana Tech')
## RESOURCES('VandM_functions_SS_D_C_01.png')

# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 3.0 Unported License.

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"extraAnswerEvaluators.pl",
"PGauxiliaryFunctions.pl",
"PGasu.pl"
);

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$a = random(3,5,.1);
$b = random(1,2.9,.1);
$c = random(1,2.9,.1);
$w = random(10,15,.1);
$F1 = random(16,20,.1);

$ab = $a + $b;
$ac = $a + $b + $c;

$RD = ($F1*($b+$a) + $w*$a*(0.5*$a))/($b + $c + $a);
$RA = $F1 + $w*$a - $RD;

$Vx1 = "$RA - $w * x";
$Mx1 = "$RA * x - $w * x * (x/2)";
$Vx2 = "$RA - $w * $a";
$Mx2 = "$RA * x - $w * $a * (x - $a / 2)";
$Vx3 = "$RA - $F1 - $a * $w";
$Mx3 = "$RA * x - $w * $a * (x - $a / 2) - $F1 * (x - $a - $b)";


BEGIN_TEXT
VandM functions SS D C 01
$PAR
\{ image("VandM_functions_SS_D_C_01.png", width=>449, height=>121, tex_size=>600) \}
$PAR
Loads of F = $F1 kN and w = $w kN/m are applied to the beam shown.  $PAR
The dimensions on the figure are a = $a m, b = $b m, and c = $c m. $PAR
Develop expressions that describe the shearing forces and bending moments in the beam as functions of x.
$PAR
$BBOLD$BITALIC Reactions: $EBOLD$EITALIC$BR
\(R_A\) = \{ans_rule(10)\} $BR
\(R_D\) = \{ans_rule(10)\} $BR
$BITALIC include units with your answers for reactions $EITALIC
$PAR
$BBOLD$BITALIC Functions: $EBOLD$EITALIC$BR
Interval  0 < x < $a m: $BR
V(x) = \{ ans_rule(20)\} kN  and M(x) = \{ ans_rule(20)\} kN*m $PAR
Interval  $a m < x < $ab m: $BR
V(x) = \{ ans_rule(20)\} kN  and M(x) = \{ ans_rule(20)\} kN*m $PAR
Interval  $ab m < x < $ac m: $BR
V(x) = \{ ans_rule(20)\} kN  and M(x) = \{ ans_rule(20)\} kN*m $BR
$BITALIC omit units from the expressions you develop $EITALIC
END_TEXT


#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#

ANS(num_cmp($RA*1000, units=>"N"));
ANS(num_cmp($RD*1000, units=>"N"));

ANS(function_cmp( $Vx1, x, 0, $a, 2, 5));
ANS(function_cmp( $Mx1, x, 0, $a, 2, 5));
ANS(function_cmp( $Vx2, x, $a, $ab, 2, 5));
ANS(function_cmp( $Mx2, x, $a, $ab, 2, 5));
ANS(function_cmp( $Vx3, x, $ab, $ac, 2, 5));
ANS(function_cmp( $Mx3, x, $ab, $ac, 2, 5));


ENDDOCUMENT();        # This should be the last executable line in the problem.