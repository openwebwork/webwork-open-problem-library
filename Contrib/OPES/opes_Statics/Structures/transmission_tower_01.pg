# DESCRIPTION
# transmission_tower_01
# Finding forces and changes in length of members of a truss.
# WeBWorK problem written by Michael Swanbom (5 August 2013)
# mswanbom at latech dot edu
# Louisiana Tech University
# OPES Project
# ENDDESCRIPTION

## DBsubject('Statics_and_Mechanics_of_Materials')
## DBchapter('Structures')
## DBsection('Trusses')
## KEYWORDS('2D', 'MOS', 'axial', 'deformation', 'stress', 'cantilever', 'SIunits')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Michael Swanbom')
## Institution('Louisiana Tech')
## RESOURCES('transmission_tower_01.png')

# This work is licensed under a Creative Commons Attribution-NonCommercial-
# ShareAlike 3.0 Unported License.

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"extraAnswerEvaluators.pl",
"PGauxiliaryFunctions.pl",
"parserVectorUtils.pl",
"PGasu.pl"
);

TEXT(beginproblem());

#
# Now we do the randomization of variables, and other computations
# as needed for this problem.  Sometimes we compute the answers here.
#

$F = random(3,8,.5);
$F1 = random(3,8,.2);
$F2 = random(3.1,8.1,.2);
$theta = random(50,70,2);
$phi = random(21,41,2);
$a = random(1,2,.1);
$b = random(3,5,.1);
$c = random(2,3,.1);
$d = random(5,7,.1);
$h = random(8,10,.1);
$alpha = random(20,40,1);
$A1 = random(200,400,20);
$A2 = random(100,200,20);
$E = 200;
$hyp = sqrt($b**2+$d**2);

$TBC = (($F1*cos($theta*pi/180)*   $d    )+($F2*sin($phi*pi/180)* $d )
       -($F1*sin($theta*pi/180)*(2*$a+$b))+($F2*cos($phi*pi/180)*2*$a))/$b;
$TBP = ($F1*cos($theta*pi/180)+$F2*sin($phi*pi/180))*$hyp/$b;
$TPQ = -(($F1*cos($theta*pi/180)*2*$d)+($F2*sin($phi*pi/180)*  2*$d   )
        -($F1*sin($theta*pi/180)*2*$a)+($F2*cos($phi*pi/180)*(2*$a+$b)))/$b;
$TPC = 0;
$TCD = $TBC;
$TDP = -$TBP;
$TNP = (($F1*sin($theta*pi/180)*2*$a)-($F2*cos($phi*pi/180)*(2*$a+$b)))/$b;

$sigmaBC = ($TBC*1000)/($A1*(10**(-3))**2);
$sigmaBP = ($TBP*1000)/($A2*(10**(-3))**2);
$sigmaPQ = ($TPQ*1000)/($A1*(10**(-3))**2);
$sigmaPC = 0;
$sigmaCD = ($TCD*1000)/($A1*(10**(-3))**2);
$sigmaDP = ($TDP*1000)/($A2*(10**(-3))**2);
$sigmaNP = ($TNP*1000)/($A1*(10**(-3))**2);

$deltaBC = ($TBC*1000)*( $d )/(($E*10**9)*($A1*(10**(-3))**2));
$deltaBP = ($TBP*1000)*($hyp)/(($E*10**9)*($A2*(10**(-3))**2));
$deltaPQ = ($TPQ*1000)*( $d )/(($E*10**9)*($A1*(10**(-3))**2));
$deltaPC = 0;
$deltaCD = ($TCD*1000)*( $d )/(($E*10**9)*($A1*(10**(-3))**2));
$deltaDP = ($TDP*1000)*($hyp)/(($E*10**9)*($A2*(10**(-3))**2));
$deltaNP = ($TNP*1000)*( $d )/(($E*10**9)*($A1*(10**(-3))**2));

BEGIN_TEXT
transmission tower 01
$PAR
\{ image("transmission_tower_01.png", width=>306, height=>369, tex_size=>600) \}
$PAR
A truss structure is used to build the transmission tower shown with dimensions and loads shown below. Assuming the structure does not deform out-of-plane, and that none of the members buckle, find the force and stress that each member named in the table below carries and the change in length of each of those members if they are composed of structural steel. 
$PAR
\{ begintable(9) \}
\{ row("$BBOLD$BCENTER a $ECENTER$EBOLD","$BBOLD$BCENTER b $ECENTER$EBOLD",
       "$BBOLD$BCENTER c $ECENTER$EBOLD","$BBOLD$BCENTER d $ECENTER$EBOLD",
       "$BBOLD$BCENTER h $ECENTER$EBOLD","$BCENTER \(F_1\) $ECENTER",
       "$BCENTER \(\theta\) $ECENTER","$BCENTER \(F_2\) $ECENTER",
       "$BCENTER \(\phi\) $ECENTER") \}
\{ row("$SPACE $a m $SPACE","$SPACE $b m $SPACE","$SPACE $c m $SPACE",
       "$SPACE $d m $SPACE","$SPACE $h m $SPACE","$SPACE $F1 kN $SPACE",
       "$SPACE $theta deg $SPACE","$SPACE $F2 kN $SPACE",
       "$SPACE $phi deg $SPACE") \}
\{ endtable() \}
$PAR
$BBOLD$BITALIC Members: $EBOLD$EITALIC$BR
$BITALIC (Denote tension forces, tensile stresses, and elongations with positive values; compressive forces, compressive stresses and compactions with negative values.) $EITALIC $BR
\{ begintable(5) \}
\{ row("$BCENTER$BBOLD Member                       $EBOLD$ECENTER",
       "$BCENTER$BBOLD Cross- $BR Sectional $BR Area $BR
        $EBOLD \((mm^2)\) $ECENTER",
       "$BCENTER$BBOLD Force                        $EBOLD$ECENTER",
       "$BCENTER$BBOLD Stress                       $EBOLD$ECENTER",
       "$BCENTER$BBOLD Change in $BR Length         $EBOLD$ECENTER") \}
\{row("$BCENTER \(BC\) $ECENTER","$BCENTER $A1 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{row("$BCENTER \(BP\) $ECENTER","$BCENTER $A2 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{row("$BCENTER \(PQ\) $ECENTER","$BCENTER $A1 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{row("$BCENTER \(PC\) $ECENTER","$BCENTER $A2 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{row("$BCENTER \(CD\) $ECENTER","$BCENTER $A1 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{row("$BCENTER \(DP\) $ECENTER","$BCENTER $A2 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{row("$BCENTER \(NP\) $ECENTER","$BCENTER $A1 $ECENTER",
       ans_rule(10),ans_rule(10),ans_rule(10))\}
\{ endtable() \}
$PAR
$BITALIC be sure to include units with your answers $EITALIC
END_TEXT


#
# Tell WeBWork how to test if answers are right.  These should come in the
# same order as the answer blanks above.  You tell WeBWork both the type of
# "answer evaluator" to use, and the correct answer.
#
$showPartialCorrectAnswers = 1;
ANS(num_cmp($TBC*1000, units=>"N"));
ANS(num_cmp($sigmaBC, units=>"Pa"));
ANS(num_cmp($deltaBC, units=>"m"));
ANS(num_cmp($TBP*1000, units=>"N"));
ANS(num_cmp($sigmaBP, units=>"Pa"));
ANS(num_cmp($deltaBP, units=>"m"));
ANS(num_cmp($TPQ*1000, units=>"N"));
ANS(num_cmp($sigmaPQ, units=>"Pa"));
ANS(num_cmp($deltaPQ, units=>"m"));
ANS(num_cmp($TPC*1000, units=>"N"));
ANS(num_cmp($sigmaPC, units=>"Pa"));
ANS(num_cmp($deltaPC, units=>"m"));
ANS(num_cmp($TCD*1000, units=>"N"));
ANS(num_cmp($sigmaCD, units=>"Pa"));
ANS(num_cmp($deltaCD, units=>"m"));
ANS(num_cmp($TDP*1000, units=>"N"));
ANS(num_cmp($sigmaDP, units=>"Pa"));
ANS(num_cmp($deltaDP, units=>"m"));
ANS(num_cmp($TNP*1000, units=>"N"));
ANS(num_cmp($sigmaNP, units=>"Pa"));
ANS(num_cmp($deltaNP, units=>"m"));



ENDDOCUMENT();        # This should be the last executable line in the problem.
