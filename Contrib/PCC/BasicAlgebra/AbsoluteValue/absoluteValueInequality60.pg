# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Solve absolute value inequality like |2x-1|>=3
#
# Last edited by Carl Yao 08/06/2014
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Inequalities')
## KEYWORDS('linear','inequality', 'number line','absolute value','interval notation')
## DBCCSS('7.EE.4')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PGcourse.pl"
);

##############################################
TEXT(beginproblem());
$refreshCachedImages = 1;

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
#$reach is the maximum value shown on the graph.
$reach = 10;

$symbol = (random(-1,1,2)>0) ? '>' : '\geq';

do {
   $a = random(1,3,1);
   $b = random(2,4,1);
   $c = non_zero_random(-5,5,1);
   $ansLeft = -$a*$b+$c;
   $ansRight = $a*$b+$c;
} until ( ($ansLeft>= -$reach+3) && ($ansRight<=$reach-3) );

$d = $b*$c;
$e = -$b*$ansLeft+$d;

$func = Compute("-$b*x+$d")->reduce;
$right = Compute("$e");

#These are needed to show inequality symbols in dynamic images.
$symbol0Show = $symbol eq '>' ? '<' : '<=';
$symbol1Show = $symbol eq '>' ? '>' : '>=';

Context("Interval");
Context()->flags->set("formatStudentAnswer"=>'parsed');

$leftEnd = ($symbol eq ">") ? ')' : ']';
$rightEnd = ($symbol eq ">") ? '(' : '[';
$ans = Compute("(-inf, $ansLeft $leftEnd U $rightEnd $ansRight, inf)");


Context("Numeric");

$aspectRatio = 1/8;
$horPixel = 400;
$verPixel = $horPixel*$aspectRatio*1;
$screenXSize = $horPixel;
$screenYSize = $screenXSize*$aspectRatio*1;
$aboveSpace = $reach*$aspectRatio*1;
$belowSpace = $reach*$aspectRatio;
$hardCopyPercent = 400; #meaning 40%

$labelHeight = $reach*$aspectRatio/2;

$gr = init_graph(-$reach,-$belowSpace,$reach,$aboveSpace,
      axes=>[$reach+1,0],
      size=>[$horPixel,$verPixel]
);
@ticks = ();
 for my $j ((-$reach)..($reach)) {push(@ticks,$j);};

$gr->h_ticks(0,"black",@ticks);
$gr->lb( new Label(0,-$belowSpace/4,0,'black','center','top'));

$gr->lb( new Label($ansLeft,-$belowSpace/4,$ansLeft,'blue','center','top'));
$gr->lb( new Label($ansRight,-$belowSpace/4,$ansRight,'blue','center','top'));

if ($leftEnd eq ')') {
   $gr->stamps( open_circle($ansLeft,0,'blue') );
   $gr->stamps( open_circle($ansRight,0,'blue') );
} else {
   $gr->stamps( closed_circle($ansLeft,0,'blue') );
   $gr->stamps( closed_circle($ansRight,0,'blue') );
};

$gr->moveTo($ansLeft,0);
$gr->arrowTo(-0.99*$reach,0,'blue',3);
$gr->moveTo($ansRight,0);
$gr->arrowTo(0.99*$reach,0,'blue',3);

if ( ($symbol eq '>') or ($symbol eq '\geq') ) {
   $gr->lb( new Label($ansLeft,$labelHeight,"x $symbol0Show $ansLeft",'blue','right','middle'));
   $gr->lb( new Label($ansRight,$labelHeight,"x $symbol1Show $ansRight",'blue','left','middle'));
} else {
   $gr->lb( new Label(($ansLeft+$ansRight)/2,$labelHeight,"$ansLeft $symbol0Show x $symbol0Show $ansRight",'blue','center','middle'));
}

$leftEndType = ($leftEnd eq ')') ? 'open' : 'closed';
$rightEndType = ($rightEnd eq '(') ? 'open' : 'closed';

$ALT = "Graph of a number line. Two segments are shaded. The first segment starts at $ansLeft, and goes toward negative infinity, while the endpoint $ansLeft is $leftEndType. The second segment starts at $ansRight, and goes toward positive infinity, while the endpoint $ansRight is $rightEndType.";

##############################################



BEGIN_PGML

Solve this inequality, and write your answer in *interval notation*.

    [`` | [$func] | [$symbol] [$e] ``]

Please type:  

* *inf* for [`\infty`],
* *no solution* if there are no real solutions
* *U* for the union symbol [`\cup`]

    [__________________________________]{$ans}

END_PGML



##############################################

$symbolOpp = ($symbol eq '>') ? '<' : '\leq';
$s1 = -1*$e;

##############################################


BEGIN_PGML_SOLUTION

As an easier example, the solution of [` | x | [$symbol] 1 `] is:

    [`` x [$symbolOpp] -1 \text{ or } x [$symbol] 1 ``].

Similarly, we break [` | [$func] | [$symbol] [$e] `] into two pieces. The full solution is:

    [``
\begin{aligned}
   &&| [$func] | [$symbol] [$e] \\
   [$func] &[$symbolOpp] [$s1] &\text{ or } &&[$func] &[$symbol] [$e] \\
   [$func]\mathbf{{}-[$d]} &[$symbolOpp] [$s1]\mathbf{{}-[$d]} &\text{ or } &&[$func] \mathbf{{}-[$d]}&[$symbol] [$e] \mathbf{{}-[$d]}\\
   -[$b]x &[$symbolOpp] [$s1-$d] &\text{ or } &&-[$b]x &[$symbol] [$e-$d] \\
   \frac{-[$b]x}{-[$b]} &[$symbolOpp] \frac{[$s1-$d]}{-[$b]} &\text{ or } && \frac{-[$b]x}{-[$b]} &[$symbol] \frac{[$e-$d]}{-[$b]} \\
   x &[$symbol] [$ansRight] &\text{ or } && x &[$symbolOpp] [$ansLeft]
\end{aligned}
    ``]

In interval notation, the solution is [`[$ans]`]. The following graph shows the solution set.

>>[@ image( insertGraph($gr), width=>$screenXSize, height=>$screenYSize, tex_size=>$hardCopyPercent, extra_html_tags=>"alt = '$ALT' title = '$ALT' ") @]*<<

END_PGML_SOLUTION

ENDDOCUMENT();

