# WeBWorK problem written by Carl Yao
# Portland Community College
# 
# Solve absolute value inequality like 1-|2x-1|=3 with a calculator.
# There is no solution
#
# Last edited by Carl Yao 04/25/2015
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Inequalities')
## KEYWORDS('linear','absolute value','equation','calculator')
## DBCCSS('7.EE.4')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "PCCgraphMacros.pl",
  "MathObjects.pl",
  "parserAssignment.pl",
  "PGML.pl",
  "PGcourse.pl"
);

##############################################
TEXT(beginproblem());
$refreshCachedImages = 1;

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
#$reach is the maximum value shown on the graph.
$reach = 10;


   $a = random(1,3,1);
   $b = non_zero_random(-5,5,1);
   $c = non_zero_random(-5,5,1);
   $d = random(4,6,1);

$upOrDown = -1;
$func1 = Compute("$a - abs($b*x+$c)")->reduce;
$func2 = Compute("$d");

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0, formatStudentAnswer=>parsed);
                               
parser::Assignment->Allow;

Context()->operators->redefine(',',using=>',',from=>'Numeric');
    Context()->operators->redefine('or',using=>',',from=>'Numeric');
    Context()->operators->set(
      ','=>{string=>' or ',TeX=>'\hbox{ or }'},
      'or'=>{string=>' or ',TeX=>'\hbox{ or }'}
    );
    Context()->lists->set(List => {separator => " or "});

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  "no solution"=>{alias=>'no real solutions'}, 
  "no solutions"=>{alias=>'no real solutions'}, 
  );

$ans = Compute("no real solution");


Context("Numeric");

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([-6,6],[-6,6],centerOrigin=>1);

if ( ($func1->eval(x=>$min[0]) > $min[1]) && ($func1->eval(x=>$min[0]) < $max[1]) ) {
   $leftX = $min[0];
   $leftY = $func1->eval(x=>$min[0]);
} else {
   $leftX = min( (-($a-$min[1])-$c)/$b, (($a-$min[1])-$c)/$b);
   $leftY = $min[1];
}

$vertexX = -$b/$c;
$vertexY = $a;
   
if ( ($func1->eval(x=>$max[0]) > $min[1]) && ($func1->eval(x=>$max[0]) < $max[1]) ) {
   $rightX = $max[0];
   $rightY = $func1->eval(x=>$max[0]);
} else {
   $rightX = max( (-($a-$min[1])-$c)/$b, (($a-$min[1])-$c)/$b);
   $rightY = $min[1];
}


@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..0) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }

   add_functions($gr[$i], "$func1 for x in <$min[0],$max[0]> using color:blue and weight:2");
   add_functions($gr[$i], "$func2 for x in <$min[0],$max[0]> using color:red and weight:2");

   $gr[$i]->lb( new Label($leftX+0.5,$leftY+0.5,"y1=$func1",'blue','left','bottom'));
   $gr[$i]->lb( new Label($min[0]+0.5,$d+0.5,"y2=$func2",'red','left','bottom'));
}

$ALT = "The graph has two functions. The first function looks like the shape of an upside down letter V. It starts at ($leftX,$leftY), goes to the vertex ($vertexX,$vertexY), and then goes to ($rightX,$rightY). The second function is a horizontal line, y=$d.";

##############################################



BEGIN_PGML

*With a calculator*, solve this equation:

    [`` [$func1] = [$func2] ``]

* Enter multiple answers separated by commas, such as [`x=1,x=-1`]
* Please type *no solution* if there are no real solutions

    [__________________________________]{$ans}

END_PGML



##############################################

BEGIN_PGML_SOLUTION

To solve [` [$func1] = [$func2] `] by graphing, we treat [`[$func1]`] and [`[$func2]`] as two functions. We will graph both functions.

For TI-89, press Diamond, F1. Here we assign [`[$func1]`] to "y1", and [`[$func2]`] to "y2". To input the absolute value function, press 2nd, 5, right arrow, choose the second option. Or, you can simply enter letters 'a', 'b' and 's' one by one. For example, to input the letter 'a', press alpha, =.

For Casio ClassPad 330, press Menu, Graph&Tables, assign [`[$func1]`] to "y1", and [`[$func2]`] to "y2". To input the absolute value function, press Keyboard button, tap the button |x|. Or, press Keyboard button, go to the "abc" tab, and then tap 'a', 'b', 's'.

To look at the graph, press Diamond, F3 on TI-89, or tap the graph icon on Casio.

For TI-89, as you are looking at the graph, press F2, choose option 6 (ZoomStd). This resets the window to default, which is [` [-10,10] `] on both [`x`] and [`y`] axis.

For Casio ClassPad 300, as you look at the graph, tap Zoom, Quick Standard. This resets the window to default, which is [` [-10,10] `] on both [`x`] and [`y`] axis.

You should see a graph similar to this one:

>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT' title = '$ALT' ") @]*<<

Since these two functions don't intersect with each other, [` [$func1] = [$func2] `] has no solution.

END_PGML_SOLUTION

ENDDOCUMENT();

