# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Find maximum/minimum value application problem.
# Use quadratic equation to model the height of flying objects.
# Find max, min, intercepts and interpret their meaning.
#
# Last edit by: Jordan 9/10/13; Carl Yao 08/25/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Coordinates and Graphs')
## DBsection('Graphs of Equations')
## KEYWORDS('quadratic','function','parabola','application')
## DBCCSS('F.IF.7.a','F.IF.4','A-CED.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "parserNumberWithUnits.pl",
  "PGcourse.pl"
);

##############################################

TEXT(beginproblem());
$refreshCachedImages=1;
Context("Numeric");
Context()->variables->add(t => 'Real');
Context()->flags->set(showExtraParens=>0, reduceConstants=>0);
Context()->noreduce("(-x)-y","(-x)+y");
Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

$initSpeed = random(320,640,32);
$a = -16;
$b = $initSpeed;
$c = 0;

$func = Compute("$a*t**2+$b*t+$c")->reduce;
$funcX = Compute("$a*x**2+$b*x+$c")->reduce;

#for alternative display and title purposes

   $xVertex = -$b/(2*$a);
   $yVertex = $func->eval(t=>$xVertex);
   $vertex=Point($xVertex,$yVertex);
   $yIntercept=Point(0,$c);

   @temp = $vertex->value;
   $extraPointX = $temp[0]+1;
   $extraPointY = $func->eval(t=>$extraPointX);
   $extraPoint = Point($extraPointX,$extraPointY);

$tMax = $xVertex;
$hMax = $yVertex;
$tBack = 2*$xVertex;
$t1 = random(1,int($tBack-1),1);
$h1 = $func->eval(t=>$t1);
do {$t2 = random(1,int($tMax-1),1);} until ($t2!=$t1);
$t3 = 2*$tMax-$t2;
$h2 = $func->eval(t=>$t2);

$tMaxU = NumberWithUnits("$tMax s");
$hMaxU = NumberWithUnits("$hMax ft");
$tBackU = NumberWithUnits("$tBack s");
$t1U = NumberWithUnits("$t1 s");
$h1U = NumberWithUnits("$h1 ft");
$t2U = NumberWithUnits("$t2 s");
$t3U = NumberWithUnits("$t3 s");
$h2U = NumberWithUnits("$h2 ft");

# to show alternative text for graphs
@alt=();

   $alt="This picture shows the graph of a parabola. Its vertex is at $vertex, and it passes through the points (0,0), ($tBack,0), ($t1,$h1), ($t2,$h2), and ($t3,$h2).";


($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([$xVertex,0,2*$xVertex],[$yVertex,0,0]);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0,0) {
  $gr = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
    $gr->lb( new Label($max[0]-$marksep[0]/2, -$marksep[1]/8, t,'black','center','top'));
    $gr->lb( new Label($marksep[0]/8, $max[1]-$marksep[1]/2, h,'black','left','middle'));
  }

  for my $j (@yticks) {
    if (Real($j) == 0) {next;}
    $gr->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }

add_functions($gr, "$funcX for x in <$min[0],$max[0]> using color:red and weight:1");
}

##############################################

BEGIN_PGML

An object was shot up into the air at an initial vertical speed of [`[$initSpeed]`] feet per second. Its height as time passes can be modeled by the quadratic function [`f`], where [`f(t)=[$func]`]. Here [`t`] represents the number of seconds since the object's release, and [`f(t)`] represents the object's height in feet.

    1) After [____________]{$tMaxU}, this object reached its maximum height of [___________]{$hMaxU}.

    2) This object flew for [____________]{$tBackU} before it landed on the ground.

    3) This object was [____________]{$h1U} in the air [`[$t1U]`] after its release.

    4) This object was [`[$h2U]`] high at two times: once [____________]{$t2U} after its release, and again later [____________]{$t3U} after its release.

(Use *ft* for feet, and *s* for seconds.)

END_PGML

##############################################

$func1 = $func;
$func1 =~ s/t/($xVertex)/g;
$func1 =~ s/~~*//g;

$func2 = Compute("-$a*t-$b")->reduce;
$func3 = Compute("-$a*t")->reduce;

$func4 = $func;
$func4 =~ s/t/($t1)/g;
$func4 =~ s/~~*//g;

$func5 = Compute("$a*t**2+$b*t-$h2")->reduce;
$s1 = -$h2;
$s2 = -$b;
$s3 = $b**2-4*$a*$s1;
$s4 = 2*$a;
$s5 = sqrt($s3);


$gr->stamps( closed_circle($xVertex,$yVertex,'blue') );
$gr->lb( new Label($xVertex,$yVertex,"($xVertex,$yVertex)", 'blue','left','bottom'));

$gr->moveTo( $xVertex,$min[1] );
$gr->lineTo( $xVertex,$max[1],'red',1,'dashed');

$gr->stamps( closed_circle($tBack,0,'blue') );
$gr->lb( new Label($tBack,0,"($tBack,0)", 'blue','left','bottom'));

$gr->stamps( closed_circle($t1,$h1,'blue') );
$gr->lb( new Label($t1,$h1,"($t1,$h1)", 'blue','center','bottom'));

$gr->moveTo( $min[0], $h2 );
$gr->lineTo( $max[0],$h2,'red',1,'dashed');

$gr->stamps( closed_circle($t2,$h2,'blue') );
$gr->lb( new Label($t2,$h2,"($t2,$h2)", 'blue','left','top'));

$gr->stamps( closed_circle($t3,$h2,'blue') );
$gr->lb( new Label($t3,$h2,"($t3,$h2)", 'blue','left','top'));


BEGIN_PGML_SOLUTION

The function [`f`] given by the rule [`f(t)=[$func]`] is quadratic. Identify that [`a=[$a], b=[$b], c=[$c]`].

1)  Since [`a<0`], this parabola opens down. Its vertex represents the maximum height the object can go and when it got there.

To find the vertex, we first find the parabola's axis of symmetry by the axis formula:

    [`
\begin{aligned}
  t &= -\frac{b}{2a} \\
  t &= -\frac{[$b]}{2([$a])} \\
  t &=  [$xVertex]
\end{aligned}
`]

Next, we substitute [`t= [$xVertex]`] into [`f`]'s formula, and we have:

    [`
\begin{aligned}
  f(t) &=  [$func]  \\
  f([$xVertex]) &=  [$func1]  \\
  f([$xVertex]) &=  [$yVertex] 
\end{aligned}
`]

The parabola's vertex is at [`[$vertex]`]. This implies that [`[$tMaxU]`] after the release, the object reached its maximum height of [`[$hMaxU]`].

2) The parabola's [`x`]-intercepts represent the moments when the object was at a height of [`0`]: on the ground. We will solve the equation [`f(t)=0`] to find its [`x`]-intercepts. We have:

    [`
\begin{aligned}
   f(t) &= [$func] \\
   0    &= [$func] \\
   0    &= -t([$func2]) \\
   -t &= 0 & \text{or} && [$func2]&=0 \\
   t &= 0 & \text{or} && [$func3]&=[$b] \\
   t &= 0 & \text{or} && t&=[$tBack]
\end{aligned}
`]

This parabola has two [`x`]-intercepts: [`(0,0)`] and [`([$tBack],0)`]. The point [`(0,0)`] represents the moment when the object was released; the point [`([$tBack],0)`] implies the object fell back to the ground after [`[$tBackU]`].

3) To find the object's height [`[$t1]`] seconds after it was released, we substitute [`t=[$t1]`] into the fomrula for [`f`], and we have:

    [`
\begin{aligned}
   f(t)   &= [$func] \\
   f([$t1]) &= [$func4] \\
   f([$t1]) &= [$h1]
\end{aligned}
`]

This result shows that [`[$t1U]`] after the object was released, it was [`[$h1U]`] high in the air.

4) To find when the object was [`[$h2U]`] high, we solve the equation [` f(t)=[$h2]`].

    [`
\begin{aligned}
   f(t) &= [$func] \\
   [$h2] &= [$func] \\
   0   &= [$func5] 
\end{aligned}
`]

For such big numbers, it's easier to use the Quadratic Formula to solve this equation. Identify that [`a=[$a],b=[$b],c=[$s1]`]. We have:

    [`
\begin{aligned}
   t &= \frac{-b \pm \sqrt{b^{2}-4ac}}{2a} \\
   t &= \frac{-([$b]) \pm \sqrt{([$b])^{2}-4([$a])([$s1])}}{2([$a])} \\
   t &= \frac{[$s2] \pm \sqrt{[$s3]}}{[$s4]} \\
   t &= \frac{[$s2] \pm [$s5]}{[$s4]} \\
   t &= \frac{[$s2] + [$s5]}{[$s4]} & \text{or} && t=\frac{[$s2] - [$s5]}{[$s4]} \\
   t &= [$t2] & \text{or} && t=[$t3]
\end{aligned}
`]

This result shows that the object was [`[$h2U]`] high twice during its flight: once [`[$t2U]`] after it was released (on its way up), and another time [`[$t3]`] seconds after it was released (on its way down).

----

It's important to understand the role of each part of this question in the graph of [`f`].

>>[@ image( insertGraph($gr), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$alt' title = '$alt'"  )@]*<<

END_PGML_SOLUTION


ENDDOCUMENT();


