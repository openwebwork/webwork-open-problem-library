# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Use Pythagorean Theorem to find missing length in a right triangle. 
# The unknown side is a leg.
# Answers are decimals. The right angle could be at any corner.
#
# Last edited by Carl Yao on 8/8/15
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('Pythagorean','right triangle')
## DBCCSS('4.MD.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");

$xmin = 0;         #The viewing window
$xmax = 20;
$ymin = 0;
$ymax = 20;

do{
do {
   $hypotenuse = random(10,30,1);
   $height = random(5,$hypotenuse-3,1);
   $base = sqrt($hypotenuse**2-$height**2);
} until ( ($height>$base) && ($base!=int($base)) );

$ans = $base;

#$corner's value decides the location of the right angle. 
#(0,1,2,3) implies (bottom left,top left,top right,bottom right). 
$corner = list_random(0..3);

if (($corner==0)||($corner==2)) {
   @x = (($xmax-$base)/2,($xmax+$base)/2);
   @y = (($ymax-$height)/2,($ymax+$height)/2);
} else {
   @y = (($xmax-$base)/2,($xmax+$base)/2);
   @x = (($ymax-$height)/2,($ymax+$height)/2);
}

$hLeg = $x[1]-$x[0];
$vLeg = $y[1]-$y[0];
} until ($hLeg > $vLeg);

#now start over with graph sizing parameters
#adding 30 px to left/right sides (2x30 makes the 60)
#adding 20 px to top/bottom sides (2x20 makes the 40)
$xmin = 0;         #The viewing window
$xmax = 240*$hLeg/(240 - 60);
$ymin = 0;
$ymax = $vLeg + 40*$hLeg /(240 - 60);

@x = (($xmax-$hLeg)/2,($xmax+$hLeg)/2);
@y = (($ymax-$vLeg)/2,($ymax+$vLeg)/2);


$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      size=>[240,240*$ymax/$xmax]);

@labelAx = ($x[0],$x[1],$x[1],$x[0]);
@labelAy = ($y[1],$y[1],$y[0],$y[0]);
@labelATMB = ('bottom','bottom','top','top');

@labelBx = ($x[1],$x[0],$x[0],$x[1]);
@labelBy = ($y[0],$y[0],$y[1],$y[1]);
@labelBTMB = ('top','top','bottom','bottom');

@labelCx = ($x[0],$x[0],$x[1],$x[1]);
@labelCy = ($y[0],$y[1],$y[1],$y[0]);
@labelCTMB = ('top','bottom','bottom','top');

$picture->lb( new Label($labelAx[$corner], $labelAy[$corner],"A",'black','center',$labelATMB[$corner],'large'));
$picture->lb( new Label($labelBx[$corner], $labelBy[$corner],"B",'black','center',$labelBTMB[$corner],'large'));
$picture->lb( new Label($labelCx[$corner], $labelCy[$corner],"C",'black','center',$labelCTMB[$corner],'large'));

@labelBaseLCR = ('center','right','center','left');
@labelBaseTMB = ('top','middle','bottom','middle');
@labelHeightLCR = ('right','center','left','center');
@labelHeightTMB = ('middle','bottom','middle','top');
@labelHypotenuseLCR = ('left','left','right','right');
@labelHypotenuseTMB = ('bottom','top','top','bottom');

@labelBaseX=(($x[0]+$x[1])/2,$x[0],($x[0]+$x[1])/2,$x[1]);
@labelBaseY=($y[0],($y[0]+$y[1])/2,$y[1],($y[0]+$y[1])/2);
@labelHeightX=($x[0],($x[0]+$x[1])/2,$x[1],($x[0]+$x[1])/2);
@labelHeightY=(($y[0]+$y[1])/2,$y[1],($y[0]+$y[1])/2,$y[0]);
@labelHypotenuseX=(($x[0]+$x[1])/2,($x[0]+$x[1])/2,($x[0]+$x[1])/2,($x[0]+$x[1])/2);
@labelHypotenuseY=(($y[0]+$y[1])/2,($y[0]+$y[1])/2,($y[0]+$y[1])/2,($y[0]+$y[1])/2);

$picture->lb( new Label($labelBaseX[$corner], $labelBaseY[$corner],' x ','black',$labelBaseLCR[$corner],$labelBaseTMB[$corner],'large'));

$picture->lb( new Label($labelHeightX[$corner],$labelHeightY[$corner],' '.$height.' ','black',$labelHeightLCR[$corner],$labelHeightTMB[$corner],'large'));

$picture->lb( new Label($labelHypotenuseX[$corner],$labelHypotenuseY[$corner],$hypotenuse,'black',$labelHypotenuseLCR[$corner],$labelHypotenuseTMB[$corner],'large'));

$picture->new_color("lightblue", 200,200,255); # RGB
$picture->new_color("darkblue",  100,100,255); 

@ax=(0,1,1,0);
@ay=(1,1,0,0);
@bx=(1,0,0,1);
@by=(0,0,1,1);
@cx=(0,0,1,1);
@cy=(0,1,1,0);


$picture->moveTo($x[$ax[$corner]],$y[$ay[$corner]]);
$picture->lineTo($x[$bx[$corner]],$y[$by[$corner]], darkblue,3);
$picture->lineTo($x[$cx[$corner]],$y[$cy[$corner]], darkblue,3);
$picture->lineTo($x[$ax[$corner]],$y[$ay[$corner]], darkblue,3);


$cornersizeX = min($hLeg/10,$vLeg/10,1);
$cornersizeY = min($hLeg/10,$vLeg/10,1);

@rightSymbol1x=($x[0],$x[0]+$cornersizeX,$x[1]-$cornersizeX,$x[1]);
@rightSymbol1y=($y[0]+$cornersizeY,$y[1],$y[1],$y[0]+$cornersizeY);
@rightSymbol2x=($x[0]+$cornersizeX,$x[0]+$cornersizeX,$x[1]-$cornersizeX,$x[1]-$cornersizeX);
@rightSymbol2y=($y[0]+$cornersizeY,$y[1]-$cornersizeY,$y[1]-$cornersizeY,$y[0]+$cornersizeY);
@rightSymbol3x=($x[0]+$cornersizeX,$x[0],$x[1],$x[1]-$cornersizeX);
@rightSymbol3y=($y[0],$y[1]-$cornersizeY,$y[1]-$cornersizeY,$y[0]);

$picture->moveTo($rightSymbol1x[$corner],$rightSymbol1y[$corner]);
$picture->lineTo($rightSymbol2x[$corner],$rightSymbol2y[$corner], darkblue,3);
$picture->lineTo($rightSymbol3x[$corner],$rightSymbol3y[$corner], darkblue,3);

@positions=('bottom left','top left','top right','bottom right');
if ($corner==0) {
   $aPosition = $positions[1];
   $bPosition = $positions[3];
   $cPosition = $positions[0];
} elsif ($corner==1) {
   $aPosition = $positions[2];
   $bPosition = $positions[0];
   $cPosition = $positions[1];
} elsif ($corner==2) {
   $aPosition = $positions[3];
   $bPosition = $positions[1];
   $cPosition = $positions[2];
} else {
   $aPosition = $positions[0];
   $bPosition = $positions[2];
   $cPosition = $positions[3];
}

$text = "This is a right triangle. Right angle C is at the $cPosition corner of the picture. Acute angle A is at the $aPosition, and acute angle B is at the $bPosition. The length of the side facing Angle A is x (unknown); the length of the side facing Angle B is $height; the length of the side facing Angle C is $hypotenuse.";

##############################################

TEXT(beginproblem());

BEGIN_PGML

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($picture), width=>240, tex_size=>TeXscalar(), extra_html_tags=>"alt = '$text' title = '$text'") @]*<<


Find the value of [`x`], accurate to at least two decimal places.

    [` x\approx{}`][_____________]{$ans}

END_PGML

##############################################


$ansShow = sprintf "%.2f", $ans;

BEGIN_PGML_SOLUTION

By the Pythagorean Theorem, we have:

    [``
\begin{aligned}
  x^{2} + [$height]^{2} &= [$hypotenuse]^{2} \\
  x^{2} + [$height**2] &= [$hypotenuse**2] \\
  x^{2} + [$height**2] \mathbf{{}-[$height**2]} &= [$hypotenuse**2] \mathbf{{}-[$height**2]} \\
  x^{2} &= [$hypotenuse**2-$height**2] \\
  x &= \sqrt{[$hypotenuse**2-$height**2]} \\
  x &\approx [$ansShow]
\end{aligned}
    ``]

END_PGML_SOLUTION

ENDDOCUMENT();
