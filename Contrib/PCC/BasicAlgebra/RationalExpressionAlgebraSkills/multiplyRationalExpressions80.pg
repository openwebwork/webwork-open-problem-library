# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Template:
# Simplify the rational expression like (2x^2+3x-5)/(8x^2-12x) * 
#                                                         (6-4x^2)/(4x^2-25)
#
# Last updated: Carl Yao 08/14/2015
# ENDDESCRIPTION

## DBCC('A-APR.1','A-SSE.2')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents', 'Factoring')
## KEYWORDS('polynomial','multiply','factoring','simplify','rational')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextLimitedFactor.pl",
  "contextFraction.pl",
  "PGcourse.pl"
);

##############################################

Context("LimitedFactor");
Context()->noreduce('(-x)-y','(-x)+y');
$var1 = RandomVariableName(type=>'variable');
do {$var2 = RandomVariableName(type=>'variable');} until ($var1 ne $var2);
Context()->variables->are($var1=>'Real',$var2=>'Real');

$a = random(2,9,1);
do {$b = random(2,9,1);} until (gcd($a,$b)==1);
do {$c = random(2,9,1);} until ($a!=$c);
do {$d = random(2,5,1);} until (gcd($c,$d)==1);
$e = random(2,5,1);
$factor = random(2,9,1);
$f = $e*$factor;

$b = $b*random(-1,1,2);

$e1 = random(1,5,1);
$e2 = random(1,5,1);

$num1 = Formula("$a*$var1**2+($b-$a)*$var1-$b")->reduce;
$den1 = Formula("$f*$c*$var1**($e1+1)-$f*$d*$var1**$e1")->reduce;
$num1Factored = Formula("($a*$var1+$b)*($var1-1)")->reduce;
$den1Factored = Formula("$f*$var1**$e1*($c*$var1-$d)")->reduce;

$num2 = Formula("$e*$d*$var1**$e1-$e*$c*$var1**($e1+1)")->reduce;
$den2 = Formula("$a**2*$var1**2-$b*$b")->reduce;
$num2Factored = Formula("-$e*$var1**$e1*($c*$var1-$d)")->reduce;
$den2Factored = Formula("($a*$var1+$b)*($a*$var1-$b)")->reduce;

$frac1= Formula("$num1/$den1");
$frac2= Formula("$num2/$den2");
$ans = Formula(" -($var1-1)/( $factor*($a*$var1-$b) )" )->reduce;

Context("LimitedFraction")->flags->set(
            reduceFractions => 0,
            showMixedNumbers=>0,
            showExtraParens=>0);
Context()->operators->redefine(',',using=>',',from=>'Numeric');
Context()->operators->redefine('or',using=>',',from=>'Numeric');
Context()->operators->set(
  ','=>{string=>' and ',TeX=>'\hbox{ and }'},
  'or'=>{string=>' and ',TeX=>'\hbox{ and }'}
);
Context()->lists->set(List => {separator => "\; and \;"});
$lostFrac1 = -Fraction($b,$a)->reduce;
$lostFrac2 = Fraction($d,$c)->reduce;
$lostFrac3 = 0;
$lostDomain = Compute("$lostFrac1,$lostFrac2,$lostFrac3");

Context("LimitedFactor");

##############################################
TEXT(beginproblem());

BEGIN_PGML

Simplify this expression. Don't forget to write the domain conditions lost during the simplification, if any. Please write your answer in *factored* form if possible.

    [``[$frac1] \cdot [$frac2] =``] [___________________]{$ans}

The domain condition(s) lost during the simplification is (are) [`[$var] \ne`][_____]. If you need to enter more than one number, use comma to separate them.

END_PGML

###################################################

$showPartialCorrectAnswers = 1;
    ANS($lostDomain->cmp(
      entry_type => "a fraction",
      checker => sub {
        my ($correct, $student, $ans, $nth, $value) = @_;
        $correct->context->setError("Your $nth $value is not reduced","",undef,undef,$Value::CMP_WARNING)
          if $student->{notReduced};
        return 0 unless $correct == $student;
        return 1 unless Value::classMatch($student,'Fraction') && !$student->isReduced;
        $student->{notReduced} = 1 unless $ans->{isPreview};
        return 0;
      }
    ));

###################################################

$e3 = $e1==1 ? "" : "^{$e1}";

$s1 = "\frac{($a $var1+$b)($var1-1)}{$f $var1 $e3 ($c $var1-$d)} \cdot \frac{$e $var1 $e3 ($d - $c $var1)}{($a $var1+$b)($a $var1 - $b)}";

BEGIN_PGML_SOLUTION

    [``
\begin{aligned}
   [$frac1] \cdot [$frac2] 
      &=  [$s1] \\
      &= \frac{[$num1Factored]}{[$den1Factored]} \cdot \frac{[$num2Factored]}{[$den2Factored]} \\
      &= [$ans]
\end{aligned}
    ``]

Since the terms [`[$a][$var1]+[$b]`] and [`[$c][$var1]-[$d]`] were crossed out, the domain condition lost during the simplification are [`[$var1] \ne [$lostDomain]`].

END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
