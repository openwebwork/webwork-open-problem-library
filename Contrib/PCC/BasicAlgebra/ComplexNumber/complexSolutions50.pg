# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Identify graph of y=x^2+a, where a is a positive integer.
#
# Last edit by: Carl Yao 10/10/14
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Coordinates and Graphs')
## DBsection('Graphs of Equations')
## KEYWORDS('quadratic','function','parabola','shift','graph')
## DBCCSS('F.IF.7.a')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "PGML.pl",
  "pccTables.pl",
  "PCCgraphMacros.pl",
  "PGchoicemacros.pl",
  "unionTables.pl",
  "PGcourse.pl"
);

##############################################
TEXT(beginproblem());
Context("Numeric");
Context()->variables->add(y=>'Real');
Context()->flags->set(showExtraParens=>0, reduceConstants=>0);
Context()->noreduce("(-x)-y","(-x)+y");
$refreshCachedImages=1;

#These arrays decide values in y=a(x-b)^2+h.
#$a[0], $b[0], $h[0], $a[1], $b[1], $h[1] are for the correct graph. The others are used in wrong graphs.
$range = 7;
@a=();
@b=();
@h=();
$a[0] = list_random(0.5,2,0.1);
$b[0] = list_random(-$range..$range);
$h[0] = list_random(1..$range);

$a[1] = -1*list_random(0.5,2,0.1);
$b[1] = list_random(-$range..$range);
$h[1] = list_random(-$range..-1);

$a[2] = list_random(0.5,2,0.1);
$b[2] = list_random(-$range..$range);
$h[2] = list_random(-$range..-1);

$a[3] = -1*list_random(0.5,2,0.1);
$b[3] = list_random(-$range..$range);
$h[3] = list_random(1..$range);

$left = Compute("y");
@rightFunc = ();
for ($i=0; $i<=3; $i++) {
   $rightFunc[$i] = Compute("$a[$i]*(x-$b[$i])**2 + $h[$i]")->reduce;
}

Context("Point");
Context()->parens->set("[" => {type => "Interval", close => "]"});
Context()->parens->set("{" => {type => "Set", close => "}"});
Context()->parens->set("<" => {type => "Vector", close => ">"});
@vertex=();
for ($i=0; $i<=3; $i++) {
   $vertex[$i]=Compute("($b[$i],$h[$i])");
}

Context("Numeric");
Context()->variables->add(y=>'Real');
Context()->flags->set(showExtraParens=>0, reduceConstants=>0);
Context()->noreduce("(-x)-y","(-x)+y");


#Create a hash and its inverse that randomizes the order of the four graphs.
%scramble = ();
%inverse = ();
for my $i (0..3) {
  do {$temp = list_random(0..3)} until !(grep(/^$temp$/,values %scramble) );
  $scramble{$i} = $temp;
  $inverse{$temp} = $i;
};

$xmin = -10;
$xmax = -$xmin;
$ymin = -10;
$ymax = -$ymin;

#These two variables decide how many labels are on each axis.
$xmark = 2;
$ymark = 2;

@gr=();

#$gr[0] through $gr[3] are options
for ($i=0;$i<=3;$i++) {
   $gr[$i] = init_graph($xmin,$ymin,$xmax,$ymax,
   axes=>[0,0],
   grid=>[($xmax-$xmin)/$xmark,($ymax-$ymin)/$ymark],
   size=>[xPixels(),yPixels()]
   );
   $gr[$i]->lb('reset');

      for ($j=-$xmax+$xmark;$j<$xmax;$j=$j+$xmark) {
         $gr[$i]->lb( new Label($j,  -0.1, $j,'black','center','top'));
      }

      for ($j=$ymin+$ymark;$j<$ymax;$j=$j+$ymark) {
         if (Real($j) == 0) {next;}
         $gr[$i]->lb( new Label(0,  $j,' '.$j,'black','left','middle'));
      }

   $gr[$i]->lb( new Label($xmin, $ymax, ' '.$ALPHABET[$inverse{$i}], 'black', 'left', 'top'));
   add_functions($gr[$i], "$rightFunc[$i] for x in <$xmin,$xmax> using color:black and weight:2");

   if ($a[$i]>0) {
      push(@alt,"Graph $ALPHABET[$inverse{$i}]: This picture shows a parabola's graph. The vertex is at $vertex[$i]. The parabola faces upward.");
   } else {
      push(@alt,"Graph $ALPHABET[$inverse{$i}]: This picture shows a parabola's graph. The vertex is at $vertex[$i]. The parabola faces downward.");
   }
}

$mc = new_checkbox_multiple_choice();
$mc -> qa (
"Select the letters of the graphs where the quadratic function has complex solutions.", 
  "$ALPHABET[$inverse{0}]",
  "$ALPHABET[$inverse{1}]",                
);
$mc -> extra(
  "$ALPHABET[$inverse{2}]",
  "$ALPHABET[$inverse{3}]",
);
$mc -> makeLast("A","B","C","D","None of the above");

##############################################

BEGIN_PGML

Each picture shows the graph of a quadratic function. Some functions have real roots, while others have complex roots. Choose the graphs representing quadratic functions with complex roots.

[@EnlargeImageStatementPGML()@]** 

[@$mc -> print_q() @]**  
    [@$mc -> print_a() @]*

END_PGML

Context()->texStrings;
BEGIN_TEXT
$PAR
$BCENTER
\{ 
LayoutTable([[image( insertGraph($gr[$scramble{0}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$alt[$scramble{0}]" title = "$alt[$scramble{0}]"'  ),
image( insertGraph($gr[$scramble{1}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$alt[$scramble{1}]" title = "$alt[$scramble{1}]"'  ),
],
[image( insertGraph($gr[$scramble{2}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$alt[$scramble{2}]" title = "$alt[$scramble{2}]"'  ),
image( insertGraph($gr[$scramble{3}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$alt[$scramble{3}]" title = "$alt[$scramble{3}]"'  )
]], allcellcss => "padding:20pt;")

\}
$ECENTER
$PAR

END_TEXT
Context()->normalStrings;

##############################################

$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $mc->correct_ans() ) );

##############################################


BEGIN_PGML_SOLUTION

Each time a function's graph crosses the [`x`]-axis, it implies the function has a real solution. For example, the function [`f(x)=x-1`] crosses the [`x`]-axis at [`(1,0)`], so the equation [`x-1=0`] has a real solution: [`x=1`].

For a quadratic function, if its graph crosses the [`x`]-axis twice, it implies it has two real solutions.

If a quadratic function doesn't cross the [`x`]-axis at all, it implies it has two complex solutions.

The correct answer is [@$mc->correct_ans()@], because their graphs don't cross the [`x`]-axis.


END_PGML_SOLUTION

ENDDOCUMENT();


