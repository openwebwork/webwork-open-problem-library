# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Right triangle trig application problem with tangent.
#
# Last edited by Carl Yao on 3/17/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('trigonometry','sine','cosine','tangent','right triangle')
## DBCCSS('4.MD.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "contextFraction.pl",
  "parserNumberWithUnits.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

do {
   $height = random(30,100,1);
   $alpha1 = random(20,50,1);
   $alpha1Radian = $alpha1*pi/180;
   $base1 = $height*tan($alpha1Radian);
   $hypotenuse1 = $height/cos($alpha1Radian);
   $heightShow = int($height*100+.5)/100;
   $hypotenuse1Show = int($hypotenuse*100+.5)/100;
   $hypotenuse1U = NumberWithUnits("$hypotenuse1 ft");
   $base1U = NumberWithUnits("$base1 ft");
   $heightU = NumberWithUnits("$height ft");

   $alpha2 = random($alpha1+5,$alpha1+15,1);
   $alpha2Radian = $alpha2*pi/180;
   $base2 = $height*tan($alpha2Radian);
   $hypotenuse2 = $height/cos($alpha2Radian);
   $hypotenuse2Show = int($hypotenuse*100+.5)/100;
   $hypotenuse2U = NumberWithUnits("$hypotenuse2 ft");
   $base2U = NumberWithUnits("$base2 ft");

   $ans = $base2-$base1;
   $ansU = NumberWithUnits("$ans ft");
} until ( ($ans>10) && ($ans<20) && ($base1<20) );

$longer = max($base2,$height);

$xmin = 0;         #The viewing window
$xmax = 2.5*$longer;
$ymin = 0;
$ymax = 2.5*$longer;

#$corner's value decides the location of the right angle. 
#(0,1,2,3) implies (bottom left,top left,top right,bottom right). 
$corner = 3;

   @x = (($xmax-$height)/2,($xmax+$height)/2);
   @y = (($ymax-$base2)/2,($ymax+$base2)/2);

$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[400,400]);

$labelAdjust = $longer/10;

@labelAx = ($x[0],$x[1],$x[1],$x[0]);
@labelAy = ($y[1],$y[1],$y[0],$y[0]);
@alpha1CurveStart = (3*pi/2,pi,pi/2,0);
@alpha1CurveEnd = (3*pi/2+$alpha1Radian,pi+$alpha1Radian,pi/2+$alpha1Radian,$alpha1Radian);
@alpha2CurveStart = (3*pi/2,pi,pi/2,0);
@alpha2CurveEnd = (3*pi/2+$alpha2Radian,pi+$alpha2Radian,pi/2+$alpha2Radian,$alpha2Radian);


@labelCx = ($x[0],$x[0],$x[1],$x[1]);
@labelCy = ($y[0],$y[1],$y[1],$y[0]);

$curveAdjust1 = $longer/10;
$xfuncAlpha1 = sub { my $t = shift();
    return $labelAx[$corner]+$curveAdjust1*cos($t); };
$yfuncAlpha1 = sub { my $t = shift();
    return $labelAy[$corner]+$curveAdjust1*sin($t); };
$fnAlpha1 = new Fun( $xfuncAlpha1, $yfuncAlpha1, $picture );
$fnAlpha1->domain($alpha1CurveStart[$corner],$alpha1CurveEnd[$corner]);
$theta = ($alpha1CurveStart[$corner]+$alpha1CurveEnd[$corner])/2;
$picture->lb( new Label($labelAx[$corner]+2*$curveAdjust1*cos($theta), $labelAy[$corner]+2*$curveAdjust1*sin($theta),$alpha1,'black','center','middle'));

$curveAdjust2 = $longer/3;
$xfuncAlpha2 = sub { my $t = shift();
    return $labelAx[$corner]+$curveAdjust2*cos($t); };
$yfuncAlpha2 = sub { my $t = shift();
    return $labelAy[$corner]+$curveAdjust2*sin($t); };
$fnAlpha2 = new Fun( $xfuncAlpha2, $yfuncAlpha2, $picture );
$fnAlpha2->domain($alpha2CurveStart[$corner],$alpha2CurveEnd[$corner]);
$theta = ($alpha2CurveStart[$corner]+$alpha2CurveEnd[$corner])/2;
$picture->lb( new Label($labelAx[$corner]+1.2*$curveAdjust2*cos($theta), $labelAy[$corner]+1.2*$curveAdjust2*sin($theta),$alpha2,'black','center','middle'));


@labelBaseX=(($x[0]+$x[1])/2,$x[0]-$labelAdjust,($x[0]+$x[1])/2,$x[1]+$labelAdjust);
@labelBaseY=($y[0]-$labelAdjust,($y[0]+$y[1])/2,$y[1]+$labelAdjust,($y[0]+$y[1])/2);
@labelHeightX=($x[0]-$labelAdjust,($x[0]+$x[1])/2,$x[1]+$labelAdjust,($x[0]+$x[1])/2);
@labelHeightY=(($y[0]+$y[1])/2,$y[1]+$labelAdjust,($y[0]+$y[1])/2,$y[0]-$labelAdjust);
@labelHypotenuseX=(($x[0]+$x[1])/2+$labelAdjust,($x[0]+$x[1])/2+$labelAdjust,($x[0]+$x[1])/2-$labelAdjust,($x[0]+$x[1])/2-$labelAdjust);
@labelHypotenuseY=(($y[0]+$y[1])/2+$labelAdjust,($y[0]+$y[1])/2-$labelAdjust,($y[0]+$y[1])/2-$labelAdjust,($y[0]+$y[1])/2+$labelAdjust);


#bottom of second storey
$picture->moveTo($x[0],$y[0]);
$picture->lineTo($x[1],$y[0]+$base1,'blue',1,dashed);
$picture->stamps( closed_circle($x[1],$y[0]+$base1,'red') );
$picture->lb( new Label($x[1]-0.7*$labelAdjust,$y[0]+$base1,'B','red','center','middle'));
$picture->lb( new Label($x[1]+3.5*$labelAdjust,$y[0]+$base1,'bottom of the','black','center','middle'));
$picture->lb( new Label($x[1]+3.5*$labelAdjust,$y[0]+$base1-0.6*$labelAdjust,'second storey','black','center','middle'));
$picture->lb( new Label($labelBaseX[$corner]+$labelAdjust/6, $y[0]+($base1+$base2)/2,'x ft','black','center','middle'));

#top of second storey
$picture->stamps( closed_circle($x[1],$y[1],'red') );
$picture->lb( new Label($x[1]-0.7*$labelAdjust,$y[1],'A','red','center','middle'));
$picture->lb( new Label($x[1]+3.5*$labelAdjust,$y[1]+$labelAdjust,'top of the','black','center','middle'));
$picture->lb( new Label($x[1]+3.5*$labelAdjust,$y[1]+0.4*$labelAdjust,'second storey','black','center','middle'));

#corner of building
$picture->stamps( closed_circle($x[1],$y[0],'red') );
$picture->lb( new Label($x[1]+0.5*$labelAdjust,$y[0]-0.5*$labelAdjust,'C','red','center','middle'));


#observation
$picture->stamps( closed_circle($x[0],$y[0],'red') );
$picture->lb( new Label($x[0],$y[0]+0.8*$labelAdjust,'D','red','center','middle'));
$picture->lb( new Label($x[0]-$labelAdjust/7,$y[0]-0.6*$labelAdjust,'point of','black','center','middle'));
$picture->lb( new Label($x[0]-$labelAdjust/7,$y[0]-1.5*$labelAdjust,'observation','black','center','middle'));



#$picture->lb( new Label($labelHeightX[$corner]+3*$labelAdjust,$labelHeightY[$corner]+$labelAdjust/2,'sea','black','center','middle'));
$picture->lb( new Label($labelHeightX[$corner],$labelHeightY[$corner]+$labelAdjust/2,$heightU,'black','center','middle'));

#$picture->lb( new Label($labelHypotenuseX[$corner],$labelHypotenuseY[$corner],$hypotenuseU,'black','center','middle'));
#$picture->lb( new Label($labelHypotenuseX[$corner]-1,$labelHypotenuseY[$corner]-1,'ladder','black','center','middle'));

$picture->new_color("lightblue", 200,200,255); # RGB
$picture->new_color("darkblue",  100,100,255); 

@ax=(0,1,1,0);
@ay=(1,1,0,0);
@bx=(1,0,0,1);
@by=(0,0,1,1);
@cx=(0,0,1,1);
@cy=(0,1,1,0);


$picture->moveTo($x[$ax[$corner]],$y[$ay[$corner]]);
$picture->lineTo($x[$bx[$corner]],$y[$by[$corner]], darkblue,1,'dashed');
$picture->lineTo($x[$cx[$corner]],$y[$cy[$corner]], darkblue,3);
$picture->lineTo($x[$ax[$corner]],$y[$ay[$corner]], darkblue,3);


$cornersize = $labelAdjust/2;

@rightSymbol1x=($x[0],$x[0]+$cornersize,$x[1]-$cornersize,$x[1]);
@rightSymbol1y=($y[0]+$cornersize,$y[1],$y[1],$y[0]+$cornersize);
@rightSymbol2x=($x[0]+$cornersize,$x[0]+$cornersize,$x[1]-$cornersize,$x[1]-$cornersize);
@rightSymbol2y=($y[0]+$cornersize,$y[1]-$cornersize,$y[1]-$cornersize,$y[0]+$cornersize);
@rightSymbol3x=($x[0]+$cornersize,$x[0],$x[1],$x[1]-$cornersize);
@rightSymbol3y=($y[0],$y[1]-$cornersize,$y[1]-$cornersize,$y[0]);

$picture->moveTo($rightSymbol1x[$corner],$rightSymbol1y[$corner]);
$picture->lineTo($rightSymbol2x[$corner],$rightSymbol2y[$corner], darkblue,3);
$picture->lineTo($rightSymbol3x[$corner],$rightSymbol3y[$corner], darkblue,3);


@positions=('bottom left','top left','top right','bottom right');
if ($corner==0) {
   $aPosition = $positions[1];
   $bPosition = $positions[3];
   $cPosition = $positions[0];
} elsif ($corner==1) {
   $aPosition = $positions[2];
   $bPosition = $positions[0];
   $cPosition = $positions[1];
} elsif ($corner==2) {
   $aPosition = $positions[3];
   $bPosition = $positions[1];
   $cPosition = $positions[2];
} else {
   $aPosition = $positions[0];
   $bPosition = $positions[2];
   $cPosition = $positions[3];
}

$text = "The graph shows a vertical line, representing a building. The bottom of the building is marked as C; the bottom of the second storey is marked as B; the top of the second storey is marked as A. There is an observation point, marked as D, on the ground $heightU from the bottom of the building (point C). A dashed line connects points D and B, and another dashed line connects points D and A. Angle ADC is $alpha2 degrees, and angle BDC is $alpha1 degrees. The segment AB is marked as x (unknown).";

##############################################

TEXT(beginproblem());

BEGIN_PGML

A building has two storeys with unequal heights. From an observation point on the ground [`[$heightU]`] from the bottom of the building, the angle of elevation to the bottom of the second storey is [`[$alpha1]`] degrees, and the angle of elevation to the top of the second storey is [`[$alpha2]`] degrees. Find the height of the second storey.

Round your answer to two decimal places if needed.

The height of the second storey is [___________]{$ansU}.

END_PGML

##############################################

BEGIN_PGML_SOLUTION

Assume the storey is [`x`] feet. The following graph can represent this situation:

[@EnlargeImageStatementPGML()@]**

>>[@image(insertGraph($picture), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$text' title = '$text'") @]*<<

We need to find AC's length, and then BC's length. Then, we can do [`x=AC-BC`] to find the value of [`x`].

To find AC's length, look at the bigger triangle [`\Delta ADC`]. With [`\angle ADC=[$alpha2]`], and its adjacent leg [`DC=[$height]`], we can find [`AC`]'s length:

    [``
\begin{aligned}
   \tan{[$alpha2]} &= \frac{AC}{DC} \\
   \tan{[$alpha2]} &= \frac{AC}{[$height]} \\
   \mathbf{[$height] \cdot} \tan{[$alpha2]} &= \mathbf{[$height] \cdot} \frac{AC}{[$height]}  \\
   [$base2] &\approx AC \\
\end{aligned}
    ``]

Next, to find BC's length, look at the smaller triangle [`\Delta BDC`]. With [`\angle BDC=[$alpha1]`], and its adjacent leg [`DC=[$height]`], we can find [`BC`]'s length:

    [``
\begin{aligned}
   \tan{[$alpha2]} &= \frac{BC}{DC} \\
   \tan{[$alpha2]} &= \frac{BC}{[$height]} \\
   \mathbf{[$height] \cdot} \tan{[$alpha2]} &= \mathbf{[$height] \cdot} \frac{BC}{[$height]}  \\
   [$base1] &\approx BC \\
\end{aligned}
    ``]

Now we can calculate the height of the second storey:

    [``
\begin{aligned}
   x &= AC-BC \\
   x &= [$base2]-[$base1] \\
   x &\approx [$ans]
\end{aligned}
    ``]

The second storey's height is approximately [`[$ansU]`].

END_PGML_SOLUTION

ENDDOCUMENT();
