# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# Rewrite an English sentence as a mathematical equation
# $a less than (twice/n times) a number is/gives/yields $b
#
#
# Last edited: Jordan 6/26/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('equation','english-to-math')
## DBCCSS('6.EE.2.a')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "parserImplicitPlane.pl",
  "contextTypeset.pl",
  "PGcourse.pl"
);

##############################################

Context("Numeric");

$n = random(2,8,1);

$sol = random(5,50,1);
$a = random(2,$n*$a-1,1);
$b = $n*$sol - $a;


Context("ImplicitPlane");
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(showExtraParens=>0);
Context()->flags->set(reduceConstants=>0);

$ans1string = "$n*x-$a=$b";
$ans1 = Compute($ans1string);

if ($n == 2) {$nString = 'twice';} else {$nString = numberWord($n).' times';};
$eqWord = list_random('is','gives','yields');

$left = Compute("$n*x-$a")->reduce;
$right = "$b";


##############################################

TEXT(beginproblem());

BEGIN_PGML

Translate the following sentence into a math equation. Use [`x`] to represent the unknown number.

    [@numberWord($a,capital=>1)@] less than [$nString] a number [$eqWord] [@numberWord($b)@].

    [_______________]

END_PGML

##############################################

ANS($ans1->cmp(
  cmp_class => "a linear equation",
  correct_ans=>Parser::Formula(Context("Typeset") , $ans1string)->string,
  correct_ans_latex_string=>Parser::Formula(Context("Typeset") , $ans1string)->TeX, 
  checker => sub {
  my ($correct,$student,$ansHash) = @_;
  $result = ($correct == $student);
  my $context = Context();
  Context("Typeset");
  $student = Parser::Formula(Context("Typeset"), $ansHash->{original_student_ans});
  $ansHash->{preview_text_string} = $student->string;
  $ansHash->{preview_latex_string} = $student->TeX;
  $ansHash->{student_ans} = $student->string;  
  Context($context);
  return $result
}));


BEGIN_PGML_SOLUTION

The word '[$eqWord]' implies equality. So we have 

    [@numberWord($a,capital=>1)@] less than [$nString] a number [`=`] [@numberWord($b)@].

The phrase 'less than' implies subtraction, and that '[@numberWord($a)@]' should be subtracted _from_ '[$nString] a number'. So we have:

    ([$nString] a number) [`{}-{}`] [@numberWord($a)@] [`=`] [@numberWord($b)@].

So we have:

    [``[$left]=[$right]``]


END_PGML_SOLUTION

ENDDOCUMENT();


