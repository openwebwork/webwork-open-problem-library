# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# Rewrite an English phrase as a mathematical expression 
#
# Last edited: Jordan 8/23/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('expression','english-to-math')
## DBCCSS('6.EE.2.a')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "parserImplicitPlane.pl",
  "contextTypeset.pl",
  "PGcourse.pl"
);

##############################################

Context("Numeric");
Context()->flags->set(reduceConstants=>0);


$a = random(1,3,1);
do {$b = $a+random(1,8,1);} until (gcd($a,$b) == 1);

$c = random(1,3,1);
do {$d = $a+random(1,8,1);} until (gcd($c,$d) == 1);

$index = random(0,1);
@opWords = ("increased by", "decreased by");
$opPhrase = $opWords[$index];

@toMaths = ('+','-');
$toMath = @toMaths[$index];

Context("ImplicitPlane");
Context()->flags->set(showExtraParens=>0);
Context()->flags->set(reduceConstants=>0);
$ans = Compute("x $toMath $a/$b=$c/$d x");

$ans1string = "x $toMath $a/$b = $c/$d x";
$ans1 = Compute($ans1string);

$left = Compute("x $toMath $a/$b");
$right = Compute("$c/$d x");


##############################################

TEXT(beginproblem());

BEGIN_PGML

Translate the following phrase into a math expression or equation (whichever is appropriate). Use [`x`] to represent the unknown number.

    A number [$opPhrase] [@numberWord($a/$b,denominator=>$b)@] is [@numberWord($c/$d,denominator=>$d)@] of that number.

    [______________]

END_PGML

##############################################

ANS($ans1->cmp(
  cmp_class => "a linear equation",
  correct_ans=>Parser::Formula(Context("Typeset") , $ans1string)->string,
  correct_ans_latex_string=>Parser::Formula(Context("Typeset") , $ans1string)->TeX, 
  checker => sub {
  my ($correct,$student,$ansHash) = @_;
  $result = ($correct == $student);
  my $context = Context();
  Context("Typeset");
  $student = Parser::Formula(Context("Typeset"), $ansHash->{original_student_ans});
  $ansHash->{preview_text_string} = $student->string;
  $ansHash->{preview_latex_string} = $student->TeX;
  $ansHash->{student_ans} = $student->string;  
  Context($context);
  return $result
}));


BEGIN_PGML_SOLUTION

The word 'is' implies equality, so we have

    A number [$opPhrase] [@numberWord($a/$b,denominator=>$b)@] [`=`] [@numberWord($c/$d,denominator=>$d)@] of that number.

When a fraction precedes the word 'of', it implies that the fraction should be multiplied by what follows. Also the phrase '[$opPhrase]' implies that we should use the [`[$toMath]`] symbol and leave the order of the numbers in place. So the answer is

    [``[$left]=[$right]``]

END_PGML_SOLUTION

ENDDOCUMENT();


