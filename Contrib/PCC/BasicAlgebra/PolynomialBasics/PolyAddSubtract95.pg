# WeBWorK problem written by Chris Hughes
# Portland Community College
#
# Template:
# Subtract the two binomials, making sure to simplify your answer
# as much as possible.
#
#    (a x^3 + b x^2 + c x + d) - (e x^2 + f x + g)
#
# a, b, c, d, e, f, g can  be any non-zero, integer on the interval [-20,20]. 
#
# Last updated: Carl Yao, 6/28/13
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Polynomial and Rational Functions')
## DBsection('Polynomial Functions')
## KEYWORDS('polynomial','simplify','combine','like terms','subtract')
## DBCCSS('A-APR.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextLimitedPolynomial.pl",
  "PGpolynomialmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->reduction->set('(-x)-y'=>0);
Context()->reduction->set('(-x)+y'=>0);
$var = 'x';

#    (a x^3 + b x^2 + c x + d) - (e x^2 + f x + g)
# setup the first polynomial: (a x^3 + b x^2 + c x + d)
$a = (random(1.5,9.5,1)+0.5)*random(-1,1,2);
$b = $a;
$b = (random(1.5,9.5,1)+0.5)*random(-1,1,2) while($b==$a);
$c = $b;
$c = non_zero_random(-10,10,1) while($c==$b);
$d = non_zero_random(-10,10,1);
@poly1array = ($a,$b,$c,$d);

# setup the second polynomial: (e x^2 + f x + g)
$e = (random(1.5,9.5,1)+0.5)*random(-1,1,2);
$f = $e;
$f = (random(1.5,9.5,1)+0.5)*random(-1,1,2) while($f==$e);
$g = non_zero_random(-10,10,1);
@poly2array = ($e,$f,$g);

# reduction check
$poly1 = Formula(PolyString(~~@poly1array))->reduce;
$poly2 = Formula(PolyString(~~@poly2array))->reduce;

# for the solution
@sumarray = PolySub(~~@poly1array,~~@poly2array);

$ans = Formula(PolyString(~~@sumarray))->reduce;

# make $poly1 and $poly2 into strings
$poly1 = $poly1->substitute(x=>$var);
$poly2 = $poly2->substitute(x=>$var);

# and make the answer into a string
$ans = $ans->substitute(x=>$var);

# for the solution
$soln1=Formula(PolyString(~~@poly1array))->reduce;
$soln2=Formula(PolyString(~~@poly2array))->reduce;
$soln1 = $soln1->substitute(x=>$var);
$soln2 = $soln2->substitute(x=>$var);


Context("LimitedPolynomial-Strict");
#Context()->variables->add($var=>'Real');
$ans = Formula($ans);


##############################################
TEXT(beginproblem());

BEGIN_PGML

Subtract the two polynomials, making sure to simplify your answer
as much as possible.

    [`\left([$poly1]\right)-\left([$poly2]\right)`]

    [________________]{$ans}

END_PGML

# This function eliminates issues like (3x), -1x and 1x.
# This function takes 4 parameters: 
# coefficient, the variable, the power, 
# leading term or not (1 means leading, 0 means not)
# If it's a leading term, no () will be returned.
# Its output is the Latex string.
sub output {
   my ($coe,$v,$e,$lead) = @_;

   if ($lead==1) {
      if ($e==0) {return "$coe";}
      if ($coe==1) {return $e==1 ? "$v" : "$v^$e";}
      if ($coe==-1) {return $e==1 ? "-$v" : "-$v^$e";}
      if ($e==1) {return "$coe $v";}
      return "$coe $v^$e";
   }

   if ($e==0) {return $coe>0 ? "$coe" : "($coe)";}
   if ($coe==1) {return $e==1 ? "$v" : "$v^$e";}
   if ($coe==-1) {return $e==1 ? "(-$v)" : "(-$v^$e)";}
   if ($e==1) {return $coe>0 ? "$coe $v" : "($coe $v)";}
   return $coe>0 ? "$coe $v^$e" : "($coe $v^$e)";
}

$bOut = output($b,$var,2,1);
$eOut = output($e,$var,2,0);
$cOut = output($c,$var,1,1);
$fOut = output($f,$var,1,0);
$gOut = output($g,$var,0,0);

BEGIN_PGML_SOLUTION

We combine like terms as follows

     [`
         \begin{aligned}
               \left([$poly1]\right)-\left([$poly2]\right)& = [$a]x^3+([$bOut]-[$eOut])+([$cOut]-[$fOut])+([$d]-[$gOut])\\
                                                          & = [$ans]
         \end{aligned}
     `]
END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
