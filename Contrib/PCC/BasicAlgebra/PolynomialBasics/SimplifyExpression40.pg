# WeBWorK problem written by Carl Yao
# Portland Community College
#
# 
# Combine like terms in a polynomial expression. Numbers are medium.
#
# Last edited: Jordan 6/21/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions','Equivalent Expressions','Reordering and Regrouping')
## KEYWORDS('combine','like terms','expression','linear')
## DBCCSS('7.EE.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "contextLimitedPolynomial.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################


Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>variable);
Context()->variables->are($var=>'Real');

$exp1 = random(1,2,1);
$exp2 = $exp1+random(1,3,1);

@poly1array = (non_zero_random(-20,20,1),non_zero_random(-20,20,1));
@poly2array = (non_zero_random(1,20,1),non_zero_random(-20,20,1));

$poly1Coef = $poly1array[0];
$poly1Cons = $poly1array[1];
$poly2Coef = $poly2array[0];
$poly2Cons = $poly2array[1]; 
$ansCoef = $poly1Coef+$poly2Coef;
$ansCons = $poly1Cons+$poly2Cons;

$p1var1 = Formula("$poly1Coef $var^$exp1")->reduce;
$p2var1= Formula("$poly2Coef $var^$exp1")->reduce;
$ansvar1 = Formula("$ansCoef $var^$exp1")->reduce;

$p1var2 = Formula("$poly1Cons $var^$exp2")->reduce;
$p2var2= Formula("$poly2Cons $var^$exp2")->reduce;
$ansvar2 = Formula("$ansCons $var^$exp2")->reduce;

$ans = Compute("$ansCoef $var^$exp1+$ansCons $var^$exp2");


Context("LimitedPolynomial-Strict");
Context()->variables->are($var=>'Real');
Context()->noreduce('(-x)-y','(-x)+y');
$ans = Formula("$ans")->reduce;

##############################################

TEXT(beginproblem());

BEGIN_PGML

Simplify this expression. If it is already simplified, then write it as it is.

    [: [$p1var1]+[$p1var2]+[$p2var1]+[$p2var2]:]  

    [`=`] [______________]{$ans} 

END_PGML

##############################################


$varexp1 = Formula("$var^$exp1")->reduce;

BEGIN_PGML_SOLUTION

We first identify like terms in the expression [` [$func] `].

For [`[$varexp1]`] terms, we have [`[$p1var1]`] and [`[$p2var1]`]. Adding them, we have [`[$ansvar1]`].

For [`[$var]^[$exp2]`] terms, we have [`[$p1var2]`] and [`[$p2var2]`]. Adding them, we have [`[$ansvar2]`].

So, the final answer is [`[$ans]`].

END_PGML_SOLUTION

ENDDOCUMENT();




