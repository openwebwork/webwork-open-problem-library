# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Check whether a point is solution of a system equation.
# Both equations are in standard form.
#
# Last updated: Yao 8/16/13
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Systems of Equations and Inequalities')
## DBsection('Systems of Linear Equations')
## KEYWORDS('check','system','equation')
## DBCCSS('8.EE.8','A.REI.6')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserRadioButtons.pl",
  "PGcourse.pl"
);

##############################################

Context("Numeric");
Context()->variables->add(y => "Real");
Context()->noreduce('(-x)-y','(-x)+y');

#First set the solution.
$x=random(-5,5,1);
$y=random(-5,5,1);

#Set coefficient values. Make sure the system has only one solution.
$a=non_zero_random(-5,5,1);
$b=non_zero_random(-5,5,1);
do {$d=non_zero_random(-5,5,1);} until ($a!=$d);
do {$e=non_zero_random(-5,5,1);} until ($a*$e-$b*$d!=0);

#Randomly decide whether the given point is the solution or not.
$TrueOrFalse = random(0,1,1);
$isString = "Yes";
$notString = "No";
if ($TrueOrFalse==1) {$corString = $isString} else {$corString = $notString};

#If the point is not solution, decide we should make the first or second equation false.
if ($TrueOrFalse==0) {
   $FirstIsTrue = random(0,1,1);
   $SecondIsTrue = !$FirstIsTrue;
}
else {
   $FirstIsTrue = 1;
   $SecondIsTrue = 1;
}

#Based on settings above, set the value of constant to make equations true or false.

$func1 = Compute("$a*x+$b*y")->reduce;
$func2 = Compute("$d*x+$e*y")->reduce;

$c = $FirstIsTrue ? $func1->eval(x=>$x,y=>$y) : $func1->eval(x=>$x,y=>$y)+non_zero_random(-3,3,1);
$f = $SecondIsTrue ? $func2->eval(x=>$x,y=>$y) : $func2->eval(x=>$x,y=>$y)+non_zero_random(-3,3,1);

$radio = RadioButtons(
  [$isString,$notString],
  $corString,
  last => [$notString],
);

##############################################

TEXT(beginproblem());

BEGIN_PGML

Decide whether [`([$x],[$y])`] is a  solution to the system of equations

    [``\left\{\begin{aligned}
  [$func1] &= [$c] \\
  [$func2] &= [$f] \\
\end{aligned}\right.``]


END_PGML

BEGIN_TEXT
$PAR
\{ $radio->buttons() \}

END_TEXT


##############################################

ANS( $radio->cmp() );

#These will be used to show procedures in solutions.
$firstEquationSubstitute = $func1->value;
$firstEquationSubstitute =~ s/x/($x)/;
$firstEquationSubstitute =~ s/y/($y)/;
$firstEquationSubstitute =~ s/~~*/\cdot/g;
$firstEquationValue = $func1->eval(x=>$x,y=>$y);

$secondEquationSubstitute = $func2->value;
$secondEquationSubstitute =~ s/x/($x)/;
$secondEquationSubstitute =~ s/y/($y)/;
$secondEquationSubstitute =~ s/~~*/\cdot/g;
$secondEquationValue = $func2->eval(x=>$x,y=>$y);

#There are 3 sets of solutions based on whether the point is on the first or second line, or both.

if ($TrueOrFalse) {

BEGIN_PGML_SOLUTION

If a point is a solution to a system of linear equations, it implies the point is on both lines.

To decide whether a given point is a solution to a system of equations or not, we need to know whether or not the point is on both lines.

Substituting the point [`([$x],[$y])`] into the first equation, we have:

    [``
\begin{aligned}
   [$func1] &\stackrel{?}{=} [$c] \\
   [$firstEquationSubstitute] &\stackrel{?}{=} [$c] \\
   [$firstEquationValue] &\stackrel{?}{=} [$c]
\end{aligned}
    ``]

This is true, so [`([$x],[$y])`] is on the line [` [$func1]=[$c] `].

Next, we substitute [`([$x],[$y])`] into the second equation, and we have:

    [``
\begin{aligned}[t]
   [$func2] &\stackrel{?}{=} [$f] \\
   [$secondEquationSubstitute] &\stackrel{?}{=} [$f] \\
   [$secondEquationValue] &\stackrel{?}{=} [$f]
\end{aligned}
    ``]

This is also true, so [`([$x],[$y])`] is on the line [` [$func2]=[$f] `].

Since [`([$x],[$y])`] is on both lines, [`([$x],[$y])`] is a solution tp the system of equations.

END_PGML_SOLUTION

} elsif ($FirstIsTrue) {

BEGIN_PGML_SOLUTION


If a point is a solution to a system of linear equations, it implies the point is on both lines.

To decide whether a given point is a solution to a system of equations or not, we need to know whether or not the point is on both lines.

Substituting the point [`([$x],[$y])`] into the first equation, we have:

    [``
\begin{aligned}
   [$func1] &\stackrel{?}{=} [$c] \\
   [$firstEquationSubstitute] &\stackrel{?}{=} [$c] \\
   [$firstEquationValue] &\stackrel{?}{=} [$c]
\end{aligned}
    ``]

This is true, so [`([$x],[$y])`] is on the line [` [$func1]=[$c] `].

Next, we substitute [`([$x],[$y])`] into the second equation and we have:

    [``
\begin{aligned}
   [$func2] &\stackrel{?}{=} [$f] \\
   [$secondEquationSubstitute] &\stackrel{?}{=} [$f] \\
   [$secondEquationValue] &\stackrel{?}{=} [$f]
\end{aligned}
    ``]

This is false, so [`([$x],[$y])`] is not on the line [` [$func2]=[$f] `].

Since [`([$x],[$y])`] is not on _both_ lines, [`([$x],[$y])`] is not a solution to the system of equations.

END_PGML_SOLUTION

} else {

BEGIN_PGML_SOLUTION


If a point is a solution to a system of linear equations, it implies the point is on both lines.

To decide whether a given point is a solution to a system of equations or not, we need to know whether or not the point is on both lines.

Substituting the point [`([$x],[$y])`] into the first equation, we have:

    [``
\begin{aligned}[t]
   [$func1] &\stackrel{?}{=} [$c] \\
   [$firstEquationSubstitute] &\stackrel{?}{=} [$c] \\
   [$firstEquationValue] &\stackrel{?}{=} [$c]
\end{aligned}
    ``]

This is not true, so [`([$x],[$y])`] is not on the line [` [$func1]=[$c] `], and thus is not a solution to the system of equations.

There is no need to check whether [`([$x],[$y])`] is on the line [` [$func2]=[$f] `].

END_PGML_SOLUTION

}


ENDDOCUMENT();
