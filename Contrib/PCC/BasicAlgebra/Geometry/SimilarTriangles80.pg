# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Find missing side with two given similar triangles.
#
# Last edited by Carl Yao 3/1/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('area','perimeter','triangle')
## DBCCSS('6.G.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserNumberWithUnits.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");

$unit = "in";

Context("Numeric");

#Show arrays have length defined by @sides;
#The other arrays have numbers used in calculation.
@baseShortShow = ();
@baseShort = ();
@baseLongShow = ();
@baseLong = ();
@hypotenuseShow = ();
@hypotenuse = ();

$baseShortShow[1] = 5;
$baseLongShow[1] = 12;
$hypotenuseShow[1] = 13;
$ratio = random(1.5,2,0.1);
$baseShortShow[0] = $ratio*$baseShortShow[1];
$baseLongShow[0] = $ratio*$baseLongShow[1];
$hypotenuseShow[0] = $ratio*$hypotenuseShow[1];

$scale = random(1,5,0.5);
$baseShort[1] = 5*$scale;
$baseLong[1] = 12*$scale;
$hypotenuse[1] = 13*$scale;
$baseShort[0] = $ratio*$baseShort[1];
$baseLong[0] = $ratio*$baseLong[1];
$hypotenuse[0] = $ratio*$hypotenuse[1];

@orientation = ();

$orientation[0] = random(0,7,1);
if ($orientation[0]<=3) {
   do {$orientation[1] = random(0,7,1);} until ($orientation[0] != $orientation[1]);
} else {
   do {$orientation[1] = random(4,7,1);} until ($orientation[0] != $orientation[1]);
}

$cushionLeft= $baseLongShow[0]/2;
$cushionMiddle = $baseLongShow[0]/2;
$cushionRight = $baseLongShow[0]/2;
$cushionY = $baseLongShow[0]/5;

$xmin = 0;
$xmax = $baseLongShow[0]+$baseLongShow[1]+$cushionLeft+$cushionMiddle+$cushionRight;
$ymin = 0;
$ymax = $baseLongShow[0]+2*$cushionY;

$xLabelShift = $xmax/13;
$yLabelShift = $ymax/15;

@cx = ();
@cy = ();
@ax = ();
@ay = ();
@bx = ();
@by = ();
@acxShift = ();
@acyShift = ();
@bcxShift = ();
@bcyShift = ();

$cy[0][0] = $cushionY;
$cy[0][1] = $ymax/2-$baseShortShow[0]/2;
$cy[0][2] = $ymax/2+$baseShortShow[0]/2;
$cy[0][3] = $cushionY+$baseLongShow[0];
$cy[0][4] = $cy[0][3];
$cy[0][5] = $cy[0][2];
$cy[0][6] = $cy[0][1];
$cy[0][7] = $cy[0][0];

$cx[0][0] = $cushionLeft;
$cx[0][1] = $cushionLeft;
$cx[0][2] = $cushionLeft;
$cx[0][3] = $cushionLeft;
$cx[0][4] = $cushionLeft+$baseShortShow[0];
$cx[0][5] = $cushionLeft+$baseLongShow[0];
$cx[0][6] = $cushionLeft+$baseLongShow[0];
$cx[0][7] = $cushionLeft+$baseShortShow[0];

$cy[1][0] = $ymax/2-$baseLongShow[1]/2;
$cy[1][1] = $ymax/2-$baseShortShow[1]/2;
$cy[1][2] = $ymax/2+$baseShortShow[1]/2;
$cy[1][3] = $ymax/2+$baseLongShow[1]/2;
$cy[1][4] = $cy[1][3];
$cy[1][5] = $cy[1][2];
$cy[1][6] = $cy[1][1];
$cy[1][7] = $cy[1][0];

$cx[1][0] = $cushionLeft+$baseLongShow[0]+$cushionMiddle+($baseLongShow[1]+$cushionRight)/2-$baseShortShow[1]/2;
$cx[1][1] = $cushionLeft+$baseLongShow[0]+$cushionMiddle;
$cx[1][2] = $cx[1][1];
$cx[1][3] = $cx[1][0];
$cx[1][4] = $xmax-$cushionRight;
$cx[1][5] = $xmax-$cushionRight;
$cx[1][6] = $xmax-$cushionRight;
$cx[1][7] = $xmax-$cushionRight;

$ax[0][0] = $cx[0][0]+$baseShortShow[0];
$ax[0][1] = $cx[0][1];
$ax[0][2] = $cx[0][2];
$ax[0][3] = $cx[0][3]+$baseShortShow[0];
$ax[0][4] = $cx[0][4]-$baseShortShow[0];
$ax[0][5] = $cx[0][5];
$ax[0][6] = $cx[0][6];
$ax[0][7] = $cx[0][7]-$baseShortShow[0];

$ay[0][0] = $cy[0][0];
$ay[0][1] = $cy[0][1]+$baseShortShow[0];
$ay[0][2] = $cy[0][2]-$baseShortShow[0];
$ay[0][3] = $cy[0][3];
$ay[0][4] = $cy[0][4];
$ay[0][5] = $cy[0][5]-$baseShortShow[0];
$ay[0][6] = $cy[0][6]+$baseShortShow[0];
$ay[0][7] = $cy[0][7];

$ax[1][0] = $cx[1][0]+$baseShortShow[1];
$ax[1][1] = $cx[1][1];
$ax[1][2] = $cx[1][2];
$ax[1][3] = $cx[1][3]+$baseShortShow[1];
$ax[1][4] = $cx[1][4]-$baseShortShow[1];
$ax[1][5] = $cx[1][5];
$ax[1][6] = $cx[1][6];
$ax[1][7] = $cx[1][7]-$baseShortShow[1];

$ay[1][0] = $cy[1][0];
$ay[1][1] = $cy[1][1]+$baseShortShow[1];
$ay[1][2] = $cy[1][2]-$baseShortShow[1];
$ay[1][3] = $cy[1][3];
$ay[1][4] = $cy[1][4];
$ay[1][5] = $cy[1][5]-$baseShortShow[1];
$ay[1][6] = $cy[1][6]+$baseShortShow[1];
$ay[1][7] = $cy[1][7];

$bx[0][0] = $cx[0][0];
$bx[0][1] = $cx[0][1]+$baseLongShow[0];
$bx[0][2] = $cx[0][2]+$baseLongShow[0];
$bx[0][3] = $cx[0][3];
$bx[0][4] = $cx[0][4];
$bx[0][5] = $cx[0][5]-$baseLongShow[0];
$bx[0][6] = $cx[0][6]-$baseLongShow[0];
$bx[0][7] = $cx[0][7];

$bx[1][0] = $cx[1][0];
$bx[1][1] = $cx[1][1]+$baseLongShow[1];
$bx[1][2] = $cx[1][2]+$baseLongShow[1];
$bx[1][3] = $cx[1][3];
$bx[1][4] = $cx[1][4];
$bx[1][5] = $cx[1][5]-$baseLongShow[1];
$bx[1][6] = $cx[1][6]-$baseLongShow[1];
$bx[1][7] = $cx[1][7];

$by[0][0] = $cy[0][0]+$baseLongShow[0];
$by[0][1] = $cy[0][1];
$by[0][2] = $cy[0][2];
$by[0][3] = $cy[0][3]-$baseLongShow[0];
$by[0][4] = $cy[0][4]-$baseLongShow[0];
$by[0][5] = $cy[0][5];
$by[0][6] = $cy[0][6];
$by[0][7] = $cy[0][7]+$baseLongShow[0];

$by[1][0] = $cy[1][0]+$baseLongShow[1];
$by[1][1] = $cy[1][1];
$by[1][2] = $cy[1][2];
$by[1][3] = $cy[1][3]-$baseLongShow[1];
$by[1][4] = $cy[1][4]-$baseLongShow[1];
$by[1][5] = $cy[1][5];
$by[1][6] = $cy[1][6];
$by[1][7] = $cy[1][7]+$baseLongShow[1];

for my $i (0..1) {
   $acxShift[$i][0] = 0;
   $acxShift[$i][1] = -$xLabelShift;
   $acxShift[$i][2] = -$xLabelShift;
   $acxShift[$i][3] = 0;
   $acxShift[$i][4] = 0;
   $acxShift[$i][5] = $xLabelShift;
   $acxShift[$i][6] = $xLabelShift;
   $acxShift[$i][7] = 0;

   $acyShift[$i][0] = -$yLabelShift;
   $acyShift[$i][1] = 0;
   $acyShift[$i][2] = 0;
   $acyShift[$i][3] = $yLabelShift;
   $acyShift[$i][4] = $yLabelShift;
   $acyShift[$i][5] = 0;
   $acyShift[$i][6] = 0;
   $acyShift[$i][7] = -$yLabelShift;

   $bcxShift[$i][0] = -$xLabelShift;
   $bcxShift[$i][1] = 0;
   $bcxShift[$i][2] = 0;
   $bcxShift[$i][3] = -$xLabelShift;
   $bcxShift[$i][4] = $xLabelShift;
   $bcxShift[$i][5] = 0;
   $bcxShift[$i][6] = 0;
   $bcxShift[$i][7] = $xLabelShift;

   $bcyShift[$i][0] = 0;
   $bcyShift[$i][1] = -$yLabelShift;
   $bcyShift[$i][2] = $yLabelShift;
   $bcyShift[$i][3] = 0;
   $bcyShift[$i][4] = 0;
   $bcyShift[$i][5] = $yLabelShift;
   $bcyShift[$i][6] = -$yLabelShift;
   $bcyShift[$i][7] = 0;

   $abxPosition[$i][0] = ($ax[$i][0]+$bx[$i][0])/2+$xLabelShift;
   $abxPosition[$i][1] = ($cx[$i][1]+$bx[$i][1])/2+$xLabelShift;
   $abxPosition[$i][2] = ($cx[$i][2]+$bx[$i][2])/2+$xLabelShift;
   $abxPosition[$i][3] = ($ax[$i][3]+$bx[$i][3])/2+$xLabelShift;
   $abxPosition[$i][4] = ($ax[$i][4]+$bx[$i][4])/2-$xLabelShift;
   $abxPosition[$i][5] = ($cx[$i][5]+$bx[$i][5])/2-$xLabelShift;
   $abxPosition[$i][6] = ($cx[$i][6]+$bx[$i][6])/2-$xLabelShift;
   $abxPosition[$i][7] = ($ax[$i][7]+$bx[$i][7])/2-$xLabelShift;

   $abyShift[$i][0] = $yLabelShift*0.5**$i;
   $abyShift[$i][1] = $yLabelShift*0.5**$i;
   $abyShift[$i][2] = -$yLabelShift*0.5**$i;
   $abyShift[$i][3] = -$yLabelShift*0.5**$i;
   $abyShift[$i][4] = -$yLabelShift*0.5**$i;
   $abyShift[$i][5] = -$yLabelShift*0.5**$i;
   $abyShift[$i][6] = $yLabelShift*0.5**$i;
   $abyShift[$i][7] = $yLabelShift*0.5**$i;
}

$pixelsx = 320;
$pixelsy = $pixelsx*$ymax/$xmax;
$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[$pixelsx,$pixelsy]);

$picture->lb( new Label( 
   ($ax[0][$orientation[0]]+$cx[0][$orientation[0]])/2+$acxShift[0][$orientation[0]], 
   ($ay[0][$orientation[0]]+$cy[0][$orientation[0]])/2+$acyShift[0][$orientation[0]], 
   "$baseShort[0] $unit",'black','center','middle'));
$picture->lb( new Label( 
   ($bx[0][$orientation[0]]+$cx[0][$orientation[0]])/2+$bcxShift[0][$orientation[0]], 
   ($by[0][$orientation[0]]+$cy[0][$orientation[0]])/2+$bcyShift[0][$orientation[0]],
   "$baseLong[0] $unit",'black','center','middle'));
$picture->lb( new Label( 
   $abxPosition[0][$orientation[0]], 
   ($ay[0][$orientation[0]]+$by[0][$orientation[0]])/2+$abyShift[0][$orientation[0]],
   "x $unit",'black','center','middle'));

$picture->lb( new Label( 
   ($ax[1][$orientation[1]]+$cx[1][$orientation[1]])/2+$acxShift[1][$orientation[1]], 
   ($ay[1][$orientation[1]]+$cy[1][$orientation[1]])/2+$acyShift[1][$orientation[1]], 
   "$baseShort[1] $unit",'black','center','middle'));
$picture->lb( new Label( 
   ($bx[1][$orientation[1]]+$cx[1][$orientation[1]])/2+$bcxShift[1][$orientation[1]], 
   ($by[1][$orientation[1]]+$cy[1][$orientation[1]])/2+$bcyShift[1][$orientation[1]],
   "$baseLong[1] $unit",'black','center','middle'));
$picture->lb( new Label( 
   $abxPosition[1][$orientation[1]], 
   ($ay[1][$orientation[1]]+$by[1][$orientation[1]])/2+$abyShift[1][$orientation[1]],
   "$hypotenuse[1] $unit",'black','center','middle'));


$picture->new_color("darkblue",  100,100,255); 

for my $i (0..1) {
   $picture->moveTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]]);
   $picture->lineTo($bx[$i][$orientation[$i]],$by[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($cx[$i][$orientation[$i]],$cy[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]], darkblue,3);
}


$text = "There are two triangles. The one on the right is smaller, and the one on the left is larger. Both triangles have unequal sides. For the smaller triangle, its shortest side is marked as $baseShort[1] $unit, its second shortest side is marked as $baseLong[1] $unit, and its longest side is marked as $hypotenuse[1] $unit. For the bigger triangle, its shortest side is marked as $baseShort[0] $unit, its second shortest side is marked as $baseLong[0] $unit, and its longest side is marked as x $unit.";

$ans = $hypotenuse[0];
$ansU = NumberWithUnits("$ans ft");

##############################################

TEXT(beginproblem());

BEGIN_PGML

The following two triangles are similar to each other. Find the length of the missing side.

>>[@ image(insertGraph( $picture  ), tex_size=>400, height=>$pixelsy, width=>$pixelsx, extra_html_tags => "alt = '$text' title = '$text' ") @]*<<

[@KeyboardInstructions(q!Use [|in|]* for inches.!)@]**

The missing side's length is [__________]{$ansU}

END_PGML

##############################################

$s1 = $hypotenuse[1]*$baseShort[0];

BEGIN_PGML_SOLUTION

If two shapes are similar to each other, the lengths of their corresponding sides are in proportion. We can write an equation and solve for [`x`]:

    [``
\begin{aligned}
   \frac{x}{[$hypotenuse[1]]} &= \frac{[$baseShort[0]]}{[$baseShort[1]]}  \\
   \mathbf{[$hypotenuse[1]]\cdot[$baseShort[1]]\cdot} \frac{x}{[$hypotenuse[1]]} &= \mathbf{[$hypotenuse[1]]\cdot[$baseShort[1]]\cdot} \frac{[$baseShort[0]]}{[$baseShort[1]]} \\
   [$baseShort[1]]x &= [$hypotenuse[1]]\cdot[$baseShort[0]] \\
   [$baseShort[1]]x &= [$s1] \\
   \frac{[$baseShort[1]]x}{[$baseShort[1]]} &= \frac{[$s1]}{[$baseShort[1]]} \\
   x &= [$hypotenuse[0]]
\end{aligned}
    ``]

*Solution:* The length of the missing side is [`[$ansU]`].

END_PGML_SOLUTION

ENDDOCUMENT();
