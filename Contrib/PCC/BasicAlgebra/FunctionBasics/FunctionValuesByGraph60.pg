# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Given the graphs of f(x) and g(x), find when f(x)<g(x)
#
# Last update: Carl Yao 07/06/2014
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection()
## KEYWORDS('function','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PGcourse.pl"
);

##############################################
TEXT(beginproblem());

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$refreshCachedImages=1;

do {
   #define f(x)
   $fLeftX = random(-6,-4,1);
   $fLeftY = random(4,6,1);
   $fMidX = random(-2,2,1);
   $temp = $fLeftX+$fLeftY;
   $fLeftFunc = Compute("-x+$temp")->reduce;
   $fMidY = $fLeftFunc->eval(x=>$fMidX);
   $fRightX = random(4,6,1);
   $temp = -$fMidX+$fMidY;
   $fRightFunc = Compute("x+$temp")->reduce;
   $fRightY = $fRightFunc->eval(x=>$fRightX);

   #set the left-side intercept point
   $leftInterceptX = random($fLeftX+1,$fMidX-1,1);
   $leftInterceptY = $fLeftFunc->eval(x=>$leftInterceptX);

   #define g(x)'s left-side function
   $temp = -$leftInterceptX+$leftInterceptY;
   $gLeftFunc = Compute("x+$temp")->reduce;
   $gLeftX = random(-6,-4,1);
   $gLeftY = $gLeftFunc->eval(x=>$gLeftX);

   #define g(x)'s right-side function
   $gMidX = random($leftInterceptX+1,2,1);
   $gMidY = $gLeftFunc->eval(x=>$gMidX);
   $temp = $gMidX+$gMidY;
   $gRightFunc = Compute("-x+$temp")->reduce;
   $gRightX = random(4,6,1);
   $gRightY =$gRightFunc->eval(x=>$gRightX);

   #find the right-side intersection
   $rightInterceptX = ($gMidY-$fMidY+$gMidX+$fMidX)/2;
   $rightInterceptY = ($gMidX-$fMidX+$gMidY+$fMidY)/2;
} until ( (int($rightInterceptX)==$rightInterceptX) && ($rightInterceptX!=$gRightX) );

$border = 8;
($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([-$border,$border],[-$border,$border],centerOrigin=>1);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..1) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }

   add_functions($gr[$i], "$fLeftFunc for x in [$fLeftX,$fMidX] using color:blue and weight:2");
   add_functions($gr[$i], "$fRightFunc for x in [$fMidX,$fRightX] using color:blue and weight:2");
   $gr[$i]->lb( new Label($fLeftX,$fLeftY+0.5,'f(x)','blue','center','bottom'));
   
   add_functions($gr[$i], "$gLeftFunc for x in [$gLeftX,$gMidX] using color:red and weight:2");
   add_functions($gr[$i], "$gRightFunc for x in [$gMidX,$gRightX] using color:red and weight:2");
   $gr[$i]->lb( new Label($gLeftX,$gLeftY-0.5,'g(x)','red','center','top'));

}

$ALT0 = "There is a graph of f(x) and a graph of g(x). Both graphs have two line segments. The graph of f(x) starts at the point ($fLeftX,$fLeftY), continues till ($fMidX,$fMidY), and then changes its direction, and ends at ($fRightX,$fRightY). The graph of g(x) starts at the point ($gLeftX,$gLeftY), continues till ($gMidX,$gMidY), and then changes its direction, and ends at ($gRightX,$gRightY). They intersect at two locations: ($leftInterceptX,$leftInterceptY) and ($rightInterceptX,$rightInterceptY).";

$gr[1]->stamps( closed_circle($leftInterceptX,$leftInterceptY,'black') );
$gr[1]->stamps( closed_circle($rightInterceptX,$rightInterceptY,'black') );

$gr[1]->lb( new Label($leftInterceptX-0.5,$leftInterceptY,"($leftInterceptX,$leftInterceptY)",'black','right','middle'));

$gr[1]->lb( new Label($rightInterceptX+0.5,$rightInterceptY,"($rightInterceptX,$rightInterceptY)",'black','left','middle'));

$ansEqual = List($leftInterceptX,$rightInterceptX);

Context("Interval");
$fLess = Compute("($leftInterceptX,$rightInterceptX)");
$fLessEqual = Compute("[$leftInterceptX,$rightInterceptX]");


##############################################
Context("LimitedNumeric");
BEGIN_PGML

The graphs of two functions, [`f(x)`] and [`g(x)`] are shown below.

[@EnlargeImageStatementPGML()@]**


>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT0' title = '$ALT0'") @]*<<

*Question 1:* At what [`x`] values is [`f(x)=g(x)`] true? [___________]{$ansEqual} Use comma to separate answers if needed.

*Question 2:* When is [`f(x) \lt g(x)`]? [_____________]{$fLess}. Use interval notation to answer this question, and use the upper case letter U to represent the "union" symbol, if needed.

*Question 3:* When is [`f(x) \le g(x)`]? [_____________]{$fLessEqual}. Use interval notation to answer this question, and use the upper case letter U to represent the "union" symbol, if needed.

END_PGML
##############################################

BEGIN_PGML_SOLUTION

>>[@image(insertGraph($gr[1]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT0' title = '$ALT0'") @]*<<

*Question 1:* In the graph, we can see [`f(x)`] and [`g(x)`] intersect at [`([$leftInterceptX],[$leftInterceptY])`] and [`([$rightInterceptX],[$rightInterceptY])`]. These are the two locations where [`f(x)=g(x)`], so the answer of the first question is:

    [`f(x)=g(x)`] is true at [`x=[$ansEqual]`]. 

A formal way to write this result is [`f([$leftInterceptX])=g([$leftInterceptX])`] and [`f([$rightInterceptX])=g([$rightInterceptX])`].

*Question 2:* [`f(x) \lt g(x)`] is true when the [`y`]-value of [`f(x)`] is below that of [`g(x)`] in the graph. This happens when [`x`] is in the interval [`[$fLess]`].

*Question 3:* For this question, the difference from Question 2 is that the value of [`f(x)`] can be equal to that of [`g(x)`]. This happens when [`x`] is in the interval [`[$fLessEqual]`]. At the points [`([$leftInterceptX],[$leftInterceptY])`] and [`([$rightInterceptX],[$rightInterceptY])`], the [`y`] values are equal, so these two points should be included in the solution.

END_PGML_SOLUTION


ENDDOCUMENT();
