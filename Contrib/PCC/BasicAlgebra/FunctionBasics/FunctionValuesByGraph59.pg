# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Give a function's graph, solve f(x)>g(x), where g(x) is a constant function.
#
# Last update: Carl Yao 06/28/2016
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection()
## KEYWORDS('function','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "PGgraphmacros.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "PCCmacros.pl",
  "PGinfo.pl",
  "PGcourse.pl"
);


##############################################
TEXT(beginproblem());

Context("Numeric");
$refreshCachedImages=1;

$xMin = -4;
$xMax = -$xMin;
$yMin = -4;
$yMax = -$yMin;

$p1x = random($xMin,0,1);
$p1y = random($yMin,$yMax,1);

$p2x = random($p1x+2,$xMax,1);
$p2y = $p1y;

$p3x = ($p1x+$p2x)/2;
$p3y = ($p1y>0) ? $p1y-random(2,4,1) : $p1y+random(2,4,1);

$a= ($p1y-$p3y)/($p3x-$p1x);
$func1 = Compute("$a*abs(x-$p3x)+$p3y")->reduce;
$func2 = Compute("$p1y");

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([$xMin,$xMax],[$yMin,$yMax],centerOrigin=>1);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..1) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }
}

add_functions($gr[0], "$func1 for x in <$min[0],$max[0]> using color:blue and weight:2");
add_functions($gr[0], "$func2 for x in <$min[0],$max[0]> using color:red and weight:2");

$start = ($p1y>$p3y) ? 'top' : 'bottom';
$turnUpDown = ($p1y>$p3y) ? 'upward' : 'downward';
$ALT0 = "This is the graph of two functions. The first function, f(x), is an absolute value function, colored blue. It starts from $start left, crosses the points ($p1x,$p1y) and ($p3x,$p3y), turns $turnUpDown at the point ($p3x,$p3y), crosses the point ($p2x,$p2y), and then continues to the $start right. The second function is a constant function, g(x)=$p1y, colored red. These two functions intersect at ($p1x,$p1y) and ($p2x,$p2y).";

#the graph used in solution

$gr[1]->stamps( closed_circle($p1x,$p1y,'black') );
$gr[1]->stamps( closed_circle($p2x,$p2y,'black') );

$gr[1]->lb( new Label($p1x-$marksep[1]/8,$p1y,"($p1x,$p1y)",'black','right','top'));
$gr[1]->lb( new Label($p2x+$marksep[1]/8,$p2y,"($p2x,$p2y)",'black','left','top'));

if ($p1y>$p3y) {
   $gr[0]->lb( new Label($p3x, $p3y-$marksep[1]/8, "f(x)",'blue','center','top'));
   $gr[0]->lb( new Label($p3x, $p1y+$marksep[1]/8, "g(x)",'red','center','bottom'));
   $gr[1]->lb( new Label($p1x, $p1y+$marksep[1]/8, "f(x)",'blue','left','bottom'));
   $gr[1]->lb( new Label($p1x, $p1y-$marksep[1]/8, "g(x)",'red','left','top'));
   add_functions($gr[1], "$func1 for x in <$min[0],$p1x> using color:blue and weight:2");
   add_functions($gr[1], "$func1 for x in <$p2x,$max[0]> using color:blue and weight:2");
   add_functions($gr[1], "$func2 for x in <$min[0],$p1x> using color:red and weight:2");
   add_functions($gr[1], "$func2 for x in <$p2x,$max[0]> using color:red and weight:2");
   $ALT1 = "This graph is the same as the graph above, except only parts of those two functions are graphed--in the domain of (-infinity,$p1x]U[$p2x,infinity). The points ($p1x,$p1y) and ($p2x,$p2y) are both closed.";
} else {
   $gr[0]->lb( new Label($p3x, $p3y+$marksep[1]/8, "f(x)",'blue','center','bottom'));
   $gr[0]->lb( new Label($p3x, $p1y-$marksep[1]/8, "g(x)",'red','center','top'));
   $gr[1]->lb( new Label($p3x, $p3y+$marksep[1]/8, "f(x)",'blue','center','bottom'));
   $gr[1]->lb( new Label($p3x, $p1y-$marksep[1]/8, "g(x)",'red','center','top'));
   add_functions($gr[1], "$func1 for x in <$p1x,$p2x> using color:blue and weight:2");
   add_functions($gr[1], "$func2 for x in <$p1x,$p2x> using color:red and weight:2");
   $ALT1 = "This graph is the same as the graph above, except only parts of those two functions are graphed--in the domain of [$p1x,$p2x]. The points ($p1x,$p1y) and ($p2x,$p2y) are both closed.";
}



Context("Interval");

if ($p1y>$p3y) {
   $ans1 = Compute("(-infinity,$p1x] U [$p2x,infinity)");
   $ans2 = Compute("($p1x,$p2x)");
} else {
   $ans2 = Compute("(-infinity,$p1x) U ($p2x,infinity)");
   $ans1 = Compute("[$p1x,$p2x]");
}

##############################################
Context("LimitedNumeric");
BEGIN_PGML

The graphs of two functions, [`f`] and [`g`] are shown below.

[@EnlargeImageStatementPGML()@]**


>>[@image(insertGraph($gr[0]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT0' title = '$ALT0'") @]*<<

Use interval notation in your answers. Use *inf* to represent infinity.

    a. Solve [`` f(x) \ge g(x) ``]  
    Solution: [_________]{$ans1}

    a. Solve [`` f(x) \lt g(x) ``]  
    Solution: [_________]{$ans2}


END_PGML

##############################################

BEGIN_PGML_SOLUTION

The question [` f(x) \ge g(x) `] is asking: For what [`x`] values, are function [`f`]'s [`y`] value greater than or equal to function [`g`]'s [`y`] values? We can break down this question into two steps:

1. In the graph, identify function [`f`]'s part(s) whose [`y`] values are greater than or equal to [`g(x)`]'s [`y`] values.
2. Identify the [`x`] values corresponding to that part(s) of the function.

In this graph, only the part(s) satisfying [` f(x) \ge g(x) `] are graphed:

>>[@image(insertGraph($gr[1]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT1' title = '$ALT1'") @]*<<

The corresponding [`x`] values of the graphed part(s) are in [`[$ans1]`]. In other words, to satisfy [` f(x) \ge g(x) `], the [`x`] values need to be in [`[$ans1]`].

Similarly, the ungraphed part(s) satisfied [`f(x) \lt g(x)`]. In other words, to satisfy [` f(x) \lt g(x) `], the [`x`] values need to be in [`[$ans2]`].


END_PGML_SOLUTION


ENDDOCUMENT();
