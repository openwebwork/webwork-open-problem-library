# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Decide whether a graph represents a function.
# There are two graphs. Both graphs consists of 3 points.
#
# Last update: Jordan 9/15/13; Carl Yao 09/13/13
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Function')
## DBsection('Domain and Range')
## KEYWORDS('function','domain','range','graph')
## DBCCSS('8.F','F-IF')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCgraphMacros.pl",
  "parserPopUp.pl",
  "PGtikz.pl",
  "PCCmacros.pl",
  "ORCCA.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());

Context("Numeric");


#Decide the number of points in the graph.
$numPoints = 3;

#Create two sets of 3 points with no duplicate values in each set.
@px=([],[]);
@py=([],[]);
for my $i (0..1) {
   @xArray = (-8..8);
   @yArray = (-8..8);
   for my $j (0..$numPoints-1) {
      $px[$i][$j] = splice @xArray,random(0,$#xArray,1),1;
      $py[$i][$j] = splice @yArray,random(0,$#yArray,1),1;
   }
}

#Decide whether each graphs shows a function or non-function.
@isFunction=();
@popup=();

for my $i (0..1) {
  $isFunction[$i]=random(0,1,1);
  if ($isFunction[$i]) {
      #Intentionally create a duplicate y value in two points.
      $dup0 = random(0,$numPoints-1);
      do {$dup1=random(0,$numPoints-1);} until ($dup0!=$dup1);
      $py[$i][$dup0]=$py[$i][$dup1];
   } else {
      #Create a duplicate x value in two points.
      $dup0 = random(0,$numPoints-1);
      do {$dup1=random(0,$numPoints-1);} until ($dup0!=$dup1);
      $px[$i][$dup0]=$px[$i][$dup1];
   }

   $isFunctionText = $isFunction[$i] ? "does" : "does not";
   $graphNum = $i+1;
   $popup[$i]=PopUp(['?','does','does not'], "$isFunctionText");
}

#Make a copy of those two sets of points for display in solution.
for my $i (2..3) {
   for my $j (0..$numPoints-1) {
      $px[$i][$j]=$px[$i-2][$j];
      $py[$i][$j]=$py[$i-2][$j];
   }
}

($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([$px[0][0],$px[0][1],$px[0][2],$px[1][0],$px[1][1],$px[1][2]],[$py[0][0],$py[0][1],$py[0][2],$py[1][0],$py[1][1],$py[1][2]]);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;


$gr[0] = createTikZImage();
$gr[0]->addToPreamble(latexImagePreamble());
$gr[0]->BEGIN_TIKZ
\begin{axis}[
    xmin = $min[0],
    xmax = $max[0],
    ymin = $min[1],
    ymax = $max[1],
    xtick =,
    ytick =,
    minor xtick = {$min[0],...,$max[0]},
    minor ytick = {$min[1],...,$max[1]},
  ]
  \addplot[soliddot] coordinates {($px[0][0],$py[0][0]) ($px[0][1],$py[0][1]) ($px[0][2],$py[0][2])};
\end{axis}
END_TIKZ

$gr[1] = createTikZImage();
$gr[1]->addToPreamble(latexImagePreamble());
$gr[1]->BEGIN_TIKZ
\begin{axis}[
    xmin = $min[0],
    xmax = $max[0],
    ymin = $min[1],
    ymax = $max[1],
    xtick =,
    ytick =,
    minor xtick = {$min[0],...,$max[0]},
    minor ytick = {$min[1],...,$max[1]},
  ]
  \addplot[soliddot] coordinates {($px[1][0],$py[1][0]) ($px[1][1],$py[1][1]) ($px[1][2],$py[1][2])};
\end{axis}
END_TIKZ

$gr[2] = createTikZImage();
$gr[2]->addToPreamble(latexImagePreamble());
$gr[2]->BEGIN_TIKZ
\begin{axis}[
    xmin = $min[0],
    xmax = $max[0],
    ymin = $min[1],
    ymax = $max[1],
    xtick =,
    ytick =,
    minor xtick = {$min[0],...,$max[0]},
    minor ytick = {$min[1],...,$max[1]},
  ]
  \addplot[soliddot] coordinates {($px[2][0],$py[2][0]) ($px[2][1],$py[2][1]) ($px[2][2],$py[2][2])};
  \addplot[verticallinetest] coordinates {($px[2][0],$min[1]) ($px[2][0],$max[1])};
  \addplot[verticallinetest] coordinates {($px[2][1],$min[1]) ($px[2][1],$max[1])};
  \addplot[verticallinetest] coordinates {($px[2][2],$min[1]) ($px[2][2],$max[1])};
\end{axis}
END_TIKZ

$gr[3] = createTikZImage();
$gr[3]->addToPreamble(latexImagePreamble());
$gr[3]->BEGIN_TIKZ
\begin{axis}[
    xmin = $min[0],
    xmax = $max[0],
    ymin = $min[1],
    ymax = $max[1],
    xtick =,
    ytick =,
    minor xtick = {$min[0],...,$max[0]},
    minor ytick = {$min[1],...,$max[1]},
  ]
  \addplot[soliddot] coordinates {($px[3][0],$py[3][0]) ($px[3][1],$py[3][1]) ($px[3][2],$py[3][2])};
  \addplot[verticallinetest] coordinates {($px[3][0],$min[1]) ($px[3][0],$max[1])};
  \addplot[verticallinetest] coordinates {($px[3][1],$min[1]) ($px[3][1],$max[1])};
  \addplot[verticallinetest] coordinates {($px[3][2],$min[1]) ($px[3][2],$max[1])};
\end{axis}
END_TIKZ




@ALT=();
@ALTPoints=();
for my $i (0..3) {
  $ALTPoints[$i]="";

  for my $j (0..$numPoints-1) {
    $ALTPoints[$i] .= "($px[$i][$j],$py[$i][$j]), ";
  }

  $ALTPoints[$i] =~ s/, $//;
  $ALTPoints[$i] =~ s|(.+), |$1 and |;
  $ip = $i % 2 +1;
  $ALT[$i] = "Graph $ip: a graph consisting of the following points: $ALTPoints[$i].";
  $ALTPoints[$i] =~ s/ and /, /;

}

$ALT0 = $ALT[0];
$ALT1 = $ALT[1];

##############################################
Context("LimitedNumeric");
BEGIN_PGML

Decide whether each graph shows a relationship where [`y`] is a function of [`x`].

[@EnlargeImageStatementPGML()@]**

>>[@image($gr[0], width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT0' title = '$ALT0'") @]* [@SPACE@]* [@SPACE@]* [@SPACE@]* [@SPACE@]* [@image($gr[1], width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT1' title = '$ALT1'") @]* <<

The first graph [__]{$popup[0]} give a function of [`x`].  The second graph [__]{$popup[1]} give a function of [`x`].

END_PGML

##############################################

$showPartialCorrectAnswers = 0;


#######################################################

$graph1Output1 = $isFunction[0] ? "passed" : "did not pass";
$graph2Output1 = $isFunction[1] ? "passed" : "did not pass";
$graph1Output2 = $isFunction[0] ? "represents" : "does not represent";
$graph2Output2 = $isFunction[1] ? "represents" : "does not represent";

#####################################################

$ALT2 = $ALT[2];
$ALT3 = $ALT[3];

BEGIN_PGML_SOLUTION

If a graph shows a relationship where [`y`] is a function of [`x`], it has to pass the vertical line test. 

>> [@image($gr[2], width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT2' title = '$ALT2'") @]* [@SPACE@]* [@SPACE@]* [@SPACE@]* [@SPACE@]* [@image($gr[3], width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>"alt = '$ALT3' title = '$ALT3'") @]* <<

The first graph [$graph1Output1] the test, and thus it [$graph1Output2] [`y`] as a function of [`x`].



The second graph [$graph2Output1] the test, and thus it [$graph2Output2] [`y`] as a function of [`x`].


END_PGML_SOLUTION


ENDDOCUMENT();
