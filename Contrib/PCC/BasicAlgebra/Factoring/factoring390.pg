# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Factor the given polynomial 
#
#     d a x^(2+n) + d (b+ac) x^(n+1) + d bc x^n
#
# The answer is
#
#     d x^n (a x + b)( x + c)
#
# a=1
#
# b, c are non-zero, integer on the interval [1,10].
# d is integer on [2,10], but we make sure the numbers aren't too big.
#
# n is the exponent, and is integer on [2,8]
#
# Last updated: Hughes, 8/16/13
# ENDDESCRIPTION

## DBCC('A-APR.1','A-SSE.2')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents', 'Factoring')
## KEYWORDS('polynomial','trinomial','exponents','factoring')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
"contextLimitedFactor.pl",
  "PGcourse.pl",
);

##############################################

Context("LimitedFactor");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>'variable');
Context()->variables->are($var=>'Real');

Context()->strings->add("cannot be factored"=>{},
    "cannot be factored."=>{alias=>"cannot be factored"});
Context()->strings->add('prime'=>{}, 'it is prime'=>{alias=>'prime'});
Context()->noreduce('(-x)-y', '(-x)+y'); 





# the common term 
$a = 1;
$b = 100;
$c = 1;
$d = 1;
# this next condition ensures the numbers don't get too big
while(abs($d*$b+$d*$a*$c)+abs($d*$b*$c)>50)
{
    $a = 1;
    $b = random(1,10,1);
    $c = $b;
    $c = random(1,10,1)while($c==$b);
    $d = random(2,10,1);
}

$n = random(2,8,1);
$leading = $a;
$middle = ($b+$a*$c);
$end = $b*$c;
$question = Formula("$d*$leading*$var^(2+$n)+$d*$middle*$var^($n+1)+$d*$end$var^$n")->reduce;
$ans = Formula("$d*$var^$n($a*$var+$b)*($var+$c)")->reduce;
##############################################
TEXT(beginproblem());

BEGIN_PGML
Factor the given polynomial 

    [`[$question]=`] [___________________]{$ans}

If the expression cannot be factored then answer with *prime*.
END_PGML

$step1 = Formula("$d$var^$n($leading*$var^2+$middle*$var+$end)")->reduce;
BEGIN_PGML_SOLUTION
Let's start by noting that [`[$d][$var]^{[$n]}`] is a common factor to each term, so 
we may write

        [`[$question]=[$step1]`]

To factor this expression further we make the following observations:
* the leading coefficient is [$leading]
* the middle term's coefficient and the last term are _positive_ which means that the factorization
will have the form

      [`([$var]+\phantom{3})([$var]+\phantom{3})`]

We look for factors of [`[$end]`] that add to [`[$middle]`]; the 
factors that work are [`[$b]`] and [`[$c]`] so

    [`[$question]=[$ans]`]

Note that this answer can be checked by using the FOIL (*F*irst *O*utside *I*nside *L*ast) technique (exercise).
END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
