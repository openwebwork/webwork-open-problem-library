# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Factor the given polynomial 
#
#     a x^3 + b^3
#
# a!=1 and b=1 in this problem 
#
# The answer is
#
#     (a x + b)( a^2 x ^2 - a b x + b^ 2)
#
# Last updated: Hughes, 8/19/13
# ENDDESCRIPTION

## DBCC('A-APR.1','A-SSE.2')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Exponents', 'Factoring')
## KEYWORDS('polynomial','exponents','factoring','special products')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextLimitedFactor.pl",
  "PGcourse.pl",
);

##############################################

Context("LimitedFactor");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>'variable');
Context()->variables->are($var=>'Real');

Context()->strings->add("cannot be factored"=>{},
    "cannot be factored."=>{alias=>"cannot be factored"});
Context()->strings->add('prime'=>{}, 'it is prime'=>{alias=>'prime'});
Context()->noreduce('(-x)-y', '(-x)+y'); 

# the coefficients
$a = random(2,10,1);
$b = 1;
$c = 1;

$leading = $a**2;
$middle = -$a*$b;
$end = $b**2;
$question = Formula("$a**3*$var^3+$b^3")->reduce;
$ans = Formula("($a*$var+$b)($leading*$var^2+$middle*$var+$end)")->reduce;

##############################################
TEXT(beginproblem());

BEGIN_PGML
Factor the given polynomial 

    [`[$question]=`] [___________________]{$ans}

If the expression cannot be factored then answer with *prime*.

END_PGML

if(abs($a)>5 or abs($b)>5)
{
   $hintvala = $a**3;
   $hintvalb = $b**3;
   $hint = "\text{Hint: }";
   if(abs($a)>5)
   {
     $hint .= "$hintvala = $a^3";
   }
   elsif(abs($b)>5)
   {
     $hint .= "$hintvalb = $b^3";
   }
Context()->texStrings;
BEGIN_TEXT
\($hint\)
END_TEXT
}

$step = Formula("$a$var")->reduce;
BEGIN_PGML_SOLUTION
Note that the given expression is a _sum of cubes_. The SOAP acronym may help you remember how to factor sums and differences of cubes. First, you need to know that they factor as a binomial times a trinomial:

     [`
            \begin{aligned}
                [$question] & = ([$step])^3+[@abs([$b])@]^3\\
                            & = (\phantom{x+y})(\phantom{x+y+z})
            \end{aligned}
     `]

Next you need to know that the binomial and trinomial always have terms like in the following template, except that signs may be different:

     [`
            \begin{aligned}
                [$question] & = ([$step])^3+[@abs([$b])@]^3\\
                            & = (a\phantom{{}+{}}b)(a^2\phantom{{}+{}}ab\phantom{{}+{}}b^2)\\
                            & = ([$a][$var]\phantom{{}+{}}[@abs([$b])@])(([$a][$var])^2\phantom{{}+{}}[$a][$var]([@abs([$b])@])\phantom{{}+{}}([@abs([$b])@])^2)\\
                            & = ([$a][$var]\phantom{{}+{}}[@abs([$b])@])([$a*$a][$var]^2\phantom{{}+{}}[@$a*abs([$b])@][$var]\phantom{{}+{}}[@abs([$b*$b])@])\\
            \end{aligned}
     `]

Finally, the SOAP acronym helps you remember which operations belong between the terms. The 'S' stands for "same", meaning that the operation in the binomial is the same as the one that was in the sum or difference of cubes:

     [`
            \begin{aligned}
                [$question]  & = ([$a][$var]+[@abs([$b])@])([$a*$a][$var]^2\phantom{{}+{}}[@$a*abs([$b])@][$var]\phantom{{}+{}}[@abs([$b*$b])@])\\
            \end{aligned}
     `]

The 'O' stands for "opposite", meaning that the next operation (the first one from the trinomial) should be the opposite of what was in the sum or difference of cubes:

     [`
            \begin{aligned}
                [$question]  & = ([$a][$var]+[@abs([$b])@])([$a*$a][$var]^2-[@$a*abs([$b])@][$var]\phantom{{}+{}}[@abs([$b*$b])@])\\
            \end{aligned}
     `]

And the 'AP' stands for "always plus", meaning that the last operation is always addition.

     [`
            \begin{aligned}
                [$question]  & = [$ans]\\
            \end{aligned}
     `]



Note that this answer can be checked using polynomial multiplication (exercise).
END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
