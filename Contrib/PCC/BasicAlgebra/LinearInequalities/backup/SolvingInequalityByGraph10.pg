
DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "AnswerFormatHelp.pl",
  "PGgraphmacros.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

############################################################
# Header
############################################################
TEXT(beginproblem());

############################################################
# PG Setup
############################################################
Context('Numeric');

do {
  $numerator = random(1,5,1);
  $denominator = random(1,5,1);
  $h = non_zero_random(-6,6,1);
  do {$k = non_zero_random(-6,6,1);} until ($h != $k);
  $m = $numerator/$denominator*$h*$k/abs($h*$k);
  $k2 = ($k > 0) ? $k - $numerator : $k + $numerator;
  $h2 = ($k2-$k)/$m+$h;
} until ($k2 != $h2);

@k = num_sort($k,$k2);
@h = num_sort($h,$h2);
$f = Formula("$m*(x - $h)+$k")->reduce;
  
@gr = ( );
@xvalues = num_sort(-7,7,(7-$k)/$m+$h,(-7-$k)/$m+$h);
for my $i (0..2) {
  $gr[$i] = init_graph(-7,-7,7,7,
    axes=>[0,0],
    grid=>[14,14],
    size=>[240,240]
  );
  $gr[$i]->lb('reset');
  for $j (-6..6){
    if ($j==0 or $j%2!=0) {next;}
    $gr[$i]->lb(new Label($j,0,$j,'black','center','top','large'));
    $gr[$i]->lb(new Label(0,$j,$j,'black','right','middle','large'));
  };
  $gr[$i]->moveTo($h,$k);
  $gr[$i]->arrowTo($xvalues[1],$m*($xvalues[1]-$h)+$k,'blue',1);
  $gr[$i]->moveTo($h,$k);
  $gr[$i]->arrowTo($xvalues[2],$m*($xvalues[2]-$h)+$k,'blue',1);
}

$alt[0] = "This is the graph of a straight line which passes the points ($h,$k) and ($h2,$k2).";

@symbols = ('\lt','\le','\gt','\ge');
@words = ('less than','less than or equal to','greater than','greater than or equal to');
$i0 = random(0,3,1);
if (random(0,1,1)==0) {
  $i1 = 0;
  $i2 = 1;
} else {
  $i1 = 1;
  $i2 = 0;
}
$symbol0 = $symbols[$i0];
$symbol1 = $symbols[$i1];
$symbol2 = $symbols[$i2];

@leftBrackets = ('(','[');
@rightBrackets = (')',']');

@ans = ( );

$gr[1]->moveTo($h,$k);
if ($m > 0) {
  if ($i0 == 0) {
    $ans[0] = Interval("(-inf,$h)");
    $gr[1]->arrowTo($xvalues[1],$m*($xvalues[1]-$h)+$k,'red',1);
    $gr[1]->stamps( open_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from negative infinity to x=$h is highlighted in red. The point ($h,$k) is open.";
  } elsif ($i0 == 1) {
    $ans[0] = Interval("(-inf,$h]");
    $gr[1]->arrowTo($xvalues[1],$m*($xvalues[1]-$h)+$k,'red',1);
    $gr[1]->stamps( closed_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from negative infinity to x=$h is highlighted in red. The point ($h,$k) is closed.";
  } elsif ($i0 == 2) {
    $ans[0] = Interval("($h,inf)");
    $gr[1]->arrowTo($xvalues[2],$m*($xvalues[2]-$h)+$k,'red',1);
    $gr[1]->stamps( open_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from x=$h to infinity is highlighted in red. The point ($h,$k) is open.";
  } else {
    $ans[0] = Interval("[$h,inf)");
    $gr[1]->arrowTo($xvalues[2],$m*($xvalues[2]-$h)+$k,'red',1);
    $gr[1]->stamps( closed_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from x=$h to infinity is highlighted in red. The point ($h,$k) is closed.";
  }
} else {
  if ($i0 == 0) {
    $ans[0] = Interval("($h,inf)");
    $gr[1]->arrowTo($xvalues[2],$m*($xvalues[2]-$h)+$k,'red',1);
    $gr[1]->stamps( open_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from x=$h to infinity is highlighted in red. The point ($h,$k) is open.";
  } elsif ($i0 == 1) {
    $ans[0] = Interval("[$h,inf)");
    $gr[1]->arrowTo($xvalues[2],$m*($xvalues[2]-$h)+$k,'red',1);
    $gr[1]->stamps( closed_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from x=$h to infinity is highlighted in red. The point ($h,$k) is closed.";
  } elsif ($i0 == 2) {
    $ans[0] = Interval("(-inf,$h)");
    $gr[1]->arrowTo($xvalues[1],$m*($xvalues[1]-$h)+$k,'red',1);
    $gr[1]->stamps( open_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from negative infinity to x=$h is highlighted in red. The point ($h,$k) is open.";
  } else {
    $ans[0] = Interval("(-inf,$h]");
    $gr[1]->arrowTo($xvalues[1],$m*($xvalues[1]-$h)+$k,'red',1);
    $gr[1]->stamps( closed_circle($h,$k,'red') );
    $alt[1] = $alt[0]." The segment from negative infinity to x=$h is highlighted in red. The point ($h,$k) is closed.";
  }
}

$y0 = $f->eval(x=>$h[0]);
$y1 = $f->eval(x=>$h[1]);
$ans[1] = Interval("$leftBrackets[$i2] $h[0],$h[1] $rightBrackets[$i1]");
$gr[2]->moveTo($h[0],$y0);
$gr[2]->lineTo($h[1],$y1,'red',1);
$alt[2] = $alt[0]." The segment from ($h[0],$y0) to ($h[1],$y1) is highlighted in red.";
if ($i1==1) {
  $gr[2]->stamps( open_circle($h[0],$y0,'red') );
  $alt[2] .= " The point ($h[0],$y1) is open,";
} else {
  $gr[2]->stamps( closed_circle($h[0],$y0,'red') );
  $alt[2] .= " The point ($h[0],$y0) is closed,";
}
if ($i2==1) {
  $gr[2]->stamps( open_circle($h[1],$y1,'red') );
  $alt[2] .= " and the point ($h[1],$y1) is open.";
} else {
  $gr[2]->stamps( closed_circle($h[1],$y1,'red') );
  $alt[2] .= " and the point ($h[1],$y1) is closed.";
}


############################################################
# Body
############################################################

BEGIN_PGML
A graph of [`f`] is given. Use the graph alone to solve the compound inequalities.

>>[@ image(insertGraph($gr[0]), tex_size=>400, height=>400, width=>400,
extra_html_tags=>"alt= '$alt[0]' title= '$alt[0]'"
) @]*<<

[@KeyboardInstructions(q?Write your solution sets in interval notation.?)@]**

1.  [`f(x) [$symbols[$i0]] [$k]`]

    [__________]{$ans[0]}

1.  [`[$k[0]] [$symbols[$i1]] f(x) [$symbols[$i2]] [$k[1]]`]

    [__________]{$ans[1]}

END_PGML

############################################################
# End Problem
############################################################



BEGIN_PGML_SOLUTION

###Question 1

To meet the condition [`f(x) [$symbols[$i0]] [$k]`], the function's [`y`]-value must be [$words[$i0]] [`[$k]`]. The corresponding segment is highlighted in the following graph.

>>[@ image(insertGraph($gr[1]), tex_size=>400, height=>400, width=>400,
extra_html_tags=>"alt= '$alt[1]' title= '$alt[1]'"
) @]*<<

The corresponding [`x`]-values on the segment is [`[$ans[0]]`].

###Question 2

To meet the condition [`[$k[0]] [$symbols[$i1]] f(x) [$symbols[$i2]] [$k[1]]`], the function's [`y`]-value must be between [`[$k[0]]`] and [`[$k[1]]`]. The corresponding segment is highlighted in the following graph.

>>[@ image(insertGraph($gr[2]), tex_size=>400, height=>400, width=>400,
extra_html_tags=>"alt= '$alt[2]' title= '$alt[2]'"
) @]*<<

The corresponding [`x`]-values on the segment is [`[$ans[1]]`].

END_PGML_SOLUTION

ENDDOCUMENT();
