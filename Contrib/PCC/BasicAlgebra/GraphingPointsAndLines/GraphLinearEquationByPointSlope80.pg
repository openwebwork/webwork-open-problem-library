# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Graph a linear equation by y-intercept and slope triangle.
# The line's equation looks like y=Mx+B. 
# M is a negative fraction, B is a positive or negative integer.
#
# Last updated Jordan 8/30/13; 
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Lines')
## KEYWORDS('coordinate','line','linear','equation','graph','fraction')
## DBCCSS('8.EE.6','8.F.3','F-IF.7.a')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserRadioButtons.pl",
  "contextFraction.pl",
  "pccTables.pl",
  "PCCgraphMacros.pl",
  "PGcourse.pl",
);

##############################################

$refreshCachedImages=1;

Context("Fraction");
$num = -random(1,5,1);
do {$den=random(2,5,1);} until (gcd($num,$den)==1);
$m= Fraction($num,$den);
$n = 1/$m;

$b=non_zero_random(-4,4,1);
@ar_mb = ([$m,$b],[-$m,$b],[Fraction($b,1),$m],[-$n,$b],[$m,$b]);

#Create a hash and its inverse that randomizes the order of the four graphs.
%scramble = ();
%inverse = ();
for my $i (0..3) {
  do {$temp = list_random(0..3)} until !(grep(/^$temp$/,values %scramble) );
  $scramble{$i} = $temp;
  $inverse{$temp} = $i;
};

$scramble{4} = 4;
$inverse{4} = 4;


($min[0], $max[0], $min[1], $max[1], $ticknum[0], $ticknum[1], $xticks_ref, $yticks_ref, $marksep[0], $marksep[1]) = NiceGraphParameters([0,2*$den,-2*$den],[0,abs($b)+1.5*abs($num),-abs($b)-1.5*abs($num)],centerYaxis=>1);

@xticks = @$xticks_ref;
@yticks = @$yticks_ref;

for my $i (0..4) {
  $gr[$i] = init_graph($min[0],$min[1],$max[0],$max[1],
   axes=>[0,0],
   grid=>[$ticknum[0],$ticknum[1]],
   size=>[xPixels(),yPixels()]
  );
  $gr[$i]->lb('reset');
  for my $j (@xticks) {
    if (abs($j)<10**(-10)) {next;}
    $gr[$i]->lb( new Label($j, -$marksep[1]/8, $j,'black','center','top'));
  }

  for my $j (@yticks) {
    if (Real($j) == 0) {next;}
    $gr[$i]->lb( new Label($marksep[0]/8, $j, $j,'black','left','middle'));
  }
   $gr[$i]->lb( new Label($min[0]+$marksep[0]/8, $max[1]-$marksep[1]/8, $ALPHABET[$inverse{$i}], 'black', 'left', 'top')) unless ($i==4);
   add_functions($gr[$i], "$ar_mb[$i][0]*x +$ar_mb[$i][1] for x in <$min[0],$max[0]> using color:blue and weight:1");
   $ypoint0 = $ar_mb[$i][0]*0+$ar_mb[$i][1];
   $run = ($ar_mb[$i][0]->value)[1];
   $ypoint1 = $ar_mb[$i][0]*$run+$ar_mb[$i][1];
   push(@ALTtags,"Graph $ALPHABET[$inverse{$i}]: graph of a line passing through (0,$ypoint0); it also passes through ($run, $ypoint1)");
}

pop(@ALTtags);
   $ypoint0 = $ar_mb[4][0]*0+$ar_mb[4][1];
   $run = ($ar_mb[4][0]->value)[1];
   $ypoint1 = $ar_mb[4][0]*$run+$ar_mb[4][1];
   push(@ALTtags,"graph of a line passing through (0,$ypoint0); it also passes through ($run, $ypoint1)");



$radio = RadioButtons(
  ["A","B","C","D"],
  $ALPHABET[$inverse{0}], # correct answer
  order => ["A","B","C","D"],
);


##############################################
TEXT(beginproblem());


BEGIN_PGML

Choose the graph that shows the solutions to [`y= [$m]x+[$b]`]. On your own graphing paper, first find the line's [`y`]-intercept. Then add a few slope triangles to mark more points on the line. Finally, connect the dots to draw the line. *Warning:* if you skip the steps that you should be doing on paper, then you are not practicing what the exercise intends for your to practice.

    The correct graph is graph    
    [@$radio->buttons()@]*

[@EnlargeImageStatementPGML@]**
END_PGML
Context()->texStrings;
BEGIN_TEXT
$BCENTER
\{ 
LayoutTable([[image( insertGraph($gr[$scramble{0}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$ALTtags[$scramble{0}]" title = "$ALTtags[$scramble{0}]"'  ),
image( insertGraph($gr[$scramble{1}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$ALTtags[$scramble{1}]" title = "$ALTtags[$scramble{1}]"'  ),
],
[image( insertGraph($gr[$scramble{2}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$ALTtags[$scramble{2}]" title = "$ALTtags[$scramble{2}]"'  ),
image( insertGraph($gr[$scramble{3}]), width=>xScreen(), height=>yScreen(), tex_size=>TeXscalar(), extra_html_tags=>'alt = "$ALTtags[$scramble{3}]" title = "$ALTtags[$scramble{3}]"'  )
]], allcellcss => "padding:20pt;")

\}
$ECENTER
$PAR

END_TEXT

Context()->normalStrings;

##############################################

ANS( $radio->cmp() );

$x1 = 0;
$y1 = $b;
$run = $den;
$rise = $num;

$gr[4]->lb( new Label($x1+$x1labelx,$y1+$y1labely,"$pt1",'red',"$pt1shift",'middle'));
$gr[4]->lb( new Label($x2+$x2labelx,$y2+$y2labely,"$pt2",'red',"$pt2shift",'middle'));

for ($j=-1;$j<=1;$j++) {

   $gr[4]->stamps( closed_circle($x1+$run*$j,$y1+$rise*$j,'red') );
   $gr[4]->stamps( closed_circle($x2+$run*($j+1),$y1+$rise*($j+1),'red') );

   $gr[4]->moveTo($x1+$run*$j,$y1+$rise*$j);
   $gr[4]->lineTo($x1+$run*($j+1),$y1+$rise*$j,'red',2);
   $gr[4]->lineTo($x1+$run*($j+1),$y1+$rise*($j+1),'red',2);
   $gr[4]->lb( new Label($x1+$run*$j+$run/2,$y1+$rise*$j,"$run",'red','center','bottom'));
   $gr[4]->lb( new Label($x1+$run*($j+1)+$marksep[0]/10,$y1+$rise*($j+1/2),"$rise",'red','left','middle'));
}


Context()->texStrings;
BEGIN_SOLUTION

To graph a line by slope triangles, we first locate its \(y\)-intercept. This line's \(y\)-intercept is \( ($x1,$y1) \).
$PAR

Next, we find the rise and run in this line's slope triangle. The line's slope is \($m\). So we can take the "rise" to be \($num\), and the "run" to be \($den\).
$PAR

Starting from the \(y\)-intercept \( ($x1,$y1) \), we run by \($run\) units and then rise by \($num\) units. This way we find a second point on the line.
$PAR

We can draw more slope triangles and locate more points on the line, as shown in the graph. Finally, connect all the dots and extend in both directions, and we have this line's graph.
$PAR

$BCENTER
\{ image( insertGraph($gr[4]), width=>400, height=>400, tex_size=>400, 
   extra_html_tags=>'alt = "$ALTtags[$scramble{4}]" title = "$ALTtags[$scramble{4}]"'  ) \}

$ECENTER

We can see the correct answer is \{ $radio->correct_ans() \}.
$PAR


END_SOLUTION
Context()->normalStrings;


ENDDOCUMENT();
