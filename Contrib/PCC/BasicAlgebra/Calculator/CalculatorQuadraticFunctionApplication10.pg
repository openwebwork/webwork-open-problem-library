# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Use a graphing calculator to solve quadratic function problems.
#
# Last edited: Yao 8/19/2016
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('calculator','graphing','intersection')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserNumberWithUnits.pl",
  "PGcourse.pl"
);

##############################################

TEXT(beginproblem());
$refreshCachedImages=1;
Context("Numeric");
Context()->variables->add(t => 'Real');
Context()->flags->set(showExtraParens=>0, reduceConstants=>0);
Context()->noreduce("(-x)-y","(-x)+y");
Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

$a = -4.9;
$b = abs($a)*2*random(10,30,1);
$c = random(100,200,10);

$func = Compute("$a*t**2+$b*t+$c")->reduce;
$funcX = Compute("$a*x**2+$b*x+$c")->reduce;

#for alternative display and title purposes

   $xVertex = Real(-$b/(2*$a));
   $yVertex = Real($func->eval(t=>$xVertex));
   $vertex=Point($xVertex,$yVertex);
   $yIntercept=Point(0,$c);

   @temp = $vertex->value;
   $extraPointX = $temp[0]+1;
   $extraPointY = Real($func->eval(t=>$extraPointX));
   $extraPoint = Point($extraPointX,$extraPointY);

$xInt1 = Real((-$b+sqrt($b**2-4*$a*$c))/(2*$a));
$xInt2 = Real((-$b-sqrt($b**2-4*$a*$c))/(2*$a));
$xInt1Show = sprintf("%.2f",$xInt1);
$xInt2Show = sprintf("%.2f",$xInt2);

$tMax = $xVertex;
$hMax = $yVertex;
$tBack = $xInt2;
$t1 = random(1,int($tBack-1),1);
$h1 = $func->eval(t=>$t1);
do {$t2 = random(1,int($tMax-1),1);} until ($t2!=$t1);
$t3 = 2*$tMax-$t2;
$h2 = $func->eval(t=>$t2);

$tMaxU = NumberWithUnits("$tMax s");
$hMaxU = NumberWithUnits("$hMax m");
$tBackU = NumberWithUnits("$tBack s");
$cU = NumberWithUnits("$c m");
$bU = NumberWithUnits("$b m/s");
$t1U = NumberWithUnits("$t1 s");
$h1U = NumberWithUnits("$h1 m");
$t2U = NumberWithUnits("$t2 s");
$t3U = NumberWithUnits("$t3 s");
$h2U = NumberWithUnits("$h2 m");

##############################################

BEGIN_PGML

Use TI-89 or Casio ClassPad 330 to answer the following questions. Round to two decimal places when needed.

From a clifftop over the ocean [`[$cU]`] above sea level, an object was shot straight up into the air with an initial vertical speed of [`[$bU]`]. On its way down it missed the cliff and fell into the ocean. Its height (above sea level) as time passes can be modeled by the quadratic function [`f`], where [`f(t)=[$func]`]. Here [`t`] represents the number of seconds since the object's release, and [`f(t)`] represents the object's height (above sea level) in meters.

    1) After [____________]{$tMaxU}, this object reached its maximum height of [___________]{$hMaxU}.

    2) This object flew for [____________]{$tBackU} before it landed in the ocean.

    3) This object was [____________]{$h1U} above sea level [`[$t1U]`] after its release.

    4) This object was [`[$h2U]`] above sea level twice: once [____________]{$t2U} after its release, and again later [____________]{$t3U} after its release.

(Use *m* for meters, and *s* for seconds.)

END_PGML

##############################################

$left = -10;
$right = int($xInt2/10)*11;
$up = int($yVertex/1000)*1000+1000;
$down = -10;

BEGIN_PGML_SOLUTION

###Part 1: 

We need to find the function's maximum value (the upside-down parabola's vertex).

####TI-89 Instructions

1. Press Diamond, and then F1. Clear all functions if needed.

2. Enter the function [`[$a]x`]^[` \caretinsert 2+[$b]x+[$c]`] for Y1. Press ENTER.

3. Since numbers for this problem are very big, we must adjust the window settings. Press Diamond, and then F2. Set Xmin=[`[$left]`], Xmax=[`[$right]`], Ymin=[`[$down]`], Ymax=[`[$up]`]. Don't change the other values. Note that Xmax and Ymax values are simply guesses. They need to be adjusted higher if we cannot see the maximum or the x-intercept on the right side.

4. Press Diamond, F3 to look at the graph. If you cannot see the maximum value (the vertex) or the x-intercept on the right side, go back to Step 3 to change the Xmax and Ymax values.

5. On the screen, locate the parabola's vertex. Press F5, choose Option 4 (Maximum). This option will locate a function's maximum value in a certain range.

6. The calculator will first ask for a "lower bound". Use the left/right arrow keys to move the cursor to anywhere to the *left* of the vertex. Press ENTER. (Pressing 2nd button and then the left/right arrow keys will speed up the cursor movement.)

7. Now the calculator will ask for an "upper bound". Move the cursor to anywhere to the *right* of the vertex. Press ENTER.

8. The calculator will display the maximum value in the range we specified. In this case, it is the parabola's vertex, which is the solution to Part 1.

####Casio ClassPad 330 Instructions

1. Tap "Menu".

2. Tap "Graph and Table". Enter the function [`[$a]x`]^[` \caretinsert 2+[$b]x+[$c]`] for y1. Press EXE.

3. Since numbers for this problem are very big, we must adjust the window settings. Tap the View Window tile (with 4 arrows in 4 directions). Set xmin=[`[$left]`], xmax=[`[$right]`], ymin=[`[$down]`], ymax=[`[$up]`]. Don't change the other values. Note that xmax and ymax values are simply guesses. They need to be adjusted higher if we cannot see the maximum or the x-intercept on the right side.

4. Tap the graph tile (first from the left). If we cannot see these two functions' intersection, tap View Window tile (with 4 arrows in 4 directions), and make xmax's value bigger.

5.  If you cannot see the maximum value (the vertex) or the x-intercept on the right side, tap View Window tile to make xmax and ymax values bigger.

6. Once we can see the parabola's vertex, tap Analysis, G-Solve, Max. 

7. The calculator will locate the maximum value. In this case, it is the parabola's vertex, which is the solution to Part 1.

###Solution to Part 1: 

After [`[$tMaxU]`], this object reached its maximum height of [`[$hMaxU]`].

###Part 2: 

We need to find the x-intercept on the right side. (The left side x-intercept is a negative number, which makes no sense in this situation.)

####TI-89 Instructions

1. Press Diamond, and then F3 to see the function's graph.

2. On the screen, locate the parabola's [`x`]-intercept on the right side. Press F5, choose Option 2 (Zero). This option will locate a function's [`x`]-intercept(s).

3. The calculator will first ask for a "lower bound". Use the left/right arrow keys to move the cursor to anywhere to the *left* of the [`x`]-intercept we are looking at. Press ENTER. (Pressing 2nd button and then the left/right arrow keys will speed up the cursor movement.)

4. Now the calculator will ask for an "upper bound". Move the cursor to anywhere to the *right* of the [`x`]-intercept we are looking at. Press ENTER.

5. The calculator will display the [`x`]-intercept's coordinates. Its x-value is Part 2's solution.

####Casio ClassPad 330 Instructions

1. Tap "Menu".

2. Tap "Graph and Table".

3. Tap the graph tile (first from the left).

4. Once we can see the parabola's [`x`]-intercept on the right side, tap Analysis, G-Solve, x-Cal. Since we are looking for the [`x`]-intercepts, we want the [`y`]-value to be [`0`]. Enter [`0`] for [`y`]-value, tap OK. The calculator will locate the [`x`]-intercept. Its x-value is Part 2's solution.

###Part 2's solution: 

This object flew for [`[$tBackU]`] before it landed in the ocean.

###Part 3: 

We need to substitute the function's [`x`] value with [`[$t1]`] to get the corresponding [`y`] value.

####TI-89 Instructions

1. Press Home.

2. Enter [`y1([$t1])`]. Press Enter. You will get the value [`[$h1]`]. 

####Casio ClassPad 330 Instructions

1. Tap "Menu", and then "Main".

2. Enter [`y1([$t1])`]. Press Enter. You will get the value [`[$h1]`]. Note that you may not use the [`y`] button on the calculator. You have to press Keyboard, go to "abc" tab, and use the [`y`] button on the screen.

###Solution to Part 3: 

This object was [`[$h1U]`] above sea level [`[$t1U]`] after its release.

###Part 4: 

We need to create a second function Y2[`=[$h2]`], and then let the calculator find the intersection between these two functions.

####TI-89 Instructions

1. Press Diamond, and then F1. The function Y1 should still be there.

2. Enter the function [`[$h2]`] for Y2. Press ENTER.

3. Press Diamond, and then F3. We should see two intersections.

4. On the screen, locate one intersection. Press F5, choose Option 5 (Intersection).

5. The calculator will ask us which curve is the first function. One of these two functions is highlighted by default. We can use the up/down arrows to change the highlighted function. Since there are only two functions in this case, we can simply press Enter.

6. The calculator will then ask us which curve is the second function. The other functions is highlighted by default. Press Enter.

7. The calculator will first ask for a "lower bound". Use the left/right arrow keys to move the cursor to anywhere to the *left* of the intersection. Press ENTER. (Pressing 2nd button and then the left/right arrow keys will speed up the cursor movement.)

8. Now the calculator will ask for an "upper bound". Move the cursor to anywhere to the *right* of the intersection. Press ENTER.

9. The calculator will display the intersection, whose [`x`] value is the first solution for Part 4.

10. Repeat Steps 4 through 9 to find the other intersection's [`x`] value.

####Casio ClassPad 330 Instructions

1. Tap "Menu".

2. Tap "Graph and Table", y1's value should still be there. 

3. Enter [`[$h2]`] for y2. Press EXE.

4. Tap the graph tile (first from the left). We should see two intersections.

5. Once we can see the intersections, tap Analysis, G-Solve, Intersect. 

6. The calculator will display the intersection, whose [`x`] value is the first solution for Part 2.

7. Press the right arrow key to locate the other intersection's [`x`] value.

###Solution to Part 4: 

This object was [`[$h2U]`] above sea level twice: once [`[$t2U]`] after its release, and again later [`[$t3U]`] after its release.

END_PGML_SOLUTION

ENDDOCUMENT();


