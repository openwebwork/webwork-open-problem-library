# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Use a graphing calculator to solve rational equation graphically.
#
# Last edited: Yao 7/18/2016
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('calculator','graphing','intersection')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserAssignment.pl",
  "answerHints.pl",
  "PGML.pl",
  "contextLimitedRadical.pl",
  "PCCmacros.pl",
  "PGcourse.pl"
);

##############################################

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0, formatStudentAnswer=>parsed);
do {$var = RandomVariableName(type=>'variable');} until ($var ne 'x');
Context()->variables->are($var=>'Real',x=>'Real');

parser::Assignment->Allow;

Context()->operators->redefine(',',using=>',',from=>'Numeric');
    Context()->operators->redefine('and',using=>',',from=>'Numeric');
    Context()->operators->set(
      ','=>{string=>' and ',TeX=>'\hbox{ and }'},
      'or'=>{string=>' and ',TeX=>'\hbox{ and }'}
    );
    Context()->lists->set(List => {separator => " and "});

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  "no solution"=>{alias=>'no real solutions'}, 
  "no solutions"=>{alias=>'no real solutions'}, 
  );

do {
   do {
      $a = non_zero_random(-10,10,1);
      $b = random(1,10,1);
      $c = non_zero_random(-10,10,1);
      $d = non_zero_random(-2,2,0.1);
      $a1 = $b*$d;
      $b1 = $c*$d;
      $c1 = -$a;
      $d1 = ($b1)**2-4*$a1*$c1;
   } until ($d1>0);
   $x1 = (-$b1+sqrt($d1))/(2*$a1);
   $x2 = (-$b1-sqrt($d1))/(2*$a1);
   $left = Formula("$a/($b*$var+$c)")->reduce;
   $right = Formula("$d*$var")->reduce;
   $y1 = $left->eval($var=>$x1);
} until ( ($x1>-9) && ($x1<9) && ($x2>-9) && ($x2<9) && ($y1>-9) && ($y1<9) );

Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

   $leftX = Formula("$a/($b*x+$c)")->reduce;
   $rightX = Formula("$d*x")->reduce;

$ans = List(Formula("$var=$x1"),Formula("$var=$x2"));

##############################################
TEXT(beginproblem());

BEGIN_PGML

Use a TI-89 or Casio ClassPad 330 graphing calculator to solve this equation:

    [`` [$left] = [$right] ``]

Using TI-89's "Intersection" function (under F5's menu on a graph screen) or Casio's "Intersect" function (under Analysis, G-Solve on a graph screen) to find these two functions' intersection. Write your answers as a point.

* Enter multiple answers separated by commas, such as [`x=1,x=-1`]
* Round your answers to two decimal places.

    This equation's solutions are [__________]{$ans}.

END_PGML

##############################################

BEGIN_PGML_SOLUTION

##TI-89 Instructions

1. Press Diamond, and then F1. Clear Y1 and Y2 if needed.

2. Enter the function [` [$leftX] `] for Y1 and [`[$rightX]`] for Y2. Press ENTER.

3. Press Diamond, and then F3. If we cannot see these two functions' intersections, press F2, and then option 6 (default window).

4. On the screen, locate one intersection. Press F5, choose Option 5 (Intersection).

5. The calculator will ask us which curve is the first function. One of these two functions is highlighted by default. We can use the up/down arrows to change the highlighted function. Since there are only two functions in this case, we can simply press Enter.

6. The calculator will then ask us which curve is the second function. The other functions is highlighted by default. Press Enter.

7. The calculator will first ask for a "lower bound". Use the left/right arrow keys to move the cursor to anywhere to the *left* of the intersection. Press ENTER. (Pressing 2nd button and then the left/right arrow keys will speed up the cursor movement.)

8. Now the calculator will ask for an "upper bound". Move the cursor to anywhere to the *right* of the intersection. Press ENTER.

9. The calculator will display the intersection, whose [`x`] value is a solution for the equation.

10. Repeat Step 4 through Step 9 to find the other intersection.

##Casio ClassPad 330 Instructions

1. Tap "Menu".

2. Tap "Graph and Table". Enter the function [` [$leftX] `] for y1, and [`[$rightX]`] for  y2. Press EXE.

3. Tap the graph tile (first from the left). If we cannot see these two functions' intersection, tap Zoom, Original (default window).

4. Once we can see the intersection, tap Analysis, G-Solve, Intersect. 

5. The calculator will display the intersection, whose [`x`] value is a solution for the equation.

6. Use the right arrow key to jump to the second intersection.

##Solution:

    The equation's solutions are [`[$ans]`].

END_PGML_SOLUTION

ENDDOCUMENT();


