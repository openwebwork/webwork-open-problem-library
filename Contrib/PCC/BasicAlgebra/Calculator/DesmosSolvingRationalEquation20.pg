# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Use graphing technology to solve rational equation.
#
# Last edited: Yao 11/14/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Algebraic Expressions')
## KEYWORDS('calculator','graphing','intersection')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Carl Yao')
## Institution('PCC')


##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserAssignment.pl",
  "answerHints.pl",
  "PGML.pl",
  "contextLimitedRadical.pl",
   "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0, formatStudentAnswer=>parsed);
do {$var = RandomVariableName(type=>'variable');} until ($var ne 'x');
Context()->variables->are($var=>'Real',x=>'Real');

parser::Assignment->Allow;

Context()->operators->redefine(',',using=>',',from=>'Numeric');
    Context()->operators->redefine('and',using=>',',from=>'Numeric');
    Context()->operators->set(
      ','=>{string=>' and ',TeX=>'\hbox{ and }'},
      'or'=>{string=>' and ',TeX=>'\hbox{ and }'}
    );
    Context()->lists->set(List => {separator => " and "});

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  "no solution"=>{alias=>'no real solutions'}, 
  "no solutions"=>{alias=>'no real solutions'}, 
  );

do {
   do {
      $a = non_zero_random(-10,10,1);
      $b = random(1,10,1);
      $c = non_zero_random(-10,10,1);
      $d = non_zero_random(-2,2,0.1);
      $a1 = $b*$d;
      $b1 = $c*$d;
      $c1 = -$a;
      $d1 = ($b1)**2-4*$a1*$c1;
   } until ($d1>0);
   $x1 = (-$b1+sqrt($d1))/(2*$a1);
   $x2 = (-$b1-sqrt($d1))/(2*$a1);
   $left = Formula("$a/($b*$var+$c)")->reduce;
   $right = Formula("$d*$var")->reduce;
   $y1 = $left->eval($var=>$x1);
} until ( ($x1>-9) && ($x1<9) && ($x2>-9) && ($x2<9) && ($y1>-9) && ($y1<9) );

Context()->flags->set(
  tolerance => 0.005,
  tolType => "absolute",
);

   $leftX = Formula("$a/($b*x+$c)")->reduce;
   $rightX = Formula("$d*x")->reduce;

$ans = List(Formula("$var=$x1"),Formula("$var=$x2"));

$x1Show = Round($x1,3);
$y1Show = Round($y1,3);
$x2Show = Round($x2,3);

##############################################
TEXT(beginproblem());

BEGIN_PGML

Use graphing technology to solve this equation:

    [`` [$left] = [$right] ``]

* Enter multiple answers separated by commas, such as [`x=1,x=-1`]
* Round your answers to two decimal places.

    This equation's solutions are [__________]{$ans}.

END_PGML

##############################################

BEGIN_PGML_SOLUTION

We will use desmos.com to solve this equation.

Step 1: Go to desmos.com, click on Start Graphing.

Step 2: In the first textbox, enter [` f(x)=[$leftX] `]. Note that we need to replace [`[$var]`] with [`x`].

Step 3: In the second textbox, enter [` g(x)=[$rightX] `].

Step 4: Zoom out on the window, if needed, until you can see the intersections of [`f(x)`] and [`g(x)`]. Alternatively, click on the Graph Settings icon (looking like a tool) and define the ranges of [`x`]-axis and [`y`]-axis.

Step 5: Click on the intersections, and desmos shows the solution [`([$x1Show],[$y1Show])`] and [`([$x2Show],[$y1Show])`].

    The equation's solutions are [`[$var]=[$x1Show], [$var]=[$x2Show]`].

END_PGML_SOLUTION

ENDDOCUMENT();


