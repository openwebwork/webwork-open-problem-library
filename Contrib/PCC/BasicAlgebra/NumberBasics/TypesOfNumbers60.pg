# WeBWorK problem written by Alex Jordan
# Portland Community College
#
# 
# Give examples of types of numbers
#
# 
#
# ENDDESCRIPTION

## DBsubject('Numbers')
## DBchapter('Real Numbers')
## DBsection('Misc.')
## KEYWORDS('real numbers')
## DBCCSS('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')




##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserOneOf.pl",
  "answerHints.pl",
  "contextFraction.pl",
  "PGcourse.pl",
);

##############################################
TEXT(beginproblem());

Context("Numeric");


##############################################

BEGIN_PGML

Give an example of a whole number that is not an integer. If no such number exists, enter *DNE* or *NONE*.

    [_________]

Give an example of an integer that is not a whole number. If no such number exists, enter *DNE* or *NONE*.

    [_________]

Give an example of a rational number that is not an integer. If no such number exists, enter *DNE* or *NONE*.

    [_________]


Give an example of a irrational number.

    [_________]


Give an example of a irrational number that is also an integer.  If no such number exists, enter *DNE* or *NONE*.

    [_________]


END_PGML



##############################################

$showPartialCorrectAnswers = 1;

ANS(OneOf(DNE,NONE)->cmp);
ANS(Compute(-1)->cmp(correct_ans => "any of -1, -2, -3, ...", 
                     correct_ans_latex_string => "\text{any of }-1, -2, -3,\ldots",
                     checker=>sub{
  my ( $correct, $student, $ansHash ) = @_;
  return ((int($student) == $student) and ($student < 0));
}
)->withPostFilter(AnswerHints( 
  sub{
  my ( $correct, $student, $ansHash ) = @_;
  return (int($student) == $student) and ($student > 0);
  } => "This is an integer, but it is also a whole number",
))
);


ANS(Real("0.5")->cmp(correct_ans => "many possibilities: 1/2, 2.3,...", 
                     correct_ans_latex_string => "\text{many possibilities: }\frac{1}{2}, 2.3, \ldots",
                     checker=>sub{
  my ( $correct, $student, $ansHash ) = @_;
  $student = abs($student);
  $student = $student->value;
  Value->Error("Your answer is an integer") if $student == int($student);
  my $OK = 0;
  #in theory this should detect all rational numbers with denominators < the 30th Fibonacci number (and many with larger denominators too). Machine rounding error may come into play though.
  for my $i (0..30)
    {if (int($student) == $student) {$OK = 1; last;}
     $student = 1/($student - floor($student));
    } 
  return $OK;
}
)
);


ANS(Compute("sqrt(2)")->cmp(correct_ans => "many possibilities: sqrt(2), pi,...", 
                     correct_ans_latex_string => "\text{many possibilities: }\sqrt{2}, \pi, \ldots",
                     checker=>sub{
  my ( $correct, $student, $ansHash ) = @_;
  $student = abs($student);
  $student = $student->value;
  my $OK = 0;
  #in theory this should detect all rational numbers with denominators < the 30th Fibonacci number (and many with larger denominators too). Machine rounding error may come into play though.
  for my $i (0..30)
    {if (int($student) == $student) {$OK = 1; last;}
     $student = 1/($student - floor($student));
    } 
  return !$OK;
}
)
);

ANS(OneOf(DNE,NONE)->cmp()->withPostFilter(AnswerHints( 
  sub{
  my ( $correct, $student, $ansHash ) = @_;
  return (int($student) == $student) and ($student > 0);
  } => "This is an integer",
)));

##############################################

BEGIN_PGML_SOLUTION


END_PGML_SOLUTION

ENDDOCUMENT();
