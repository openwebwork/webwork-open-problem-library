# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Find the distance between the points (x1,y1) and (x2,y2).
#
# If you need to use the square root symbol, 
# as in x=sqrt{17}, type it like: *sqrt(17)*
#
# We make sure that the distance is sqrt(p) where p is 
# a prime number.
#
# Last updated: Hughes 8/6/13
# ENDDESCRIPTION

## DBCCSS('A-REI.4.b')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('equations', 'Simplification')
## KEYWORDS('solve','quadratic','equation','square root','subtract')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
      "PGstandard.pl",
      "MathObjects.pl",
      "parserAssignment.pl",
      "answerHints.pl",
      "PGML.pl",
      "contextLimitedRadical.pl",
    ,
  "PGcourse.pl",
);

##############################################
    
Context("LimitedRadical");
Context()->flags->set(
            reduceConstants=>0, 
            reduceConstantFunctions=>0, 
            formatStudentAnswer=>parsed);

#@suitablePrimes = (5,13,17,29,37);
@suitablePrimes = (5,13);
$index = random(0,$#suitablePrimes,1);
$prime = $suitablePrimes[$index];

if($prime==5)
{
    # 5 = 1 + 4
    #   = 1^2 + 2^2
    $m=1;
    $n=2;
}
elsif($prime==13)
{
    # 13 = 9+4
    #    = 3^2+2^2
    $m=2;
    $n=3;
}
elsif($prime==17)
{
   # 17 = 1+16
   #    = 1^2 + 4^2
    $m=1;
    $n=4;
}
elsif($prime==29)
{
    $m=2;
    $n=5;
}
elsif($prime==37)
{
    $m=1;
    $n=6;
}

$d = random(2,5,1);
                               
$a = $d*$m;
$b = $d*$n;
$c = $d*$prime;

# choose (x1,y1) first
$x1 = random(-20,20,1);
$y1 = random(-20,20,1);

# then (x2,y2) follow by using $a and $b
$x2 = $x1+$a;
$y2 = $y1+$b;

$ans = Formula("$d sqrt($prime)");

##############################################

TEXT(beginproblem());
BEGIN_PGML
Find the distance between the points [`([$x1],[$y1])`] and [`([$x2],[$y2])`].

If you need to use the square root symbol, 
as in [`x=\sqrt{17}`], type it using: *sqrt(17)*

      [____________________]
END_PGML

ANS( $ans-> cmp( checker => sub {
  my ($correct,$student,$ans) = @_;
  return 0 if $ans->{isPreview} || $correct != $student;
  
  $student = $ans->{original_student_ans};
  $correct = $ans->{correct_ans};

  Context()->flags->set(setSqrt=>exp(1)/ln(2));
  delete $correct->{test_values}, $student->{test_values};
  my $OK = ($correct == $student);
  Context()->flags->set(setSqrt => 0);

  Value::Error("Check to see if your answer is simplified.") unless $OK;
  return $OK;
  }, #formatStudentAnswer=>"reduced"
  )
);


##############################################

$xdist = ($x2-$x1)**2;
$ydist = ($y2-$y1)**2;
BEGIN_PGML_SOLUTION
The distance between two points, [`d`], can be found by using the Pythagorean Theorem; 

    [`
        \begin{aligned}
            d& = \sqrt{([$x2]-[$x1])^2 + ([$y2]-[$y1])^2} \\
             & = \sqrt{([$x2-$x1])^2 + ([$y2-$y1])^2} \\
             & = \sqrt{[$xdist] + [$ydist]} \\
             & = \sqrt{[$xdist + $ydist]} \\
             & = \sqrt{[$d**2]\cdot [$prime]}\\
             & = \sqrt{[$d**2]}\cdot \sqrt{[$prime]}\\
             & = [$ans]
        \end{aligned}
    `]

The distance between the two points is [`[$ans]`].
END_PGML_SOLUTION

##############################################

ENDDOCUMENT();
