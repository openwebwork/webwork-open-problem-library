# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Solve the following quadratic equation
#
#       (Ax + B)(Cx + D) = E
#
# C!=1 in this problem
# we choose A, B, C, D, E so that this equation is equivalent to
#
#
#       (ax + b)(cx + d) = 0
#
# If you need to use the square root symbol, 
# as in x=sqrt{17}, type it like: *sqrt(17)*
#
# a = c = 1, 
#
# b and d are of opposite sign
#
# Last updated: Hughes 8/20/13
#
# ENDDESCRIPTION

## DBCCSS('A-REI.4.b')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('equations', 'Simplification')
## KEYWORDS('solve','quadratic','equation','factor','zero product principle')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserAssignment.pl",
  "answerHints.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextLimitedRadical.pl",
  "PGcourse.pl"
);

##############################################
    
Context("LimitedRadical");
Context()->flags->set(reduceConstants=>0, 
                      reduceConstantFunctions=>0, 
                      formatStudentAnswer=>parsed,
                      showExtraParens=>0,
                      );
                               
parser::Assignment->Allow;

Context()->operators->redefine(',',using=>',',from=>'Numeric');
    Context()->operators->redefine('or',using=>',',from=>'Numeric');
    Context()->operators->set(
      ','=>{string=>' or ',TeX=>'\hbox{ or }'},
      'or'=>{string=>' or ',TeX=>'\hbox{ or }'}
    );
    Context()->lists->set(List => {separator => " or "});

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  );


$var = "x";
$a = 1;
$b = non_zero_random(-5,5,1);
$c = 1;
$d = $b;
$d = non_zero_random(-5,5,1)while(abs($b)==abs($d));

# set up A, B, C, D
$A = 1;
$C = 1;
$B = 1; $D = 1; $E =1;
while( ($B*$C+$A*$D)!=($b*$c+$a*$d) or ($B*$D-$E)!=$b*$d )
{
    $b = non_zero_random(-5,5,1);
    $d = $b;
    $d = non_zero_random(-5,5,1)while(abs($b)==abs($d));

    $B = non_zero_random(-10,10,1);
    $C = random(2,4,1);
    $D = $C;
    $D = non_zero_random(-10,10,1)while(abs($D)==abs($C) or gcd($C,$D)!=1);
    $E = non_zero_random(-10,10,1);
}

$soln1 = -$b;
$soln2 = -$d;
$lhs = Formula("($A*$var+$B)*($C*$var+$D)")->reduce;
$rhs = Formula("$E+($A*$C-1)*$var^2")->reduce;
$step1 = Formula("$A*$C*$var^2+($B*$C+$A*$D)*$var+$B*$D")->reduce->reduce;
$step2 = Formula("$a*$c*$var^2+($b*$c+$a*$d)*$var+$b*$d")->reduce->reduce;
$question = Formula("($a*$var+$b)*($c*$var+$d)")->reduce;
$ans = Compute("$var = $soln1, $var = $soln2");

TEXT(beginproblem());
BEGIN_PGML
Solve the quadratic equation

     [` [$lhs] = [$rhs] `]
  
     [____________________]

* Enter multiple answers separated by commas, such as [`x=1,x=-1`]
* If you need to use the square root symbol, 
as in [`x=\sqrt{17}`], type it using: *sqrt(17)*
* If there are no real solutions, enter *no real solutions*
END_PGML

$showPartialCorrectAnswers = 1;
ANS($ans->cmp(list_checker => ~~&radicalListCheck));



BEGIN_PGML_SOLUTION
Our priority must be to manipulate this equation until one side is equal to 
[`0`]; once that is achieved, we will use the _zero product principle_

    [`
        \begin{aligned}
            [$lhs]=[$rhs] &  \Rightarrow [$step1]= [$rhs]\\
                          & \Rightarrow [$step2]= 0 \\
                          & \Rightarrow [$question]= 0 \\
                          & \Rightarrow [$var]=[$soln1]\text{ or } [$var]=[$soln2]\\
        \end{aligned}
    `]

Note that _all_ quadratic equations have *two* (possibly repeated) solutions; in this problem both solutions are real. Each solution can be checked by substituting it into the original equation- this is left as an exercise.

You might have solved the equation using the Quadratic Formula- the final 
result is the same.
END_PGML_SOLUTION

##############################################
ENDDOCUMENT();
