# WeBWorK problem written by Chris Hughes, 2013
# Portland Community College
#
# Template:
# Solve the following quadratic equation
#
#       (ax+b)(cx+d)=0
#
# Last updated: Hughes 8/8/13
# ENDDESCRIPTION

## DBCCSS('A-REI.4.b')
## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('equations', 'Simplification')
## KEYWORDS('solve','quadratic','equation','factor','fraction')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################
DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "parserAssignment.pl",
  "answerHints.pl",
  "PGML.pl",
  "contextFraction.pl",
  "PGcourse.pl"
);

##############################################

Context("Numeric");

$var = "x";
$a=2;
$b=$a;
$c=$a;
$d=$a;

while(gcd($a,$b)!=1 or gcd($c,$d)!=1 or (abs($a*$c)+abs($b*$c+$a*$d)+abs($b*$d))>100)
{
    $a = random(2,10,1);
    $b = non_zero_random(-10,10,1);
    $c = random(2,10,1);
    $d = non_zero_random(-10,10,1);
}

$questionFormula = Formula("$a*$c*$var^2+($b*$c+$a*$d)*$var+($b*$d)")->reduce;
$questionFormula1 = Formula("($a*$var+$b)($c*$var+$d)")->reduce;

Context("LimitedFraction")->flags->set(
                        reduceFractions => 0,
                        showMixedNumbers=>0,
                        showExtraParens=>0 );
parser::Assignment->Allow;
Context()->operators->redefine(',',using=>',',from=>'Numeric');
Context()->operators->redefine('or',using=>',',from=>'Numeric');
Context()->operators->set(
  ','=>{string=>' or ',TeX=>'\hbox{ or }'},
  'or'=>{string=>' or ',TeX=>'\hbox{ or }'}
);
Context()->lists->set(List => {separator => " or "});
Context()->{error}{msg}{"Function 'sqrt' is not allowed in this context"} 
  = "Please simplify your answer further";

# add solution strings to context- this means that if
# students enter these (and they are not correct), then 
# WW will not give a Context warning
Context()->strings->add("no real solutions"=>{},
  "no real solution"=>{alias=>'no real solutions'}, 
  "none"=>{alias=>'no real solutions'}, 
  );

$frac1 = Fraction(-$b,$a);
$frac2 = Fraction(-$d,$c);
$ans = Compute("$var = $frac1, $var = $frac2");

##############################################

TEXT(beginproblem());
BEGIN_PGML
Solve the quadratic equation

    [` [$questionFormula]=0`]

    [__________________________]

* Enter multiple answers separated by commas, such as [`x=1,x=-1`]
* Enter solutions such as [`\frac{1+\sqrt{3}}{2}`] using *(1+sqrt(3))/2* and note
the grouping parentheses
* If there are no real solutions, enter *no real solutions*
END_PGML

##############################################

$showPartialCorrectAnswers = 1;
ANS($ans->cmp(
  entry_type => "a solution",
  checker => sub {
    my ($correct,$student,$ans,$nth,$value) = @_;
    if ($correct->type eq "Assignment") {
      my ($svar,$sfrac) = $student->value; # get the variable and fraction
      return 0 unless Value::classMatch($sfrac,'Fraction') && $sfrac->isReduced;
    }
    return $correct == $student;
  },
  extra => sub {
    my ($student,$ansHash,$nth,$value) = @_;
    if($student eq "no real solutions")
    {
         $student->context->setError("This equation does have some solutions- try factoring or using the quadratic formula","",undef,undef,$Value::CMP_WARNING)
         unless $ans->{isPreview};
         return;
    }
    if ($student->type ne "Assignment" && $ansHash->{student_formula}->type ne "Assignment") {
      $student->context->setError("Your $nth solution should be written $var = $US$US$US","",undef,undef,$Value::CMP_WARNING)
         unless $ans->{isPreview};
      return;
    }
    my ($svar,$sfrac) = $student->value; # get the variable and fraction
    if (Value::classMatch($sfrac,'Fraction') && !$sfrac->isReduced) {
      $student->context->setError("Your $nth $value is not reduced","",undef,undef,$Value::CMP_WARNING)
         unless $ans->{isPreview};
      return;
    }
    return Value::Real->typeMatch($student);
  }
)->withPostFilter(AnswerHints(
  ["$var=$frac1","$var=$frac2"] => "Are you sure you have all the solutions?",
  [$frac1,$frac2] => ["Your solution is a correct one, but you should write $var = $US$US$US<br>Are you sure you have all the solutions?",replaceMessage=>1],
  ["$frac1,$frac2","$frac2,$frac1"] => ["Your solutions are correct, but you should write $var = $US$US$US",replaceMessage=>1],
)));

##############################################

$A = $a*$c;
$B = $b*$c+$a*$d;
$C = $b*$d;

BEGIN_PGML_SOLUTION
We can solve this equation either by _factoring_ or by using the _quadratic formula_. 
We will demonstrate both.

#### Factoring

    [`
       \begin{aligned}
                 [$questionFormula]=0 &\Rightarrow [$questionFormula1]=0 \\
                                    & \Rightarrow [$ans]
       \end{aligned}
    `]

#### The Quadratic Formula

We can also solve the equation using the quadratic formula

    [`
        \begin{aligned}
            [$var]  & = \frac{-b\pm\sqrt{b^2-4ac}}{2a}\\
                    & = \frac{[$B*-1]\pm\sqrt{[$B**2]-[$A*$C*4]}}{[$A*2]}\\
                    & = \frac{[$B*-1]\pm\sqrt{[$B**2-$A*$C*4]}}{[$A*2]}
        \end{aligned}
    `]

so [`[$ans]`] as before.

Note that _all_ quadratic equations have *two* (possibly repeated) solutions; in this problem both solutions are real. Each solution can be checked by substituting it into the original equation- this is left as an exercise.
END_PGML_SOLUTION

##############################################

ENDDOCUMENT();
