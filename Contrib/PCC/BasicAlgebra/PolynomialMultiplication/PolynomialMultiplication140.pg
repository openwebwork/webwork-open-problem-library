# WeBWorK problem written by Chris Hughes
# Portland Community College
#
# Template:
# Simplify the following- you will need to multiply each set of binomials, and then
# write your answer in descending powers of x
#
#    (x+a)(x^2 + b x + c) - (x+d)(x^2 + e x + f)
#
#
# a, b, c, d, e, f can  be any non-zero, non-1 integer on the interval [-10,10]. 
# 
# Last updated: Kling, 7/24/13; Carl Yao, 7/03/13
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Polynomial and Rational Functions')
## DBsection('Polynomial Functions')
## KEYWORDS('exponent','multiply','FOIL','polynomial','simplify','binomial','trinomial')
## DBCCSS('A-APR.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "PCCmacros.pl",
  "contextLimitedPolynomial.pl",
  "PGcourse.pl"
);

##############################################

Context("Numeric");
Context()->noreduce('(-x)-y','(-x)+y');
$var = RandomVariableName(type=>'variable');
Context()->variables->are($var=>'Real',x=>'Real');

# setup the first binomial: (x+$a)
$a = (random(1.5,9.5,1)+0.5)*random(-1,1,2);
@poly1array = (1,$a);

# setup the first trinomial: (x^2+$bx+$c)
$b=$a;
$b = (random(1.5,9.5,1)+0.5)*random(-1,1,2) while($b==$a);
$c=$b;
$c = (random(1.5,9.5,1)+0.5)*random(-1,1,2) while($c==$b);
@poly2array = (1,$b,$c);

# setup the second binomial: (x+$d)
$d = (random(1.5,9.5,1)+0.5)*random(-1,1,2);
@poly3array = (1,$d);

# setup the second trinomial: (x^2+$e x + $f)
$e=$d;
$e = (random(1.5,9.5,1)+0.5)*random(-1,1,2) while($e==$d);
$f=$e;
$f = (random(1.5,9.5,1)+0.5)*random(-1,1,2) while($f==$e);

@poly4array = (1,$e,$f);

# reduction check
$poly1 = Formula(PolyString(~~@poly1array))->reduce->reduce;
$poly2 = Formula(PolyString(~~@poly2array))->reduce->reduce;
$poly3 = Formula(PolyString(~~@poly3array))->reduce->reduce;
$poly4 = Formula(PolyString(~~@poly4array))->reduce->reduce;

# for the solution
@product1array = PolyMult(~~@poly1array,~~@poly2array);
@product2array = PolyMult(~~@poly3array,~~@poly4array);
@sumarray = PolyAdd(~~@product1array,~~@product2array,subtract=>1);

$ans = Formula(PolyString(~~@sumarray))->reduce;

# make $poly1 and $poly2 into strings
$poly1 = $poly1->substitute(x=>$var);
$poly2 = $poly2->substitute(x=>$var);
$poly3 = $poly3->substitute(x=>$var);
$poly4 = $poly4->substitute(x=>$var);

# and make the answer into a string
$ans = $ans->substitute(x=>$var);

# for the solution
$soln1 = Formula(PolyMult(~~@poly1array,~~@poly2array,output=>unsimplified,var=>$var))->reduce->reduce;
$soln2 = Formula(PolyMult(~~@poly3array,~~@poly4array,output=>unsimplified,var=>$var))->reduce->reduce;
$soln3 = Formula(PolyMult(~~@poly1array,~~@poly2array,var=>$var,output=>simplified,))->reduce->reduce;
$soln4 = Formula(PolyMult(~~@poly3array,~~@poly4array,var=>$var,output=>simplified,))->reduce->reduce;



Context("LimitedPolynomial-Strict");
Context()->variables->are($var=>'Real');
$ans = Formula($ans)->reduce;


##############################################
TEXT(beginproblem());

BEGIN_PGML

Simplify the following into an expanded polynomial.

    [`\left([$poly1]\right)\left([$poly2]\right)
       -\left([$poly3]\right)\left([$poly4]\right)= `][________________]{$ans}

END_PGML


BEGIN_PGML_SOLUTION

We multiply each binomial by its respective trinomial, and simplify

    [`
      \begin{aligned}
              \left([$poly1]\right)([$poly2])-\left([$poly3]\right)([$poly4])&=
                             [$soln1]-\bigg[[$soln2] \bigg]\\
                                  &=[$soln3]-\left([$soln4]\right)\\
                                &=[$ans]
      \end{aligned}
    `]
END_PGML_SOLUTION
##############################################

ENDDOCUMENT();
