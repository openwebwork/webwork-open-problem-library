##DESCRIPTION
##  Training problem on the relationship between rates of change and slopes of lines
##ENDDESCRIPTION

##KEYWORDS('secant line', 'tangent line', 'slope', 'average rate of change', 'instantaneous rate of change')

## DBsubject('Calculus')
## DBchapter('Limits, Derivatives')
## DBsection('Rates of change')
## Date('Summer 2023')
## Author('Warren Shull')
## Institution('UWEC')

########################################################################

DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "PGcourse.pl",      # Customization file for the course
   "scaffold.pl",
   "parserPopUp.pl",   # <--------------------------------------NEEDED FOR DROPDOWN MENUS
);

loadMacros("customCSS.pl");

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

################################
#  Desmos setup
#
#  In html mode, load the Desmos api script and create the <div> to attach the Desmos graph to.
#  In tex mode, print a message to direct the student to the html version.
#  Desmos API reference: https://www.desmos.com/api/v1.7/docs/index.html

$unique_div_id = "nonexistent_derivative";
$unique_div_id2 = "sloping_tangents";
$unique_div_id3 = "absolute_yes_or_no";
$width = 700;
$height = 400;

HEADER_TEXT(MODES(
    HTML=>'<script src="https://www.desmos.com/api/v1.7/calculator.js?apiKey=dcb31709b452b1cf9dc26972add0fda6"></script>',
    TeX=>''
));

$desmos_div = MODES(
    HTML=>qq(<div id="$unique_div_id" style="width: ${width}px; height: ${height}px;"></div>), 
    TeX=>'Interactive graph best viewed online'
);

$desmos_div2 = MODES(
    HTML=>qq(<div id="$unique_div_id2" style="width: ${width}px; height: ${height}px;"></div>), 
    TeX=>'Interactive graph best viewed online'
);

$desmos_div3 = MODES(
    HTML=>qq(<div id="$unique_div_id3" style="width: ${width}px; height: ${height}px;"></div>), 
    TeX=>'Interactive graph best viewed online'
);

##############################################################
#
#  Setup

Context("Point");
Context("Numeric");
Context()->variables->add(t=>'Real');

$x1 = non_zero_random(-10,10); #middle, where $a begins
$y1 = non_zero_random(-10,10); #up or down shift from default
$x2 = non_zero_random(-10,10); #middle, where $a begins
$y2_up = non_zero_random(-10,10); #up or down shift from default
$x2_left = $x2-1;
$x2_right = $x2+1;
$y2 = $y2_up-1;

$x1_max = $x1+1;
$x1_min = $x1-2;

$f1 = Formula("(x-$x1)^2+$y1");
$y1_left = $f1->eval(x=>$x1_min);
$y1_right = $f1->eval(x=>$x1_max);

$k2 = 3;
$m2 = 2;
$n2 = 12;
$C2 = 2;
$x2cp1 = $m2-sqrt($n2/$k2);
$x2cp2 = $m2+sqrt($n2/$k2);
$x2_mid = ($x2cp1+$x2cp2)/2;
$x2_min = $x2cp1-1;
$x2_max = $x2cp2+1;

$f2 = Formula("$k2(x-$m2)^3/3-$n2*x+$C2");
$y2_left = $f2->eval(x=>$x2_min);
$y2_right = $f2->eval(x=>$x2_max);
$y2_min = $f2->eval(x=>$x2cp2);
$y2_max = $f2->eval(x=>$x2cp1);
$y2_mid = $f2->eval(x=>$x2_mid);

$a1 = random(-5,-1);
$b1 = random(-5,-1);
$c1 = random(1,5);
$d1 = random(1,5);
$m1top = $d1-$b1;
$m1bottom=$c1-$a1;

$x3=random(-10,10);
$y3=random(-10,10);

$color_choice = PopUp(
  ["Choose one", "red","black","blue","green","orange","purple"],
  "purple");

## THIS IS PROBLEM 2 OF A 3 PROBLEM SERIES INTRODUCING THE EXTREME VALUE THEOREM. IF YOU USE THEM TOGETHER, YOU CAN USE PASSCODES TO ALLOW YOU TO REQUIRE THE PROBLEMS BE DONE IN ORDER. BELOW IS SOME OF THE CODE YOU'LL NEED:

#SRAND($psvn);
#$passcode1 = random(1000,9999);
#$passcode2 = random(1000,9999);

## END PASSCODE CODE


##############################################################
#
#  Text

Scaffold::Begin(
      can_open => "when_previous_correct",
      is_open  => "first_incorrect"
);

Section::Begin("Passcode");

BEGIN_PGML

At the end of the previous problem, we saw...

[@ openDiv({ "class" => "importantFormula" }) @]*
*Fermat's Theorem*:

If [`(c,f(c))`] is a local maximum or minimum, then either [`f'(c)=0`] or [`f'(c)`] does not exist.
[@ closeDiv() @]*

[% Enter the passcode from the previous question:

[_]{$passcode1} %]

END_PGML
Section::End();

Section::Begin("Derivatives that don't exist???");

BEGIN_PGML

On the graph below, there are no points with horizontal tangent lines.

[@ $desmos_div @]*

However, there is still a local maximum and a local minimum.

* Local minimum: [`\big(`][_]{$a1}[`,`][_]{$b1}[`\big)`]

* Local maximum: [`\big(`][_]{$c1}[`,`][_]{$d1}[`\big)`]

* Find the derivative at the local minimum point. If it does not exist, write DNE. [_]{String('DNE')->cmp}

* Find the derivative at the local maximum point. If it does not exist, write DNE. [_]{String('DNE')->cmp}

END_PGML
Section::End();

Section::Begin("Why is Fermat's Theorem true?");

BEGIN_PGML

There are just 4 possibilities for a derivative at any point. It can be positive, negative, zero, or not exist.

If it is positive or negative, we have a tangent line sloping either up or down.

[@ $desmos_div2 @]*

If you zoom in to either the blue or green point, the graph should look similar to its tangent line. (If you like, you can click to turn the tangent lines on and off.) As you can see, there are nearby points both above and below the point in question, so it cannot be a local maximum or minimum. (That is why the derivative must either equal 0 or not exist.)

END_PGML
Section::End();

Section::Begin("Is there an absolute maximum or minimum?");

BEGIN_PGML

As we have seen, not every function has an absolute maximum or minimum. Looking at each of these graphs, decide whether an absolute maximum exists or not, and whether an absolute minimum exists.

[@ $desmos_div3 @]*

For each color, enter the absolute maximum and minimum ([`y`]-values only) if they exist. If they don't exist, write "none".

Red absolute maximum: [_]{String('none')->cmp} Red absolute minimum: [_]{$y3-3}

Black absolute maximum: [_]{$y3-2} Black absolute minimum: [_]{String('none')->cmp}

Blue absolute maximum: [_]{String('none')->cmp} Blue absolute minimum: [_]{$y3-1}

Green absolute maximum: [_]{$y3+3} Green absolute minimum: [_]{String('none')->cmp}

Orange absolute maximum: [_]{$y3+6} Orange absolute minimum: [_]{String('none')->cmp}

Purple absolute maximum: [_]{$y3+4} Purple absolute minimum: [_]{$y3-6}

Only one of these has both an absolute maximum and minimum. Which one? [_]{$color_choice}

END_PGML
Section::End();

Section::Begin("When MUST absolute extrema exist?");

BEGIN_PGML

[@ openDiv({ "class" => "importantFormula" }) @]*
*Extreme Value Theorem*:

If a function [`f`] is continuous on a closed interval [`[a,b]`], then [`f`] has both an absolute minimum and an absolute maximum on [`[a,b]`].
[@ closeDiv() @]*

[% The passcode for the next question is [`[$passcode2]`]. Enter it here: [_]{$passcode2} %]

END_PGML
Section::End();

Scaffold::End();

Context()->normalStrings;

##################################
#  Desmos graph (via the API)
#  Execute this only after the $desmos_div object has been put on the html page.

$right1 = $x1 + 4;
$top1 = $y1 + 6;
$left1 = $x1 - 4;
$bottom1 = $y1 - 2;

$right2 = $x3 + 6;
$top2 = $y3 + 7;
$left2 = $x3 - 5;
$bottom2 = $y3 - 7;

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script>

    var arstarst = document.getElementById("$unique_div_id");

    var my_calculator = Desmos.Calculator(arstarst, {
        keypad: false, 
        expressions: false, 
        settingsMenu: true, 
        expressionsTopbar: true
    });
    
    my_calculator.setExpressions([
        { latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},
        { id: 'left1', latex: 'y = -2(x-$a1)+$b1 \\left\\{x\\leq$a1\\right\\}', color: Desmos.Colors.BLUE},
        { id: 'middle1', latex: 'y = $m1top/$m1bottom(x-$a1)+$b1 \\left\\{$a1\\leq x\\leq$c1\\right\\}', color: Desmos.Colors.BLUE},
        { id: 'right1', latex: 'y = -2(x-$c1)+$d1 \\left\\{x\\geq$c1\\right\\}', color: Desmos.Colors.BLUE},
    ]);
    
    my_calculator.setMathBounds({
      left: $a1-5,
      right: $c1+5,
      bottom: $b1-1,
      top: $d1+1
    });
    
    my_calculator.updateSettings({ fontSize: Desmos.FontSizes.SMALL });
    
    var state = my_calculator.getState();
</script>
END_SCRIPT

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script>

    var arstarst = document.getElementById("$unique_div_id2");

    var my_calculator = Desmos.Calculator(arstarst, {
        keypad: false, 
        //expressions: false, 
        expressions: true,
        settingsMenu: true, 
        expressionsTopbar: true
    });
    
    my_calculator.setExpressions([
        { id: 'negative slope', latex: 'y-$y2_up = -2(x-$x2_left)', color: Desmos.Colors.BLUE},
        { id: 'positive slope', latex: 'y-$y2_up = 2(x-$x2_right)', color: Desmos.Colors.GREEN},
        { latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},
        { id: 'parabola', latex: 'y = (x-$x2)^2+$y2', color: Desmos.Colors.BLACK},
        { id: 'negative slope point', latex: '($x2_left,$y2_up)', color: Desmos.Colors.BLUE},
        { id: 'positive slope point', latex: '($x2_right,$y2_up)', color: Desmos.Colors.GREEN},
    ]);
    
    my_calculator.setMathBounds({
      left: $x2-1.5,
      right: $x2+1.5,
      bottom: $y2+0.5,
      top: $y2+3
    });
    
    my_calculator.updateSettings({ fontSize: Desmos.FontSizes.SMALL });
    
    var state = my_calculator.getState();
</script>
END_SCRIPT

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script>

    var arstarst = document.getElementById("$unique_div_id3");

    var my_calculator = Desmos.Calculator(arstarst, {
        keypad: false,
        expressions: false,
        settingsMenu: true,
        expressionsTopbar: true
    });
    
    my_calculator.setExpressions([
        { latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},{ latex: ' '},
        { id: 'black', latex: 'y = \\frac{16}{(x-$x3)^2-16}-1+$y3 \\left\\{$x3-4<x<$x3+4\\right\\}', color: Desmos.Colors.BLACK},
        { id: 'black_asymptotes', latex: '(x-$x3)^2 = 16', color: Desmos.Colors.BLACK, lineStyle: Desmos.Styles.DASHED },
        { id: 'blue_right', latex: 'y = x-$x3-1+$y3 \\left\\{x\\geq$x3\\right\\}', color: Desmos.Colors.BLUE},
        { id: 'blue_left', latex: 'y = $x3-x-1+$y3 \\left\\{x\\leq$x3\\right\\}', color: Desmos.Colors.BLUE},
        { id: 'green', latex: 'y = \\frac3{(x-$x3)^2+1}+$y3', color: Desmos.Colors.GREEN},
        { id: 'green_asymptote', latex: 'y = $y3', color: Desmos.Colors.GREEN, lineStyle: Desmos.Styles.DASHED},
        { id: 'orange_left', latex: 'y = (x-$x3+5)^2+$y3-3 \\left\\{$x3-4<x\\leq$x3-2\\right\\}', color: Desmos.Colors.ORANGE},
        { id: 'orange_right', latex: 'y = 4+$x3-x+$y3 \\left\\{$x3-2<x\\leq$x3+4\\right\\}', color: Desmos.Colors.ORANGE},
        { id: 'open_dot_orange', latex: '($x3-4,$y3-2)', color: Desmos.Colors.ORANGE, dragMode: Desmos.DragModes.NONE, pointStyle: Desmos.Styles.OPEN },
        { id: 'solid_dot_orange', latex: '($x3+4,$y3)', color: Desmos.Colors.ORANGE },
        { id: 'red_left', latex: 'y = 2(x-$x3)+5+$y3 \\left\\{$x3-4<x\\leq$x3\\right\\}', color: Desmos.Colors.RED},
        { id: 'red_right', latex: 'y = \\sqrt{x-$x3}+$y3 \\left\\{x\\leq$x3+4\\right\\}', color: Desmos.Colors.RED},
        { id: 'solid_dots_red', latex: '($x3-4,$y3-3),($x3+4,$y3+2),($x3,$y3)', color: Desmos.Colors.RED },
        { id: 'open_dot_red', latex: '($x3,$y3+5)', color: Desmos.Colors.RED, dragMode: Desmos.DragModes.NONE, pointStyle: Desmos.Styles.OPEN },
        { id: 'purple_left', latex: 'y = \\frac23(x-$x3+7)+$y3 \\left\\{$x3-4\\leq x\\leq$x3-1\\right\\}', color: Desmos.Colors.PURPLE},
        { id: 'purple_middle', latex: 'y = 2(x-$x3-1)^2-4+$y3 \\left\\{$x3-1\\leq x\\leq$x3+2\\right\\}', color: Desmos.Colors.PURPLE},
        { id: 'purple_right', latex: 'y = -2(x-$x3)+2+$y3 \\left\\{$x3+2\\leq x\\leq$x3+4\\right\\}', color: Desmos.Colors.PURPLE},
        { id: 'solid_dots_purple', latex: '($x3-4,$y3+2),($x3+4,$y3-6)', color: Desmos.Colors.PURPLE },
    ]);
    
    my_calculator.setMathBounds({
      left: $left2,
      right: $right2,
      bottom: $bottom2,
      top: $top2
    });
    
    my_calculator.updateSettings({ fontSize: Desmos.FontSizes.SMALL });
    
    var state = my_calculator.getState();
</script>
END_SCRIPT

ENDDOCUMENT();
