## DESCRIPTION
##   ****
## ENDDESCRIPTION

## KEYWORDS('Chain Rule')

## DBsubject('Calculus')
## DBchapter('Derivatives')
## DBsection('Chain Rule')
## Date('06/28/2023')
## Author('W. Shull')
## Institution('UWEC')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.


loadMacros(
    "PGstandard.pl",
    "MathObjects.pl",        # the new parser
    "contextFraction.pl",
    "parserMultiAnswer.pl",
    "answerHints.pl",
    "PGML.pl",
    "scaffold.pl",
    "customCSS.pl",
    "PGcourse.pl",           # Customization file for the course
);

loadMacros("niceTables.pl");

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

$b2=non_zero_random(-10,10);
$b3=non_zero_random(-10,10);
$b4=non_zero_random(-10,10);
$b5=non_zero_random(-10,10);
#$b6=non_zero_random(-10,10);
$b8=random(2,10);

$b9=random(2,10);

while ($b9==$b8){
    $b9=random(-10,10);
}

$b1=non_zero_random(2,8);
$b0=random(2,6);
$b10=non_zero_random(-10,10);
$b11=non_zero_random(-10,10);
$b12=non_zero_random(-10,10);
$b13=non_zero_random(-10,10);
$b14=non_zero_random(-10,10);
$b15=random(2,10);
$b16=random(2,10);

$a1=$b4*$b2;
$a2=$b4*$b3+$b5;
$a3=$b2*$b5+$b3;

## THIS IS PROBLEM 2 OF A 2 PROBLEM SERIES INTRODUCING THE CHAIN RULE. IF YOU USE THEM TOGETHER, YOU CAN USE PASSCODES TO ALLOW YOU TO REQUIRE THE PROBLEMS BE DONE IN ORDER. BELOW IS SOME OF THE CODE YOU'LL NEED:

#SRAND($psvn);
#$passcode1 = random(1000,9999);

## END PASSCODE CODE

$b7=non_zero_random(-10,10);


Context("Numeric");

Context()->variables->add(u=>"Real");

Context()->noreduce('(-x)-y');

$ans3 = Formula("$a1*x+$a3")->reduce;
$ans4 = Formula("$a1*x+$a2")->reduce;
$ans5 = Formula("sqrt(x^2+$b7)")->reduce;
$ans5->{limits}=[4,8]; #Which x values are tested? We only want x values that are guaranteed to be in the domain.
$ans5d=Formula("x/(sqrt(x^2+[$b7]))")->reduce;
$ans5d->{limits}=[4,8]; #Which x values are tested? We only want x values that are guaranteed to be in the domain.
$ans6 = Formula("x+$b7")->reduce;
$ans1 = Formula("$b11*sin^$b8(x)*cos^$b8(x)+$b10*sin^$b9(x)*cos^$b9(x)")->reduce;
$ans2 = Formula("sin($b11*x^$b8+$b10*x^$b9)*cos($b11*x^$b8+$b10*x^$b9)")->reduce;
$ans8 = Formula("sqrt(u)");
$ans9 = Formula("x^2+[$b7]")->reduce;
$ans10 = Formula("sin u cos u")->reduce;
$ans13 = Formula("u^3-4u^2+5")->reduce;
$ans14 = Formula("tan x")->reduce;
$ans15 = 2*$b0;


$g3=Formula("$b11*x^$b8+$b10*x^$b9")->reduce;
$g3d=Formula("($b11*$b8)*x^($b8-1)+($b10*$b9)*x^($b9-1)")->reduce;

###################################
# Main text
###########################################
#  The scaffold
Scaffold::Begin(
    can_open => "when_previous_correct",
    is_open => "first_incorrect"
);
###########################################
Section::Begin("Passcode");

Context()->texStrings;
BEGIN_PGML

How do we take a derivative of something like [`[$ans5]`] ? None of the rules we know so far are enough to find this derivative.

[% Enter the passcode from the previous question: [_]{$passcode1} %]

END_PGML
Section::End();

Section::Begin("Introducing the Chain Rule!");

BEGIN_PGML

We know we can write it as a composition [`f(g(x))`]. In this case, [`u=g(x)=x^2+[$b7]`] and [`f(g(x))=f(u)=\sqrt u=u^{1/2}`].

Here are a couple videos introducing the Chain Rule! I recommend watching all of the first one...

[@
kalturaShull("1_ro5sw2il")
@]*

...and I recommend watching this next one from about 8:40 to 14:35.

[@ youtube("YG15m2VwSjA?start=521"); @]*

[@ openDiv({ "class" => "importantFormula" }) @]*
Chain Rule:

If [`f`] and [`g`] are differentiable functions, then

[```\frac d{dx}[f(g(x))]=f'(g(x))*g'(x)```]
[@ closeDiv() @]*

Or, if [`u=g(x)`], then

[```\frac d{dx}[f(g(x))]=f'(u)*g'(x)```]

Let's find the derivative of [`\sqrt{x^2+[$b7]}`] using the Chain Rule!

First we write down the outside and inside function:

[``f(u)=\sqrt u=u^{1/2}``]

[``g(x)=x^2+[$b7]``]

Then we find their derivatives:

[``f'(u)=\frac12 u^{-1/2}``]

[``g'(x)=2x``]

Then we put it all together!

[```
\begin{eqnarray*}
\frac d{dx}[f(g(x))]
&=&f'(u)*g'(x)\\
&=&\frac12 u^{-1/2}*2x\\
&=&x*u^{-1/2}\\
\end{eqnarray*}
```]

Since the problem was given with only [`x`], we can't leave [`u`] in our final answer. So we continue...

[```\frac d{dx}[f(g(x))]=\dots=x*u^{-1/2}=x*(x^2+[$b7])^{-1/2}```]

And in case we need to simplify more...

[```\frac d{dx}[f(g(x))]=\dots=x*(x^2+[$b7])^{-1/2}=\frac x{(x^2+[$b7])^{1/2}}=\frac x{\sqrt{x^2+[$b7]}}```]

Retype that final answer here:

[``\frac d{dx}[f(g(x))]=``][_]{$ans5d}

END_PGML
Section::End();

Section::Begin("Chain Rule practice");

BEGIN_PGML

Suppose [`f(g(x))=\sin([$g3])`]. As we did in the previous example, decompose this into [`f(u)`] and [`g(x)`].

[`f(u)=`][_]{Formula("sin(u)")}

[`g(x)=`][_]{$g3}

Then find both their derivatives:

[`f'(u)=`][_]{Formula("cos(u)")}

[`g'(x)=`][_]{$g3d}

Multiply [`f(u)`] by [`g(x)`] (leaving [`u`] in your answer):

END_PGML
Context()->normalStrings;

# were generating warnings, so factored out.
$arst = Formula("cos(u)*[$g3d]");
$qwfp = Formula("cos([$g3])*[$g3d]");

Context()->texStrings;
BEGIN_PGML

[`f'(u)g'(x)=`][_]{$arst} ## HERE


Now replace [`u`] with [`g(x)`]:

[`f'(g(x))*g'(x)=`][_]{$qwfp}  ##HERE

We are finished! This is the derivative of [`\sin([$g3])`].

-----

Suppose [`f(g(x))=\tan^3(x)-[$b15]\tan^2(x)+[$b16]`].

[@
DataTable(
[
    ['\( f(u) = \) ' . ans_rule(10),'\(f\'(u)=\)' . ans_rule(10)],
    ['\( g(x) = \) ' . ans_rule(10),'\(g\'(x)=\)' . ans_rule(100)]
],
align => 'l l',
tablecss => "border:solid 1px; border-spacing:50px 5px; border-radius: 5px; border-collapse:separate;"
);
@]***


END_PGML

ANS(Formula("u^3-[$b15]u^2+[$b16]")->reduce->cmp());
ANS( Compute("3u^2-(2*[$b15])u")->cmp() );
ANS( Compute("tan(x)")->cmp() );
ANS( Compute("sec^2(x)")->cmp() );

BEGIN_PGML

[`f'(u)g'(x)=`][_]{Formula("(3u^2-(2*[$b15])u)*sec^2(x)")->reduce}


[`f'(g(x))\cdot g'(x)=`][_]{Formula("(3tan^2(x)-(2*[$b15])tan(x))*sec^2(x)")->reduce}


-----

Suppose [``f(g(x))=\frac{[$b14]}{[$b12]x+[$b13]}``].


[@
DataTable(
[
    ['\( f(u) = \) ' . ans_rule(10),'\(f\'(u)=\)' . ans_rule(10)],
    ['\( g(x) = \) ' . ans_rule(10),'\(g\'(x)=\)' . ans_rule(100)]
],
align => 'l l',
tablecss => "border:solid 1px; border-spacing:50px 5px; border-radius: 5px; border-collapse:separate;"
);
@]***


END_PGML

ANS(Formula("$b14/u")->reduce->cmp());
ANS( Compute("-$b14/u^2")->cmp() );
ANS( Compute("[$b12]x+[$b13]")->cmp() );
ANS( Compute("[$b12]")->cmp() );

BEGIN_PGML

[`f'(u)g'(x)=`][_]{Formula("-[$b14]*[$b12]/u^2")->reduce}

[`f'(g(x))g'(x)=`][_]{Formula("-[$b14]*[$b12]/([$b12]x+[$b13])^2")->reduce}

END_PGML


Section::End();

Section::Begin("The Chain Rule agrees with other methods");

BEGIN_PGML

Suppose we want the derivative of [`([$b0]x+[$b1])^2`]. Let's find this derivative a few different ways:

First, FOIL the expression out:

>>[_]{Formula("[$b0]^2")->reduce}[`x^2+`][_]{Formula("2*[$b0]*[$b1]")->reduce}[`x+`][_]{Formula("[$b1]^2")->reduce}<<

Now take the derivative: [_]{Formula("(2*[$b0]^2)x+(2*[$b0]*[$b1])")->reduce}

Let's find the same derivative, but with the Chain Rule!

[@
DataTable(
[
    ['\( f(u) = \) ' . ans_rule(10),'\(f\'(u)=\)' . ans_rule(10)],
    ['\( g(x) = \) ' . ans_rule(10),'\(g\'(x)=\)' . ans_rule(100)]
],
align => 'l l',
tablecss => "border:solid 1px; border-spacing:50px 5px; border-radius: 5px; border-collapse:separate;"
);
@]***

END_PGML

ANS(Formula("u^2")->reduce->cmp());
ANS( Compute("2u")->cmp() );
ANS( Compute("[$b0]x+[$b1]")->cmp() );
ANS( Compute("[$b0]")->cmp() );

BEGIN_PGML


[`f'(u)\cdot g'(x)=`][_]{Formula("(2*[$b0])u")->reduce}

END_PGML
Section::End();

Section::Begin("...");

BEGIN_PGML


[`f'(g(x))\cdot g'(x)=[$ans15]\Big(`][_]{Formula("[$b0]x+[$b1]")->reduce}[`\Big)`]

Now simplify this!

[`f'(g(x))\cdot g'(x)=`][_]{Formula("2*[$b0]^2")->reduce}[`x+`][_]{Formula("2*[$b0]*[$b1]")->reduce} 

END_PGML


Context()->normalStrings;

$showPartialCorrectAnswers = 1;

Section::End();

  Scaffold::End();
ENDDOCUMENT();