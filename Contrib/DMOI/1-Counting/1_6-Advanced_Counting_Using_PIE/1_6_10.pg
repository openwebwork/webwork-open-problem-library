## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Inclusion/exclusion)
## Level(5)
## KEYWORDS('counting','permutations','derangements','inclusion exclusion')
## TitleText1(Discrete Mathematics: an Open Introduction)
## EditionText1(3)
## AuthorText1(Oscar Levin)
## Section1(1.6)
## Problem1(10)
## Author(Oscar Levin)
## Institution(University of Northern Colorado)
## Language(en-US)

DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",

  "contextIntegerFunctions.pl",
  "PGcourse.pl",
);

####################
# Header
####################
COMMENT('Authored in PreTeXt');
TEXT(beginproblem());

####################
# PG Setup
####################
Context("IntegerFunctions");
do {$n = random(5,12);} until ($n != 6);
$g = int($n/2); #part b
$ng = $n - $g;
$n1=$n-1;
$next = 0; #no one gets their own
for ($j=1; $j<=$n; $j++)
{
$next =  $next +Compute(" (-1)^($j+1)C($n,$j)($n-$j)!") ;
}
$ans1 = Compute("$n! - $next");
$go =0;
for ($i=1; $i<=$ng; $i++)
{
$go =  $go +Compute(" (-1)^($i+1)C($ng,$i)($ng-$i)! ") ;
}
$ans2 = Compute("C($n,$g)*($ng! - $go)");
$ans3 = Compute("0");

####################
# Body
####################
BEGIN_PGML
The Grinch sneaks into a room in which there are [$n] Christmas presents for [$n] different people. He proceeds to switch the name labels on the presents. How many ways could he do this if:
a.  No present is allowed to end up with its original label? Explain what each term in your answer represents.

    [__]{$ans1}{width => 15}


a.  Exactly [$g] presents keep their original labels? Explain.

    [__]{$ans2}{width => 15}


a.  Exactly [$n1] presents keep their original labels? Explain.

    [__]{$ans3}{width => 15}



END_PGML

####################
# Solution
####################
BEGIN_PGML_SOLUTION
a.  [$NBSP]*


    >> [``
                      [$n]! - \left[{[$n] \choose 1}[$n-1]! - {[$n] \choose 2}[$n-2]! \dots  {[$n] \choose [$n]}0! \right] = [$ans1]
                    ``] <<




a.  [$NBSP]*


    >> [``
                      {[$n] \choose [$g]}\left([$ng]! - \left[{[$ng]\choose 1}[$ng-1]! - {[$ng] \choose 2}[$ng-2]! + \dots {[$ng] \choose [$ng]}0!\right]\right) = [$ans2]
                    ``] <<




a.  0. Once [$n1] presents have their original label, there is only one present left and only one label left, so the [$n]th present must get its own label.



END_PGML_SOLUTION

####################
# End Problem
####################
ENDDOCUMENT();
