## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Multiple techniques)
## Level(4)
## KEYWORDS('counting','combinations', 'permutations','words','multiple techniques')
## TitleText1(Discrete Mathematics: an Open Introduction)
## EditionText1(3)
## AuthorText1(Oscar Levin)
## Section1(1.7)
## Problem1(14)
## Author(Oscar Levin)
## Institution(University of Northern Colorado)
## Language(en-US)

DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",

  "contextIntegerFunctions.pl",
  "PGcourse.pl",
);

####################
# Header
####################
COMMENT('Authored in PreTeXt');
TEXT(beginproblem());

####################
# PG Setup
####################
Context("IntegerFunctions");
do {$n = random(5,11);} until ($n !=6);
$n2= $n-2;
$n3 = $n-3;

$ans1 = Compute("$n! - $n2*$n3!");
$ans2 = Compute("$n! - C($n,3)*$n3!");

####################
# Body
####################
BEGIN_PGML
We are making [$n]-letter words from the set of letters [`a,b,c,d,e,f \dots`], in such a way that we have exactly the first [$n] letters available so that we use all letters.
a. How many [$n]-letter words can we make from the letters without repeats that do not contain the sub-word "bad" in consecutive letters?

[_____]{$ans1}

a. How many words don't contain the subword "bad" in not-necessarily-consecutive letters (but in order)?

[_____]{$ans2}


END_PGML

####################
# Solution
####################
BEGIN_PGML_SOLUTION
There are [$n2] spots to start the word, and then there are [`[$n3]!`] ways to arrange the other letters in the remaining three spots.  Thus the number of words avoiding the sub-word "bad" in consecutive letters is [`[$n]! - [$n2]\cdot [$n3]!=[$ans1]\text{.}`]

If we now need to avoid words that put "b" before "a" before "d", we must choose which spots those letters go (in that order) and then arrange the remaining [$n3] letters.  Thus, [`[$n]! - {[$n] \choose 3}[$n3]!=[$ans2]`] words.


END_PGML_SOLUTION

####################
# End Problem
####################
ENDDOCUMENT();