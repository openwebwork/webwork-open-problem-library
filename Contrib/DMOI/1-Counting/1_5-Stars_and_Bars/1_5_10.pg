## DBsubject(Combinatorics)
## DBchapter(Counting)
## DBsection(Stars and bars)
## Level(4)
## KEYWORDS('counting','stars and bars','combinations','functions','increasing')
## TitleText1(Discrete Mathematics: an Open Introduction)
## EditionText1(3)
## AuthorText1(Oscar Levin)
## Section1(1.5)
## Problem1(10)
## Author(Oscar Levin)
## Institution(University of Northern Colorado)
## Language(en-US)

DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",

  "contextIntegerFunctions.pl",
  "PGcourse.pl",
);

####################
# Header
####################
COMMENT('Authored in PreTeXt');
TEXT(beginproblem());

####################
# PG Setup
####################
Context("IntegerFunctions");
do {$a = random(3,7); } until ($a !=5);
do {$b = random(4, 12); } until ($b > $a);
$A = Set(1..$a);
$B=Set(0..$b);
$b1 = $b + 1; #total number of elements in codomain
$ans1 = Compute("C([$b1],[$a])");
$bs= $a + $b1 -1; #total bars and stars

$ans2 = Compute("C($bs,$a)");

####################
# Body
####################
BEGIN_PGML
Consider functions [`f:[$A] \to [$B]\text{.}`]
a.  How many of these functions are strictly increasing? Explain. (A function is strictly increasing provided if [`\renewcommand{\v}{\vtx{above}{}}a <  b\text{,}`] then [`\renewcommand{\v}{\vtx{above}{}}f(a) <  f(b)\text{.}`])

    [_____]{$ans1}


a.  How many of the functions are non-decreasing? Explain. (A function is non-decreasing provided if [`\renewcommand{\v}{\vtx{above}{}}a <  b\text{,}`] then [`f(a) \le f(b)\text{.}`])

    [_____]{$ans2}



END_PGML

####################
# Solution
####################
BEGIN_PGML_SOLUTION
a.  [`{[$b1]\choose [$a]}= [$ans1]\text{.}`] Note that a strictly increasing function is automatically injective. So the [$a] outputs must all be different. So let's first pick which [$a] outputs we will use: there are [`{[$b1] \choose [$a]}`] ways to do this. Now how many ways are there to assign those outputs to the inputs [`1`] through [$a]? Only one way, since there is only one way to arrange numbers in increasing order.


a.  [`{[$bs] \choose [$a]}\text{.}`] This is in fact a sticks and stones problem. The stones are the [$a] inputs, and the sticks are the [$b] spots between the [$b1] possible outputs. Think of it this way: We will specify [`f(1)\text{,}`] then [`f(2)\text{,}`] then [`f(3)\text{,}`] and so on in that order. Start with the possible output 0. We can use it as the output of [`f(1)\text{,}`] or we can switch to 1 as a potential output. Say we put [`f(1) = 1\text{.}`] Now we are at 1 (can't go back to 0). Should [`f(2) = 1\text{?}`] If yes, then we are putting down another stone. If no, put down a bar and switch to 2. Maybe you switch to 3, then assign [`f(2) = 3`] and [`f(3) = 3`] (two more stones) before switching to 4 as a possible output. And so on.



END_PGML_SOLUTION

####################
# End Problem
####################
ENDDOCUMENT();