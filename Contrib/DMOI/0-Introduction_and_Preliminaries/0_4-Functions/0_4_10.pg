## DBsubject(Set theory and logic)
## DBchapter(Functions)
## DBsection(Definition of function)
## Level(3)
## KEYWORDS('function','recursion', 'recursive definition')
## TitleText1(Discrete Mathematics: an Open Introduction)
## EditionText1(3)
## AuthorText1(Oscar Levin)
## Section1(0.4)
## Problem1(0.4.10)
## Author(Oscar Levin)
## Institution(University of Northern Colorado)
## Language(en-US)

DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",

  "PCCmacros.pl",
  "PGcourse.pl",
);

####################
# Header
####################
COMMENT('Authored in PreTeXt');
TEXT(beginproblem());

####################
# PG Setup
####################
$i = random(4,9);
$b = random(4,8);
$a = random(2,9);
$c = random(10,20);
$d = random(137,256);
$ans1 = 1 + $b*$i;
$ans2 = $a + $b*$i;
$ans3 = $c + $b*$i;
$ans4 = $d + $b*$i;
####################
# Body
####################
BEGIN_PGML
Suppose [`\renewcommand{\d}{\displaystyle}\newcommand{\N}{\mathbb N}f:\N \to \N`] satisfies the recurrence [`f(n+1) = f(n) + [$i]\text{.}`]  Note that this is not enough information to define the function, since we don't have an initial condition. For each of the initial conditions below, find the value of [`f([$b])\text{.}`]
a.  [`f(0) = 1\text{.}`]

    [`f([$b]) = `] [_____]{$ans1}


a.  [`f(0) = [$a]\text{.}`]

    [`f([$b]) = `] [_____]{$ans2}


a.  [`f(0) = [$c]\text{.}`]

    [`f([$b]) = `] [_____]{$ans3}


a.  [`f(0) = [$d]\text{.}`]

    [`f([$b]) = `] [_____]{$ans4}





END_PGML

####################
# Solution
####################
BEGIN_PGML_SOLUTION
For each case, you must use the recurrence to find [`f(1)\text{,}`] [`f(2)`] ... [`f([$b])\text{.}`]  But notice each time you just add [$i] to the previous.  We do this [$b] times.
a.  [`f([$b]) = [$ans1]\text{.}`]


a.  [`f([$b]) = [$ans2]\text{.}`]


a.  [`f([$b]) = [$ans3]\text{.}`]


a.  [`f([$b]) = [$ans4]\text{.}`]



END_PGML_SOLUTION

####################
# End Problem
####################
ENDDOCUMENT();