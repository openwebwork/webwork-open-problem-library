
## DBsubject(Algebra)
## DBchapter('Finite sequences and series')
## DBsection('Polynomial fitting')
## Level(3)
## KEYWORDS('discrete', 'sequences', 'arithmetics', 'summation', 'sum','polynomial fitting','finite differences')
## TitleText1(Discrete Mathematics: an Open Introduction)
## EditionText1(3)
## AuthorText1(Oscar Levin)
## Section1(2.3)
## Problem1(extra)
## Author(Oscar Levin)
## Institution(University of Northern Colorado)
## Language(en-US)

DOCUMENT();

####################
# Load Macros
####################
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",

  "PGcourse.pl",
  "PGauxiliaryFunctions.pl",
  "contextFraction.pl"
);

####################
# Header
####################
COMMENT('A simple cubic sequence. (Randomized)');
TEXT(beginproblem());

####################
# PG Setup
####################
Context("Fraction");
Context()->variables->are(n => "Real");
#define sequence
$a = random(1,3);
$b = list_random(-5,-4,-3, -2, -1, 2, 3, 4, 5, 6, 7, 8);
$c = non_zero_random(-5,8);

$closed = Formula("$a*n^3 + $b*n^2 + $c*n");
$gcd = gcd($c,gcd($closed->eval(n=>1),gcd($closed->eval(n=>2),gcd($closed->eval(n=>3),$closed->eval(n=>4)))));

# Redefine closed formula so gcd is 1.
$a = Compute("$a/$gcd");
$b = Compute("$b/$gcd");
$c = Compute("$c/$gcd");
$closed = Formula("$a*n^3 + $b*n^2 + $c*n")->reduce;

@seq = ();
for ( $n = 0; $n <= 5; $n++ ){
    $seq[$n] = $closed->eval(n=>$n);
}
$seq = Compute("$seq[1], $seq[2], $seq[3], $seq[4], $seq[5]");
# $seq = Compute("$seq");

####################
# Body
####################
BEGIN_PGML

Use polynomial fitting to find the formula for the [`n`]th term of the sequence [`(a_n)_{n \ge 1}`] which starts,

[`
[$seq], \ldots
`]
 Note the first term above is [`a_1`], not [`a_0`].

[`a_n = `] [________]{$closed}

END_PGML


####################
# Solution
####################
BEGIN_PGML_SOLUTION

[`a_n = [$closed]\text{.}`] Here we know that we are looking for a cubic because the third differences are constant. So [`a_n = an^3 + bn^2 + cn + d\text{.}`] We can work backwards to find that [`a_0 = [$seq[0]]`], so we know [`d= [$seq[0]]\text{.}`] Then solve the system,

[`\begin{aligned}
[$seq[1]] & = a + b + c\\
[$seq[2]] & = 8a + 4b + 2c\\
[$seq[3]] & = 27a + 9b + 3c\\
\end{aligned}`]

to find [`a = [$a]`], [`b = [$b]`], and [`c = [$c]`].

END_PGML_SOLUTION

####################
# End Problem
####################
ENDDOCUMENT();