##DESCRIPTION
##
## Created in collaboration between Douglas College Department of Physics and Astronomy
## and the University of British Columbia (UBC) Department of Mechanical Engineering. 
##
## Project led by Agnes d'Entremont and Jennifer Kirkey
##
## Contact: agnes.dentremont@mech.ubc.ca
## 	    kirkeyj@douglascollege.ca
## 
##
## This work, including related images, is licensed under the 
## Creative Commons Attribution 4.0 International (CC BY 4.0)
## <https://creativecommons.org/licenses/by/4.0/>
##
## This work was supported by funding from the BCcampus 
## ZTC (Zero Textbook Cost) Project for STEM (https://bccampus.ca/projects/open-education/zed-cred-z-degrees/ztc-open-educational-resources-for-stem/). 
##
## This work was completed on the traditional, ancestral, and unceded
## territory of many peoples - specifically the Musqueam (xʷməθkʷəy̓əm), Squamish (Sḵwx̱wú7mesh), 
## Tsleil-Waututh (səl̓ilwətaɁɬ), QayQayt, Kwikwetlem, Kwantlen, Ktunaxa, Tsawwassen (sc̓əwaθenaɁɬ təməxʷ), 
## Chemainus (Stz'uminus), Stó:lō (S’ólh Téméxw), Kwanlin Dün, Niitsitapi (Blackfoot), 
## and the people of the Treaty 7 region of Southern Alberta. 
##
## ENDDESCRIPTION
##
## DBsubject(Statics)
## DBchapter(Equilibrium of a Rigid Body)
## DBsection(Free-Body Diagrams)
## Institution('University of British Columbia')
## Author(Ralph Pascual)
## Date(Winter 2021)
## Difficulty(Intermediate)
## KEYWORDS('Statics', 'Free-Body Diagrams', 'Rigid Body', 'Equilibrium')
## RESOURCES('Content corresponds to Hibbeler (14th ed.) chapter [5], section [5.5]')

########################################################

DOCUMENT();

loadMacros(
"PGstandard.pl", # Standard macros for PG language
"MathObjects.pl",
"PGML.pl",
"parserPopUp.pl",
"parserMultiAnswer.pl",
"parserRadioButtons.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl",
#"source.pl", # allows code to be displayed on certain sites.
"PGcourse.pl"
 );
 
##############################################################
#
#Setup

TEXT(beginproblem());

$showPartialCorrectAnswers = 0;

Context("Numeric");		# or Complex

#---------------Tolerance------------------#
Context()->flags->set(
tolerance=>.02,
tolType=>'relative');  #relative or absolute

#-------------- Image Scaling---------------#
$imgScale = 0.2;

$height = $imgScale*2557;

$width = $imgScale*2803;
		#aspect ratio

#---- Setting up multiple choices -----------------#
$mcA = new_checkbox_multiple_choice();
$mcA -> qa( "Point `A`", "`A_x`", "`A_y`", "`(M_x)_A`", "`(M_y)_A`", "`(M_z)_A`" );
$mcA -> makeLast( "`A_x`", "`A_y`", "`A_z`", "`(M_x)_A`", "`(M_y)_A`", "`(M_z)_A`" );

$mcB = new_checkbox_multiple_choice();
$mcB -> qa( "Point `B`", "`B_z`" );
$mcB -> makeLast( "`B_x`", "`B_y`", "`B_z`", "`(M_x)_B`", "`(M_y)_B`", "`(M_z)_B`" );

$mcC = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "All values");

$mcD = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "All values");

$mcE = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "Not applicable for given support type");

$mcF = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "All values");

$mcG = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "All values");

$mcH = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "All values");

$mcI = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "Not applicable for given support type");

$mcJ = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "Not applicable for given support type");

$mcK = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "`\ge 0`");

$mcL = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "Not applicable for given support type");

$mcM = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "Not applicable for given support type");

$mcN = RadioButtons([ "`\le 0`", "`\ge 0`", "All values", "Not applicable for given support type" ], "Not applicable for given support type");

#---- Answers to the problem -----------------------#

########################################################
#PGML

BEGIN_PGML

[@ image( "21-S-5.5-RP-01.png", width=>[$width], height=>[$height]) @]*

The metal member is held in equilibrium. The member is supported by a square bar fitted through a smooth square hole of the attached collar at point [`A`] and by a roller at point [`B`]. Determine the number of unknown support reaction components in the free body diagram.

Select the unknown reaction components, for each support, that need to be included in a FBD.

[@ $mcA -> print_q() @]*
[@ $mcA -> print_a() @]*


[@ $mcB -> print_q() @]*
[@ $mcB -> print_a() @]*


Assuming that components are positive when directed along the positive axes, find the possible values of the reaction components given the support types used. Ignore internal forces. (Ex. if a support can only push to the right but not pull to the left, then the correct answer is [`\ge 0`])

[`A_x`]

[@ $mcC -> buttons() @]*


[`A_y`]

[@ $mcD -> buttons() @]*


[`A_z`]

[@ $mcE -> buttons() @]*


[`(M_x)_A`]

[@ $mcF -> buttons() @]*


[`(M_y)_A`]

[@ $mcG -> buttons() @]*


[`(M_z)_A`]

[@ $mcH -> buttons() @]*


[`B_x`]

[@ $mcI -> buttons() @]*


[`B_y`]

[@ $mcJ -> buttons() @]*


[`B_z`]

[@ $mcK -> buttons() @]*


[`(M_x)_B`]

[@ $mcL -> buttons() @]*


[`(M_y)_B`]

[@ $mcM -> buttons() @]*


[`(M_z)_B`]

[@ $mcN -> buttons() @]*


END_PGML

install_problem_grader(~~&std_problem_grader);

ANS( checkbox_cmp( $mcA->correct_ans() ) );
ANS( checkbox_cmp( $mcB->correct_ans() ) );
ANS( $mcC->cmp() );
ANS( $mcD->cmp() );
ANS( $mcE->cmp() );
ANS( $mcF->cmp() );
ANS( $mcG->cmp() );
ANS( $mcH->cmp() );
ANS( $mcI->cmp() );
ANS( $mcJ->cmp() );
ANS( $mcK->cmp() );
ANS( $mcL->cmp() );
ANS( $mcM->cmp() );
ANS( $mcN->cmp() );

BEGIN_PGML_SOLUTION

[@ image( "21-S-5.5-RP-01.pdf", width=>[0], height=>[0] ) @]*

END_PGML_SOLUTION

##############################################################

ENDDOCUMENT();