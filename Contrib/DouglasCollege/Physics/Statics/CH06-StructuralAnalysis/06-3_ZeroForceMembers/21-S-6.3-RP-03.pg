##DESCRIPTION
##
## Created in collaboration between Douglas College Department of Physics and Astronomy
## and the University of British Columbia (UBC) Department of Mechanical Engineering. 
##
## Project led by Agnes d'Entremont and Jennifer Kirkey
##
## Contact: agnes.dentremont@mech.ubc.ca
## 	    kirkeyj@douglascollege.ca
## 
##
## This work, including related images, is licensed under the 
## Creative Commons Attribution 4.0 International (CC BY 4.0)
## <https://creativecommons.org/licenses/by/4.0/>
##
## This work was supported by funding from the BCcampus 
## ZTC (Zero Textbook Cost) Project for STEM (https://bccampus.ca/projects/open-education/zed-cred-z-degrees/ztc-open-educational-resources-for-stem/). 
##
## This work was completed on the traditional, ancestral, and unceded
## territory of many peoples - specifically the Musqueam (xʷməθkʷəy̓əm), Squamish (Sḵwx̱wú7mesh), 
## Tsleil-Waututh (səl̓ilwətaɁɬ), QayQayt, Kwikwetlem, Kwantlen, Ktunaxa, Tsawwassen (sc̓əwaθenaɁɬ təməxʷ), 
## Chemainus (Stz'uminus), Stó:lō (S’ólh Téméxw), Kwanlin Dün, Niitsitapi (Blackfoot), 
## and the people of the Treaty 7 region of Southern Alberta. 
##
## ENDDESCRIPTION
##
## DBsubject(Statics)
## DBchapter(Structural Analysis)
## DBsection(Zero-Force Members)
## Institution('University of British Columbia')
## Author(Ralph Pascual)
## Date(Winter 2021)
## Difficulty(Intermediate)
## KEYWORDS('Statics', 'Simple Truss', 'Equilibrium')
## RESOURCES('Content corresponds to Hibbeler (14th ed.) chapter [6], section [6.3]')

########################################################

DOCUMENT();

loadMacros(
"PGstandard.pl", # Standard macros for PG language
"MathObjects.pl",
"PGML.pl",
"parserPopUp.pl",
"parserMultiAnswer.pl",
"parserRadioButtons.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"PGauxiliaryFunctions.pl"
#"source.pl", # allows code to be displayed on certain sites.
#"PGcourse.pl", # Customization file for the course
 );
 
##############################################################
#
#Setup

TEXT(beginproblem());

$showPartialCorrectAnswers = 1;

Context("Numeric");		# or Complex

#---------------Tolerance------------------#
Context()->flags->set(
tolerance=>.02,
tolType=>'relative');  #relative or absolute

#-------------- Image Scaling---------------#
$imgScale = 0.25;

$height = $imgScale*1803;

$width = $imgScale*3116;
		#aspect ratio

#---- Random variables for this problem --------#
$d1 = random(3, 4, 0.5);
$d2 = $d1 + random(0.5, 1, 0.5);
$d3 = $d2;
$d4 = $d2;
$F = random(8, 10, 0.5);

#---- Formulas to compute answers --------------#
$N_A = $d4 / ($d2 + $d3 + $d4) * $F;
$N_D = $F - $N_A;

$F_AB = $d2 / $d1 * $N_A;
$F_AG = ((($d1) ** 2 + ($d2) ** 2) ** 0.5) / $d1 * $N_A;
$F_BC = $F_AB;
$F_BG = 0;
$F_CD = $d4 / $d1 * $N_D;
$F_CE = $N_D;
$F_CG = ((($d1) ** 2 + ($d3) ** 2) ** 0.5) / $d1 * $N_A;
$F_DE = ((($d1) ** 2 + ($d4) ** 2) ** 0.5) / $d1 * $N_D;
$F_EG = $F_CD;

#---- Answers to the problem -----------------------#
$ansA = $F_AB;
$ansB = $F_AG;
$ansC = $F_BC;
$ansD = $F_BG;
$ansE = $F_CD;
$ansF = $F_CE;
$ansG = $F_CG;
$ansH = $F_DE;
$ansI = $F_EG;

#---- Setting Up Multiple Choices -----------------------#
$mc = new_checkbox_multiple_choice();
$mc -> qa( "Select the zero-force members.", "`BG`" );
$mc -> makeLast( "`AB`", "`AG`", "`BC`", "`BG`", "`CD`", "`CE`", "`CG`", "`DE`", "`EG`" );

$mcAB = RadioButtons([ "Tension", "Compression", "No force" ], "Tension");

$mcAG = RadioButtons([ "Tension", "Compression", "No force" ], "Compression");

$mcBC = RadioButtons([ "Tension", "Compression", "No force" ], "Tension");

$mcBG = RadioButtons([ "Tension", "Compression", "No force" ], "No force");

$mcCD = RadioButtons([ "Tension", "Compression", "No force" ], "Tension");

$mcCE = RadioButtons([ "Tension", "Compression", "No force" ], "Tension");

$mcCG = RadioButtons([ "Tension", "Compression", "No force" ], "Tension");

$mcDE = RadioButtons([ "Tension", "Compression", "No force" ], "Compression");

$mcEG = RadioButtons([ "Tension", "Compression", "No force" ], "Compression");

########################################################
#PGML

BEGIN_PGML

[@ image( "21-S-6.3-RP-03.png", width=>[$width], height=>[$height]) @]*

A force [`F = [$F] \: \textrm{kN}`] is exerted onto joint [`C`]. If the truss is supported by a pin on [`A`] and a roller on [`D`], find the zero-force members in the truss as well as the forces in each member. Determine if the members are in compression or tension. Assume all joints are pin connected.

Use the following values:

[`d_1 = [$d1] \: \textrm{m}`]

[`d_2 = [$d2] \: \textrm{m}`]

[`d_3 = [$d3] \: \textrm{m}`]

[`d_4 = [$d4] \: \textrm{m}`]


[@ $mc -> print_q() @]*
[@ $mc -> print_a() @]*

END_PGML

install_problem_grader(~~&std_problem_grader);

ANS( checkbox_cmp( $mc->correct_ans() ) );

BEGIN_PGML

Determine the magnitude of the internal force in each member. Identify if the force is tensile, compressive, or neither.

[`F_{AB}`] = [___]{"$ansA"} [`\: \textrm{kN}`]

[@ $mcAB->buttons() @]*  

END_PGML

ANS( $mcAB->cmp() );

BEGIN_PGML

[`F_{AG} =`] [___]{"$ansB"} [`\: \textrm{kN}`]

[@ $mcAG->buttons() @]*  

END_PGML

ANS( $mcAG->cmp() );

BEGIN_PGML

[`F_{BC} =`] [___]{"$ansC"} [`\: \textrm{kN}`]

[@ $mcBC->buttons() @]*  

END_PGML

ANS( $mcBC->cmp() );

BEGIN_PGML

[`F_{BG} =`] [___]{"$ansD"} [`\: \textrm{kN}`]

[@ $mcBG->buttons() @]*  

END_PGML

ANS( $mcBG->cmp() );

BEGIN_PGML

[`F_{CD} =`] [___]{"$ansE"} [`\: \textrm{kN}`]

[@ $mcCD->buttons() @]*  

END_PGML

ANS( $mcCD->cmp() );

BEGIN_PGML

[`F_{CE} =`] [___]{"$ansF"} [`\: \textrm{kN}`]

[@ $mcCE->buttons() @]*  

END_PGML

ANS( $mcCE->cmp() );

BEGIN_PGML

[`F_{CG} =`] [___]{"$ansG"} [`\: \textrm{kN}`]

[@ $mcCG->buttons() @]*  

END_PGML

ANS( $mcCG->cmp() );

BEGIN_PGML

[`F_{DE} =`] [___]{"$ansH"} [`\: \textrm{kN}`]

[@ $mcDE->buttons() @]*  

END_PGML

ANS( $mcDE->cmp() );

BEGIN_PGML

[`F_{EG} =`] [___]{"$ansI"} [`\: \textrm{kN}`]

[@ $mcEG->buttons() @]*  

END_PGML

ANS( $mcEG->cmp() );

BEGIN_PGML_SOLUTION

[@ image( "21-S-6.3-RP-03.pdf", width=>[0], height=>[0] ) @]*

END_PGML_SOLUTION

##############################################################

ENDDOCUMENT();