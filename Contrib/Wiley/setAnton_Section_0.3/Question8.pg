# ************************************
#   Comments + Keyword Clarification
#
#    Anton, Calculus, 0.3.8
# ************************************
# DESCRIPTION
#   Find two lines through (P,1) for which the product of the x- and y-intercepts is D.
#
# ENDDESCRIPTION
## DBsubject('Calculus')
## DBchapter('Before Calculus')
## DBsection('Families of Functions')
## KEYWORDS('Intercept', 'Line', 'Function')
## TitleText1('Calculus')
## EditionText1('9')
## AuthorText1('Anton')
## Section1('0.3')
## Problem1('8')
## Author('')
## Institution('John Wiley & Sons')
#***************************************************************
#   Initialization - Load standard PG and MathObjects macros   
#***************************************************************
DOCUMENT();
loadMacros("PGstandard.pl","MathObjects.pl","PGgraphmacros.pl","parserMultiAnswer.pl","littleneck.pl");
#
rand_button();
#
# Set Up - Set up variable context and formulation of problem
#
$CT = Context("Numeric");
#***********************************************************************************
#   Product of intercepts is $D. For a "clean" quadratic solution to the problem,   
#   P (x coord) must = (D^2 - Sqr)/4D, where Sqr is a perfect square
#***********************************************************************************
$D = random(1,4,1);
#*************************************************************************
#   Make sure that $P is an integer (must be more elegant way than this)
#*************************************************************************
if ($D == 1)
{
  $S = random(3,7,2);
}
elsif ($D == 2)
{
  $S = random(4,8,2);
}
elsif ($D == 3)
{
  $S = random(9,15,6);
}
else
{
  $S = random(8,12,4);
}
$Sqr = Compute("$S^2");
$P = Compute("($D^2 - $Sqr)/(4*$D)");
$C = Compute("$P*$D");
$CT->variables->add(a=>'Real');
$Quad = Formula("a^2 - $D a + $C")->reduce;
if ($D == 1) {$Quaddisp = "a^2 - a + $C";}
else {$Quaddisp = "a^2 - $D a + $C";}
#*******************************************************************************
#   Let (a,0) be the x-intercept. Solving this problem leads to the quadratic
#   a^2 - $Da + $P$D = 0. Therefore, a = ($D +- sqrt($D^2 - 4$P$D))/2
#*******************************************************************************
$Xint1 = Compute("($D + sqrt($D^2 - 4*$P*$D))/2");
$Xint2 = Compute("($D - sqrt($D^2 - 4*$P*$D))/2");
$Slope1 = Compute("1/($P - $Xint1)");
$Slope2 = Compute("1/($P - $Xint2)");
$Yint1 = Compute("1 - $Slope1*$P");
$Yint2 = Compute("1 - $Slope2*$P");
#****************************************************************************
#   These two answers will be linked together into a Multianswer type.
#   This will link them together so that they can be entered in any order.
#****************************************************************************
$Line1 = Formula("$Slope1 x + $Yint1");
$Line2 = Formula("$Slope2 x + $Yint2");
$Multans = MultiAnswer($Line1, $Line2)->with(
  singleResult => 0,
  checker => sub
  {
      my ($correct, $student, $self) = @_;
      my ($L1stu, $L2stu) = @{$student};
      my ($L1ans, $L2ans) = @{$correct};
#
#     ***   Both correct ***
#
      if ( ($L1ans == $L1stu && $L2ans == $L2stu) ||
           ($L1ans == $L2stu && $L2ans == $L1stu) )
      {
         return [1,1];
      }
      else
      {
#
#         ***   Only 1st is correct ***
#       
          if ($L1ans == $L1stu || $L2ans == $L1stu)
          {
              return [1,0];
          }
#
#         ***   Only 2nd is correct ***
#  
          elsif ($L1ans == $L2stu || $L2ans == $L2stu)
          {
              return [0,1];
          } 
#
#         ***   Both incorrect ***
#
          else
          {
              return [0,0];
          }
      }
  }
);
#****************************************************************************************
#   For display of solution - display fractions for slope and intercepts, not decimals
#****************************************************************************************
$CT->flags->set(reduceConstantFunctions=>0);
$CT->flags->set(reduceConstants=>0);
if (abs($Slope1) < 1)
{
  $B = Compute("$Xint1 - $P");
  $Slope1disp = "-\frac{1}{$B}";
}
else
{
  $Slope1disp = "$Slope1 x";
}
if (abs($Slope2) < 1)
{
  $B = Compute("$Xint2 - $P");
  $Slope2disp = "-\frac{1}{$B}";
}
else
{
  $Slope2disp = "$Slope2";
}
#***********************************
#   Display y intercepts "nicely"
#***********************************
$N1 = $Xint1;
$D1 = Compute("$Xint1 - $P");
($N1,$D1,$Wholenum1) = reduce_fraction($N1, $D1, $Wholenum1);
if ($Wholenum1 != 0)
{
  if ($Wholenum1 < 0)
  {
    $wabs = abs($Wholenum1);
    $Yint1disp = "- $wabs";
  }
  else
  {
    $Yint1disp = "+ $Wholenum1";
  }
}
else
{
  if ($N1 < 0)
  {
    $nabs = abs($N1);
    $Yint1disp = "- \frac{$nabs}{$D1}";
  }
  else
  {
    $Yint1disp = "+ \frac{$N1}{$D1}";
  }
}
$N2 = $Xint2;
$D2 = Compute("$Xint2 - $P");
($N2, $D2, $Wholenum2) = reduce_fraction($N2, $D2, $Wholenum2);
if ($Wholenum2 != 0)
{
  if ($Wholenum2 < 0)
  {
    $wabs = abs($Wholenum2);
    $Yint2disp = "- $wabs";
  }
  else
  {
    $Yint2disp = "+ $Wholenum2";
  }

}
else
{
  if ($N2 < 0)
  {
    $nabs = abs($N2);
    $Yint2disp = "- \frac{$nabs}{$D2}";
  }
  else
  {
    $Yint2disp = "+ \frac{$N2}{$D2}";
  }
}
$L1 = "$Slope1 x + $Yint1";
$L2 = "$Slope2 x + $Yint2";
$Ptstr = "($P,1)";
$Pneg = Compute("-$P")->reduce;
#************************************************************************************
#   Make sure the x and y intercepts and point of intersection appear on the graph
#************************************************************************************
if ($Xint1 < $Xint2)
{
  $Xmingr = Compute("$Xint1 - 3");
  $Xmaxgr = Compute("$Xint2 + 3");
}
else
{
  $Xmingr = Compute("$Xint2 - 3");
  $Xmaxgr = Compute("$Xint1 + 3");
}
if ($P < $Xmingr)
{
  $Xmingr = Compute("$P - 3");
}
if ($P > $Xmaxgr)
{
  $Xmaxgr = Compute("$P + 3");
}
if ($Yint1 < $Yint2)
{
  $Ymingr = Compute("$Yint1 - 3");
  $Ymaxgr = Compute("$Yint2 + 3");
}
else
{
  $Ymingr = Compute("$Yint2 - 3");
  $Ymaxgr = Compute("$Yint1 + 3");
}
#****************************************************
#   Plot the lines and their point of intersection
#****************************************************
$gr = init_graph($Xmingr,$Ymingr,$Xmaxgr,$Ymaxgr,'axes'=>[0,0],'size'=>[450,450]);
plot_functions($gr, "$L1 for x in <$Xmingr,$Xmaxgr> using color:blue and weight:2");
plot_functions($gr, "$L2 for x in <$Xmingr,$Xmaxgr> using color:blue and weight:2");
#********************************************************
#   Label the point of intersection and all intercepts
#********************************************************
$gr->lb( new Label($P,1,$Ptstr,'black','left','bottom') );
$gr->stamps( closed_circle($P,1,'blue') );
$Xintstr1 = "(a,0)";
$Yintstr1 = "(0,b)";
$gr->lb( new Label($Xint1,0,$Xintstr1,'black','left','top') );
$gr->lb( new Label(0,$Yint1,$Yintstr1,'black','left','bottom') );
# *********************
#   Problem Statement
# *********************
TEXT(beginproblem());
#
# Strings in Tex form (formula)
#
Context()->texStrings;
BEGIN_TEXT
Find two lines through $Ptstr such that for each of them the product of the \(\small{x}\)-
and \(\small{y}\)-intercepts is $D. Enter each in slope-intercept form.
$PAR
$BCENTER
(Click on image to enlarge)
$BR
\{ image(insertGraph($gr,height=>450,width=>450)) \}
$PAR
\( \small{y = } \) \{ $Multans->ans_rule(20) \}
$BR
\( \small{y = } \) \{ $Multans->ans_rule(20) \}
$ECENTER
$PAR
END_TEXT
#
# Expect strings in standard form
#
Context()->normalStrings;
# *******************************
#   Answer and Solution section
# *******************************
#
# Check student solution
#
ANS($Multans->cmp);
#ANS($Yint1->cmp);
#ANS($Slope2->cmp);
#ANS($Yint2->cmp);
#***************************
#  Explanation of solution  
#***************************
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
Since both of these lines pass through the point $Ptstr, the equations must be of the form
\( \small{y - 1 = m(x - $P)} \). To determine the value of \(\small{m}\), let's denote the
\(\small{x}\)- and \(\small{y}\)-intercepts of one of these lines as \(\small{(a,0)}\) and
\(\small{(0,b)}\). Plugging these points into the equation above gives us,
$BR
\[ \small{0 - 1 = m(a - $P) \Rightarrow m =} -\frac{1}{a - $P} \]
\[ \small{b - 1 = m(0 - $P) \Rightarrow m =} \frac{b - 1}{$Pneg} \]
Since \(\small{ab = $D, b =} \large{\frac{$D}{a}}\). If we equate the expressions above and make this
substitution for \(\small{b}\), we get,
$BR
\[ -\frac{1}{a - $P} \small{=} \frac{\frac{$D}{a} - 1}{$Pneg}. \]
Solving this equation for \(\small{a}\) leads to the quadratic equation,
$BR
\[ \small{$Quaddisp = 0}. \]
The solutions are at \( \small{a = $Xint1} \) and \( \small{a = $Xint2} \). Placing these values into
the expression for \(\small{m}\) above, we get,
\[ \small{m = -\frac{1}{$Xint1 - $P} = $Slope1disp}, \]
and
$BR
\[ \small{m = -\frac{1}{$Xint2 - $P} = $Slope2disp}. \]
Placing each of these slopes into the original linear equation gives us,
$BR
\[ \small{y - 1 = $Slope1disp(x - $P) \Rightarrow y = $Slope1disp x $Yint1disp} \]
\[ \small{y - 1 = $Slope2disp(x - $P) \Rightarrow y = $Slope2disp x $Yint2disp} \]
$PAR
END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();