# ************************************
#   Comments + Keyword Clarification
#
#    Anton, Calculus, 0.1.3
# ************************************
# DESCRIPTION
# Given 4 graphs, determine whether each one represents y as a function of x.
#
# ENDDESCRIPTION
## DBsubject('Calculus')
## DBchapter('Before Calculus')
## DBsection('Functions')
## KEYWORDS('Functions', 'Vertical Line Test')
## TitleText1('Calculus')
## EditionText1('9')
## AuthorText1('Anton')
## Section1('0.1')
## Problem1('3')
## Author('')
## Institution('John Wiley & Sons')
#***************************************************************
#   Initialization - Load standard PG and MathObjects macros   
#***************************************************************
DOCUMENT();
loadMacros("PGstandard.pl","MathObjects.pl","PGgraphmacros.pl","parserPopUp.pl","littleneck.pl");
#
rand_button();
#
#
# Set Up - Set up variable context and formulation of problem
#
Context("Numeric");
#**************************************
#   Create 4 graphs:
#
#  (a) y = Ax^3
#  (b) y = Ae^(-x^2)
#     ("bell" curve)
#  (c) y = (+/-) ln(A/x), x > 0
#     (rotated "bell" curve)
#  (d) y = (+/-) C/B sqrt(B^2 - x^2)
#     (Ellipse)
#**************************************
$A = random(1,4,1);
$B = random(1,4,2);
$C = random(1,4,2);
$Cubicfunc = "$A*x^3";
$Bellfunc = "$A*e^(-x^2)";
$Lnfuncpos = "ln($A/x)";
$Lnfuncneg = "-ln($A/x)";
$Ellfuncpos = "$C/$B*sqrt($B^2 - x^2)";
$Ellfuncneg = "-$C/$B*sqrt($B^2 - x^2)";
#************************************************************************
#   Create 4 graphs, and then randomly place one of these at each slot
#************************************************************************
@Graphids = ();
@Popups = ();
@FuncYN = ();
@Passfail = ();
@CrossYN = ();
@Graphidsol = ();
#***********
#   Cubic
#***********
$Graphids[0] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
plot_functions($Graphids[0], "$Cubicfunc for x in <-5,5> using color:blue and weight:2");
$Popup[0] = PopUp(["?", "Yes", "No"], "Yes");
#
#  This is all for the solution display
#
$Graphidsol[0] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
$Graphidsol[0]->moveTo(.5,-5);
$Graphidsol[0]->lineTo(.5,5,'red');
plot_functions($Graphidsol[0], "$Cubicfunc for x in <-5,5> using color:blue and weight:1");
$Passfail[0] = "cannot draw a vertical line that crosses the graph more than once, " .
               "and so it passes the vertical line test";
$FuncYN[0] = "${BBOLD}defines$EBOLD ${BITALIC}y$EITALIC as a function of ${BITALIC}x$EITALIC";
#**********
#   Bell
#**********
$Graphids[1] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
plot_functions($Graphids[1], "$Bellfunc for x in <-5,5> using color:blue and weight:2");
$Popup[1] = PopUp(["?", "Yes", "No"], "Yes");
#
#  This is all for the solution display
#
$Graphidsol[1] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
$Graphidsol[1]->moveTo(.5,-5);
$Graphidsol[1]->lineTo(.5,5,'red');
plot_functions($Graphidsol[1], "$Bellfunc for x in <-5,5> using color:blue and weight:1");
$Passfail[1] = "cannot draw a vertical line that crosses the graph more than once, " .
               "and so it passes the vertical line test";
$FuncYN[1] = "${BBOLD}defines$EBOLD ${BITALIC}y$EITALIC as a function of ${BITALIC}x$EITALIC";
#********
#   Ln
#********
$Graphids[2] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
plot_functions($Graphids[2], "$Lnfuncpos for x in <0,$A> using color:blue and weight:2");
plot_functions($Graphids[2], "$Lnfuncneg for x in <0,$A> using color:blue and weight:2");
$Popup[2] = PopUp(["?", "Yes", "No"], "No");
#
#  This is all for the solution display
#
$Graphidsol[2] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
$Graphidsol[2]->moveTo(.5,-5);
$Graphidsol[2]->lineTo(.5,5,'red');
plot_functions($Graphidsol[2], "$Lnfuncpos for x in <0,$A> using color:blue and weight:1");
plot_functions($Graphidsol[2], "$Lnfuncneg for x in <0,$A> using color:blue and weight:1");
$Passfail[2] = "can draw a vertical line that crosses the graph more than once, " .
               "and so it fails the vertical line test";
$FuncYN[2] = "${BBOLD}does not define$EBOLD ${BITALIC}y$EITALIC as a function of ${BITALIC}x$EITALIC";
#*************
#   Ellipse
#*************
$Graphids[3] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
plot_functions($Graphids[3], "$Ellfuncpos for x in <-5,5> using color:blue and weight:2");
plot_functions($Graphids[3], "$Ellfuncneg for x in <-5,5> using color:blue and weight:2");
$Popup[3] = PopUp(["?", "Yes", "No"], "No");
#
#  This is all for the solution display
#
$Graphidsol[3] = init_graph(-5,-5,5,5,'axes'=>[0,0],'size'=>[450,450]);
$Graphidsol[3]->moveTo(.5,-5);
$Graphidsol[3]->lineTo(.5,5,'red');
plot_functions($Graphidsol[3], "$Ellfuncpos for x in <-5,5> using color:blue and weight:1");
plot_functions($Graphidsol[3], "$Ellfuncneg for x in <-5,5> using color:blue and weight:1");
$Passfail[3] = "can draw a vertical line that crosses the graph more than once, " .
               "and so it fails the vertical line test";
$FuncYN[3] = "${BBOLD}does not define$EBOLD ${BITALIC}y$EITALIC as a function of ${BITALIC}x$EITALIC";
#***************************************************************************
#   Randomly generate starting element, and then rotate through the rest.
#   Use modulo 4 to make sure we don't blow past the array end.
#***************************************************************************
$next = random(0,3,1);
($GraphA,$PopupA,$GraphsolA,$FuncYNA,$PassfailA) =
   ($Graphids[$next],$Popup[$next],$Graphidsol[$next],$FuncYN[$next],$Passfail[$next]);
$next = ($next + 1) % 4;
($GraphB,$PopupB,$GraphsolB,$FuncYNB,$PassfailB) =
   ($Graphids[$next],$Popup[$next],$Graphidsol[$next],$FuncYN[$next],$Passfail[$next]);
$next = ($next + 1) % 4;
($GraphC,$PopupC,$GraphsolC,$FuncYNC,$PassfailC) =
   ($Graphids[$next],$Popup[$next],$Graphidsol[$next],$FuncYN[$next],$Passfail[$next]);
$next = ($next + 1) % 4;
($GraphD,$PopupD,$GraphsolD,$FuncYND,$PassfailD) =
   ($Graphids[$next],$Popup[$next],$Graphidsol[$next],$FuncYN[$next],$Passfail[$next]);
# *********************
#   Problem Statement
# *********************
TEXT(beginproblem());
#
# Strings in Tex form (formula)
#
Context()->texStrings;
BEGIN_TEXT
Determine if each graph defines \( \small{y} \) as a function of \( \small{x} \).
$PAR
$BCENTER
(click on each image to enlarge)
$PAR
(a) \{ image(insertGraph($GraphA,tex_size=>1000,height=>450,width=>450)) \}
(b) \{ image(insertGraph($GraphB,tex_size=>1000,height=>450,width=>450)) \}
(c) \{ image(insertGraph($GraphC,tex_size=>1000,height=>450,width=>450)) \}
(d) \{ image(insertGraph($GraphD,tex_size=>1000,height=>450,width=>450)) \}
$BR \( \quad \)
\{ $PopupA->menu \} \( \qquad\qquad\; \)
\{ $PopupB->menu \} \( \qquad\qquad\; \)
\{ $PopupC->menu \} \( \qquad\qquad\; \)
\{ $PopupD->menu \}
$ECENTER
END_TEXT
#
# Expect strings in standard form
#
Context()->normalStrings;
# *******************************
#   Answer and Solution section
# *******************************
#
# Check student solution
#
ANS($PopupA->cmp());
ANS($PopupB->cmp());
ANS($PopupC->cmp());
ANS($PopupD->cmp());
#***************************
#  Explanation of solution  
#***************************
Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR
SOLUTION
$PAR
If \( \small{y} \) is a function of \( \small{x} \), then for each \( \small{x} \) there exists
only ${BITALIC}one$EITALIC \( \small{y} \) value. If given a graph, this is best determined by
using the ${BITALIC}vertical line test$EITALIC.
$PAR
$BCENTER
(a) (click on image to enlarge)$PAR
\{ image(insertGraph($GraphsolA,tex_size=>1000,height=>450,width=>450)) \}
$ECENTER
$PAR
Here you $PassfailA. So this graph $FuncYNA.
$PAR
$BCENTER
(b) (click on image to enlarge)$PAR
\{ image(insertGraph($GraphsolB,tex_size=>1000,height=>450,width=>450)) \}
$ECENTER
$PAR
Here you $PassfailB. So this graph $FuncYNB.
$PAR
$BCENTER
(c) (click on image to enlarge)$PAR
\{ image(insertGraph($GraphsolC,tex_size=>1000,height=>450,width=>450)) \}
$ECENTER
$PAR
Here you $PassfailC. So this graph $FuncYNC.
$PAR
$BCENTER
(d) (click on image to enlarge)$PAR
\{ image(insertGraph($GraphsolD,tex_size=>1000,height=>450,width=>450)) \}
$ECENTER
$PAR
Here you $PassfailD. So this graph $FuncYND.
$PAR
END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();