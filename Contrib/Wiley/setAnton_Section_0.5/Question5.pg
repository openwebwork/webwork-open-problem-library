# ************************************
#   Comments + Keyword Clarification
#
#    Anton, Calculus, 0.5.5
# ************************************
# DESCRIPTION
# Find the exact value of logn(A), where A = n^k.
#
# ENDDESCRIPTION
## DBsubject('Calculus')
## DBchapter('Before Calculus')
## DBsection('Exponential and Logarithmic Functions')
## KEYWORDS('Functions', 'Inverse', 'Exponential', 'Logarithmic', 'Ln', 'Log')
## TitleText1('Calculus')
## EditionText1('9')
## AuthorText1('Anton')
## Section1('0.5')
## Problem1('5')
## Author('')
## Institution('John Wiley & Sons')
#***************************************************************
#   Initialization - Load standard PG and MathObjects macros   
#***************************************************************
DOCUMENT();
loadMacros("PGstandard.pl","MathObjects.pl","alignedChoice.pl","contextFraction.pl","littleneck.pl");
#
rand_button();
#
# Set Up - Set up variable context and formulation of problem
#
$CTN = Context("Numeric");
#**************************************************************
#   Create 4 expressions of the form logn(A), where A = n^k.
#   (a) and (b): k is positive.
#   (c) and (d): k is negative.
#   (Note: If the random base generated is 1, use e)
#**************************************************************
$Qlist = new_aligned_list(ans_rule_len=>25, numbered=>0, tex_spacing=>"3pt");
$Base = ();
$Basedisp = ();
$Exp = ();
$Arg = ();
$Argdisp = ();
$Logexp = ();
$Logexpdisp = ();
for ($i = 0; $i < 4; $i++)
{
  $Base[$i] = random(1,9,1);
  #***************************
  #   Avoid duplicate bases
  #***************************
  while ( ($i > 0) && ($Base[$i] == $Base[$i-1]) ) 
    {$Base[$i] = random(1,9,1);}
  if ($i < 2)
    {$Exp[$i] = Compute(random(2,4,1));}
  else
    {$Exp[$i] = Compute(random(-4,-2,1));}
  if ($Base[$i] == 1)
  {
    $Basedisp[$i] = 'e';
    if ($Exp[$i] < 0)
    {
      $tmp = -$Exp[$i];
      $CTF = Context("Fraction");
      $CTF->flags->set(reduceConstants=>0);
      $Arg[$i] = Compute("1/e^($tmp)");
      $Argdisp[$i] = "\frac{1}{e^{$tmp}}";
      $CTN = Context("Numeric");
      $Logexp[$i] = "\ln \large{(\frac{1}{e^{$tmp}})}";
      $Logexpdisp[$i] = "\ln(\frac{1}{e^{$tmp}})";
    }
    else
    {
      $CTN->flags->set(reduceConstants=>0);
      $Arg[$i] = Compute("e^$Exp[$i]");
      $Argdisp[$i] = "e^{$Exp[$i]}";
      $Logexp[$i] = "\ln e^{$Exp[$i]}";
      $Logexpdisp[$i] = $Logexp[$i];
    }
  }
  else
  {
    $Basedisp[$i] = $Base[$i];
    if ($Exp[$i] < 0)
    {
      $tmp = $Base[$i]**(-$Exp[$i]);
      $CTF = Context("Fraction");
      $CTF->flags->set(reduceConstants=>0);
      $Arg[$i] = Compute("1/$tmp");
      $Logexp[$i] = "\log_{$Base[$i]}\large{(\frac{1}{$tmp})}";
      $Logexpdisp[$i] = "\log_{$Base[$i]}(\frac{1}{$tmp})";
      $CTN = Context("Numeric");
    }
    else
    {
      $Arg[$i] = $Base[$i]**($Exp[$i]);
      $Logexp[$i] = "\log_{$Base[$i]}($Arg[$i])";
      $Logexpdisp[$i] = $Logexp[$i];
    }
    $Argdisp[$i] = $Arg[$i];
  }
  $Qlist->qa("\( \small{$Logexp[$i]} \)", $Exp[$i]->cmp);
}
# *********************
#   Problem Statement
# *********************
TEXT(beginproblem());
#
# Strings in Tex form (formula)
#
Context()->texStrings;
BEGIN_TEXT
Find the exact value of each expression without using a calculating utility.
$PAR
\{ $Qlist->print_q \}
$PAR
END_TEXT
#
# Expect strings in standard form
#
Context()->normalStrings;
# *******************************
#   Answer and Solution section
# *******************************
#
# Check student solution
#
ANS($Qlist->correct_ans);
#***************************
#  Explanation of solution  
#***************************
Context()->texStrings;
SOLUTION(EV3(<<'END_SOLUTION'));
$PAR SOLUTION $PAR
\( \small{\log_n(x)} \) represents the exponent \( \small{P} \) such that \( \small{n^P = x} \). To
evaluate each of the expressions given, rewrite each of them accordingly.
\[ \begin{aligned}
     \small{$Logexpdisp[0]}&\small{\Rightarrow $Basedisp[0]^P = $Argdisp[0]\Rightarrow P = $Exp[0]} \\
     \small{$Logexpdisp[1]}&\small{\Rightarrow $Basedisp[1]^P = $Argdisp[1]\Rightarrow P = $Exp[1]} \\
     \small{$Logexpdisp[2]}&\small{\Rightarrow $Basedisp[2]^P} =
        \large{$Argdisp[2]}\small{\Rightarrow P = $Exp[2]} \\
     \small{$Logexpdisp[3]}&\small{\Rightarrow $Basedisp[3]^P} = 
        \large{$Argdisp[3]}\small{\Rightarrow P = $Exp[3]} \\
   \end{aligned}
\] 
END_SOLUTION
Context()->normalStrings;
ENDDOCUMENT();