##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS('calculus', '', '')

## DBsubject('Calculus - single variable')
## DBchapter('')
## DBsection('')
## Date('6/15/2019')
## Author('K. Andrew Parker')
## Institution('CityTech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "niceTables.pl",
   "PGchoicemacros.pl",
   "parserMultiAnswer.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

Context("Numeric");
Context()->flags->set(
  reduceConstants=>0,
  reduceConstantFunctions=>0,
  tolerance=>10**(-25), 
  tolType=>'absolute');

Context()->strings->add(undefined=>{alias=>"DNE"},undef=>{alias=>"DNE"});

$a = non_zero_random(-3,3,1);

$multiChecker = sub {
  my ($correct, $student, $ansHash) = @_;
  my ($yStu, $leftStu, $rightStu, $limStu) = @{$student};
  my ($yCor, $leftCor, $rightCor, $limCor) = @{$correct};
  
  if (Value::isReal($limStu)) { 
    $consistent = ($leftStu == $rightStu) ? 1 : 0;
  } else {
    $consistent = ($leftStu == $rightStu) ? 0 : 1;
  }
  $ansHash->setMessage(1,"\(f($a)\) is the y-coordinate of \(f\) when \(x = $a\).") unless ($yStu == $yCor);
  $ansHash->setMessage(2,"\(\displaystyle \lim_{x \to $a^-} f(x)\) indicates that we should only consider \(x < $a\). <BR> In other words, look only on the *left* side of \(x = $a\).") if ($leftStu != $leftCor && $leftStu == $rightCor);
  $ansHash->setMessage(3,"\(\displaystyle \lim_{x \to $a^+} f(x)\) indicates that we should only consider \(x > $a\). <BR> In other words, look only on the *right* side of \(x = $a\).") if ($rightStu != $rightCor && $rightStu == $leftCor);
  $ansHash->setMessage(4,"The two-sided limit only exists when the left-sided and right-sided limits are equal.") if ($limStu != $limCor && $consistent == 0);
  return [ $yStu==$yCor, $leftStu==$leftCor, $rightStu==$rightCor, $limStu==$limCor ];
};

@left = (); @mLeft = ();
@right = (); @mRight = ();
@limit = (); @y = ();
@multAns = ();

for my $i (0..3) {
  # slopes for left and right sides of x = a
  $mLeft[$i] = non_zero_random(-2,2,0.2);
  $mRight[$i] = non_zero_random(-2,2,0.2);
  # limit from the left
  $left[$i] = Real(non_zero_random(-3,3,1));
  # limit exists for 2 
  if ($i%2 == 0) {
    $right[$i] = $left[$i];
    $limit[$i] = $left[$i];
  } else {
    # and doesn't exist for the other two
    do { $right[$i] = Real(non_zero_random(-3,3,1)); } until ( $right[$i] != $left[$i] );
    $limit[$i] = String('DNE')->with(typeMatch=>$left[$i]);
  }
  do { $y[$i] = Real(random(-4,4,1)); } until ($y[$i] != $left[$i] && $y[$i] != $right[$i]);
  $multiAns[$i] = MultiAnswer($y[$i], $left[$i], $right[$i], $limit[$i])->with(
    singleResult=>1, 
    checkTypes=>0, 
    checker=>$multiChecker, 
    tex_format=>"{\displaystyle \begin{align}
      f($a) & = %s \\ 
      \lim_{x \to $a^-} f(x) & = %s \\
      \lim_{x \to $a^+} f(x) & = %s \\
      \lim_{x \to $a} f(x) & = %s
    \end{align}}"); 
# use tex_format because manually settting correct_ans_latex_string 
# does not work for MultiAns singleResult.
}

@gr = ();
@fig = ();
$xMin = -5; $xMax = 5; $yMin = -5; $yMax = 5;

for my $i (0..3) {
 $gr[$i] = init_graph($xMin, $yMin, $xMax, $yMax, size=>[300,300], axes=>[0,0], grid=>[$xMax-$xMin,$yMax-$yMin]);
# $gr[$i]->lb('reset');
 my $fLeft = "$mLeft[$i]*(x - $a) + $left[$i]";
 my $fRight = "$mRight[$i]*(x - $a) + $right[$i]";
 add_functions($gr[$i], "$fLeft for x in <$xMin,$a> using color:blue and weight:2");
 add_functions($gr[$i], "$fRight for x in <$a,$xMax> using color:blue and weight:2");
 $gr[$i] -> stamps( open_circle($a,$left[$i],'blue') );
 $gr[$i] -> stamps( open_circle($a,$right[$i],'blue') );
 $gr[$i] -> stamps( closed_circle($a,$y[$i],'blue') );
 #($gr->fn)[0]->steps(50);
 $fig[$i] = image(insertGraph($gr[$i]),width=>200,height=>200,tex_size=>400);
};

# shuffle the images (and limits)
@shuffle = NchooseK(4,4);
@fig = @fig[@shuffle];
@limit = @limit[@shuffle];
@multiAns = @multiAns[@shuffle];

$table = LayoutTable(
  [
    ['Graph A',['Graph B',rowcss=>"padding-bottom:1pt;"]],
    [$fig[0], [$fig[1], rowcss=>"padding-bottom:2pt; padding-top:2pt"]],
    ["\(\displaystyle f($a) =\)".$multiAns[0]->ans_rule(6),
      ["\(\displaystyle f($a) =\)".$multiAns[1]->ans_rule(6),
        rowcss=>"padding-top:2pt;padding-bottom:1pt;"]],
    ["\(\displaystyle \lim_{x \to $a^-} f(x) =\)".$multiAns[0]->ans_rule(6),
      ["\(\displaystyle \lim_{x \to $a^-} f(x) =\)".$multiAns[1]->ans_rule(6),
        rowcss=>"padding-top:2pt;padding-bottom:1pt;"]],
    ["\(\displaystyle \lim_{x \to $a^+} f(x) =\)".$multiAns[0]->ans_rule(6),
      ["\(\displaystyle \lim_{x \to $a^+} f(x) =\)".$multiAns[1]->ans_rule(6),
        rowcss=>"padding-top:2pt;padding-bottom:1pt;"]],
    ["\(\displaystyle \lim_{x \to $a} f(x) =\)".$multiAns[0]->ans_rule(6),
      ["\(\displaystyle \lim_{x \to $a} f(x) =\)".$multiAns[1]->ans_rule(6),
        rowcss=>"padding-top:2pt;"]],
    ['Graph C',['Graph D',rowcss=>"padding-bottom:1pt;"]],
    [$fig[2], [$fig[3], rowcss=>"padding-bottom:2pt; padding-top:2pt"]],
     ["\(\displaystyle f($a) =\)".$multiAns[2]->ans_rule(6),
      ["\(\displaystyle f($a) =\)".$multiAns[3]->ans_rule(6),
        rowcss=>"padding-top:2pt;padding-bottom:1pt;"]],
   ["\(\displaystyle \lim_{x \to $a^-} f(x) =\)".$multiAns[2]->ans_rule(6),
      ["\(\displaystyle \lim_{x \to $a^-} f(x) =\)".$multiAns[3]->ans_rule(6),
        rowcss=>"padding-top:2pt;padding-bottom:1pt;"]],
   ["\(\displaystyle \lim_{x \to $a^+} f(x) =\)".$multiAns[2]->ans_rule(6),
      ["\(\displaystyle \lim_{x \to $a^+} f(x) =\)".$multiAns[3]->ans_rule(6),
        rowcss=>"padding-top:2pt;padding-bottom:1pt;"]],
   ["\(\displaystyle \lim_{x \to $a} f(x) =\)".$multiAns[2]->ans_rule(6),
      ["\(\displaystyle \lim_{x \to $a} f(x) =\)".$multiAns[3]->ans_rule(6),
        rowcss=>"padding-top:2pt;"]],
  ],
  align => 'c c',
  center => 1,
);
##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### One-sided Limits ### <<


When we evaluate [`\color{blue}{\displaystyle \lim_{x \to a} f(x)}`], we consider values of [`x`] approaching [`a`] from *both* sides.

This time we are focusing on the fact that the limit can exist from each side separately. 

* The limit as [`x`] approaches [`a`] from the *left* _only_ is denoted by  [`\color{red}{\displaystyle \lim_{x \to a^-} f(x)}`].  

* Similarly, the limit as [`x`] approaches [`a`] from the *right* _only_ is denoted by [`\color{green}{\displaystyle \lim_{x \to a^+} f(x)}`]. 

It turns out that if both [`\color{red}{\displaystyle \lim_{x \to a^-} f(x)}`] and 
[`\color{green}{\displaystyle \lim_{x \to a^+} f(x)}`] exist and are equal, then [`\color{blue}{\displaystyle \lim_{x \to a} f(x)}`] exists and takes the same value. Conversely, if [`\color{blue}{\displaystyle \lim_{x \to a} f(x)}`] exists, then the one-sided limits also exist and the three limits are the same:
>> [`\color{red}{\displaystyle \lim_{x \to a^-} f(x)} = \color{green}{\displaystyle \lim_{x \to a^+} f(x)}= \color{blue}{\displaystyle \lim_{x \to a} f(x)}.`] <<

The behavior of the function _around_ [`a`] can be analyzed through these three limits. Recall that in the definition of a limit the value [`x=a`] is *not* included. So a fourth value that will be key for us to analyze the function around [`a`] is [`\color{purple}{f(a)}`]. What happens if we compare all four values? 



>> ### Practice ### <<

Use the graphs to determine the value of each expression below:

[$table]***

* all answers should be given as numbers
* if a result does not exist, respond with "DNE" or "undefined"

END_PGML

##############################################################
#
#  Answers
#
#

ANS($multiAns[0]->cmp);
ANS($multiAns[1]->cmp);
ANS($multiAns[2]->cmp);
ANS($multiAns[3]->cmp);

BEGIN_PGML_HINT

* to find what [`\color{red}{f([$a])}`] is, consider the vertical line passing through [`x=[$a]`].  Does it cross the graph?  If so, [`\color{red}{f([$a])}`] is defined, and the intersection point is [`([$a],\color{red}{f([$a])})`].
* to find [`\color{green}{\displaystyle\lim_{x\to [$a]^-} f(x)}`], 
observe if the values of [`f(x)`] are all approaching a specific number as [`x`] approaches [`[$a]`] from the left.
* to find [`\color{magenta}{\displaystyle\lim_{x\to [$a]^+} f(x)}`], 
observe if the values of [`f(x)`] are all approaching a specific number as [`x`] approaches [`[$a]`] from the right.
* if [`\color{green}{\displaystyle\lim_{x\to [$a]^-} f(x)}`] = [`\color{magenta}{\displaystyle\lim_{x\to [$a]^+} f(x)}`], then [`\color{blue}{\displaystyle\lim_{x\to [$a]} f(x)}`] takes the same value; otherwise, it does not exist.





END_PGML_HINT

# note: the graphs have been shuffled, so the parameters won't match the problems (unless you apply shuffle to them also)
# example (there is not really an array called @parameter):
# @parameter = @parameter[@shuffle];
BEGIN_PGML_SOLUTION
END_PGML_SOLUTION

ENDDOCUMENT();        