##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS('calculus', '', '')

## DBsubject('Calculus - single variable')
## DBchapter('')
## DBsection('')
## Date('6/15/2019')
## Author('K. Andrew Parker')
## Institution('CityTech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGbasicmacros.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

Context("Numeric");

$a = random(-10,10,1);
$b = Real(random($a+1,$a+10,1));

$S = Interval("($a,$b)");

#Context("LimitedNumeric");
Context()->flags->set(
  reduceConstants=>0,
  reduceConstantFunctions=>0,
  tolerance=>10**(-25), 
  tolType=>'absolute');
  
@messages = (
  [-1, "Oh no! You can get much closer than that - try decimals, maybe?", 0],
  [-2, "You could do better with another attempt, yes?", 0.25],
  [-3, "Try again. You can manage better than this.",0.25],
  [-4, "This is okay, But you could do better, yeah?",0.5],
  [-5, "You are getting better, Try another?",0.5],
  [-6, "Nice Work! There's still room to get closer...",0.75],
  [-7, "Very Good! Can you get closer?",0.75],
  [-10, "Excellent!",1], # full credit for 91+
  [-24, "Perfect!",1],
);

$custom = sub {
    my ($correct, $student, $ansHash) = @_;
    my $epsilon = abs($student - $correct);
    my $score = 0;
    # my ($acc,$eligible) = @$student; # student answer is passed as a list
    #
    # set the preview string to display the accuracy score
    # set the "correct answer" to display the requirements
    # 
#    $ansHash->{preview_latex_string} = "\text{epsilon: }$epsilon";
    $ansHash->{correct_ans_latex_string} = "\text{ $b - ans } < \(10^{-7}\)";
    #
    # invalidate the student answer if they gave the exact value
    #
    Value::Error("Your answer is not in the interval $S") unless ( $S->intersects(Set($student)) );
    # loop through messages to assign partial credit
    for my $data (@messages) {
      my ($exp, $msg, $nscore) = @$data;
      if ($epsilon >= 10**($exp)) {
        $ansHash->{ans_message} = $msg;
        $score = $nscore if defined $nscore;
        last;
      }
    }
    return $score; # ansHash already contains the feedback
};

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Approximating a number ### <<

What is the largest number in the interval [`(3,5)`]? This is an open interval, and it contains all real numbers between [`3`] and [`5`], but different from [`3`] and [`5`]. So [`5`] cannot be the answer.  Is [`4.9`] the largest number in that interval? If so, there should not be any number between [`4.9`] and [`5`].  How about [`4.91`]? That's larger than [`4.9`].  But we can do even better if our goal is to find the largest number in the interval [`(3,5)`]. We can choose the largest possible number for the hundredth place, [`9`], yielding  [`4.99`].  We can keep on adding [`9`] in other decimal places to produce numbers that are closer and closer to [`5`] and that is less than [`5`].  Since this process does not terminate, there is no number that we can say that is the largest one in the interval [`(3,5)`].

>> #### Practice #### <<

What is the largest value you can find in the interval [`[$S]`]?

[__________________________]{$b->cmp(checker=>$custom)}

END_PGML

##############################################################
#
#  Answers
#
#

##############################################################
#
#  Hint
#
#

BEGIN_PGML_HINT

* It is an open interval, so you cannot choose [`[$b]`].

* Find a number that is very close to [`[$b]`], but *different* from [`[$b]`]. 

* To get full credit, the absolute value of the difference between your number and [`[$b]`] should be less than [`10^{-7}`].

END_PGML_HINT

##############################################################
#
#  Solution
#
#

$ansminus = $b-> value -1e-7;


BEGIN_PGML_SOLUTION

* Any number in the interval [`([$ansminus], [$b])`]. 

END_PGML_SOLUTION

ENDDOCUMENT();        
