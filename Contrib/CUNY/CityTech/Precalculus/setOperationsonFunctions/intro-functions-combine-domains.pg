##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS('algebra', 'function', 'input', 'output', 'domain', 'rational function', 'radical function', 'operations')

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Compositions and combinations of functions')
## Date('6/4/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')
## TitleText1('Precalculus')


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "contextLimitedPolynomial.pl",
   "contextFraction.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Fraction");
Context()->noreduce('(-x)-y','(-x)+y');

@word = ("zero","one","two","three","four","five","six","seven","eight","nine","ten");

$fB = random(2,6,1);
# ensure that the root of f(x) is not an integer
do { $fC = non_zero_random(-10,10,1); } until (gcf($fB, abs($fC)) != $fB);
$f = Formula("$fB x + $fC")->reduce;
$fRoot = Fraction(-$fC,$fB)->reduce;

$gA = 1;
$gRoot1 = non_zero_random(-9,9,1);
do{ $gRoot2 = non_zero_random(-9,9,1); } until ($gRoot1 != $gRoot2);
$gB = -($gRoot1 + $gRoot2);
$gC = $gRoot1*$gRoot2;
$g = Formula("$gA x^2 + $gB x + $gC")->reduce;

$fPlusg = Formula("$gA x^2 + ($fB+$gB)x + ($fC+$gC)")->reduce;
$fMinusg = Formula("-$gA x^2 + ($fB-$gB)x + ($fC-$gC)")->reduce;
$gMinusf = Formula("$gA x^2 + (-$fB+$gB)x + (-$fC+$gC)")->reduce;
$fTimesg = Formula("($fB*$gA)x^3 + ($fC*$gA+$fB*$gB)x^2 + ($fC*$gB+$fB*$gC)x + $fC*$gC")->reduce;
$fByg = Formula("$f/$g")->reduce;
$gByf = Formula("$g/$f")->reduce;

Context("LimitedPolynomial-Strict");
Context()->{error}{msg}{"Addition is allowed only between monomials"}
    = "Please combine like terms and resubmit your answer.";
Context()->{error}{msg}{"Subtraction is allowed only between monomials"}
    = "Please combine like terms and resubmit your answer.";
Context()->{error}{msg}{"Multiplication can only be used between coefficients and variables"}
    = "Please distribute your multiplication and resubmit your answer.";

$fPlusg = Formula("$fPlusg");
$fMinusg = Formula("$fMinusg");
$gMinusf = Formula("$gMinusf");
$fTimesg = Formula("$fTimesg");

Context("Interval");
$fPlusgDom = Interval("R");
$fMinusgDom = Interval("R");
$gMinusfDom = Interval("R");
$fTimesgDom = Interval("R");
$fBygDom = Interval("R - {$gRoot1, $gRoot2}");
# cannot cheat when creating intervals with fractions as boundaries
$gByfDom = Compute("(-inf, $fRoot) U ($fRoot, inf)");

##############################################################
#
#  Text
#
#

#We usually define [`y`] (the _dependent_ variable) in terms of [`x`] (the _independent_ variable), like so:  
#>> [` y = [$f] `] <<

#It is understood that the value of [`y`] _depends_ on the value of [`x`]. Specifically, [`y`] is [@$word[abs($fC)]@] [@($fC>0)?"more":"less"@] than the product of [$word[$fB]] and [`x`]. Here, [`x`] takes the role of "_input_" and [`y`] takes the role of "_output_".

#But what about when we have more than one definition for [`y`]? Maybe we'd like to consider [` y = [$g] `] in addition to having [` y = [$f] `].

#This is part of the reason for functional notation. Instead of using the dependent variable [`y`], we instead use the notation [`f(x)`]. This means we can describe multiple "functions" at the same time, like so:  


BEGIN_PGML

>> ### Domains of Combined Functions ### <<

We can combine the functions
[`f(x)`] and [` g(x)`] 
to create a _new  function_ such as 

* [`(f+g)(x)`] = the _sum_ of [`f(x)`] and [`g(x)`]
* [`(f-g)(x)`] = the _difference_ of [`g(x)`] from [`f(x)`]
* [`(fg)(x)`] = the _product_ of [`f(x)`] and [`g(x)`]
* [`\left(\dfrac{f}{g}\right)(x)`] = the _quotient_ of [`f(x)`] by [`g(x)`]

Every function has a domain.   A new function can be obtained by combining [`f(x)`] and [`g(x)`].  Once we have a new function, we can find its domain.  The domain of this new function consists of all inputs [`x`] for which we can evaluate:

* the output of the function [`f(x)`],
* the output of the function [`g(x)`], and
* the output of the new combined function.

For instance, let's consider 
>> [`f(x)=x+1\quad`] and [`\quad g(x)=x^2-2x-3`],<<  
and find [`\left(\dfrac{f}{g}\right)(x)`].

>>[`\left(\dfrac{f}{g}\right)(x) = \dfrac{f(x)}{g(x)} = \dfrac{x+1}{x^2-2x-3}`]<<

* the output of [`f(x)=x+1`] is [`(-\infty,\infty)`],
* the output of [`g(x)=x^2-2x-3`] is [`(-\infty,\infty)`], and
* [`\dfrac{f(x)}{g(x)}`] can be evaluated if we  require [`g(x)=x^2-2x-3\neq 0`] 

>>[`x^2-2x-3\neq 0 \quad\longrightarrow\quad (x+1)(x-3)\neq 0 \quad\longrightarrow\quad (x\neq -1`] and [`x\neq 3)`] <<

Putting all restrictions together, we need 

>>[`x\in(-\infty,\infty)\quad `] and [`\quad x\neq -1 \quad`] and [`\quad x\neq 3`].  <<

We conclude that the domain of [`\left(\dfrac{f}{g}\right)(x)`] consists of all real numbers with the exception of [`-1`] and [`3`]. In interval notation, this is [`(-\infty,-1)\cup (-1,3)\cup (3,\infty)`].

Caution! Look at what would have happened if we had reduced [`\left(\dfrac{f}{g}\right)(x)`] earlier:

>>[`\left(\dfrac{f}{g}\right)(x) = \dfrac{f(x)}{g(x)} = \dfrac{x+1}{x^2-2x-3} = \dfrac{x+1}{(x+1)(x-3)} = \dfrac{1}{x-3}.`]<<

Then we would have been led to say that the domain of [`\left(\dfrac{f}{g}\right)(x)`] consists of all real numbers with the exception of 
[`3`]. In interval notation, this is [`(-\infty,3)\cup (3,\infty)`], which is not the correct domain.
The difference here is that [`-1`] _is_ included in the domain.  The reduction
happened because [`x+1`] was cancelled out.  However, plugging [`x=-1`]
into [`x+1`] gives zero, and we cannot cancel zero out: 


>>[`\dfrac{x+1}{(x+1)(x-3)}\quad \underset{x\;=\;-1}{\longrightarrow} \quad \dfrac{(-1)+1}{((-1)+1)((-1)-3)} \quad \longrightarrow\quad \dfrac{0}{0\cdot (-4)} \longrightarrow\quad \dfrac{0}{0}`] <<

and 

>>[` \dfrac{1}{x-3} \quad \underset{x\;=\;-1}{\longrightarrow} \quad \dfrac{1}{(-1)-3} \quad\longrightarrow\quad\dfrac{1}{-4} \quad\longrightarrow\quad -\dfrac{1}{4}.`]<<

This is like saying that [`\dfrac{0}{0}`] and [`-\dfrac{1}{4}`] are the same numbers; [`\dfrac{0}{0}`] is not even defined! So [`-1`] cannot be in the domain of [`\left(\dfrac{f}{g}\right)(x)`].

>> #### Practice #### <<

Consider [` f(x) = [$f] `] and [` g(x) = [$g] `].

* You must combine all like terms before you submit your answer.
* You must expand all products before your submit your answer.
* You may use "R" to denote "all real numbers".
* Use "U" to indicate the union of intervals.

a. What is the sum of [`f(x)`] and [`g(x)`]?  
[`(f+g)(x) = `][_____________________________]{$fPlusg}  
State the domain of [`(f+g)(x)`] in interval notation: [_____________________________]{$fPlusgDom}

b. What is the difference of [`g(x)`] from [`f(x)`]?  
[`(f-g)(x) = `][_____________________________]{$fMinusg}  
State the domain of [`(f-g)(x)`] in interval notation: [_____________________________]{$fMinusgDom}

c. What is the difference of [`f(x)`] from [`g(x)`]?  
[`(g-f)(x) = `][_____________________________]{$gMinusf}  
State the domain of [`(g-f)(x)`] in interval notation: [_____________________________]{$gMinusfDom}

d. What is the product of [`f(x)`] and [`g(x)`]?  
[`(fg)(x) = `][_____________________________]{$fTimesg}  
State the domain of [`(fg)(x)`] in interval notation: [_____________________________]{$fTimesgDom}

e. What is the quotient of [`f(x)`] by [`g(x)`]?  
[`\left(\dfrac{f}{g}\right)(x) = `][_____________________________]{$fByg}  
State the domain of [`\left(\dfrac{f}{g}\right)(x)`] in interval notation: [_____________________________]{$fBygDom}

f. What is the quotient of [`g(x)`] by [`f(x)`]?  
[`\left(\dfrac{g}{f}\right)(x) = `][_____________________________]{$gByf}  
State the domain of [`\left(\dfrac{g}{f}\right)(x)`] in interval notation: [_____________________________]{$gByfDom}



END_PGML

##############################################################
#
#  Answers
#
#

##############################################################
#
#  Hints
#
#



BEGIN_PGML_HINT

*To combine the functions*

* If you are calculating a difference or a product, enclose each function in parentheses.

* If you have a difference, the next step is to distribute the negative sign  over _each_ term within the parentheses.

* Expand all products. 

* Combine all like terms.

*To find the domain of the new combined function*

* What kind of function do you have? Is it a polynomial? Does it have an explicit denominator? 

* All *polynomial* functions have the same domain. What is it?

* If you have an *explicit denominator*, which value can't your denominator take?

* Remember: any number for which you can't evaluate your function at can't be in the domain.


END_PGML_HINT

##############################################################
#
#  Solutions
#
#


##################### Graph of the solutions #################

foreach my $i (0..2) {
    $gr[$i] = init_graph(-12,-1,12,1, size=>[408,68]);
    # x-axis
    $gr[$i] -> moveTo(-12,0);
    $gr[$i] -> lineTo(12,0,'black','1');
    # x-axis ticks entered as y-value, color, list of x-values
    $gr[$i] -> h_ticks(0,"black",-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9,10,11,12);
    # labels for tickmarks
    foreach my $j (0..12) {
        $gr[$i]->lb( new Label($j,-0.5,$j, 'black','center','middle'));
        $gr[$i]->lb( new Label(-$j,-0.5,-$j, 'black','center','middle'));
    }
}

$fRootdec = Compute("$fRoot");

$gr[0] -> moveTo(0,0);
$gr[0] -> arrowTo(-12,0,'blue', 3);
$gr[0] -> arrowTo(12,0,'blue', 3);

$gr[1] -> moveTo($gRoot1,0);
$gr[1] -> arrowTo(-12,0,'blue', 3);
$gr[1] -> moveTo($gRoot1,0);
$gr[1] -> lineTo($gRoot2,0,'blue', 3);
$gr[1] -> arrowTo(12,0,'blue', 3);
$gr[1] -> stamps( open_circle($gRoot1,0,'blue') );
$gr[1] -> stamps( open_circle($gRoot2,0,'blue') );


$gr[2] -> moveTo($fRootdec,0);
$gr[2] -> arrowTo(-12,0,'blue', 3);
$gr[2] -> stamps( open_circle($fRootdec,0,'blue') ); 
$gr[2] -> arrowTo(12,0,'blue', 3);

#$fBygDom = Interval("R - {$gRoot1, $gRoot2}");
# cannot cheat when creating intervals with fractions as boundaries
#$gByfDom = Compute("(-inf, $fRoot) U ($fRoot, inf)");
#####################################################




BEGIN_PGML_SOLUTION


a. [`(f+g)(x) \quad\longrightarrow\quad f(x)+g(x) \quad\longrightarrow\quad ([$f])+([$g]) \quad\longrightarrow\quad [$fPlusg]`]

    This function is a polynomial. The domain is [`[$fPlusgDom]`].

    >> [@ image(insertGraph($gr[0]),width=>408, height=>68, tex_size=>700) @]* <<

b. [`(f-g)(x) \quad\longrightarrow\quad f(x)-g(x) \quad\longrightarrow\quad ([$f])-([$g]) \quad\longrightarrow\quad [$fMinusg]`]

    This function is a polynomial. The domain is [`[$fMinusgDom]`].

    >> [@ image(insertGraph($gr[0]),width=>408, height=>68, tex_size=>700) @]* <<

c. [`(g-f)(x) \quad\longrightarrow\quad g(x)-f(x) \quad\longrightarrow\quad ([$g])-([$f]) \quad\longrightarrow\quad [$gMinusf]`]

    This function is a polynomial. The domain  is [`[$gMinusfDom]`].

    >> [@ image(insertGraph($gr[0]),width=>408, height=>68, tex_size=>700) @]* <<

d. [`(fg)(x) \quad\longrightarrow\quad (f(x))(g(x)) \quad\longrightarrow\quad ([$f])([$g])  \quad\longrightarrow\quad  [$fTimesg]`]

    This function is a polynomial. The domain  is [`[$fTimesgDom]`].

    >> [@ image(insertGraph($gr[0]),width=>408, height=>68, tex_size=>700) @]* <<


e. [`\left(\dfrac{f}{g}\right)(x) \quad\longrightarrow\quad \dfrac{f(x)}{g(x)}   \quad\longrightarrow\quad  \displaystyle{[$fByg]}`]

    The domain of [`\left(\dfrac{f}{g}\right)(x)`] consists of all [`x`] for which [`f(x)`] and [`g(x)`] can be evaluated, and [`g(x)`] is not zero. Both [`f(x)`] and [`g(x)`] are polynomials whose domains are all real numbers. To ensure that the denominator [`g(x)`] is not zero, we need:

    >> [`[$g]\neq 0 \quad\longrightarrow\quad (x\neq [$gRoot1]\quad`] and
[`\quad x\neq[$gRoot2])`] <<

    The domain  is [`[$fBygDom]`].

    >> [@ image(insertGraph($gr[1]),width=>408, height=>68, tex_size=>700) @]* <<


f. [`\left(\dfrac{g}{f}\right)(x) \quad\longrightarrow\quad \dfrac{g(x)}{f(x)}   \quad\longrightarrow\quad  \displaystyle{[$gByf]}`]  

    The domain of [`\left(\dfrac{g}{f}\right)(x)`] consists of all [`x`] for which [`g(x)`] and [`f(x)`] can be evaluated, and [`f(x)`] is not zero. Both [`g(x)`] and [`f(x)`] are polynomials whose domains are all real numbers. To ensure that the denominator [`g(x)`] is not zero, we need:

    >> [`[$f]\neq 0 \quad\longrightarrow\quad x\neq 
\displaystyle{[$fRoot]}`] <<  

    The domain is [`[$gByfDom]`].  

    >> [@ image(insertGraph($gr[2]),width=>408, height=>68, tex_size=>700) @]* <<


END_PGML_SOLUTION




ENDDOCUMENT();        
