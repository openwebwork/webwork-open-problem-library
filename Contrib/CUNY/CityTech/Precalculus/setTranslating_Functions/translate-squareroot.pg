##DESCRIPTION
##  
##ENDDESCRIPTION

##KEYWORDS('algebra', 'function', 'transformation of functions', 'vertical shift', 'horizontal shift')

## DBsubject('Algebra')
## DBchapter('Transformations of functions and graphs')
## DBsection('Shifts: vertical and horizontal')
## Date('6/13/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "parserImplicitEquation.pl",
   "parserMultiAnswer.pl",
   "AppletObjects.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#

#
#  Make a subclass of MultiAnswer
#
package myMultiAnswer;
our @ISA = ('MultiAnswer');

sub new {
  my $self = shift;
  my $ma = $self->SUPER::new(@_);
  $ma->{part} = 1;
  $ma->{answerName} = 'answerBox';
  $ma->{answerNames}{0} = $ma->{answerName};
  $ma->{id} = $MultiAnswer::answerPrefix.$ma->{answerName};
  $ma->{singleResult} = 1;
  $ma->{namedRules}  = 1;
  return $ma;
}

sub ANS_NAME {
  my $self = shift;
  my $i = shift;
  $self->{answerNames}{$i} = ($i == 0 ? $self->{answerName} : $self->{id}.'_'.$i);
  return $self->{answerNames}{$i};
}

package main;

Context("Numeric");
Context()->variables->add(y=>Real);

# freely change $f to any function passing through (0,0)
# change the getAppletValues as well
$f = Formula("sqrt(x)");

$h = non_zero_random(-3,3,1);
$k = non_zero_random(-3,2,1);

$RHS = $f->substitute(x=>"x-$h")->reduce;
$LHS = Formula("y-$k")->reduce;

Context("ImplicitEquation");
Context()->variables->are(x=>"Real",y=>"Real");
Context()->flags->set(reduceConstants=>0);
Context()->{error}{msg}{"Your formula doesn't look like an implicit equation"} 
  = "It looks like you did not enter an equation. <BR> Double check your entry and try again.";
Context()->variables->set(x=>{limits=>[[$h,$h+5]]},y=>{limits=>[[$k,$k+5]]});

$answer = ImplicitEquation("$LHS = $RHS",solutions=>[[$h,$k],[$h+1,$k+1]]);

$multians = myMultiAnswer->new($answer)->with(
#  format => 'slope: %2$s , intercept: %3$s',
#  tex_format => 'slope: %2$s , intercept: %3$s',
  checkTypes=>0,
  allowBlankAnswers=>1,
  checker => sub {
      my ( $correct, $student, $self, $ans_hash ) = @_;
      my ( $correctEqn ) = @{$correct};
      my ( $ggbStu ) = @{$student};
      return 0 if $self->{ans}[0]->{isPreview};
      $ggbStu = ImplicitEquation($ggbStu);
      Value->Error("Your graph has not been shifted correctly.") if $ggbStu != $correctEqn;
      return 1;
  }
);

######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the
# command end command
# so that they don't get in the way
###################################


$appletName = "ggbfoo";

$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "",
   codebase                 => "",
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => 'configure',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   width                 => 400,              # may want to modify width
   height                => 400,              # may want to modify height
  # mayscript             => "true",
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
   submitActionScript    => qq{ getQE('answerBox').value = getAppletValues() },
   #submitActionScript => '',
   selfLoading           => 1,
   params     => GEOGEBRA_PARAMS(),# paste parameters in

);


###############################################
#
#  PNG picture of GeoGebra applet for hardcopy

$im = init_graph(-4,-4,4,4,
    axes=>[0,0],
    size=>[400,400],
    grid=>[8,8]
    );

add_functions($im, "$f for x in <-4,4> using color:blue and weight:2");

##################################
# Setup GeogebraWebApplet --
###################################

###############################################
#
#  For persistence of GeoGebra applet state 
#  when answers are submitted or page is refreshed.
#  Uses JavaScript interface to GeoGebra.

HEADER_TEXT(
qq! 
<script language="javascript">
   function ggbOnInit(param) {
       if (param == "$appletName") {
           applet_loaded(param,1);  // report that applet is ready. 
           ww_applet_list[param].safe_applet_initialize(2);
       }
   } 
</script>
<noscript>For this question to work properly, 
you must enable JavaScript, or use another browser 
(or computer) on which JavaScript works.</noscript>
!);


#######################################################
#
#  For setting initial values in GeoGebra from WeBWorK
#  Uses JavaScript interface to GeoGebra.

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setAppletCoefficients() {
   var applet=getApplet("$appletName");   // alert("Updating coefficients");
   if (typeof(applet)!="undefined") {
     if (typeof(applet.setValue)!="undefined") {
     
     ////////////////////////////////////////////////////////////////
     //  List the values of the parameters to be set in the applet here
     
          // Set variables "h" and "k" in GeoGebra to 0
          // define the function to be shifted 
          // may need to adjust h,k to be a point on f
          applet.setValue("h", 0); 
          applet.setValue("k", 0);    
          applet.evalCommand("f(x) = $f");
     } else {
          setTimeout("setAppletCoefficients()", 1000);
     }
   } else {
      setTimeout("setAppletCoefficients()",1000);
   }
}
ww_applet_list["$appletName"].setConfig = function() {setAppletCoefficients()};
</script>
END_SCRIPT

HEADER_TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );

<script language="javascript">
function getAppletValues() {
    console.log("getAppletValues() entered");
	// get a handle for the applet object
	var applet = $appletName;
	var h = applet.getValue("h");
	var k = applet.getValue("k");
    return( 'y - ' + k + '= sqrt( x -' + h + ')' ); 
}
 </script>
END_SCRIPT


###################################
#insert applet into body  -- this does not need to be changed
# except to adjust the insertion of the reinitialize_button or
# a hidden AnswerBox
###################################
# TEXT($PAR,  MODES(TeX=>'geogebraweb code',
#                      HTML=>$applet->insertAll(
#                                debug =>0,
#                                reinitialize_button => 1,
#                                #includeAnswerBox=>1,
# )))
##############################################################
#
#  Text
#
#

TEXT($PAR, MODES(HTML=>$applet->insertAll(debug=>0, reinitialize_button=>1, includeAnswerBox=>1), TeX=>$im));

BEGIN_PGML

Shown above is the graph of the function [` y = [$f] `]. Drag the point to shift the graph [@ ($k > 0)?"up":"down" @] by [@abs($k)@] [@ (abs($k) == 1)?"unit":"units" @], and [@ ($h > 0)?"right":"left" @] by [@abs($h)@] [@ (abs($h) == 1)?"unit":"units" @].

* Use _sqrt_ for the square root.
* An *equation* is written as two expressions connected by the equal sign.

Enter an equation for the shifted graph: [`\quad`] [_____________________________]

END_PGML

##############################################################
#
#  Answers
#
#

NAMED_ANS( $multians->cmp() );
ANS( $answer->cmp() );

sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false",
enableShiftDragZoom=>"false",
showMenuBar=>"false" ,
showToolBar=>"false",
showAlgebraInput=>"false",
useBrowserForJS=>"true",
ggbbase64=>""
};

$result;
}

##############################################################
#
#  Hints
#
#



BEGIN_PGML_HINT

If we start with the graph of a function [`y = f(x)`]:

* Shifting the graph *up* by [`c`] units corresponds to the function [`y = f(x)+c`]. Shifting the graph *down* by [`c`] units corresponds to the function [`y = f(x)-c`]. 


* Shifting the graph *right* by [`c`] units corresponds to the function [`y = f(x-c)`]. Shifting the graph *left* by [`c`] units corresponds to the function [`y = f(x+c)`]. 

* These *algebraic* transformations of the function are shown in the label of the function on the graph as you shift it by dragging. Use that expression to find the equation of the shifted graph (where the original function in this exercise is [`f(x) = [$f] `]).

END_PGML_HINT

##############################################################
#
#  Solutions
#
#

BEGIN_PGML_SOLUTION

* First consider the vertical shift. Shifting the graph [` y= [$f] `] [@ ($k > 0)?"up":"down" @] by [@abs($k)@] [@ (abs($k) == 1)?"unit":"units" @] means going from [`y = [$f] `] to [` y= [$f] + [$k]`].

* Next consider the horizontal shift. Shifting the graph [`y = [$f]+ [$k] `] [@ ($h > 0)?"right":"left" @] by [@abs($h)@] [@ (abs($h) == 1)?"unit":"units" @] means going from [`y = [$f]+[$k] `] to [` y= [$RHS]+[$k] `].

* Thus, the equation for the shifted graph is [` y= [$RHS] + [$k]`].

END_PGML_SOLUTION
ENDDOCUMENT();        
