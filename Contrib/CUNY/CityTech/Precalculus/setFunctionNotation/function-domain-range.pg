##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS()

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Domain and range')
## Date('6/4/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')
## TitleText1('Precalculus')


########################################################################

DOCUMENT();      
  
loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl", 
   "PGauxiliaryFunctions.pl",
   "parserPopUp.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

########### Graph of f ############## 

# a graph object
$grf = init_graph(-10,-7,10,7,
axes=>[0,0],
size=>[400,280],
grid=>[20,14]); # or pixels=>[400,400]

# or specify tickmarks
# x-axis ticks entered as y-value, color, list of x-values
 $grf->h_ticks(0,"black",-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10);
# y-axis ticks entered as x-value, color, list of y-values
 $grf->v_ticks(0,"black",-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7);

# plot a function
add_functions($grf, "4x + 1 for x in <-10,10> " .
    "using color:blue and weight:2");
($grf->fn)[0]->steps(500);

# a line
$grf->moveTo(0,0);
$grf->arrowTo(10,0,'red',2);
$grf->moveTo(0,0);
$grf->arrowTo(-10,0,'red',2);

########### Graph of g ############## 

# a graph object
$grg = init_graph(-10,-7,10,7,
axes=>[0,0],
size=>[400,280],
grid=>[20,14]); # or pixels=>[400,400]

# or specify tickmarks
# x-axis ticks entered as y-value, color, list of x-values
 $grg->h_ticks(0,"black",-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10);
# y-axis ticks entered as x-value, color, list of y-values
 $grg->v_ticks(0,"black",-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7);

# plot a function
add_functions($grg, "2x^2 - 3x + 1 for x in <-10,10> " .
    "using color:blue and weight:2");
($grg->fn)[0]->steps(1000);

# a line
$grg->moveTo(0,0);
$grg->arrowTo(10,0,'red',2);
$grg->moveTo(0,0);
$grg->arrowTo(-10,0,'red',2);

########### Graph of h ##############

# a graph object
$gr = init_graph(-10,-7,10,7,
axes=>[0,0],
size=>[400,280],
grid=>[20,14]); # or pixels=>[400,400]

# or specify tickmarks
# x-axis ticks entered as y-value, color, list of x-values
 $gr->h_ticks(0,"black",-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7,8,9,10);
# y-axis ticks entered as x-value, color, list of y-values
 $gr->v_ticks(0,"black",-7,-6,-5,-4,-3,-2,-1,1,2,3,4,5,6,7);

# plot a function
add_functions($gr, "(x+1)/(x-2) for x in <-10,10> " .
    "using color:blue and weight:2");
($gr->fn)[0]->steps(1000);

# a line
$gr->moveTo(0,0);
$gr->arrowTo(10,0,'red',2);
$gr->moveTo(0,0);
$gr->arrowTo(-10,0,'red',2);

# and a point
$gr->stamps(open_circle(2,0,'red') );


# a dashed green line
#    (only works for WeBWorK > 2.4)
$gr->moveTo(2,-7);
$gr->lineTo(2,7,'green',2,'dashed');



##############################################
Context()->noreduce('(-x)-y');

$radio = PopUp(["","Sometimes","Always","Never"],"Always");

$f1 = random(2,5,1);
$f2 = non_zero_random(-8,8,1);
$f3 = non_zero_random(-15,15,1);
$f = Formula("$f1 x^2 + $f2 x + $f3")->reduce;

$g1 = non_zero_random(-9,9,1);
$g2 = random(4,15,1);
$g = Formula("$g2/(x-$g1)")->reduce;

$h1 = non_zero_random(-9,9,1);
$h = Formula("sqrt(x - $h1)")->reduce;
Context("Interval");

$fDom = Interval("R");
$gDom = Interval("R - {$g1}");
$hDom = Interval("[$h1,inf)");

##############################################################
#
#  Text
#
#

BEGIN_PGML
  
>> ### The Domain of a Function ### <<

The *domain* of a function [`f(x)`] is defined as "the set of all inputs for the function [`f(x)`] that produce a numeric output." In the graph the domain "lives" in the [`x`]-axis since it consists of inputs. 

* For _linear_ functions such as [` f(x) = 4x + 1`], or _quadratic_ functions such as [` g(x) = 2x^2 - 3x + 1`], the domain is very boring. _Every_ possible value for [`x`] produces a numeric output value. Try it! No matter what value you "plug in" for [`x`], you will be able to compute an output value for [`f`] or for [`g`]. You can also see this visually. In the pictures below   _any_ vertical line intersects the graphs of [`f`] and [`g`].

>> [@ image( insertGraph($grf), width=>250, 
    height=>175, tex_size=>800 ) @]*  [`\qquad`] [@ image( insertGraph($grg), width=>250, 
    height=>175, tex_size=>800 ) @]*<<

>>Graph of  [`f(x)=4x+1`] [`\hspace{4cm}`] Graph of  [`g(x) = 2x^2 - 3x + 1`]<<


    In this situation, we say that the domain is [`\mathbb{R}`], which represents "all real numbers".  (Because _all real numbers_ produce a numeric output value.) Or, in interval notation, we say that the domain is [`(-\infty,\infty)`], also representing all real numbers.
    
    Will the domain be [`\mathbb{R}`] for _every_ polynomial function? [_]{$radio}

* The same is not true for _rational_ functions such as [` h(x) = \dfrac{x+1}{x-2} `]. Sure, most [`x`]-values produce numeric outputs - *but* there's one [`x`]-value that fails to produce a numeric output value.

    What happens when we try to evaluate [`h(2)`]?  
>> [` h(2) = \dfrac{2+1}{2-2} `] <<

    What does that simplify to? [` h(2) = \dfrac{3}{0} `], which is undefined. (Because how many times does zero go into three? That question doesn't even make sense.) 
    
    Graphically speaking, this means that the vertical line [`x=2`] does not
    intercept the graph of [`h(x)`].  Notice that it is the only vertical line with this property.

>> [@ image( insertGraph($gr), width=>250, 
    height=>175, tex_size=>800 ) @]*<<

>>Graph of  [`h(x)=\dfrac{x+1}{x-2}`]<<

    In this case, we say that the domain of [`h(x)`] is [`\{x\in\mathbb{R}| x \ne 2\}`], representing all real numbers _except_ for [`x = 2`]. Or in interval notation, we say that the domain is [`(-\infty,2) \cup (2,\infty)`], again representing all real numbers _except_ [`2`].



>> #### Practice #### <<

    For [` f(x) = [$f] `],
[` g(x) = \displaystyle[$g] `] and
[` h(x) = [$h] `],
use interval notation to describe the domain of each function:

a. The domain of [` f(x) `] is [_____]{$fDom}
a. The domain of [` g(x) `] is [_____]{$gDom}
a. The domain of [` h(x) `] is [_____]{$hDom}

END_PGML

##############################################################
#
#  Answers
#
#

##############################################################
#
#  Hints
#
#



BEGIN_PGML_HINT

* What kind of *function* do you have? Is it a polynomial? Does it have an explicit denominator? Does it have any square roots?

* All *polynomial* functions have the same domain. What is it?

* If you have an *explicit denominator*, which value _can't_ your denominator take?

* If your function has a *square root*,  think about the following questions: what _can_ you take the square root of? what _can't_ you take the square root of? 

* Remember: any number for which you can't evaluate your function at can't be in the domain.

END_PGML_HINT

##############################################################
#
#  Solutions
#
#

########### Graph of (a) ##############

# a graph object
$gra = init_graph(-8,-20,8,30,
axes=>[0,0],
size=>[400,280],
ticks=>[16,50],
grid=>[16,50]); # or pixels=>[400,400]

# plot a function
add_functions($gra, "$f for x in <-8,8> " .
    "using color:blue and weight:2");
($gra->fn)[0]->steps(500);

# a line
$gra->moveTo(0,0);
$gra->arrowTo(8,0,'red',2);
$gra->moveTo(0,0);
$gra->arrowTo(-8,0,'red',2);


########### Graph of (b) ##############

# a graph object
$grb = init_graph(-15,-7,15,7,
axes=>[0,0],
size=>[400,280],
ticks=>[30,14],
grid=>[30,14]); # or pixels=>[400,400]

# plot a function
add_functions($grb, "$g for x in <-15,15>" .
    "using color:blue and weight:2");
($grb->fn)[0]->steps(1000);

# a line
$grb->moveTo(0,0);
$grb->arrowTo(15,0,'red',2);
$grb->moveTo(0,0);
$grb->arrowTo(-15,0,'red',2);

# and a point
$grb->stamps(open_circle($g1,0,'red') );

# a dashed green line
#    (only works for WeBWorK > 2.4)
$grb->moveTo($g1,-7);
$grb->lineTo($g1,7,'green',2,'dashed');


########### Graph of (c) ##############

# a graph object
$grc = init_graph(-15,-7,15,7,
axes=>[0,0],
size=>[400,280],
ticks=>[30,14],
grid=>[30,14]); # or pixels=>[400,400]

# plot a function
add_functions($grc, "$h for x in <-15,15> " .
    "using color:blue and weight:2");
($grc->fn)[0]->steps(1000);

# a line
$grc->moveTo($h1,0);
$grc->arrowTo(15,0,'red',2);

# and a point
$grc->stamps(closed_circle($h1,0,'red') );



#########################################
BEGIN_PGML_SOLUTION


a. The function [` f(x) = [$f] `] is a polynomial. All polynomials have the same domain which is [` [$fDom] `]. We can check this by looking at the graph of [`f(x)`]. Every vertical line intercepts the parabola.  The domain is marked in red.
    
    >> [@ image( insertGraph($gra), width=>400, height=>400, tex_size=>800 ) @]* <<  
    >> Graph of  [`f(x)=[$f]`] <<  
    
b. The numerator of [` g(x) = \displaystyle{[$g]} `] is [`[$g2]`], which is a constant and does not depend on [`x`]. The denominator of [`g(x)=\displaystyle{[$g]}`] is [`x-[$g1]`]. We need to make sure that [`x-[$g1]\neq 0`]. 

    >>[`x-[$g1]\neq 0 \quad\longrightarrow\quad x\neq [$g1].`] <<
    The domain of [`g(x)`] is [` [$gDom] `].  We can check this by looking at the graph of [`g(x)`].  Notice that the vertical line [`x=[$g1]`] is the only one that does not touch the graph. The domain is marked in red.

    >> [@ image( insertGraph($grb), width=>400, height=>400, tex_size=>800 ) @]* <<  
    >> Graph of  [`g(x)=\displaystyle{[$g]}`] <<  

c. The function [` h(x) = [$h] `] has a square root which is only defined if [`x - [$h1]\geq 0`].
    >>[`x-[$h1]\geq 0 \quad\longrightarrow\quad x\geq [$h1].`] <<
    The domain of [`h(x)`] is [` [$hDom] `].  We can check this by looking at the graph of [`h(x)`].  Notice that every vertical line [`x=a`] with 
[`a<[$h1]`] does not touch the graph. The domain is marked in red.

    >> [@ image( insertGraph($grc), width=>400, 
    height=>400, tex_size=>800 ) @]*<<  
    >>Graph of  [`h(x)=[$h]`]<<






END_PGML_SOLUTION

ENDDOCUMENT();        
