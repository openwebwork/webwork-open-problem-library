##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Finite sequences and series')
## DBsection('Binomial theorem')
## Date('8/21/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);

$eighthRow = List(1,8,28,56,70,56,28,8,1);

$introN = random(4,7,1);
$introK = random(2,$introN-2,1);
$introNFact = Real("$introN!");
$introKFact = Real("$introK!");
$introNKFact = Real("($introN-$introK)!");
$introPascal = Real("$introNFact/($introKFact*$introNKFact)");

$n[0] = random(6,8,1);
$k[0] = random(2,$n[0]-2,1);
$nkDiff[0]= Formula("$n[0] - $k[0]")->reduce;

$n[1] = random(8,10,1);
$k[1] = random(3,$n[1]-3,1);
$nkDiff[1]= Formula("$n[1] - $k[1]")->reduce;

foreach my $i (0..1) {
    $nFact[$i] = Real("$n[$i]!");
    $kFact[$i] = Real("$k[$i]!");
    $nkFact[$i] = Real("($n[$i]-$k[$i])!");
    $pascal[$i] = Real("$nFact[$i]/($kFact[$i]*$nkFact[$i])");
}

### Re-initialize all answer variables in LimitedNumeric 
### This prevents students from using "!" in their answers

Context("LimitedNumeric");
Context()->{error}{msg}{"Can't use '+' in this context"} 
  = "Addition is disabled for this problem. Simplify the sum and resubmit your answer.";
Context()->{error}{msg}{"Can't use '-' in this context"} 
  = "Subtraction is disabled for this problem. Simplify the difference and resubmit your answer.";
Context()->{error}{msg}{"Can't use '*' in this context"} 
  = "Multiplication is disabled for this problem. Simplify the product and resubmit your answer.";
Context()->{error}{msg}{"Can't use '/' in this context"} 
  = "Division is disabled for this problem. Simplify the quotient and resubmit your answer.";
Context()->{error}{msg}{"Can't use '^' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '**' in this context"} 
  = "Exponents are disabled for this problem. Compute the result for yourself and resubmit your answer.";
Context()->{error}{msg}{"Can't use '!' in this context"} 
  = "Factorials are disabled for this problem. Compute the result for yourself and resubmit your answer.";

foreach my $i (0..1) {
    $nFact[$i] = Real($nFact[$i]);
    $kFact[$i] = Real($kFact[$i]);
    $nkFact[$i] = Real($nkFact[$i]);
    $pascal[$i] = Real($pascal[$i]);
}

$introNFact = Real($introNFact);
$introKFact = Real($introKFact);
$introNKFact = Real($introNKFact);
$introPascal = Real($introPascal);

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Pascal's Triangle ### <<

*Pascal's triangle* is a number pattern that is useful when computing large exponents of binomial expressions.

The pattern of Pascal's triangle involves computing each row from the row above. Each entry is the sum of the two adjacent elements above it, as illustrated here:

>> [@ image("PascalTriangleAnimated2.gif")@]* <<

The next image shows several more rows of Pascal's triangle:

>> [@ image("Pascal_triangle_small.png", width=>300, height=>135)@]* <<

Can you determine what the next row will look like? [_____________________________]{$eighthRow}  
    _(use commas to separate each element in the eighth row)_

Building Pascal's triangle is a _recursive_ process, in that each calculating each row would seem to require the row before it. After all, how would you know what belongs in the [`10^{th}`] row if you didn't know what to add together from the [`9^{th}`] row?

Fortunately, there's a closed form for this pattern, and it involves the 'choose' function:  
>> [`` \binom{n}{k} = \frac{n!}{k!(n-k)!} ``] <<

In this closed form, [`n`] refers to which _row_ we want (_vertically_), and [`k`] indicates which _position_ in the row (_horizontally_). 

Now, there's a slight hiccup in the numbering of the rows and the positions of the triangle. Above, when you were asked to find the [`8^{th}`] row of Pascal's triangle, perhaps you caught the fact that there were already 8 rows displayed. This minor discrepancy happens because we _actually_ consider the first row to be [`n=0`], or the [`0^{th}`] row. 

The same thing happens when considering [`k`], the "first" element in the row is actually called the [`0^{th}`], or [`k=0`]. Understanding this is *crucial* for aligning Pascal's triangle with the closed form.

Use the image above to locate the element with [`n = [$introN]`] and [`k = [$introK]`]: [_____]{$introPascal}

* What is [`n!`]? [__________]{$introNFact}
* What is [`k!`]? [__________]{$introKFact}
* What is [`(n-k)!`]? [_________]{$introNKFact}

Compute [`\dfrac{n!}{k!(n-k)!}`] and confirm that it matches the element you found in the image.

>> #### Practice #### <<

1. Compute the element from Pascal's triangle with [`n=[$n[0]]`] and [`k=[$k[0]]`]:  
    a. What is [`n!`]? [__________]{$nFact[0]}  
    a. What is [`k!`]? [__________]{$kFact[0]}  
    a. What is [`(n-k)!`]? [__________]{$nkFact[0]}  
    a. Finally, what is the element from Pascal's triangle? [__________]{$pascal[0]}

1. Compute the element from Pascal's triangle with [`n=[$n[1]]`] and [`k=[$k[1]]`]:  
    a. What is [`n!`]? [__________]{$nFact[1]}  
    a. What is [`k!`]? [__________]{$kFact[1]}  
    a. What is [`(n-k)!`]? [__________]{$nkFact[1]}  
    a. Finally, what is the element from Pascal's triangle? [__________]{$pascal[1]}

END_PGML

##############################################################
#
#  Answers
#
#


BEGIN_PGML_HINT

* [`0!=1`]
* [`1!=1`]
* [`2!=2\times 1 = 2 `]
* [`3!=3\times 2 \times 1 = 6 `]
* [`4!=4\times 3\times 2 \times 1 = 24 `]
* [`\vdots`]
* [`n!=n\times (n-1)\times (n-2) \times \ldots \times 1`]
* The element from Pascalâ€™s triangle with [`n`] and [`k`] is
[`\dfrac{n!}{k!(n-k)!}`].

END_PGML_HINT


BEGIN_PGML_SOLUTION

1.
    a. [`[$n[0]]!=[$nFact[0]]`]  
    a. [`[$k[0]]!=[$kFact[0]]`]  
    a. [`[$nkDiff[0]]!=[$nkFact[0]]`]  
    a. [`\dfrac{[$n[0]]!} {([$k[0]]!)([$nkDiff[0]] !)}= [$pascal[0]]`]

2.
    a. [`[$n[1]]!=[$nFact[1]]`]
    a. [`[$k[1]]!=[$kFact[1]]`]
    a. [`[$nkDiff[1]]!=[$nkFact[1]]`]
    a. [`\dfrac{[$n[1]]!}{([$k[1]]!)([$nkDiff[1]]!)}= [$pascal[1]]`]



END_PGML_SOLUTION
ENDDOCUMENT();        
