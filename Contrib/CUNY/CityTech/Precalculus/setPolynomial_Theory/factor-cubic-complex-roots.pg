DOCUMENT();
loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",  
   "contextLimitedComplex.pl",
   "PGchoicemacros.pl",
   "contextFraction.pl"
);
TEXT(beginproblem());
$ShowPartialCorrectAnswers = 1;

Context("Complex");
Parser::Number::NoDecimals();

Context()->variables->add(x => 'Real');
Context()->flags->set(
  reduceConstants=>0,
  reduceConstantFunctions=>0,
);

do{

do{$bb=random(-1,1,2)*random(1,8,1);
   $cc=random(-1,1,2)*random(1,7,1);
   $discrim = $bb*$bb-4*$cc;
  } 
until (($bb*$bb-4*$cc<0));

   $sr=Real(sqrt(-$discrim));
   $asr=floor($sr);
} until ($sr!=$asr);
#} until (1!=0);

do{$aa=random(-1,1,2)*random(1,5,1);}
until ($aa^2+$bb*$aa+$cc!=0);

#  f(x)=(x+a)(x^2+bx+c) = x^3+(a+b)x^2+(ab+c)x+ac
$pp=$aa+$bb; $qq=$aa*$bb+$cc; $rr=$aa*$cc;
$poly=Formula("x^3+$pp*x^2+$qq*x+$rr")->reduce;

$maa = -$aa;
$mbb = -$bb;
$mdiscrim=-$discrim;
$answer = List(Formula("x+$aa")->reduce, Formula("x-($mbb+i*sqrt($mdiscrim))/2"), Formula("x-($mbb-i*sqrt($mdiscrim))/2"));
$quot = Formula("x^2+$bb*x+$cc")->reduce;
$answerRoot = List(Formula("$maa"), Formula("($mbb+i*sqrt($mdiscrim))/2"), Formula("($mbb-i*sqrt($mdiscrim))/2"));


# $answer = Object("expression");
# Basic Object Options: Real, Point, Formula, Interval, Complex

#[`[$sr]`], [`[$asr]`], [`[$aa]`], [`[$bb]`], [`[$cc]`]


BEGIN_PGML


Find all factors of the given polynomial. Do *not* approximate your solution!

[```f(x)=[$poly]```]

An integer root of [`f(x)`] is at [`x=`][__________]{$maa}

The quotient of [`f(x)\div (x-`]root[`)`] is equal to: [__________]{$quot}

List all roots of [`f(x)`]: [__________]{$answerRoot}

List all factors of [`f(x)`]: [__________]{$answer}


* Separate multiple factors with commas.

* Write complex numbers using the imaginary unit [`i`]. For example, convert [`\sqrt{-3}`] to [`i\cdot \sqrt{3}`], etc.

END_PGML

BEGIN_PGML_HINT

* Use a graphing calculator to identify possible integer roots.

* The rational root theorem may also help to find integer roots, because these have to be factors of the last coefficient.

* Divide [`f(x)`] by [`(x-`]root[`)`] via a long division. The quotient will be a quadratic polynomial. Find the remaing roots of [`f(x)`] by finding the roots of this quotient. Note that this may require the use of the quadratic formula.

* If [`c_1`], [`c_2`], [`c_3`] are the roots of [`f(x)`], then [`x-c_1`], [`x-c_2`], [`x-c_3`] are factors of [`f(x)`].


END_PGML_HINT

# for solution:
$maafactor = Formula("x+$aa")->reduce;
$mbbFactorSol =  Formula("x-($mbb+i*sqrt($mdiscrim))/2");
$mccFactorSol = Formula("x-($mbb-i*sqrt($mdiscrim))/2");
$mbbRootSol =  Formula("($mbb+i*sqrt($mdiscrim))/2");
$mccRootSol = Formula("($mbb-i*sqrt($mdiscrim))/2");
$mdiscrimSol= -$discrim;

BEGIN_PGML_SOLUTION

* *Step 1*: Find a *root* of [`f(x)`].

Using the graphing calculator, we find the root [`x=[$maa]`].

* *Step 2*: *Divide* [`f(x)`] by [`([$maafactor])`].

Using a *long-division*, we find that (*check this!*)
[```([$poly])\div([$maafactor])=[$quot]```] 
(Note that this must have a remainder of [`0`] when [`[$maa]`] is a root of [`f(x)`].)

Therefore, [`[$poly]=([$maafactor])\cdot ([$quot])`].

* *Step 3*: Keep *factoring* the quotient.

Next, we factor [`[$quot]`]. Since there does not seem any obvious way to factor this, we use the quadratic formula applied to [`[$quot]=0`]:
[``` x=\frac{-([$bb])\pm\sqrt{([$bb])^2-4\cdot (1)\cdot ([$cc])}}{2}=\frac{[$mbb]\pm\sqrt{[$discrim]}}{2}=\frac{[$mbb]\pm i\cdot \sqrt{[$mdiscrimSol]}}{2}```]

The factors of [`f(x)`] are therefore:
[```[$maafactor],[$mbbFactorSol],[$mccFactorSol]```]
The roots of [`f(x)`] are therefore:
[```[$maa],[$mbbRootSol],[$mccRootSol]```]

END_PGML_SOLUTION

ENDDOCUMENT();
