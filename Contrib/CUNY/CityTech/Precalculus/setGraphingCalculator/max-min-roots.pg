##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Polynomial equations and functions')
## DBsection('Zeros and multiplicities')
## Date('6/18/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "contextFraction.pl",
   "PGgraphmacros.pl",
   "parserAssignment.pl",
   "PGchoicemacros.pl",
   "parserPopUp.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");
Context()->parens->set("("=>{type=>"Point"});
parser::Assignment->Allow;
Context()->flags->set(
    reduceConstants=>0, 
    reduceConstantFunctions=>0,
    tolType=>'absolute',
    tolerance=>0.0005);
    

# f(x)=(x^2+bx+c)(px+q)=fA x^3+fB x^2+fC x+fD
$pp=random(2,4,1);
do{ $qq=random(-1,1,2)*random(1,9,2); }
until ($pp/$qq!=floor($pp/$qq));

$bb=random(-1,1,2)*random(3,7,1);
do{
do{ $cc=random(1,9,2); $discrim=$bb*$bb-4*$cc;}
until ($discrim>0);
} until (sqrt($discrim)!=floor(sqrt($discrim)));

$fA = $pp;
$fB = $qq+$bb*$pp;
$fC = $bb*$qq+$cc*$pp;
$fD = $cc*$qq;

$f = Formula("$fA x^3 + $fB x^2+ $fC x+$fD")->reduce;


$rr1=-$qq/$pp;
$rr2=(-$bb+sqrt($bb*$bb-4*$cc))/2;
$rr3=(-$bb-sqrt($bb*$bb-4*$cc))/2;
$roots = List(Point("($rr1,0)"),
              Point("($rr2,0)"),
			  Point("($rr3,0)"));
$maxX=(-2*$fB-sqrt(4*$fB*$fB-12*$fA*$fC))/(6*$fA);
$maxY=$fA*$maxX*$maxX*$maxX+$fB*$maxX*$maxX+$fC*$maxX+$fD;
$max = Point("($maxX,$maxY)");

$minX=(-2*$fB+sqrt(4*$fB*$fB-12*$fA*$fC))/(6*$fA);
$minY=$fA*$minX*$minX*$minX+$fB*$minX*$minX+$fC*$minX+$fD;
$min = Point("($minX,$minY)");



$graph_object1 = init_graph(-5,-5,5,5,axes=>[0,0],size=>[300,300],grid=>[10,10]);
add_functions($graph_object1,"(3x-7)*(2x+5)*(2*x^2-2*x-1)/35 for x in <-5,5> using color:blue and weight: 2");

$graph_object1->stamps( closed_circle( 0.431, 1.425, 'red') );
$graph_object1->lb( new Label( 0.431, 1.6, "local max", 'black', 'center', 'bottom' ) );

$graph_object1->stamps( closed_circle( -1.731, -4.53, 'green') );
$graph_object1->lb( new Label( -1.731, -4.9, "local min", 'black', 'center', 'bottom' ) );

$graph_object1->stamps( closed_circle( 1.925, -0.793, 'green') );
$graph_object1->lb( new Label( 1.925, -1.2, "local min", 'black', 'center', 'bottom' ) );

$graph_object1->stamps( closed_circle( -2.5, 0, 'yellow') );
$graph_object1->lb( new Label( -2.5, .3, "root", 'black', 'center', 'bottom' ) );

$graph_object1->stamps( closed_circle( -0.366, 0, 'yellow') );
$graph_object1->lb( new Label( -0.366, .3, "root", 'black', 'center', 'bottom' ) );

$graph_object1->stamps( closed_circle( 1.366, 0, 'yellow') );
$graph_object1->lb( new Label( 1.366, .3, "root", 'black', 'center', 'bottom' ) );

$graph_object1->stamps( closed_circle( 2.333, 0, 'yellow') );
$graph_object1->lb( new Label( 2.333, .3, "root", 'black', 'center', 'bottom' ) );



##############################################################
#
#  Text
#
#

BEGIN_PGML
>> ### Local Maxima, Minima, Roots with the Graphing Calculator ### <<

A *local maximum* of a function [`f`] is a point on the graph of [`f`] so that no "nearby" point is above that point.

Similarly, a *local minimum* of a function [`f`] is a point on the graph of [`f`] so that no "nearby" point is below that point.

Below is a graph with one local maximum graphed in red, and two local minima graphed in green.
(Note: The plural of "maximum" is "maxima", the plural of "minimum" is "minima"; hence the graph below has "one maximum" and "two minima".) A point that is either a maximum or a minimum is also called an *extremum*.

The graph of [`f`] also has four [`x`]-intercepts. The [`x`]-intercepts are also called *roots* or *zeros* of [`f`]. The roots were graphed in yellow.

>> [@image(insertGraph($graph_object1), width=>400, height=>400, tex_size=>400)@]* <<

The coordinates of the local maxima and minima are approximately (to the nearest tenth):

* Local maximum: [`(x,y)\approx(0.4, 1.4)`]

* Local minima: [`(x,y)\approx(-1.7, -4.5)`], and [`(1.9, -0.8)`]

* Roots: [`(x,y)\approx(-2.5, 0)`], and [`(-0.4, 0)`], and [`(1.4, 0)`], and [`(2.3, 0)`]

>> #### Practice #### <<

Consider the function [`f(x) = [$f]`].

Use a graphing calculator to find the local maximum, local minimum, and roots. Approximate your answer to the nearest thousandth.


a. The local maximum is [`(x,y)\approx`][_____]{$max}.

b. The local minimum is [`(x,y)\approx`][_______________]{$min}.

c. The roots are at [`(x,y)\approx`][__________]{$roots}.
    
* Enter the local maximum, the local minimum, and the roots as [`(x,y)`]-coordinates.

* Separate multiple answer by commas.


END_PGML

##############################################################
#
#  Answers
#
#

##############################################################
#
#  Hints
#
#



BEGIN_PGML_HINT

* Graph the function.

* Search for a local peak and a local valey of the graph.

* Change your graphing window if necessary.

* The graph has three [`x`]-intercepts.


END_PGML_HINT

##############################################################
#
#  Solutions
#
#

BEGIN_PGML_SOLUTION

The local maximum is [`(x,y)\approx [$max]`].

The local minimum is [`(x,y)\approx [$min]`].

The roots are at [`(x,y)\approx [$roots]`].

END_PGML_SOLUTION

# Custom error messages?
# "There should be more formulas in your list" -> "You're missing factors"
# "There should be more numbers in your list" -> "You're missing roots"

ENDDOCUMENT();        
