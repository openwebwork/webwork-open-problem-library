##DESCRIPTION
##  Algebra problem: true or false for inequality 
##ENDDESCRIPTION

##KEYWORDS('algebra', 'inequality', 'fraction')

## DBsubject('Algebra')
## DBchapter('Polynomial equations and functions')
## DBsection('Inequalities involving polynomials')
## Date('8/23/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')

########################################################################
#inconsequential edit
DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "PGgraphmacros.pl",
   "PGgraders.pl",
   "contextFraction.pl",
   "parserMultiAnswer.pl",
   "parserPopUp.pl",
   "scaffold.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Fraction");
Context()->noreduce('(-x)-y','(-x)+y');
Parser::Number::NoDecimals();
Context()->{error}{msg}{"You are not allowed to type decimal numbers in this problem"} 
  = "Decimals are not allowed for this problem, please use exact forms (such as fractions) instead of decimal approximations.";

# ax - r

$r[0] = non_zero_random(-8,8,1);
do { $a = $a = random(-1,1,2)*list_random(2,3,5); } until (gcf(abs($r[0]),abs($a))==1);

$rootReal = ($r[0]/$a);

$A = $a;
$B = -$r[0];
$f = Formula("$A x + $B")->reduce;

$rootFrac = (Fraction($r[0],$a));
    
#graph of rational:
$gr = init_graph(-10,-10,10,10,grid=>[20,20],axes=>[0,0],size=>[400,400]);
add_functions($gr,"$f for x in <-10,10> using color:blue and weight:2");
($gr->fn)[0]->steps(100);
$gr->stamps(closed_circle($rootReal,0,'orange'));

$grDom = init_graph(-10,-1,10,1, size=>[680,68]);
# x-axis
$grDom -> moveTo(-10,0);
$grDom -> lineTo(10,0,'black','1');
# x-axis ticks entered as y-value, color, list of x-values
$grDom -> h_ticks(0,"black",-9,-8-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9);
# labels for tickmarks
foreach my $j (0..9) {
    $grDom->lb( new Label($j,-0.5,$j, 'black','center','middle'));
    $grDom->lb( new Label(-$j,-0.5,-$j, 'black','center','middle'));
}
$firstMid = (-10+$rootReal)/2;
$secondMid = ($rootReal+10)/2;
$grDom->lb( new Label($firstMid,0.5,"(-inf,$rootFOrd[0])",'black','center','middle'));
$grDom->lb( new Label($secondMid,0.5,"($rootFOrd[0],inf)",'black','center','middle'));
$grDom->stamps(closed_circle($rootReal,0,'orange'));

$x1 = Real(random(-10,floor($rootReal-.001),1));
$y1 = Real($f->eval(x=>$x1));
$ans1String = ($y1>0)?"Positive":"Negative";
$pn1 = PopUp(["?","Positive","Negative"],"$ans1String");
$xy1 = MultiAnswer($x1,$y1)->with(
    singleResult=>1, 
    checkTypes=>0,
    format=>'f(%1$s)=%2$s',
    tex_format=>'f(%1$s)=%2$s',
    checker=> sub {
        my ($correct, $student, $self) = @_;
        my ($x,$y) = @{$student};
        Value::Error("You should select a number for your x-value.") unless ($x->type eq "Number");
        Value::Error("f($x) should be a number.") unless ($y->type eq "Number");
        $self->setMessage(1,"You need to select an x-value less than $rootFrac for this interval.") unless ($x < $rootReal);
        $self->setMessage(2,"You have incorrectly evaluated f($x).") unless( $y == $f->eval(x=>$x));
        return ($x < $rootReal, $x < $rootReal && $y == $f->eval(x=>$x));
    });

$x2 = Real(random(ceil($rootReal+.0001),10,1));
$y2 = Real($f->eval(x=>$x2));
$ans2String = ($y2>0)?"Positive":"Negative";
$pn2 = PopUp(["?","Positive","Negative"],"$ans2String");
$xy2 = MultiAnswer($x2,$y2)->with(
    singleResult=>1, 
    checkTypes=>0,
    format=>'f(%1$s)=%2$s',
    tex_format=>'f(%1$s)=%2$s',
    checker=> sub {
        my ($correct, $student, $self) = @_;
        my ($x,$y) = @{$student};
        Value::Error("You should select a number for your x-value.") unless ($x->type eq "Number");
        Value::Error("f($x) should be a number.") unless ($y->type eq "Number");
        $self->setMessage(1,"You need to select an x-value larger than $rootFrac for this interval.") unless ($x > $rootReal );
        $self->setMessage(2,"You have incorrectly evaluated f($x).") unless( $y == $f->eval(x=>$x));
        return ($x > $rootReal, $x > $rootReal && $y == $f->eval(x=>$x));
    });

$grDom2 = init_graph(-10,-2,10,1, size=>[680,102]);
# x-axis
$grDom2 -> moveTo(-10,0);
$grDom2 -> lineTo(10,0,'black','1');
# x-axis ticks entered as y-value, color, list of x-values
$grDom2 -> h_ticks(0,"black",-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9);
# labels for tickmarks
foreach my $j (0..9) {
    $grDom2->lb( new Label($j,-0.5,$j, 'black','center','middle'));
    $grDom2->lb( new Label(-$j,-0.5,-$j, 'black','center','middle'));
}
$color1=($y1>0)?'green':'red';
$color2=($y2>0)?'green':'red';
$grDom2->moveTo(-10,0);
$grDom2->lineTo($rootReal,0,$color1,3);
$grDom2->lineTo(10,0,$color2,3);
$grDom2->lb( new Label($firstMid,0.4,$ans1String,$color1,'center','middle'));
$grDom2->lb( new Label($secondMid,0.4,$ans2String,$color2,'center','middle'));
$grDom2->moveTo($rootReal,0.55);
$grDom2->lineTo($rootReal,-1,'orange',1);
$grDom2->stamps(closed_circle($rootReal,0,'orange'));
$grDom2->lb( new Label($rootReal,0.75,"root",'orange','center','middle'));
$grDom2->lb( new Label($rootReal,-1.5,"x=$rootFrac",'orange','center','middle'));

Context("Interval");

$nonZero = Compute("(-inf,$rootFrac) U ($rootFrac,inf)");

# set up all four inequalities to solve, align with answer
@texIneq = ('>','<','\geq','\leq');
if ($a > 0) {
    $ansInt[0] = Compute("($rootFrac,inf)");
    $ansInt[1] = Compute("(-inf,$rootFrac)");
    $ansInt[2] = Compute("[$rootFrac,inf)");
    $ansInt[3] = Compute("(-inf,$rootFrac]");
} else {
    $ansInt[0] = Compute("(-inf,$rootFrac)");
    $ansInt[1] = Compute("($rootFrac,inf)");
    $ansInt[2] = Compute("(-inf,$rootFrac]");
    $ansInt[3] = Compute("[$rootFrac,inf)");
};

$randomIneq = random(0,3,1);

##############################################################
#
#  Text
#
#

BEGIN_PGML

The graph of [`y = [$f]`] looks like:

>> [@ image( insertGraph($gr), width=>400, height=>400, tex_size=>800 ) @]* <<

We should notice that our line's [`y`]_-values_ may change from positive to negative (or vice versa) *only where* the graph crosses the [`x`]-axis (the [`x`]_-intercept_, which can also be called a *"root"*).

If we're looking at where our line has positive or negative [`y`]_-values_ (_range_), we need to look at our set of inputs (_domain_). 

If we view the domain as separate intervals, split at the [`x`]_-intercept_, we know that the line *must* be either _positive_ or _negative_ for the *entire* interval (since our function may only "change signs" at the [`x`]_-intercept_).

Because our function must be either positive or negative for each interval, we only need to "test" our [`y`]_-coordinates_ for one [`x`]_-value_ in each interval. 

END_PGML

Scaffold::Begin();
Section::Begin("Identify roots and asymptotes");
BEGIN_PGML

[`\displaystyle [$f]`] has root(s) at [`x=`][_____]{$rootFrac}

Use interval notation to represent the separate intervals where [`` [$f] ``] will be *non-zero*: [_________________________]{$nonZero}

* Type "inf" and "-inf" for [`\infty`] and [`-\infty`], respectively.
* Type the capital letter "U" to represent the union symbol [`\cup`].


END_PGML
Section::End();

Section::Begin("Test each interval");
BEGIN_PGML

>> [@ image( insertGraph($grDom), width=>680, height=>68, tex_size=>800 ) @]* <<

a. Select an [`x`]-value in the first interval, [`(-\infty,[$rootFrac])`]: [_____]{$xy1}  

    Evaluate the function [`f(x)`] at your selected [`x`]-value: [_____]{$xy1}  
    
    Will [`f(x)`] be positive or negative on the first interval? [_]{$pn1}
    
b. Select an [`x`]-value in the second interval, [`([$rootFrac],\infty)`]: [_____]{$xy2}  

    And evaluate the function [`f(x)`] at your selected [`x`]-value: [_____]{$xy2}  
    
    Will [`f(x)`] be positive or negative on the second interval? [_]{$pn2}

END_PGML
Section::End();

Section::Begin("Solve inequalities by interpreting your results");

BEGIN_PGML

>> [@ image( insertGraph($grDom2), width=>680, height=>102, tex_size=>800 ) @]* <<

a. On what interval(s) will [` \displaystyle [$f] [$texIneq[0]] 0 `]? [_______________]{$ansInt[0]}

a. On what interval(s) will [` \displaystyle [$f] [$texIneq[1]] 0 `]? [_______________]{$ansInt[1]}

a. On what interval(s) will [` \displaystyle [$f] [$texIneq[2]] 0 `]? [_______________]{$ansInt[2]}

a. On what interval(s) will [` \displaystyle [$f] [$texIneq[3]] 0 `]? [_______________]{$ansInt[3]}

END_PGML
Section::End();
Scaffold::End();

##############################################################
#
#  Answers
#
#

ENDDOCUMENT();        

