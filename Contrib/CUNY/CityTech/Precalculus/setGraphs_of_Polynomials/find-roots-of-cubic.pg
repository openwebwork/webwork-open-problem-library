DOCUMENT();
loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "contextFraction.pl"
);
TEXT(beginproblem());
$ShowPartialCorrectAnswers = 1;

Context("Fraction");
Parser::Number::NoDecimals();

Context()->flags->set(
  reduceConstants=>0,
  reduceConstantFunctions=>0,
);

$pmsgn = random(-1,1,2);

$aa=random(-1,1,2)*random(1,4,1);
do{$bb=$pmsgn*random(1,7,2); 
   $dd=random(2,4,2);} until ($dd*$aa-$bb!=0);
do{$cc=-1*$pmsgn*random(2,4,2);
   $ee=random(3,5,2);} until ($ee*$aa-$cc!=0);

#  f(x)=(x+a)(dx+b)(ex+c) = dex^3+(ade+eb+dc)x^2+(abe+acd+bc)x+abc
$oo=$dd*$ee; $pp=$aa*$dd*$ee+$ee*$bb+$dd*$cc; 
$qq=$aa*$bb*$ee+$aa*$cc*$dd+$bb*$cc; $rr=$aa*$bb*$cc;
$poly=Formula("$oo*x^3+$pp*x^2+$qq*x+$rr")->reduce;

$maa=-$aa;
$mbb=-$bb;
$mcc=-$cc;
$answer = List(Formula("-$aa")->reduce, Formula("$mbb/$dd"), Formula("$mcc/$ee")->reduce);
$quotb=$dd*$cc+$bb*$ee;
$quotc=$bb*$cc;
$quot=Formula("$dd*$ee*x^2+$quotb*x+$quotc")->reduce;

# $answer = Object("expression");
# Basic Object Options: Real, Point, Formula, Interval, Complex


BEGIN_PGML

>> ### Roots of a polynomial ### <<

Find the roots of the polynomial [`f(x)=6x^3+17x^2-31x-12`].

We follow the same steps that we used when finding the factors of [`f(x)`].

* *Step 1*: Find a *root* of [`f(x)`].

Using the graphing calculator, we identify one of the roots, here [`x=-4`] is a root. (*Check this!*)

* *Step 2*: *Divide* [`f(x)`] by [`(x-`]root[`)`].

Using a *long-division*, we find that (*check this!*)
[```(6x^3+17x^2-31x-12)\div(x+4)=6x^2-7x-3```] 
(Note that this has remainder [`0`] since [`-4`] is a root of [`f(x)`].)

Therefore, [`6x^3+17x^2-31x-12=(x+4)\cdot(6x^2-7x-3)`].

* *Step 3*: Find the roots of the quotient, either by factoring or by using the quadratic formula.

Factoring [`6x^2-7x-3=(2x-3)(3x+1)`] shows that the roots of [`f(x)`] are:
[```-4,\frac 3 2,-\frac 1 3```]

When factoring does not work easily, one can alernatively use the quadratic formula:
[```ax^2+bx+c=0 \implies x=\frac{-b\pm \sqrt{b^2-4ac}}{2a}```] 

>> #### Practice #### <<

Find all roots of the given polynomial. Do *not* use decimals in your answer!
[```f(x)=[$poly]```]

An integer root of [`f(x)`] is at [`x=`][__________]{$maa}

The quotient [`f(x)\div (x-`]root[`)`] is equal to: [__________]{$quot}

List all roots of [`f(x)`]: [`x=`][__________]{$answer}

* Separate multiple roots with commas.


END_PGML

BEGIN_PGML_HINT

Follow the steps described above:

*Step 1.* Find a root of [`f(x)`] with the graphing calculator.

*Step 2.* Divide [`f(x)`] by [`(x-`]root[`)`] via a long division.

*Step 3.* The quotient from Step 2 is a quadratic polynomial. Find the remaing roots of [`f(x)`] by finding the roots of this quotient. Note that this may require the use of the quadratic formula.

* If [`c_1`], [`c_2`], [`c_3`] are the roots of [`f(x)`], then [`x-c_1`], [`x-c_2`], [`x-c_3`] are factors of [`f(x)`].


END_PGML_HINT

# for solution:
$maafactor = Formula("x+$aa")->reduce;
$mbbfactor = Formula("$dd*x+$bb")->reduce;
$mccfactor = Formula("$ee*x+$cc")->reduce;
$msolbb = Formula("$mbb/$dd");
$msolcc = Formula("$mcc/$ee");


BEGIN_PGML_SOLUTION

* *Step 1*: Find a *root* of [`f(x)`].

Using the graphing calculator, we find the integer root [`x=[$maa]`].

* *Step 2*: *Divide* [`f(x)`] by [`([$maafactor])`].

Using a *long-division*, we find that (*check this!*)
[```([$poly])\div([$maafactor])=[$quot]```] 
(Note that this must have a remainder of [`0`] when [`[$maa]`] is a root of [`f(x)`].)

Therefore, [`[$poly]=([$maafactor])\cdot ([$quot])`].

* *Step 3*: Keep *factoring* the quotient.

Factoring [`[$quot]=([$mbbfactor])([$mccfactor])`] shows that
[```[$poly]=([$maafactor])\cdot ([$mbbfactor])\cdot ([$mccfactor])```] 
The factors of [`f(x)`] are therefore:
[```[$maafactor],[$mbbfactor],[$mccfactor]```]
We also find the roots of the last two factors: [```[$mbbfactor]=0\implies [$dd]x=[$mbb]\implies x=[$msolbb]```]
[```[$mccfactor]=0\implies [$ee]x=[$mcc]\implies x=[$msolcc]```]
The roots of [`f(x)`] are therefore:
[```[$maa],[$msolbb],[$msolcc]```]

END_PGML_SOLUTION

ENDDOCUMENT();
