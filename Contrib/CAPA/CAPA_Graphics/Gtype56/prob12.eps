%!PS-Adobe-2.0 EPSF-2.0
%%Title: set9.q5.create
%%Creator: Create
%%CreationDate: Mon Jun 19 10:06:49 1995
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 132 467 485 711
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^["(u(/M
% U]7ksEd/PDa>$"Ce'ed"3TUk_(r?-O^tOBu]N+H%;hjUe5o1W^M@K!Adj&"I]Q<O<"?[,S4]
% EUo`7T8Wo_M&:eWP[K,:g&3pN<ft2Ka`!l]JY$\^Obm`$b.>*\;@tI+="5oA-:I.0%p;`$Wh
% n<n.1WYK_m,#ID"&o>pBku>(@6FdXXP,BP"^,>Jj\,Jf>cVRZV]e;j7KKPlEt9niK0W\_OrY
% eAk?>Zg0uj;o)ITLU!\-L+*_dQo7K?,I"I(OgooO\hSH(q-A6CPK\<SjWrnD.s@H<XB4,uQ*
% X_go+rAC#jK2dJY!CI8>NWp[=0o-PSBTO>QO%9k9IZLVn:FNX@eXe2%q*mtu_!0uH>SjoWKa
% ]brd00kVTM`]KAUjac)e%)J,7%e4i<BR)]O=;J.1e67)n?8a**WUm@+?#Q\;3NjC^`m*;INN
% p;#s(u;$S(6APu)"V3TLE&-;uS!dhA`k?!$P"t3Q$K\[GIIWmi=dRnTnYi8>6*RM_9Bui"5)
% `mKl*W_]hOFRHHYh@l[!:WLJS,go-*/=-g_N#[%FSb54Pu7B\?NBf/f78lJg)9snD)d?LT[#
% T5D'+L7^aSmkG?g`#7E1i^,Jna>+dZ/KJ0kq'YQ4`e_W;kEE10C+Y8C_NC4DSiQ"lhVYr,o3
% Sog5e!7/@t.u,/-g=rb8/=EWENYPc9,nLo&8@`<'RH=h;<jtXH&X4V8=53pd63EC^pQkm1@N
% (T1Fs\$,`V]o'@9]_2.NN5U`6lC0$&/G<3sk=@_#m"4o#s6A>R9]-*OZ:6]Cl;6b)$*tjX1K
% i0&aeh@\=p$!.-#R5Uo]5)&/Ce,n!"Q`cUlK!%hjrD7FUPr0bKk@QQBMgM2Zsf+*^.=s-fME
% cosuC</$1E8Bk"YBB[Kle%6J)]cXr)B"4%97c7+JYD9]8qKl]EW?]&/CKgE>D!mH!"o)s.E+
% KpMm8b<J_RH"!tGs$/rL5A75p8<_FFb9,ku]PEB?)QV02*]2f\EZ4`&DENA6pg'dV3_*RUr4
% `3BCT:tbmM"O_l%%582OV3ti9\`]/fbcPHO#?^g+3=(e@'qQu7TGP1m&B#^j:]nRgX2-90c0
% gH+h9L@1)2!i50H/BlU,8`Ea\#AS`5';)#T,s*$e2L(BX%4gM/A;lh36L2!"cm?Pg0?@^r6&
% ]@=e*ZmsX_q?gTb)^YIdaIln)=/-:('Ub/]_#jd\h``*jkFCc6NR0<R;cnMiCVh3V9S&Mb2_
% >f%fFHjR.'bV2`E3R,Dfl-p"''+mn*.iX@\R2sRW'=d[63;/#J;Rk;!s!qg$=T#`)T!U$7"J
% _O7L?sLdQiRHa?b>71n`=#UdIIjU(RVXN@qe_JFbT?HC05KAYaI:m)eLD9*Eh;PkCgk!:#Z)
% i_(C>'*q6%Z:u$t:D39=4[#bi4KBSm.<pXK"9a;f?,:+6;AgiS?Ak)L#t-`Q_*i']Mh=LcbC
% Gfm#XNROR4Gr+"p&,@?1gfroimI6N:i&."JI>>pd]I=8YudGdL]\Mk:RcUW=&LM0A?j]10d[
% MZ^hPIDAnT>&oc$!g+SDnCLLI5'S*f$o/PF!(U9^`bojA9&:"iM^;qQl;OT@KL850_U1_kP:
% 9'IJ]VH21A?ei9+I;*<6nS;hcZT45F75V4[XpN`H?/>CmnkEGR-Dh,rpua5*90;,GL2ssF.q
% C]-9/sn9-0NX&EneI8,^>#Ql7\q_#-SCk%W;kM(Y3:d3h.ug!===PaV_'W&=1$:"C^LB+99&
% 7.oXJ1/3:o?+K1(5cKSQi3eeJ]rE@\KLq>%`hY#ZV(Kfhb=S^3/loq=<]<HG@ZjHkVio64rh
% <=cnFW,<'dMOhqQAWlVQG42)cFl0d%ucOWTQrf@)58`G@!.u>35$\NVQS%G'9K/`MH^kMH7-
% R<c@8L.mq!!=,GM9YCG)<Fng98kQY(nK:PeHQ(uH&T!YJ-=t*rob=c2[DPgU>l#,mf=g5nWR
% JcD#1p\W7gl^0\Cdk:,<=;m)"sTS@/SAmrlI,Aop:OPa.QuC1e+WVrXJ>mbG_\B7io6;KqG$
% AGQKqA'3gWOj*G&Q:2-l1g_7EjgDFb'q;XTk#]87!c@f9G;aP'\#\.tlP5K?uuEYcN`NA"ro
% CgXQ8[]%=008Eg@?;3O>Wp4[WD3$*;Qqe('$LTBVH^dqV9A#k)SgH`VI+euN[D*`RlU3UM@M
% &\XUO:l!MB/bWa0M(t(j%'r@][uq[oCN3%2XUFS),/uYf@7Anp>R1A=nV0AjjnI;3dX#DuQ*
% &.=JL<$XDF9h\ODHjY;+qjkc&4ilbo0Da9.@k-\ZCdRpZaF6Q:D3P/G*).cbdk);oog0)$>^
% =Zk&ggos'(sp"bjeicn?;WYKe.5l-OF?D-<<oqKeN>I!cb/=3#M@-#Nj<N!geLZ*(t8q:[T@
% mY3A6F.bgr(,UlC;nKZ9Igbk3Zl26lIOPB^GM>@\ip)2Lce,*Ed;Q2sUqPsG75!)Z9P[+a$;
% ls=;9_VPf8W=!KBWK#kBH$I7LSNg2B3OL-gYd((#0)ttPx
% EndEmbeddedGraphics N 2049 801 E ce S 3b48c R 3b8b8b80
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
132 467 353 244 rectclip
0 0 0.15 1 10 SU
[2] 0 setdash
243 639 T
N
4 L
1 nxsetgray
81 -9 0 9 line
-6.340379 81 0 arrow
2.716667 L
0.666662 nxsetgray
81 -9 0 9 line
-6.340379 81 0 arrow
1.433333 L
0.333338 nxsetgray
81 -9 0 9 line
-6.340379 81 0 arrow
0.15 L
0 nxsetgray
81 -9 0 9 line
-6.340379 81 0 arrow
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 186 519] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 109 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 91 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 73 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 55 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 37 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 19 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 1 1] concat
0 0 0.15 1 10 SU
[1 0 0 1 18 9] concat
N
0.68276 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
f
0.15 L
0 nxsetgray
N 66 66 m
66 66 65 45 -135 arcn
C
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 1 9 9] concat
N
0.503449 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
f
0.15 L
0 nxsetgray
N 65 65 m
65 65 65 0 -180 arcn
C
s
0 0 T
grestore
grestore
grestore
grestore
grestore
0 0 0 1 10 SU
[1 0 0 -1 212 710] concat
gsave
/Helvetica-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
64
exch
defineuserobject
64 execuserobject setfont
89.5 9.5 T
-88.5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(A Variable Capacitor) show
0 0 T
grestore
grestore
0 0 0 1 10 SU
[1 0 0 -1 304 615] concat
gsave
/Helvetica-Bold findfont 14 scalefont [1 0 0 -1 0 0] makefont
68
exch
defineuserobject
68 execuserobject setfont
6.5 6.5 T
-5.5 5 T
N 0 0 m
0 nxsetgray
0 0 m
(A) show
0 0 T
grestore
grestore
0 0 0 1 10 SU
[1 0 0 -1 259 570] concat
gsave
68 execuserobject setfont
6.5 6.5 T
-5.5 5 T
N 0 0 m
0 nxsetgray
0 0 m
(A) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 326.458038 681.458008] concat
[1 0 0 -1 1 138] concat
N
0.15 L
0 nxsetgray
N
68.541962 68.541962 68.541962 85.909088 0 arcn
s
175.909088 73.431694 136.909286 arrow
-90 137.083923 68.541962 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[2] 0 setdash
198 495 T
N
0.15 L
0 nxsetgray
45 90 0 0 line
63.436821 45 90 arrow
0 0 T
grestore
0 0 0 1 10 SU
[2] 0 setdash
[1 0 0 -1 178 489] concat
gsave
68 execuserobject setfont
19 6.5 T
-18 5 T
N 0 0 m
0 nxsetgray
0 0 m
(Knob) show
0 0 T
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 229 576] concat
1 1 7 1 10 SU
19 19 T
N
0 nxsetgray
27 0 0 0 line
4 L
1 nxsetgray
27 0 0 0 line
5 L
0.666662 nxsetgray
27 0 0 0 line
6 L
0.333338 nxsetgray
27 0 0 0 line
7 L
0 nxsetgray
27 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
[0.980174 0 0 -0.980174 14.178436 26.821564] concat
N
0 nxsetgray
gsave
18 18 0 0 oval fill
grestore
0.15 L
0 nxsetgray
gsave
18 18 0 0 oval 0.055556 0.055556 S s
grestore
0 0 T
grestore
grestore
grestore
0 0 7 1 10 SU
[1 0 0 -1 133 663] concat
gsave
/Helvetica findfont 14 scalefont [1 0 0 -1 0 0] makefont
161
exch
defineuserobject
161 execuserobject setfont
78.5 8 T
-77.5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(\(These plates can move\)) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[2] 0 setdash
243 630 T
N
4 L
1 nxsetgray
54 -18 0 18 line
-18.435492 54 0 arrow
2.716667 L
0.666662 nxsetgray
54 -18 0 18 line
-18.435492 54 0 arrow
1.433333 L
0.333338 nxsetgray
54 -18 0 18 line
-18.435492 54 0 arrow
0.15 L
0 nxsetgray
54 -18 0 18 line
-18.435492 54 0 arrow
0 0 T
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
