%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: AppsoftDraw
%%CreationDate: Sun Sep  3 19:11:41 1995
%%For: kashy
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 464 278
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def /dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def /crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /arwlen 6 def /arw 4 def /arow {
    gsave newpath moveto lineto unpagectm concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall newpath 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath crlinalph setalpha strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse strwpat {
        crstrpat findfont exch strwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /arwpath {
    sc7mt currentmatrix pop gsave newpath moveto lineto unpagectm dup concat {
        
    } {
        
    } {
        
    } {
        
    } pathforall grestore unpagectm 5 -1 roll concat 4 2 roll 2 copy moveto 4 2 roll exch 4 -1 roll exch sub 3 1 roll sub exch atan rotate dup 1 lt {
        pop 1 1 scale
    } {
        dup scale
    } ifelse -1 2 rlineto 7 -2 rlineto -7 -2 rlineto closepath sc7mt setmatrix
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
%%EndSetup
gsave
0 0 464 277.149994 rectclip
-85 -318.850006 translate
85 318.850006 464 277.149994 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 8] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/usedash true def
/strdsh [4 4] def /dshpatoff 0 def
false 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
99 350 497 651 setbbox
161.5 493 moveto
161.5 493 162.5 494 162.5 494 curveto
162.5 494 161.5 494 161.5 494 curveto
161.5 494 162 494.5 162 494.5 curveto
162 494.5 162.5 494.5 162.5 494.5 curveto
162.5 494.5 163 495 163 495 curveto
163 495 183 525 183 525 curveto
183 525 206 552 206 552 curveto
206 552 226.5 569.5 226.5 569.5 curveto
226.5 569.5 248 583.5 248 583.5 curveto
248 583.5 270 591 270 591 curveto
270 591 291 594.5 291 594.5 curveto
291 594.5 315 591 315 591 curveto
315 591 334 584 334 584 curveto
334 584 357 570 357 570 curveto
357 570 379 551 379 551 curveto
379 551 399 527 399 527 curveto
399 527 421 496 421 496 curveto
421 496 442 461 442 461 curveto
442 461 464 421 464 421 curveto
464 421 470 408 470 408 curveto
470 408 474 400 474 400 curveto
474 400 485 377 485 377 curveto
485 377 496 350 496 350 curveto
end
/nspans 23 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/usedash false def
0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc6mt astore 9.89949 1 -1 108 487 0.292537 0 0 0.315168 123.928741 338.168335 sc5mt astore estroke
0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc5mt astore -99 70 326 275 0.340702 0 0 0.39 76.820541 350.475006 sc6mt astore ssl
/esave save def 0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc6mt astore 54.851326 216.647827 252 412 1.217391 -1 11.5 false false 0.340702 0 0 0.39 67.621582 332.14502 sc5mt astore apstroke esave restore
/esave save def 0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc6mt astore 54.851326 216.647827 252 412 1.217391 -1 11.5 false false 0.340702 0 0 0.39 66.940178 331.365021 sc5mt astore apstroke esave restore
0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc5mt astore -82 68 308 276 0.340702 0 0 0.39 76.820541 350.475006 sc6mt astore ssl
0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc5mt astore 1 -41 227 408 0.340702 0 0 0.39 105.098824 298.605011 sc6mt astore ssl
0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc5mt astore 15 -43 243 409 0.340702 0 0 0.39 105.098824 298.605011 sc6mt astore ssl
0.39 0 0 0.39 141.826462 244.305008 sc4mt astore 0.39 0 0 0.39 449.986389 244.305008 sc6mt astore 5.408325 1 -1 125 441 0.535465 0 0 0.3245 115.505104 315.400635 sc5mt astore estroke
/crlinw 1.9 def
false 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
78 335 256 462.376099 setbbox
87 455 moveto
87 455 97.887077 461.956085 98 462 curveto
98.967079 462.376099 109.966095 454.885132 111 455 curveto
111.046097 455.005127 121.928711 453.007141 122 453 curveto
122.228714 452.977142 128.770081 456.020905 129 456 curveto
129.100082 455.990906 135.891754 452.019684 136 452 curveto
136.221756 451.959686 144.792664 453.057587 145 453 curveto
145.332672 452.907593 152.674057 447.054321 153 447 curveto
153.754059 446.874329 172.238846 447.105713 173 447 curveto
173.318848 446.955719 182.675842 441.073669 183 441 curveto
183.335831 440.923676 194.768204 442.158051 195 442 curveto
195.428207 441.708038 204.602631 426.377502 205 426 curveto
205.202621 425.807495 224.849716 412.201599 225 412 curveto
226.079712 410.551605 245.199005 371.623627 246 370 curveto
246.309006 369.373627 255 346 255 346 curveto
end
/nspans 14 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crlinw 1 def
false 1 0 0 0.2 12 288.982727 sc5mt astore sstrt
systemdict
begin
240 254.906296 378 323.063629 setbbox
240 293 moveto
240 293 253.336487 297.453552 254 298 curveto
254.356476 298.293579 271.535004 303.943634 272 304 curveto
272.525024 304.063629 284.520447 303.202881 285 303 curveto
285.300446 302.872894 300.858551 296.314331 301 296 curveto
301.39856 295.114349 311.641479 289.90686 312 289 curveto
312.151459 288.616852 321.719421 285.292267 322 285 curveto
322.439423 284.542267 336.445496 281.310516 337 281 curveto
337.195496 280.890503 355.826996 282.906311 356 283 curveto
356.546997 283.296295 365.636597 285.495941 366 286 curveto
366.56662 286.78595 378 293 378 293 curveto
end
/nspans 10 def 1 0 0 0.2 0 233.982712 sc5mt astore 1 0 0 0.2 0 233.982712 sc6mt astore splstroke
false 1 0 0 0.2 150 288.982727 sc5mt astore sstrt
systemdict
begin
240 254.906296 378 323.063629 setbbox
240 293 moveto
240 293 253.336487 297.453552 254 298 curveto
254.356476 298.293579 271.535004 303.943634 272 304 curveto
272.525024 304.063629 284.520447 303.202881 285 303 curveto
285.300446 302.872894 300.858551 296.314331 301 296 curveto
301.39856 295.114349 311.641479 289.90686 312 289 curveto
312.151459 288.616852 321.719421 285.292267 322 285 curveto
322.439423 284.542267 336.445496 281.310516 337 281 curveto
337.195496 280.890503 355.826996 282.906311 356 283 curveto
356.546997 283.296295 365.636597 285.495941 366 286 curveto
366.56662 286.78595 378 293 378 293 curveto
end
/nspans 10 def 1 0 0 0.2 0 233.982712 sc5mt astore 1 0 0 0.2 0 233.982712 sc6mt astore splstroke
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 66 1 367 273 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
false 0.45 0 0 0.45 342.476776 225.550018 sc5mt astore sstrt
systemdict
begin
431 268 463 284 setbbox
431 268 moveto
431 268 445.626434 272.740112 446 273 curveto
446.316437 273.220123 459 277 459 277 curveto
end
/nspans 2 def 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 0.45 0 0 0.45 257.12677 326.700012 sc6mt astore splstroke
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 107 -1 352 284 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 381 285 2 43 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore rstroke
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 426 286 -2 94 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore rstroke
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore -34 -81 423 374 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 38 1 386 292 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore -29 -37 382 326 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 26 3 355 289 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 105 -1 351 281 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
/esave save def 0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc6mt astore 90 164.232819 296 324 1.92 -1 12.5 false false 0.311729 0 0 0.45 408.323486 211.600021 sc5mt astore apstroke esave restore
0.45 0 0 0.45 257.12677 326.700012 sc4mt astore 0.45 0 0 0.45 257.12677 326.700012 sc5mt astore 26 -57 428 338 0.45 0 0 0.45 342.026764 223.300018 sc6mt astore ssl
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 204.000061 -0.971436 173.999939 327.971436 1 0 0 1 -9 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(D ) [10.108002 0 0 0] 393 316 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 -5 7] dotx
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 82.000397 0.931824 407 327 1 0 0 1 0 0 sc6mt astore ssl
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 1.802765 1.000006 -1 51 643 1 0 0 1 105.75 -152.75 sc5mt astore estroke
/esave save def 1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 90 145.941315 120 707 1.04 -1 12.5 false false 1 0 0 1.363669 15 -474.022034 sc5mt astore apstroke esave restore
/esave save def 1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 90 145.941315 120 707 1.04 -1 12.5 false false 1 0 0 1.363669 17 -469.022034 sc5mt astore apstroke esave restore
/esave save def 1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 90 145.941315 120 707 1.04 -1 12.5 false false 1 0 0 1.363669 23 -455.022034 sc5mt astore apstroke esave restore
/crlinw 0 def
/crendarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 1.316711 -2.633423 457 435 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0.251831 -0.314819 390 538 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 2 0 290 594 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 1.75737 1.757385 214 558 1 0 0 1 0 0 sc6mt astore ssl
/crendarw false def
/crfilred 0.836695 def /crfilgrn 0.836695 def /crfilblu 0.836695 def /filinclr true def
true 1 0 0 1 1 7 sc5mt astore sstrt
systemdict
begin
83 329 254 455 setbbox
85.5 438 moveto
85.5 438 86 448 86 448 curveto
86 448 97 454.5 97 454.5 curveto
97 454.5 109.5 447.5 109.5 447.5 curveto
109.5 447.5 120.5 445 120.5 445 curveto
120.5 445 128 448.5 128 448.5 curveto
128 448.5 135.5 444 135.5 444 curveto
135.5 444 144 446 144 446 curveto
144 446 152 439.5 152 439.5 curveto
152 439.5 172.5 439 172.5 439 curveto
172.5 439 182.5 433 182.5 433 curveto
182.5 433 194 435 194 435 curveto
194 435 204 419 204 419 curveto
204 419 223.5 405 223.5 405 curveto
223.5 405 244 363.5 244 363.5 curveto
244 363.5 250.5 339.5 250.5 339.5 curveto
250.5 339.5 171 338 171 338 curveto
171 338 123 338 123 338 curveto
123 338 102 340.5 102 340.5 curveto
102 340.5 85.5 338.5 85.5 338.5 curveto
85.5 338.5 84 376 84 376 curveto
84 376 85 402 85 402 curveto
85 402 86 427 86 427 curveto
86 427 85.5 438 85.5 438 curveto
end
/nspans 23 def 1 0 0 1 0 0 sc5mt astore splfill
true 1 0 0 1 1 7 sc5mt astore sstrt
systemdict
begin
83 329 254 455 setbbox
85.5 438 moveto
85.5 438 86 448 86 448 curveto
86 448 97 454.5 97 454.5 curveto
97 454.5 109.5 447.5 109.5 447.5 curveto
109.5 447.5 120.5 445 120.5 445 curveto
120.5 445 128 448.5 128 448.5 curveto
128 448.5 135.5 444 135.5 444 curveto
135.5 444 144 446 144 446 curveto
144 446 152 439.5 152 439.5 curveto
152 439.5 172.5 439 172.5 439 curveto
172.5 439 182.5 433 182.5 433 curveto
182.5 433 194 435 194 435 curveto
194 435 204 419 204 419 curveto
204 419 223.5 405 223.5 405 curveto
223.5 405 244 363.5 244 363.5 curveto
244 363.5 250.5 339.5 250.5 339.5 curveto
250.5 339.5 171 338 171 338 curveto
171 338 123 338 123 338 curveto
123 338 102 340.5 102 340.5 curveto
102 340.5 85.5 338.5 85.5 338.5 curveto
85.5 338.5 84 376 84 376 curveto
84 376 85 402 85 402 curveto
85 402 86 427 86 427 curveto
86 427 85.5 438 85.5 438 curveto
end
/nspans 23 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crlinw 1 def
/crfrtarw true def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -59.75 123.25 483.25 1 0 0 1 -4.5 -1 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(H ) [10.108002 0 0 0] 61 416 /Helvetica [ 14 1 mul 0 0 14 0 0 ] [1 0 0 1 52 -10.75] dotx
/crendarw true def
/crfrtarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -43 123 395.25 1 0 0 1 -4 0 sc6mt astore ssl
/crlinw 0 def
/usedash true def
/strdsh [2 8] def /dshpatoff 0 def
/crendarw false def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 1 -145 157 465 1 0 0 1 0 0 sc6mt astore ssl
end
grestore
grestore
%%Trailer
%%DocumentFonts: Helvetica
%%BoundingBox: 0.000000 0.000000 464.000000 277.149994
