%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: AppsoftDraw
%%CreationDate: Fri Oct  8 13:07:18 1993
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 612 792
%%NXNextStepVersion: 3.0
%%EndComments

%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.

/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet

_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix
def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def
/dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw
true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def
/crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans
false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /TDeps_dict 20 dict def TDeps_dict begin /showpage {
    
} def /copypage {
    
} def /grestoreall {
    
} def /erasepage {
    
} def /nulldevice {
    
} def /exitserver {
    
} def /initgraphics {
    
} def /renderbands {
    
} def /initmatrix {
    
} def /banddevice {
    
} def /setpageparams {
    
} def /framedevice {
    
} def /note {
    
} def end end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
%%EndSetup
gsave
0 0 612 792 rectclip
0 0 612 792 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.5 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.5 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.5 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
end
grestore
gsave clpmt currentmatrix pop newpath
1 0 0 1 30 -57 sc5mt astore pop false {
    sc5mt dodrawctm 72 72 468 648 0 rfpath unpagectm
} {
    468 648 72 72 sc5mt mkrpath
} ifelse
clip
newpath
clpmt setmatrix
gsave
/epssave save def 0 setgray 1 setlinewidth 0 setlinecap 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath TDeps_dict begin userdict begin
[1 0 0 1 30 -57] dodrawctm
0 0 translate
%%BeginFile: /tmp/topdraw_eps_21766_2
%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 72.0 72.0 540.0 720.0
%%Creator: Mathematica
%%CreationDate: Tue Oct  5 13:44:09 PDT 1993
%%EndComments

/Mathdict 100 dict def
Mathdict begin
/Mlmarg		1.0 72 mul def
/Mrmarg		1.0 72 mul def
/Mbmarg		1.0 72 mul def
/Mtmarg		1.0 72 mul def
/Mwidth		8.5 72 mul def
/Mheight	11 72 mul def
/Mtransform	{  } bind def
/Mnodistort	true def
/Mfixwid	false	def
/Mfixdash	false def
/Mrot		0	def
/Mpstart {
MathPictureStart
} bind def
/Mpend {
MathPictureEnd
} bind def
/Mscale {
0 1 0 1
5 -1 roll
MathScale
} bind def
/ISOLatin1Encoding dup where
{ pop pop }
{
[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft
/logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
} ifelse
/MFontDict 50 dict def
/MStrCat
{
exch
dup length
2 index length add
string
dup 3 1 roll
copy
length
exch dup
4 2 roll exch
putinterval
} def
/MCreateEncoding
{
1 index
255 string cvs
(-) MStrCat
1 index MStrCat
cvn exch
(Encoding) MStrCat
cvn dup where
{
exch get
}
{
pop
StandardEncoding
} ifelse
3 1 roll
dup MFontDict exch known not
{
1 index findfont
dup length dict
begin
{1 index /FID ne
{def}
{pop pop}
ifelse} forall
/Encoding 3 index
def
currentdict
end
1 index exch definefont pop
MFontDict 1 index
null put
}
if
exch pop
exch pop
} def
/ISOLatin1 { (ISOLatin1) MCreateEncoding } def
/ISO8859 { (ISOLatin1) MCreateEncoding } def
/Mcopyfont {
dup
maxlength
dict
exch
{
1 index
/FID
eq
{
pop pop
}
{
2 index
3 1 roll
put
}
ifelse
}
forall
} def
/Plain	/Courier findfont Mcopyfont definefont pop
/Bold	/Courier-Bold findfont Mcopyfont definefont pop
/Italic /Courier-Oblique findfont Mcopyfont definefont pop
/MathPictureStart {
gsave
Mtransform
Mlmarg
Mbmarg
translate
/Mtmatrix
matrix currentmatrix
def
/Mgmatrix
matrix currentmatrix
def
} bind def
/MathPictureEnd {
grestore
} bind def
/MathSubStart {
Momatrix
Mgmatrix Mtmatrix
Mlmarg Mrmarg
Mbmarg Mtmarg
Mwidth Mheight
11 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
Mgmatrix setmatrix
13 -2 roll
moveto
Mtmatrix setmatrix
currentpoint
2 copy translate
/Mtmatrix matrix currentmatrix def
/Mlmarg 0 def
/Mrmarg 0 def
/Mbmarg 0 def
/Mtmarg 0 def
3 -1 roll
exch sub
/Mheight exch def
sub
/Mwidth exch def
} bind def
/MathSubEnd {
/Mheight exch def
/Mwidth exch def
/Mtmarg exch def
/Mbmarg exch def
/Mrmarg exch def
/Mlmarg exch def
/Mtmatrix exch def
dup setmatrix
/Mgmatrix exch def
/Momatrix exch def
} bind def
/Mdot {
moveto
0 0 rlineto
stroke
} bind def
/Mtetra {
moveto
lineto
lineto
lineto
fill
} bind def
/Metetra {
moveto
lineto
lineto
lineto
closepath
gsave
fill
grestore
0 setgray
stroke
} bind def
/Mistroke {
flattenpath
0 0 0
{
4 2 roll
pop pop
}
{
4 -1 roll
2 index
sub dup mul
4 -1 roll
2 index
sub dup mul
add sqrt
4 -1 roll
add
3 1 roll
}
{
stop
}
{
stop
}
pathforall
pop pop
currentpoint
stroke
moveto
currentdash
3 -1 roll
add
setdash
} bind def
/Mfstroke {
stroke
currentdash
pop 0
setdash
} bind def
/Mrotsboxa {
gsave
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
grestore
Msboxa
3  -1 roll
/Mtmatrix
exch def
/Mrot
0 def
} bind def
/Msboxa {
newpath
5 -1 roll
Mvboxa
pop
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Msboxa1
5 -3 roll
Msboxa1
Mboxrot
[
7 -2 roll
2 copy
[
3 1 roll
10 -1 roll
9 -1 roll
]
6 1 roll
5 -2 roll
]
} bind def
/Msboxa1 {
sub
2 div
dup
2 index
1 add
mul
3 -1 roll
-1 add
3 -1 roll
mul
} bind def
/Mvboxa	{
Mfixwid
{
Mvboxa1
}
{
dup
Mwidthcal
0 exch
{
add
}
forall
exch
Mvboxa1
4 index
7 -1 roll
add
4 -1 roll
pop
3 1 roll
}
ifelse
} bind def
/Mvboxa1 {
gsave
newpath
[ true
3 -1 roll
{
Mbbox
5 -1 roll
{
0
5 1 roll
}
{
7 -1 roll
exch sub
(m) stringwidth pop
.3 mul
sub
7 1 roll
6 -1 roll
4 -1 roll
Mmin
3 -1 roll
5 index
add
5 -1 roll
4 -1 roll
Mmax
4 -1 roll
}
ifelse
false
}
forall
{ stop } if
counttomark
1 add
4 roll
]
grestore
} bind def
/Mbbox {
1 dict begin
0 0 moveto
/temp (T) def
{	gsave
currentpoint newpath moveto
temp 0 3 -1 roll put temp
false charpath flattenpath currentpoint
pathbbox
grestore moveto lineto moveto} forall
pathbbox
newpath
end
} bind def
/Mmin {
2 copy
gt
{ exch } if
pop
} bind def
/Mmax {
2 copy
lt
{ exch } if
pop
} bind def
/Mrotshowa {
dup
/Mrot
exch def
Mrotcheck
Mtmatrix
dup
setmatrix
7 1 roll
4 index
4 index
translate
rotate
3 index
-1 mul
3 index
-1 mul
translate
/Mtmatrix
matrix
currentmatrix
def
Mgmatrix setmatrix
Mshowa
/Mtmatrix
exch def
/Mrot 0 def
} bind def
/Mshowa {
4 -2 roll
moveto
2 index
Mtmatrix setmatrix
Mvboxa
7 1 roll
Mboxout
6 -1 roll
5 -1 roll
4 -1 roll
Mshowa1
4 1 roll
Mshowa1
rmoveto
currentpoint
Mfixwid
{
Mshowax
}
{
Mshoway
}
ifelse
pop pop pop pop
Mgmatrix setmatrix
} bind def
/Mshowax {	
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
Mfixdash
{
Mfixdashp		
}
if
show
} for
} bind def
/Mfixdashp {
dup
length
1
gt
1 index
true exch
{
45
eq
and
} forall
and
{
gsave
(--)		
stringwidth pop
(-)
stringwidth pop
sub
2 div
0 rmoveto
dup
length
1 sub
{
(-)
show
}
repeat
grestore
}
if
} bind def	
/Mshoway {
3 index
Mwidthcal
5 1 roll
0 1
4 index length
-1 add
{
2 index
4 index
2 index
get
3 index
add
moveto
4 index
exch get
[
6 index
aload
length
2 add
-1 roll
{
pop
Strform
stringwidth
pop
neg 
exch
add
0 rmoveto
}
exch
kshow
cleartomark
} for
pop	
} bind def
/Mwidthcal {
[
exch
{
Mwidthcal1
}
forall
]
[
exch
dup
Maxlen
-1 add
0 1
3 -1 roll
{
[
exch
2 index
{		 
1 index	
Mget
exch
}
forall		
pop
Maxget
exch
}
for
pop
]
Mreva
} bind def
/Mreva	{
[
exch
aload
length
-1 1
{1 roll}
for
]
} bind def
/Mget	{
1 index
length
-1 add
1 index
ge
{
get
}
{
pop pop
0
}
ifelse
} bind def
/Maxlen	{
[
exch
{
length
}
forall
Maxget
} bind def
/Maxget	{
counttomark
-1 add
1 1
3 -1 roll
{
pop
Mmax
}
for
exch
pop
} bind def
/Mwidthcal1 {
[
exch
{
Strform
stringwidth
pop
}
forall
]
} bind def
/Strform {
/tem (x) def
tem 0
3 -1 roll
put
tem
} bind def
/Mshowa1 {
2 copy
add
4 1 roll
sub
mul
sub
-2 div
} bind def
/MathScale {
Mwidth
Mlmarg Mrmarg add
sub
Mheight
Mbmarg Mtmarg add
sub
0 0 moveto
1 index 0
lineto
2 copy
lineto
0 1 index
lineto
clip newpath
Mlp
translate
dup
/Mathabs
exch def
scale
/yscale exch def
/ybias exch def
/xscale exch def
/xbias exch def
/Momatrix
xscale yscale matrix scale
xbias ybias matrix translate
matrix concatmatrix def
/Mgmatrix
matrix currentmatrix
def
} bind def
/Mlp {
3 copy
Mlpfirst
{
Mnodistort
{
Mmin
dup
} if
4 index
2 index
2 index
Mlprun
11 index
11 -1 roll
10 -4 roll
Mlp1
8 index
9 -5 roll
Mlp1
4 -1 roll
and
{ exit } if
3 -1 roll
pop pop
} loop
exch
3 1 roll
7 -3 roll
pop pop pop
} bind def
/Mlpfirst {
3 -1 roll
dup length
2 copy
-2 add
get
aload
pop pop pop
4 -2 roll
-1 add
get
aload
pop pop pop
6 -1 roll
3 -1 roll
5 -1 roll
sub
div
4 1 roll
exch sub
div
} bind def
/Mlprun {
2 copy
4 index
0 get
dup
4 1 roll
Mlprun1
3 copy
8 -2 roll
9 -1 roll
{
3 copy
Mlprun1
3 copy
11 -3 roll
/gt Mlpminmax
8 3 roll
11 -3 roll
/lt Mlpminmax
8 3 roll
} forall
pop pop pop pop
3 1 roll
pop pop
aload pop
5 -1 roll
aload pop
exch
6 -1 roll
Mlprun2
8 2 roll
4 -1 roll
Mlprun2
6 2 roll
3 -1 roll
Mlprun2
4 2 roll
exch
Mlprun2
6 2 roll
} bind def
/Mlprun1 {
aload pop
exch
6 -1 roll
5 -1 roll
mul add
4 -2 roll
mul
3 -1 roll
add
} bind def
/Mlprun2 {
2 copy
add 2 div
3 1 roll
exch sub
} bind def
/Mlpminmax {
cvx
2 index
6 index
2 index
exec
{
7 -3 roll
4 -1 roll
} if
1 index
5 index
3 -1 roll
exec
{
4 1 roll
pop
5 -1 roll
aload
pop pop
4 -1 roll
aload pop
[
8 -2 roll
pop
5 -2 roll
pop
6 -2 roll
pop
5 -1 roll
]
4 1 roll
pop
}
{
pop pop pop
} ifelse
} bind def
/Mlp1 {
5 index
3 index	sub
5 index
2 index mul
1 index
le
1 index
0 le
or
dup
not
{
1 index
3 index	div
.99999 mul
8 -1 roll
pop
7 1 roll
}
if
8 -1 roll
2 div
7 -2 roll
pop sub
5 index
6 -3 roll
pop pop
mul sub
exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
outflag
1
eq
{
/outflag 0 def
/intop 0 def
/inrht 0 def
} if		
5 index
gsave
Mtmatrix setmatrix
Mvboxa pop
grestore
3 -1 roll
pop
dup
intop
gt
{
/intop
exch def
}
{ pop }
ifelse
dup
inrht
gt
{
/inrht
exch def
}
{ pop }
ifelse
pop
/inflag
1 def
} bind def
/Mouter {
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
inflag
1 eq
{
dup
0 lt
{
dup
intop
mul
neg
/yadtop
exch def
} if
dup
0 gt
{
dup
intop
mul
/yadbot
exch def
}
if
pop
dup
0 lt
{
dup
inrht
mul
neg
/xadrht
exch def
} if
dup
0 gt
{
dup
inrht
mul
/xadlft
exch def
} if
pop
/outflag 1 def
}
{ pop pop}
ifelse
/inflag 0 def
/inrht 0 def
/intop 0 def
} bind def	
/Mboxout {
outflag
1
eq
{
4 -1
roll
xadlft
leadjust
add
sub
4 1 roll
3 -1
roll
yadbot
leadjust
add
sub
3 1
roll
exch
xadrht
leadjust
add
add
exch
yadtop
leadjust
add
add
/outflag 0 def
/xadlft 0 def
/yadbot 0 def
/xadrht 0 def
/yadtop 0 def
} if
} bind def
/leadjust {
(m) stringwidth pop
.5 mul
} bind def
/Mrotcheck {
dup
90
eq
{
yadbot
/yadbot
xadrht
def	
/xadrht
yadtop
def
/yadtop
xadlft
def
/xadlft
exch
def
}
if
dup
cos
1 index
sin
Checkaux
dup
cos
1 index
sin neg
exch
Checkaux
3 1 roll
pop pop
} bind def
/Checkaux {
4 index
exch
4 index
mul
3 1 roll
mul add
4 1 roll
} bind def
/Mboxrot {
Mrot
90 eq
{
brotaux
4 2
roll
}
if
Mrot
180 eq
{
4 2
roll
brotaux
4 2
roll
brotaux
}	
if
Mrot
270 eq
{
4 2
roll
brotaux
}
if
} bind def
/brotaux {
neg
exch
neg
} bind def
/Mabswid {
Mathabs
div
setlinewidth	
} bind def
/Mabsdash {
exch
Mathabs
[
3 1 roll
exch
{
exch
dup
3 -1 roll
exch
div
exch
}
forall
pop ]
exch
setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/colorimage where
{ pop }
{
/colorimage {
3 1 roll
pop pop
5 -1 roll
mul
4 1 roll
{
currentfile
1 index
readhexstring
pop }
image
} bind def
} ifelse
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop}
repeat
} bind def
} ifelse
/setcmykcolor where
{ pop}
{ /setcmykcolor {
4 1
roll
[
4 1 
roll
]
{
1 index
sub
1
sub neg
dup
0
lt
{
pop
0
}
if
dup
1
gt
{
pop
1
}
if
exch
} forall
pop
setrgbcolor
} bind def
} ifelse

%%AspectRatio: 0.61803 
MathPictureStart
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.02381 38.095238 0.309017 0.098101 [
[ -0.001 -0.001 0 0 ]
[ 1.001 0.61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
%%Object: Graphics
[ ] 0 setdash
0 setgray
gsave
gsave
0.002 setlinewidth
0 0.30902 moveto
1 0.30902 lineto
stroke
grestore
gsave
0.002 setlinewidth
0.02381 0 moveto
0.02381 0.61803 lineto
stroke
grestore
grestore
0 0 moveto
1 0 lineto
1 0.61803 lineto
0 0.61803 lineto
closepath
clip
newpath
gsave
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.01472 moveto
0.02505 0.0148 lineto
0.02629 0.01507 lineto
0.02753 0.01551 lineto
0.02877 0.01613 lineto
0.03001 0.01693 lineto
0.03125 0.0179 lineto
0.03373 0.02037 lineto
0.03869 0.02739 lineto
0.04365 0.03712 lineto
0.05357 0.06431 lineto
0.06349 0.10091 lineto
0.10317 0.30902 lineto
0.12302 0.42164 lineto
0.13294 0.47252 lineto
0.14286 0.51712 lineto
0.15278 0.55372 lineto
0.15774 0.56857 lineto
0.1627 0.58092 lineto
0.16766 0.59065 lineto
0.17014 0.5945 lineto
0.17262 0.59766 lineto
0.1751 0.60013 lineto
0.17634 0.60111 lineto
0.17758 0.6019 lineto
0.17882 0.60252 lineto
0.18006 0.60296 lineto
0.1813 0.60323 lineto
0.18254 0.60332 lineto
0.18378 0.60323 lineto
0.18502 0.60296 lineto
0.18626 0.60252 lineto
0.1875 0.6019 lineto
0.18998 0.60013 lineto
0.19246 0.59766 lineto
0.19742 0.59065 lineto
0.20238 0.58092 lineto
0.2123 0.55372 lineto
0.22222 0.51712 lineto
0.24206 0.42164 lineto
0.2619 0.30902 lineto
0.28175 0.19639 lineto
0.29167 0.14551 lineto
0.30159 0.10091 lineto
0.31151 0.06431 lineto
0.31647 0.04947 lineto
0.32143 0.03712 lineto
0.32639 0.02739 lineto
0.32887 0.02353 lineto
0.33135 0.02037 lineto
Mistroke
0.33383 0.0179 lineto
0.33507 0.01693 lineto
0.33631 0.01613 lineto
0.33755 0.01551 lineto
0.33879 0.01507 lineto
0.34003 0.0148 lineto
0.34127 0.01472 lineto
0.34251 0.0148 lineto
0.34375 0.01507 lineto
0.34499 0.01551 lineto
0.34623 0.01613 lineto
0.34871 0.0179 lineto
0.35119 0.02037 lineto
0.35615 0.02739 lineto
0.36111 0.03712 lineto
0.37103 0.06431 lineto
0.38095 0.10091 lineto
0.42063 0.30902 lineto
0.44048 0.42164 lineto
0.4504 0.47252 lineto
0.46032 0.51712 lineto
0.47024 0.55372 lineto
0.48016 0.58092 lineto
0.48512 0.59065 lineto
0.4876 0.5945 lineto
0.49008 0.59766 lineto
0.49256 0.60013 lineto
0.4938 0.60111 lineto
0.49504 0.6019 lineto
0.49628 0.60252 lineto
0.49752 0.60296 lineto
0.49876 0.60323 lineto
0.5 0.60332 lineto
0.50124 0.60323 lineto
0.50248 0.60296 lineto
0.50372 0.60252 lineto
0.50496 0.6019 lineto
0.50744 0.60013 lineto
0.50992 0.59766 lineto
0.51488 0.59065 lineto
0.51984 0.58092 lineto
0.52976 0.55372 lineto
0.53968 0.51712 lineto
0.57937 0.30902 lineto
0.59921 0.19639 lineto
0.60913 0.14551 lineto
0.61905 0.10091 lineto
0.62897 0.06431 lineto
0.63393 0.04947 lineto
0.63889 0.03712 lineto
Mistroke
0.64385 0.02739 lineto
0.64633 0.02353 lineto
0.64881 0.02037 lineto
0.65129 0.0179 lineto
0.65253 0.01693 lineto
0.65377 0.01613 lineto
0.65501 0.01551 lineto
0.65625 0.01507 lineto
0.65749 0.0148 lineto
0.65873 0.01472 lineto
0.65997 0.0148 lineto
0.66121 0.01507 lineto
0.66245 0.01551 lineto
0.66369 0.01613 lineto
0.66617 0.0179 lineto
0.66865 0.02037 lineto
0.67361 0.02739 lineto
0.67857 0.03712 lineto
0.68849 0.06431 lineto
0.69841 0.10091 lineto
0.7381 0.30902 lineto
0.75794 0.42164 lineto
0.76786 0.47252 lineto
0.77778 0.51712 lineto
0.7877 0.55372 lineto
0.79266 0.56857 lineto
0.79762 0.58092 lineto
0.80258 0.59065 lineto
0.80506 0.5945 lineto
0.80754 0.59766 lineto
0.81002 0.60013 lineto
0.81126 0.60111 lineto
0.8125 0.6019 lineto
0.81374 0.60252 lineto
0.81498 0.60296 lineto
0.81622 0.60323 lineto
0.81746 0.60332 lineto
0.8187 0.60323 lineto
0.81994 0.60296 lineto
0.82118 0.60252 lineto
0.82242 0.6019 lineto
0.8249 0.60013 lineto
0.82738 0.59766 lineto
0.83234 0.59065 lineto
0.8373 0.58092 lineto
0.84722 0.55372 lineto
0.85714 0.51712 lineto
0.89683 0.30902 lineto
0.91667 0.19639 lineto
0.93651 0.10091 lineto
Mistroke
0.94643 0.06431 lineto
0.95139 0.04947 lineto
0.95635 0.03712 lineto
0.96131 0.02739 lineto
0.96379 0.02353 lineto
0.96627 0.02037 lineto
0.96875 0.0179 lineto
0.96999 0.01693 lineto
0.97123 0.01613 lineto
0.97247 0.01551 lineto
0.97371 0.01507 lineto
0.97495 0.0148 lineto
0.97619 0.01472 lineto
Mfstroke
grestore
grestore
grestore
gsave
gsave
gsave
0.004 setlinewidth
0.02381 0.30902 moveto
0.04365 0.36533 lineto
0.06349 0.41307 lineto
0.07341 0.43137 lineto
0.07837 0.43879 lineto
0.08333 0.44497 lineto
0.08829 0.44983 lineto
0.09077 0.45176 lineto
0.09325 0.45334 lineto
0.09573 0.45458 lineto
0.09697 0.45506 lineto
0.09821 0.45546 lineto
0.09945 0.45577 lineto
0.10069 0.45599 lineto
0.10193 0.45612 lineto
0.10317 0.45617 lineto
0.10441 0.45612 lineto
0.10565 0.45599 lineto
0.10689 0.45577 lineto
0.10813 0.45546 lineto
0.10937 0.45506 lineto
0.11062 0.45458 lineto
0.1131 0.45334 lineto
0.11806 0.44983 lineto
0.12302 0.44497 lineto
0.13294 0.43137 lineto
0.14286 0.41307 lineto
0.18254 0.30902 lineto
0.20238 0.2527 lineto
0.22222 0.20497 lineto
0.23214 0.18667 lineto
0.2371 0.17924 lineto
0.24206 0.17307 lineto
0.24702 0.1682 lineto
0.2495 0.16628 lineto
0.25198 0.16469 lineto
0.25446 0.16346 lineto
0.2557 0.16297 lineto
0.25694 0.16257 lineto
0.25818 0.16226 lineto
0.25942 0.16204 lineto
0.26066 0.16191 lineto
0.2619 0.16187 lineto
0.26314 0.16191 lineto
0.26438 0.16204 lineto
0.26562 0.16226 lineto
0.26687 0.16257 lineto
0.26935 0.16346 lineto
0.27183 0.16469 lineto
0.27679 0.1682 lineto
Mistroke
0.28175 0.17307 lineto
0.29167 0.18667 lineto
0.30159 0.20497 lineto
0.34127 0.30902 lineto
0.36111 0.36533 lineto
0.37103 0.39077 lineto
0.38095 0.41307 lineto
0.39087 0.43137 lineto
0.39583 0.43879 lineto
0.40079 0.44497 lineto
0.40575 0.44983 lineto
0.40823 0.45176 lineto
0.41071 0.45334 lineto
0.41319 0.45458 lineto
0.41443 0.45506 lineto
0.41567 0.45546 lineto
0.41691 0.45577 lineto
0.41815 0.45599 lineto
0.41939 0.45612 lineto
0.42063 0.45617 lineto
0.42187 0.45612 lineto
0.42312 0.45599 lineto
0.42436 0.45577 lineto
0.4256 0.45546 lineto
0.42808 0.45458 lineto
0.43056 0.45334 lineto
0.43552 0.44983 lineto
0.44048 0.44497 lineto
0.4504 0.43137 lineto
0.46032 0.41307 lineto
0.48016 0.36533 lineto
0.5 0.30902 lineto
0.51984 0.2527 lineto
0.52976 0.22726 lineto
0.53968 0.20497 lineto
0.5496 0.18667 lineto
0.55456 0.17924 lineto
0.55952 0.17307 lineto
0.56448 0.1682 lineto
0.56696 0.16628 lineto
0.56944 0.16469 lineto
0.57192 0.16346 lineto
0.57316 0.16297 lineto
0.5744 0.16257 lineto
0.57564 0.16226 lineto
0.57688 0.16204 lineto
0.57813 0.16191 lineto
0.57937 0.16187 lineto
0.58061 0.16191 lineto
0.58185 0.16204 lineto
Mistroke
0.58309 0.16226 lineto
0.58433 0.16257 lineto
0.58681 0.16346 lineto
0.58929 0.16469 lineto
0.59425 0.1682 lineto
0.59921 0.17307 lineto
0.60913 0.18667 lineto
0.61905 0.20497 lineto
0.65873 0.30902 lineto
0.67857 0.36533 lineto
0.68849 0.39077 lineto
0.69841 0.41307 lineto
0.70833 0.43137 lineto
0.71329 0.43879 lineto
0.71825 0.44497 lineto
0.72321 0.44983 lineto
0.72569 0.45176 lineto
0.72817 0.45334 lineto
0.73065 0.45458 lineto
0.73189 0.45506 lineto
0.73313 0.45546 lineto
0.73437 0.45577 lineto
0.73562 0.45599 lineto
0.73686 0.45612 lineto
0.7381 0.45617 lineto
0.73934 0.45612 lineto
0.74058 0.45599 lineto
0.74182 0.45577 lineto
0.74306 0.45546 lineto
0.74554 0.45458 lineto
0.74802 0.45334 lineto
0.75298 0.44983 lineto
0.75794 0.44497 lineto
0.76786 0.43137 lineto
0.77778 0.41307 lineto
0.81746 0.30902 lineto
0.8373 0.2527 lineto
0.84722 0.22726 lineto
0.85714 0.20497 lineto
0.86706 0.18667 lineto
0.87202 0.17924 lineto
0.87698 0.17307 lineto
0.88194 0.1682 lineto
0.88442 0.16628 lineto
0.8869 0.16469 lineto
0.88938 0.16346 lineto
0.89062 0.16297 lineto
0.89187 0.16257 lineto
0.89311 0.16226 lineto
0.89435 0.16204 lineto
Mistroke
0.89559 0.16191 lineto
0.89683 0.16187 lineto
0.89807 0.16191 lineto
0.89931 0.16204 lineto
0.90055 0.16226 lineto
0.90179 0.16257 lineto
0.90427 0.16346 lineto
0.90675 0.16469 lineto
0.91171 0.1682 lineto
0.91667 0.17307 lineto
0.92659 0.18667 lineto
0.93651 0.20497 lineto
0.97619 0.30902 lineto
Mfstroke
grestore
grestore
grestore
grestore
% End of Graphics
MathPictureEnd
end
showpage
%%EndFile
end end epssave restore
grestore
grestore
/txtdraw true def
/txlndraw true def
(Voltage ) [13.848 0 14.664001 0 6.671997 0 7.991997 0 13.104004 0 14.904007 0 13.343994 0 0 0] 73 694 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 114 -188] dotx
(Current ) [17.328003 0 14.664001 0 9.335999 0 9.335999 0 13.343994 0 14.664001 0 7.992004 0 0 0] 175 708 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 187 -203] dotx
/crlinw 2.1 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 28 0 97 476 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 28 0 97 407 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 2.5 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -43 -37 252 498 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 27 -86 407 497 1 0 0 1 0 0 sc6mt astore ssl
(I) [0 0] 32 652 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 25 -248] dotx
/txtdraw true def
/txlndraw true def
(P ) [16.007999 0 0 0] 38.672001 642.400024 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 25 -248] dotx
/txtdraw true def
/txlndraw true def
(V) [0 0] 31 603 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -131] dotx
/txtdraw true def
/txlndraw true def
(P ) [16.007999 0 0 0] 47.007999 593.400024 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 19 -131] dotx
/txtdraw true def
/txlndraw true def
(t ) [7.992004 0 0 0] 125 707 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 454 -372] dotx
(t) [0 0] 256 717 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 109 -547] dotx
/txtdraw true def
/txlndraw true def
(1 ) [13.343994 0 0 0] 263.992004 707.400024 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 109 -547] dotx
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 1 -143 373 339 1 0 0 1 0 0 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(0 ) [13.344002 0 0 0] 86 334 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 0 -4] dotx
(0 ) [13.344002 0 0 0] 97 175 /Helvetica-Bold [ 24 1 mul 0 0 24 0 0 ] [1 0 0 1 9 -5] dotx
end
grestore
end
grestore
grestore
%%Trailer
%%DocumentFonts: Helvetica-Bold
