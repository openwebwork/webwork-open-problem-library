%!PS-Adobe-2.0 EPSF-2.0
%%Title: beam.create
%%Creator: Create
%%CreationDate: Wed Jul 31 09:46:01 1996
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 159 14 524 624
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^UliHY(d
% PZ/,ZN]XS2YTK"Ce'eciKVEi1NXtAnM*9Pq3Ij@&Bok5bJ*B#c&e4TJ$?P2&O3</(Z%<^'4i
% CJ8A?gB[[TGi3f]A+_\onSP(o9R6`U^N:IR#9TY'O!-n(d.>T@fr_fn`6$#[.(boY]BJP9LQ
% o&I&d(/A;N)>H9RW.uEPN%0@Aa"dJ.[6l/9U.#:WY*>+=:(GARPfF-^o"WSl-ABI85lAo4pi
% AQX;pd!i,n(T-,ea/=0?P<a/oIe;kRk*!h$[V.G3VMK*`uGb22C8pLMN$9g_,S!<P"`/8\"/
% !!0Ij!MGrIkm9&`(]XV6aTI8/Z:Q>UA9($[hcPTK=LlD;h1i\0"eBT4&8)u'bqWjuF1m,Q*<
% ;jNQkjVqH$;u-moVPMJEZer$@Hl^<Q]acR3KFr!h(L0@0HFJ8qIF/pn.bXn.:C-i@Ru/L;!+
% h<ei2WLmEk;-$Q)?bPCb"QQE$SU5B#:'k8BAKP*uDA`7<oN]_%^^lS7*?qLDeieZZ'9+%U?"
% :^eh72^?s_:h^S!>,<J&9t*DGgK!H!L>AGa5r)nJP"jgKTTG0+O:$QL]L`$!5f7UFKl&eEmS
% 5!$s\JE`Z/^:C;q31cp<F(CiFBpZ#kML"pe/gd=rKVYd$P;$?4B^(il._"q<7cHYp33E3$dU
% @mp2`Xi0Wm.ml)A:]hMH'NBf+mCl50*G*_^D7*l0&H`hg?qU\?FPq.kWs%Gp!tF$4/40h(i*
% *>n38bo6*]$330b#o]>ju54IsaW%$/7^t`<dUp"0T\%JSQ16f"m([^m8Eq*#T\W#-MIk$A'-
% &:ts)`%T^G3-9+\%eco7Ejsb7_VBr70AX7"AMScL*B%G^Z(C2p>/oBcZ47_#CT0XM0W0%/pa
% s;U..tG"T!T9iEMeRSXop<XOBslK(HE"=1?$cg"+EQ*s2P+OX#c+([!m().9"s+(-^>es@3E
% #ZO?`kAj,KA]HVaT!WI_+kgXa4.p?%<b*92;GMjFn1foHNOp3Dl=3cpQS+-;<c-<N-V!23mc
% 3n1##4_iNG.mMYDBm/d=f5oYR]E#A&M0kklGd)N;fhe68mg?pk\H1P)@?k]%-iY@S;4C<1i6
% oBM]'-;D4e?m!pg!P3LDI6_/l;<.S`OIH!%J-1;6J;Q-Xr9r/dqd`]Pt_!+ts!l\S+XOGn6A
% 1#JDl)LC,_#!"arR#;.^'#9=F^O'"e0[)?Vh\3L6QKJ3Z6=@*<](kaoB+UoP&!Y"2+5nJ($,
% >npOKdn'1$X\-?a7Taeql().ij+f8`(CGk(]YN=,D[q;`;g,+U((S^XCjsP;.0lb*/_Us$#3
% 3T?jME8_R%;0XU'U1ZefYkQ^g.r%oaV(T8M&0UN(r1&?#k1,R7Gj!p0th!(u0Wgh*L]oW0JA
% TE5*si1rud/J'>7$7a$s!Vnl1O<Z%3l,o7%X=4cCrUULSXF^g\;Gr0K$rZ/H<5S5Yn3Ns?Jl
% Qt3J6(N$HM!-WLo?&q6_]E`\1Cl-cs[Z*pl]K<Z5kVN$,0ind[5aj*\tEMTg3";Q*-oU1qc;
% oC.8_rJQu,3YNMH_6LpW/$)dNLH,*)hPEWb6gH#FfM!uMeT$NoKoBI\r9qhocf[LBq;/)e;r
% c3a?b+1OMM9^d?ns#LIc\7f*cah757.hhS7B^u0N<\<833Z")4UOri%@!C"7,U?]QVN7'dQ<
% TP-qbf]atD)JU*Z>/%+W9\D(7=Q3TXs?I7h;:Q;aaUga#`k)Rk0M-`bPBP=/jTe7m3+WiDho
% no>TR/6G?/=tL@g/*YTW)DnNA:#ANb)'6Gf2+pZ_Vpq@X<k-j]Y5>l2f?dn?]B6MX5OE5PM$
% [:;$F[$C$]ej0lSNl^<189Bk[8-CSXN;LRs;.EAM5R\Xr:,\IjJ$$eToY]L1drj'qK8<gXak
% DFg_%7W'5(p-:Cr^[^=lV3&QUucK`ue]KP@D)%'6K-?a;N@]W7cMc&)0:U3O!aucBA3546mU
% dIRXG.j*g5kK)rhDHlh@4L,3d5&9.XQi9g)$jh@i1kUE03GD>f$>r_+5qcgE1oj.rjl+;=">
% q7RHq8)EgOK!"K?uolegM:<Gm$e"GH<'=T(;2_T$FDH"jkKf5@sd%g?rb7r6uoA,!p05_EuX
% >[!Ip3)ojak#Ba6>T9Fs&DLL\JU?,-l14V>59;?k6;(kJ^(e[*5&Q*hb[^`=)8\b4nlDeB@Z
% `:q`si4ojq<a^,SV(IUt(ZkpC$+#O*Af@VVtdfM2q(U9e$GJSmQj"[Q$(9PQ^Ic'W_@rAd4p
% )Grmce@d7=@[^O3=I1n`E127't+OL=o/sbOVW1l^A&6JP%WA2(K5&WL(pE[)<,Prg*DU[%4#
% 3of%/`0SnkgcZ>YGGqr>[%^obVBBE>g#7nNUF*f^nu..'C9<D2nIY'VXH:,bu>K0Q>b.L1M`
% n$h@2W9^p6/3[WgMD7Op0``id7\gUYI0Q[@%3mdp%E]l*e"g>-]<B.lt"D!JmHZ`FWqPgrFp
% quZfOiD"NoB,p+^LY?OEr$TDFD;0@MRn<F)24C*%Di88^fo+CjP,H!/%XZ76mi;.l\#nk&P8
% (VXpJ.Ca&_iV\pu:5noZSCMD-hS6\_P`G?J3QiYBp*&^C,@$"$p(b(]!.n^U;:,h/P6c.CMX
% jp<Mo>FaK#]go_u?>q:AGY[^r&A>cuY&O'@NWdX.p:\DUC%/48$("RL,HEG*aCd2iCg.\]\P
% M]p&\P!sL-#`\&nLa:,k1&^'eo]pWY&45PFRibMW\Q57>PFTak7Nce42[7Scr1eDk]ZmP5M^
% FNA(<'$QhT2i^Z`pT?/c;&`.`$B<lW0bpN_hthQujOACk/_J7j6!@:+8-B-P;*Ac?nC2tm8d
% \G)q7Vi=e3h)9&?q^;uaO<H0(F!i![k1B:ul+5^?@it<FpO;WIIrVr/KiW[o7t/gOIq;\uB,
% 2Q\pOB;XAZn%CS/6Bm"uZa#GP>0fT#PXQ7t"]"F9a4Fm8nGbB7\)n#ach:R/dA@!"@fe!`hU
% >bk>UW[t#Q6E9JZ?DZUE914qGtJlL?CWWmrA'lHTq$rV(Zs2KTs8:$=uE6;a8??8(E8;)OAC
% e(FULN5D?0E<aCK0gC\2Y_r`GB`hkK2l#j$K<p.(^QO=L-sU4=,)B=eUj1h"(\?X2KFGEpO#
% lKHQ^sn0(L?13/?mC+a-t=&1:fn@L,?]*DnO+<H/c/'**bp#QOi)x
% EndEmbeddedGraphics N 2573 a0d E f4 S 4be16 R ddeaf334
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
159 14 365 610 rectclip
0 nxsetgray
0 0 0.319192 1 10 SU
gsave
[1 0 0 1 160 16] concat
0 0 2 1 10 SU
48 192 T
N
2 L
0 nxsetgray
280 280 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
64 192 T
N
2 L
0 nxsetgray
288 288 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
56 200 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
64 192 T
N
2 L
0 nxsetgray
288 288 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
72 216 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
88 232 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
104 248 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
120 264 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
136 280 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
152 296 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
168 312 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
184 328 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
200 344 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
216 360 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
232 376 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
248 392 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
264 408 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
280 424 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
312 456 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
296 440 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
328 472 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
336 480 T
N
2 L
0 nxsetgray
16 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
72 200 T
N
2 L
0 nxsetgray
0 -16 0 16 line
0 0 T
grestore
0 0 2 1 10 SU
88 216 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
104 232 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
120 248 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
248 376 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
312 440 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
264 392 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
232 360 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
216 344 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
200 328 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
184 312 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
168 296 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
152 280 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
136 264 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
280 408 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
328 456 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
296 424 T
N
2 L
0 nxsetgray
0 16 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 1 -29 97] concat
N
1 nxsetgray
N
84 84 84 0 45 arc
f
1 L
0 nxsetgray
N
84 84 84 0 45 arc
s
0 0 T
grestore
0 0 0 1 10 SU
gsave
/Symbol findfont 12 scalefont [1 0 0 -1 0 0] makefont
155
exch
defineuserobject
155 execuserobject setfont
93 206.734741 T
3 flipV
8.5 1.5 T
2.12795 0.034268 S
-3.5 3 T
N 0 0 m
1 nxsetgray
0 0 m
(b) show
0 0 T
grestore
grestore
0 0 2 1 10 SU
326 470 T
N
2 L
0 nxsetgray
9 9 0 0 line
0 0 T
grestore
0 0 30 1 10 SU
38 38 T
N
30 L
0.245506 nxsetgray
0 531 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
55 183 T
N
2 L
0 nxsetgray
9 9 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
56 182 T
N
2 L
0 nxsetgray
0 18 0 0 line
0 0 T
grestore
0 0 7 1 10 SU
56 182 T
N
7 L
0 nxsetgray
0 27 0 0 line
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-160 -16 translate
gsave
/Symbol findfont 18 scalefont [1 0 0 -1 0 0] makefont
285
exch
defineuserobject
285 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 473] concat
285 execuserobject setfont
0 nxsetgray
300 243 moveto (f) show
grestore
grestore
0 0 1 1 10 SU
[4] 0 setdash
60 182 T
N
1 L
0 nxsetgray
203 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
55 479 T
N
2 L
0 nxsetgray
280 0 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
53 470 T
N
3 L
0 nxsetgray
0 18 0 0 line
0 0 T
grestore
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Symbol
