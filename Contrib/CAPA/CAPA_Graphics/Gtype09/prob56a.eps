%!PS-Adobe-2.0 EPSF-2.0
%%Title: Curzon6.5.create
%%Creator: Create
%%CreationDate: Fri Feb 14 12:12:07 1997
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 130 355 463 626
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0oZ0""LcAOdY/m="&
% Qk]Ti4F@Rm8M+:dUQqacIYHJc^1b`f/<?!'%JBEPm;-PUb+[Qq40lPVut&Yk^%#:7X'Bk6*i
% COjM_\4Er9!&MoCc3`HfZ!>,D:>F@<b`a)-e/sS80gn*1\2o]#E6JgW$Ym#ji(m#tpE#`#$%
% *FiDJB77?F-j::VU0tu_FE_2G-cuW6eZWo(i.m?Kd,^)(_D$.LadDbXb&?M_Up<45dTSkO?k
% #@>VP6+^i50,VQ2]^LurfNVho;=ZATPWqHa@\V2BjVFh>,]/&Odc))QBT0C;)\N#XQgeE?sC
% bSrKNaE1a7dlE0#$j\'@*=OkXQel41^m>-5r:pSjJ5-gA!Y$p7+@Ce<`Gbnf0g#^D%Q<)R!t
% HH`J]AaA&9NXDriu!J*7AOj!sgttB*Ma[BF#Xb9M"=jN-(R57i6O4aQ&K:%92(#`-"ShDdh%
% 5,B6>A1!l3nPi2fa$M:$B%mDCl'gZOb"p.h)_LYc_DV0)3<a0_><ELB.J]AU@J3ZRAAgfpc,
% aE&-;@G+eUd,SkJ4)mEDOeO4)*!nh5SGl,EQ"#ZTTR52R8S.BVdY6>C8R4pJcJD5R5"sU1[G
% +[+Ac%RkTJ)'6ccB/<7/ZQ%K'b<Ys&&MKMV[L!'mm97S=!ia&[!C&C*TMD7&(.'nEBSA<MKS
% &WHf"+Tor^DBRf?&I9U3">YT5U^U/?]g%JHCq%eM].G07>c[3ecYgpE,liTR^`^pS!!E<*PS
% -YXEr[=;.fL!R5cbrp&V.Ri$6T>TcD$QCa_;;O!<iYBqI:FrKKF(qiqhU"`>/]28g#fi6\k_
% PN,^WRL)<gG!/;%o#pqqqRgB''"!C8K)+6'3&24NE8cm!8Ja3iK"JH,j&.B8m)/%I;ckg041
% $TZdEBsRnJ]OB_CgjgWQX"sp2%uO6p&.s"Pm2-Y$]$7O(hT^$0%gZ1FblIp1Ro66B.nor)@5
% iCcl`cILA-:7S')@q$i8D(*t<J\9q-"0l,K32h(>O0EnG*Hh/nb1(EV\i8ZKCdNX].CGi]B:
% +:.9fn(8&i6%/q!m4gRE%Q%/[?\!5,kQ6>q:``qeVo/#_%6(Ln4ClknM#N7apU<;?)VP1D%6
% 38^,4mnJY[IJ?ZHeSA,_m8fkXJ;[d:RtHOrnC,8Du"\Ad4Wu,rLO,e$Df6#kA0L3U'.AqGKV
% 8pRUdn:G^*[cgmM@KD*q?4uSdZ%-V`C)B:.kg:L2Ud.=pgKF`CP4'd\tpn5gW$@`Gp+bFaU4
% U#B;1%rMWree`\s%ruNWb^"?#\_"4fEata>bI.."@44LBo<^:;?AYq5WVH8K2n?M#dXZ2mM+
% !#e00lu<2cD"XJ^I:OhhE>k^j_3kQWf8OSj4a4W-TT5!f)V%!$m>).)hrK;?_Bm#qMudLV60
% b?kj^pqIMSOb*b4OV\TH7L_u4JO-lB)(150-)n/7D1&)`Xb7uRBk`6D/>7;b\46U7VKnCn*=
% QLM]uSb:5r%li%Sm<nnO:lRkY#9=fS;l;]FTA;FCP283Q:HKnqs:Y+<"1(5VPr'JZ`f3).b6
% _/L&<&(ORSL2`RWnC1`L?"I#4oA0s.48LA=r':`/\-_&c-ChQ`d);+)[0u0neIgX\u$?`:>b
% Uk+tB[e@A'oG;u5mG$l)BJ7="KufQ'=[HL*q!Ee+GaK6g>\I5E,%(UeOsL<-j;:u;7B7&_AO
% O'6npAlY9b`.'gJWu%NI3ZI-li!"l%TWZ@u:k+fqKbWeT,50T.7\+T_tcfu<lOMEs3:We6[R
% <CKA4!2os./6`;&`^PEIkq$HaA&ZfX2UVSie.S('5qiKD$nTof#D59X/\K(04,C\LFmUUXG3
% Ua*EpKV\'.Qki?rWpOQ)TBq=Xp.,#V[gF&Q\R@<hm(QX((b&;'WkcC%[N/TN/*T@r#i.YhI[
% Bp'5^4Qa?+[Z3'5)W-nh#@/V6NM\1p[Ke4`6aO!gi<T138G\KhVYmOK9<YUtP.9D5O<<.Pm>
% bWh8;3ST@VEU9QjM1e4od/@id?^h=`N?K=&-N%3p9/7KlWYO%?e?_"Wm&`R?@<Aji!+A/fHo
% c)J1u^\pgOe&+@^Q6!)o<6e>>2/0Xj#GYkGYP_XSr>Hr"NbW(N>TZ0eQ@SQ/nI!^OO$5f'Rm
% jb0t;'u@^dn9s>Sis.q%_Tn]kKopaklPAl$7?^,0(I3cXTSHArTh#6`&-Pt3MGuJ>!%08dJP
% ZIN%KQi')$8`H"JF@SgO^2RI2oB`"uQ[b!!(#2!GFdrA#D@7=`&<Zj+IkN)XY>Z&-ft3%*W2
% /6s'R$][d&`9EPP9Ao#jbrFC]fTE*LoKst#HLfV:uAIccs9$fAK0!kXbJP!`Z'%!qKe=bBBB
% nMb8L5JTJ^s-&=F.sMeJ3.g&cd(7NMk/sB63hh`KuOt(Z0L4Y/XkFR/h&8$d>CLk!X6c7oDk
% tc!O%Jj)\iWFW)H"I*AdH>W<Rl(>!7dG5Dp:VW5YnI@#JD'Rh3R,J=Fq*Lctrlg!9#P`&F/;
% 5#WE?g%L3/%D?V-FW1><p3=(P+b<3QA($T,_(R-@L)k*Gh=-^hPso!I;A0&f6ecf8qOK3A(d
% [)m/pJ:f4U8i)@KUL[=<OahJ3[cM!#fg":&up5BieMOJLH3p2QlE_CR2XVGB$Hn)@/k6+:qX
% g3\UPaJU,jp&0_[:+F^P";b%_("h7^Tf@o>M*G#3N=MQ%eJI_oL2BAMo^^i&`orV_0lYFbSc
% BDk?-4D%,Ed/(kEjB9Y\60>^AjZPT&G>[=X6M=?p>.UNhu7@jliA7+*obt0!+;Je1T*12+Ug
% (Cgq@;7?9Q:^FphqWQtDcU6.>o)kA+iQd/Fl(E$^QN@TUDIDQ_%5=Wd\K4<WW5G*W,)hd4hp
% TBh9([\DM,!3\H;'2PjMUgnq."V>)R8mjnY#LS9I/4&->QXod/HN`8Rq)/TncuX2'$\H.og#
% <^PAcoG!"aSH!@c0\>LFtlSH'tsM%,b`YE-CseB>SV2,q*mf`\$4PES[?lk%AAka'\3;Fs3c
% 8mcS1o(C9dIB58:hCZflQB61er$3:]ck6HE8VJ7M6#"Sb!VD&9_ci[]!$lR[t9ct?IOp5QL#
% '=erDQnCt;#j>KKj_E&#iK<Y&8-8"!&+ra-tliE7t+b:K%T45172bT-$EgcL4QR`D$Yfi7Y!
% iS!(I6H84[#R;[F"s1q6?g#N02j&8-O/L.EG0b,']1LfJQlI!,dN/bjX<QnX(&M1I@;0Rs:V
% pi1K-Hd5'9H?Y%[LPXM]#n2nP[nmA5i+DItG2NoGGjpHVQ&.\YENmN(T(m,p3.kbNMh065!I
% tES=BE^(KMqN$L)>jE<XB;PLm9(_\p/C^=E\>4%00dma!co&ZAC;\N;\ou3jt"*(hYj"NmW*
% .e+e9;AW:gLIBoed\6(Qfx
% EndEmbeddedGraphics N 2723 aa3 E 5d S 4a719 R 22642f40
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
<<
/PaintType 1 /PatternType 1 /TilingType 1
/BBox [0.000000 0.000000 36.250000 23.000000]
/XStep 24.754715 /YStep 21.655914
/PaintProc {
begin
0 0 500 500 rectclip
0 0 36.25 23 rectclip
0 0 0.15 1 10 SU
[1 0 0 -1 -0.350367 22.077084] concat
[1.338235 0 0 1.027778 0.100367 0.077084] concat
N
0.606891 0.13596 0.096759 nxsetrgbcolor
0 0 17 9 rectfill
0.15 L
0 nxsetgray
0 0 17 9 rectstroke
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 12.649632 11.583333] concat
[1.338235 0 0 1.111111 0.100368 0.083333] concat
N
0.606891 0.13596 0.096759 nxsetrgbcolor
0 0 17 9 rectfill
0.15 L
0 nxsetgray
0 0 17 9 rectstroke
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 -11.099264 11.570728] concat
[1.323529 0 0 1.109722 0.099264 0.083229] concat
N
0.606891 0.13596 0.096759 nxsetrgbcolor
0 0 17 9 rectfill
0.15 L
0 nxsetgray
0 0 17 9 rectstroke
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 23.649632 22.058331] concat
[1.338235 0 0 1.027778 0.100368 0.077084] concat
N
0.606891 0.13596 0.096759 nxsetrgbcolor
0 0 17 9 rectfill
0.15 L
0 nxsetgray
0 0 17 9 rectstroke
0 0 T
grestore
end
}
>>
matrix  makepattern /staggered_bricks exch def
<<
/PaintType 1 /PatternType 1 /TilingType 1
/BBox [0.000000 0.000000 10.000000 9.000000]
/XStep 6.000000 /YStep 6.000000
/PaintProc {
begin
gsave
0 0 500 500 rectclip
0 0 10 9 rectclip
0 0 0.15 1 10 SU
[1 0 0 -1 2.924999 6.229165] concat
[1 0 0 0.833333 0.075001 0.062498] concat
N
0.425275 0.17011 0.086718 nxsetrgbcolor
0 0 4 4 rectfill
0.15 L
0 nxsetgray
0 0 4 4 rectstroke
0 0 T
grestore
grestore
end
}
>>
matrix  makepattern /Small_Squares exch def
%%EndSetup
gsave
130 355 333 271 rectclip
0 0 0.15 1 10 SU
240 384 T
N
0.15 L
0 nxsetgray
144 -216 0 216 line
0 0 T
grestore
0 0 0.15 1 10 SU
240 480 T
N
0.15 L
0 nxsetgray
0 120 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
336 384 T
N
2 L
0 nxsetgray
48 -72 0 72 line
123.6884 0 72 arrow
0 0 T
grestore
0 0 2 1 10 SU
403 377 T
N
2 L
0 nxsetgray
48 0 0 0 line
0 48 0 arrow
0 0 T
grestore
0 0 1 1 10 SU
[4] 0 setdash
[1 0 0 -1 143 697] concat
[1 0 0 -1 1 193] concat
N
1 L
0 nxsetgray
N
96 96 96 -90 -56.309933 arc
s
33.690067 149.251221 16.123171 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
[1 0 0 -1 245 571] concat
gsave
/Symbol findfont 18 scalefont [1 0 0 -1 0 0] makefont
195
exch
defineuserobject
195 execuserobject setfont
6 7.5 T
-5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(q) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 378 390] concat
[1 0 0 1 1 1] concat
N
gsave N
Small_Squares setpattern
gsave
24 24 0 0 oval fill
grestore
grestore
0.15 L
0 nxsetgray
gsave
24 24 0 0 oval 0.041667 0.041667 S s
grestore
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 131 625] concat
[1 0 -1 1.016667 25 0.8] concat
N
gsave N
staggered_bricks setpattern
0 0 192 24 rectfill
grestore
0.15 L
0 nxsetgray
0 0 192 24 rectstroke
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 418 393] concat
gsave
/Times-BoldItalic findfont 14 scalefont [1 0 0 -1 0 0] makefont
320
exch
defineuserobject
320 execuserobject setfont
6 6 T
-5 5 T
N 0 0 m
0 nxsetgray
0 0 m
(F) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 346 417] concat
gsave
320 execuserobject setfont
6 6 T
-4.5 5 T
N 0 0 m
0 nxsetgray
0 0 m
(T) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 368 366] concat
gsave
320 execuserobject setfont
7 4.5 T
-5.5 3 T
N 0 0 m
0 nxsetgray
0 0 m
(m) show
0 0 T
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-BoldItalic
%%+ Symbol
