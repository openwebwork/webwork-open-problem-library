%!PS-Adobe-2.0 EPSF-2.0
%%Title: VelTime1a.create
%%Creator: Create
%%CreationDate: Thu Oct 10 09:20:35 1996
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 33 129 580 651
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^UliHY(d
% PZ/,ZN]XS2YTK"Ce'eciKVEi1NXtAnM*9PmS'H@&Bn@&V1,e#R!IZTE>6$2&O3</(Z%<^'4i
% CJ8A?gB[[TGi3f]A+_\onSP(o9R6e>X*;C+c9TY'O!-n(d.>T@fr_fo[5]_hl*&2(aBJP9LQ
% o&I&d(/A;N)>H9RW.uEPN%0@Aa"dJ.[6l/9Iqt'Ortl=J3^=?BKBq;GM5c*c(:biQI?sNR54
% OcI!@>aiPaiP-,ea/=0?P:pT=Wa2@Z_2b2NoX.G3VMK*`uGb22C8!;bcF?(.X>)?BtO']<M1
% C")n^&:bO;Lb\'gH30$[`de%gnphl>*RKHNAa#7G)01*o;\N!?_+#J8F]&MHR1-BY.\R7_81
% mgQ1)2/:lpd:Z_Z9aB>eq"Rgi:FfB,G+(l'Pa[UBi:gG9riZ6nfof;8kad"G-p[kYZ&c5GYs
% dhJf;&OPbL&R"F4G57V;`@&G^B;]>%k0n>+\/=FU"0a&]>D'B*jS<C]*k@>0Q!W_8PE<bB7'
% h&s#L_WoH@H\#f<58eJ`\EpBTeRP@JImS@_.fbf&?5r4E9^ip&Y*OPM&2]?_T<dfA-*oC#uD
% 3:CI8hJ"*p/>OND@c!5LlC_o,[;E5HHI,BQ6jLR`CTBL/;ZAbpJCOCcZB5`n)Kg"dbr(_DQY
% K;?:W,XVu<JcS-4)ibu`"Ar`q=_aof!*t&A-C"T+B-.Fn+gBH33/l7='h'hH`"5L:OTcm1YY
% h#8!lU@S;D-L-0GS</;8sReDN[sG0E`$3D;^@!,I0;'FffW,VWDWTdoq)L?.*TEEfO]S.7GB
% :"d1Wdk#j]H]ioI@V1/?1&qGL3<dU].qf^C1"<ih2EZ-@,bZi94npIdf4=XERO@BSt/[O2Sp
% G4m:'7J`&88i3C^.a=X1muT#B%VZ61KXt7KSWk5aarLdpW>=I]lVCZ53l_9BQpNNc=$Mh#Tm
% (V4YPXbhMX=[V?FtaJUaFD38l%d+Br`lNQ4$2^PNE1TOgn/jOh:ST']d"b9kJNiSBgSk=<9'
% TBQ(3m53<M:L/*q%i-3j+A`1PHZ$0rm'?$'k'f5W6_^usG&\ZCL`F?kGC7g%@B$neBU.".l$
% GqV\+G8Rhn!Xl!.Y]@Vjjl8cUQjAdEKg8Xia)QG<&$VqB0aHB"1WS7[)_3QH,j!2(a=*93pK
% Nje/]c/eF*E_"J+[0,c#'ET*,:phogfo9CtMh$J`cVGb(s+A[XZTc_!2W&Np39n^tGU%MXqK
% ,&RUKeF)Y>o'A#kE)m%3l@Zph%kef^2Io2gRo,FpSFaT:4K2]N9Wr94],1Q!j]'r!+>;H#HW
% ksNf.9RBm)ne@;ADEiDt'KJtt[<!>(/[(Fe9-"<e2j'CU04&-hYW-HHRD7B>/[QWAY$YsJM3
% )-@:U2?[)Xb[La#"ii_01.&K*!j]X0!+&LB44<PD>21>)pXd2Fr[s:%,363Cabt92,8HerA0
% `N?!a#`eP$eEC-:PsH:P,l'YTSNH.oqsoWNp"UK9.#k+IcX:J<k@@()1\C/LlM%O+3st+E8a
% P'(+Tf4>8*;*B=E7!.gQ`KVm.m)7m*^U7&ju#/7+ZTMNSHRG1-k2d%TT8h;(u7sKRjdYY[Vh
% +3S6'OMr+f.B7"EKFi_U]CN.#tNDG"j)/34oR0-.H&&K!i;6L"u1`Jbi8q\&:k*T!S"LS@M&
% !ILEh=A$Y8`L(kZeI4f7b%d96(76&925;n:&3M:)f<R)#d/OT5l:-kE(-$7IAY!85"/!(U_D
% ,`JQOkr>h8[rZ18Bpc67d5.WT)1X$K&;Wgb1k*nQ=rG47-8\UnN?bg!.KUaF0pEdlY.2_-">
% p0SP^jEWi.NC!oEbbf8/8.$JImVKLd4X&'m0-*?"'VR.b]ib&H$<r^?)-t!.uA4_FKhaEELT
% @9<lcXloP5,4]N&$&AA%E*ZT2q,ok(:SD_G\E7\;:E.S(FWe>R2^^1*^_?%YBXZF*F!DWoN'
% :gH<"ZS4;::/qUi@ktI<ksPW+G.4*3!6&[@5UeBTtd<5'GqB4-p97DCPOEC,c3?(-giOCR%'
% "?rJ4Z%AN4p!UHmU`R+T#jnq0Em-"N4\3is\oBO5K5KbI"I%I^I;2S9o`]1CncOLUr1?>Sk(
% S4;YDY+cfTKEm+5!0.,!`jlMW$qG'OG\V#c:BkWlcpEdb+sRMN9E91TObB6:'$0`U.)-aZ9c
% .P$!8d'W/)?S'(<E/j[QNJ<Bh5Z]X-f^8P%QJV//80+^laiuL(].^jslJGb_IWeRe>4XCBab
% SDEd/_-Q5`]<l+na,/PFNO=ifrTGB`t`$tc&J3:"k>9MJ#8H1dhiuC)ghAo!?<:PV`>UsZ(_
% 6V]#W=9sAU"#tElFMN(aC[ULH.!\NXb!-\?N2-^6.X@^!C20dd9pHUBL3<f*+s69\IoR;9fD
% -996EQ]el/)])?C:`@$[&(T(kT5oN;<Gq@fOJ`akmm]MM5(g![)A\#/-.<HCM5(6ss]!2lP$
% !0eW3Za4H7?moSME]DFVc15a.JX/">i5`m_2X-I\7jIV@Z6c\?+Q+shFpRBqS-T3EC61:Ya<
% lUlYk]);.,0aA[C.jo\VG<t^)ZPp&8qiicr#hj8LKkGO*/"`#5@UZ+<V=N5_8t=ORZBo^#Q`
% ;Z-m^;[X-5Ql?9Kprikh"'f--XBkcRM[gQW_Kj\m)1coR%DHdA*/ED'*>aAcV6,XC`F=9=Yf
% %7G)(.U=qg#t0<)e\fZf3$m1`,QRIhD6d)@Di3P@b_@Z4:nrknlIW#+fpt9W(;Ul<l'[DA.J
% Y?x
% EndEmbeddedGraphics N 2246 8c6 E f9 S 3ebf1 R e9321701
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
33 129 547 522 rectclip
0 nxsetgray
0 0 0.52795 1 10 SU
gsave
[1 0 0 1 34 131] concat
0 1 1 1 22 SU
48 217 T
N
1 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
48 289 T
N
1 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
48 73 T
N
1 L
0 nxsetgray
0 0 m
0 0 l
s
grestore
0 1 2 1 22 SU
144 236 T
N
2 L
0 nxsetgray
95 0 0 0 line
0 0 T
grestore
0 1 2 1 22 SU
240 236 T
N
2 L
0 nxsetgray
0 0 m
97 53 l
s
grestore
0 1 0 1 10 SU
gsave
/Times-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
162
exch
defineuserobject
162 execuserobject setfont
473 48 T
15 flipV
7.5 7.5 T
-6.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(E) show
0 0 T
grestore
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
191.497131 1.416 T
12 flipV
85.5 6 T
3.519665 0.8112 S
-24.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(TIME) show
0 0 T
grestore
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
44 50 T
15 flipV
5.5 7.5 T
-4.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(0) show
0 0 T
grestore
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
30 65 T
15 flipV
5.5 7.5 T
-4.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(0) show
0 0 T
grestore
grestore
0 1 5 1 22 SU
48 73 T
N
5 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
48 145 T
N
1 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 2 1 22 SU
47 74 T
N
2 L
0 nxsetgray
0 0 m
2.333333 4 4.666667 10 6 14 c
7.333333 18 2 3 10 23 c
19 45 28.166666 115 43 136 c
57.833332 157 79 162 96 162 c
s
grestore
0 1 2 1 22 SU
430 179 T
N
2 L
0 nxsetgray
3 37 m
99 -106 l
s
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
71 47 T
15 flipV
17 7.5 T
-16 6 T
N 0 0 m
0 nxsetgray
0 0 m
19 0 rmoveto
(A) show
0 0 T
grestore
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
187 47 T
15 flipV
7.5 7.5 T
-6.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(B) show
0 0 T
grestore
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
376 47 T
15 flipV
7.5 7.5 T
-6.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(D) show
0 0 T
grestore
grestore
0 1 0 1 10 SU
gsave
162 execuserobject setfont
278 48 T
15 flipV
7.5 7.5 T
-6.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(C) show
0 0 T
grestore
grestore
0 1 5 1 22 SU
48 73 T
N
5 L
0 nxsetgray
0 432 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
144 73 T
N
1 L
0 nxsetgray
0 432 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
238 74 T
N
1 L
0 nxsetgray
0 432 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
336 73 T
N
1 L
0 nxsetgray
0 432 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
432 73 T
N
1 L
0 nxsetgray
0 432 0 0 line
0 0 T
grestore
0 1 5 1 22 SU
48 505 T
N
5 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
48 361 T
N
1 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 1 1 22 SU
48 433 T
N
1 L
0 nxsetgray
480 0 0 0 line
0 0 T
grestore
0 1 0 1 10 SU
gsave
/Times-Bold findfont 36 scalefont [1 0 0 -1 0 0] makefont
163
exch
defineuserobject
163 execuserobject setfont
1 207 T
195 flipV
14 97.5 T
-90 R
-96.5 12 T
N 0 0 m
0 nxsetgray
0 0 m
(VELOCITY) show
0 0 T
grestore
grestore
0 1 2 1 22 SU
338 290 T
N
2 L
0 nxsetgray
0 0 m
12.666667 12.333333 12.833334 39 21 44 c
29.166668 49 39.333332 48.333332 49 30 c
58.666668 11.666667 71 -38 94 -72 c
s
grestore
0 1 5 1 22 SU
530 73 T
N
5 L
0 nxsetgray
0 432 0 0 line
0 0 T
grestore
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-Bold
