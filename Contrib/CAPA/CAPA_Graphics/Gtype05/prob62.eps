%!PS-Adobe-2.0 EPSF-2.0
%%Title: hecht2.13.create
%%Creator: Create
%%CreationDate: Sun Oct 27 16:15:53 1996
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 142 375 417 560
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^`.:a9/M
% _8FksCNZJL3_+kXe]B:*:;j>rI9)L/"835o2@,6RU(i3FUj=8M^Q"`</o2:9=kf;PbIg#acK
% FAl+aB6&#eOV/"\F5dp`<+k0nUh7Iio,fpE:5[OM@!=L4W!O(J"6N@A\/%BTZLh/GTb2=N(Q
% s^Nhq"ka.'ECu/3X'[XQn\S-$kVU09:BrK!1O0qWDX+klmgP9"e#T[bGSa>ItK)DJ?3arMj+
% $L*&`fJ1^#5J-kLR'Ergn=;[+cmJFGfXX:Z(!AdnF_#LXSNA)MOtgUYR0Bq^ip.3X8*!=/fX
% J1(*,r&7htT(q>;5Q>/CgCO>#U5B9d%K[I_5mUR]&J[XjM1uWE5Y6[=F].0%s0:Z[KcbOPJg
% VrDVhur@#Z7<GCrj,P.M0\"KI81l(lOAd]`;RX[+NHc%5Nh"#n/Ub1Lq+R`o2aaT'YEm&"Wo
% 5#QUG5WJUaEr-)0c1'YT%QV<2q?^Ne/B1P`':_?)r;Ge0b%0:!;8IV'k'$>[2"Mhe_B::`I@
% %Ai]BPUjb2]7pqFnXL#P(G#!UP^W.^n6tqp0)8rW3CeUAsd%f=qnIjL(JurAO-m`$0R?tat4
% C]-j1)8>q+r:pRD;81#UIq0uu%<(IVZ\PT++s!<NUFUd3!$CcEdJ!K%bV5Zh7OE%DW5Y[Ic8
% </'ih-^D3gk<JhE'#4e^'\_36!*j8SVi>HS")"3V`p]^i@VVrNS9Fbn+N%.Y#cX[$UXh;t8A
% M7+YQEu.E3n,q.0-mC=obb_!ItN]!$K'/%`_J07N9XI0LlJM>aoR3X+2]Q\RV"2dfNL5JHm3
% ;DA<Eg!GGAf$@To/8,r]Bd"&d*O_-8[V#@4[^]%:!:F1Q_F.*+``;mf\HZ1,5*G3+&72TpdO
% [e#9]\s&8FGRa;(MVnm`uQ#A!J8SVdS]EBI42m")e$g-"rfD7?o[/'bL*g$AWK^<)e[p=K@p
% [T:dY[sS5E*#DKlZ&h0"rj3oPgS+[ulF^l^So>gS$,%Ck#M#7``STR.)'bWs)72r*?'m4oqO
% KC1MI?ipnMcO^3Jd=2Y>m>]#f4SH;BJ@F6AW1A[sFg0hZgh#\$KA'prU%T=;K4'<5Kn"+U+e
% M_S6D(dS#>P7oK:68FQ774ClVUcZ<55lm2#t.\ChLp1gY;ul\^AZ>hpWP%k2826i@GD=4'^b
% \2`VI>DK;#S>is\C\UopZFJ0XZks!,ke>_kW+`nakA1%W9EGp*1j5'7p!'K3PcZmZ4*qPnG4
% Zl8rHFB;oolQP6mG4pl)%7T'`lEf(S^.c01W(3`LH"sI!Ic^&!=e7j!;jGYIjXBC/bZLY!']
% dHoU;3LXbK*C-'2nKH_B'=VR?fF%<!#`gYMEI`XR)F>_*i!iCld/a&,`TN_:N70W2u-G)h<O
% .g,$DBZ&@p;MVNH*>NW3`8:GFGX*N`nV3Dn)-F.hc\pZPX=2%+1pMq=Uk/:2VF<+`&UiqST,
% H#^!ZA5iNVKOW#l6B3!!IlcFqil.!2E&3nW>R5r*og4)8SYJm>u=WRj'Z@aM.T^Ork)Uj=9u
% 8&RpoDB2i:e3VPj:b)hj(8=_26pUX>t0UTEbi[^"%],8aIM7-Yu/u,r"lM6U#0[O,[LC$07O
% jAEr'I+LMpV-F]i0j>_?O$?0")D@%J9W>I?`<+SDskf0=p(Q&+\9\^S[3q5`#p<!k"ZEo/na
% _p+lb+6c[0DiPFCMZ$q!$I)O;"kV^s5,I<`_5.^YnR4<cABLcd$L&rKGS,5*d,7GJ2*M]V70
% 8AU\;16sbVo;c4j.tN78/\mg7aC\*de'1Y@1n6QH-Vl&`;a^h4OmF;B#N'g5UOmHJo3?#n:R
% K7ODK:H&lmM"q3lBDMoS,6ETiP1h_h>T6X:1@?&s5[b4Q*N%:ZS?UDo^Fg_KCbYrF-VaW6Dl
% R&Z'EIKE_3oNr?W_NeY\d!PR_GE8ktj3[JE7%11Ml6<8_-Kr8LGW]870&qup2.LW*<:JmFdL
% 8Q'U)-;13f!]UT7?"'1B5?8UhY+%^^$&WWqEp:o0WrHlX%8.q`qVPmYK<n3T6daa7gM#a1;0
% #_X*`;!MDL?P2(&PJlWn[+p5tW*jC[Y%hTf<mZhnk'<<$[_pgTM]4(N20?&RUE2Y<]MNG)HB
% lGSQLEOW_7n8F:HfAVa3RIP><KF)XT8e@XkO4[50":thE0MPl4OmYp;aC3">:c(!L1LN2-k"
% dF957[0UX>!,E>2:Z0diemMZ/qPBq?&PsZ_&ZJnE)uD"#,9[`dSUE!)G#\'3pF%-Yrcs:U$P
% @%[",l,Q4Jh?TA[#%`CN3l"'mGH%:R=mY7og?%?d5?D_-eVVDSm3Eo0XF]QeY4f2k?n_)-9p
% .(bV0^(hFH9[8s"?ubTBM!9%dTj@?QSOQb6USH6<lX]Zb!G;Gs!>l,::"=<gM0Bp\hpZ]F_b
% Y2LcA`m3-<a(Y4K;=me@[Hk:-+RNh,D4R"O(WQ8Gs#NG27'g=l;m['g&kNGb6^gZh7mW\Hq[
% %r2X!!_`9u4U%<A]6hhra`VXd?%?6GlIYbGG.n9rDaYtB)?>!TUan%a//c+SS>L>86+rmu3;
% h:0/hFub>jfsT>g8aq\7=1inQX&gcA_!)]mXa9Mh;5k+k-1_OhDiF`&us6O*8>MSo]VW4:n^
% k3Q-P6ECNrU;@19$UGON;7PW`Mn.*"AUQ4N#f=T@0&,*68cL5;]ip-ZDq:K\9D4Q/;e;<Ir[
% l5XG%1f#[<d/\Tl)sZuh#6'tc5>%3,B^b"*Un%:N8RcTCmXV2'8Wja^hZ^4Bd4VP!pJ)NXI0
% <j"_*KWYIq@GoCf8Vq<4>5qPX#h#Bg9&(8/_@hFZUKP>_\IJ]G?pr=XqK"+UN*5_Cp3?"jq%
% SP.b:1bL7P#u!9"pO0%CmsP`E[0rVNQr!\N2m;a0_hS!4#CR^BHFh+?]_6QbVL?D&IGP3X<\
% Su^`[0apF6U^klc1==2f8#]F1E(m6SO!p<e$>MDYVgRR:gF8-Q%!8DZA=:!>p5\=+JeEJ>\`
% a.[P8da=cC@";"[akN<-dkQr'h#oT*V)d$Yl(]toUHN4V),Y25:B7-/7E@TUdK!B\U\/te9F
% F#ll*)h7kQu[hGKARIN1=1Xdpk(jlKLP*Vn.u?PY_42;)#"8h-E)Dm3-Y<[CG"aucNf).."b
% ktK-s`CqR:c1#_6Il!bgd('*rbsaF<RO%r^)#EnH'=pOoSjLJiq[<4HO@aDm]BLjqC7+u_23
% 3-Bq2HH(_rgS]kc(MA:aIVD?(l6hE,8;S>=-i:+i]bc9f3.e,aFI1%)$C$=JOaR-eMHO&=>Y
% 'AiB7R",I>6C3$92_'(^U&DBG'HaC3YXR3/MR@%_bJ`_+9?M=H(gRJju)YTW!6dpk#A&I=jM
% =5(J':G`?5>Id4_.5%oiiLl4a$Mb)JJf2.LCk_-ieH#?,olmR)"\;,5DO'2gFd"mSPBR6^mK
% 4C:.LGk(HpkY(KM;ah[DcdDRab1#S(dci9;0\%kW/"@YO3HgC>F9UN\M9pnIJ6j'$KR'PR#T
% 3WMr"`$67@q5BF"S<x
% EndEmbeddedGraphics N 2834 b12 E 30 S 53630 R fe9bbf39
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
142 375 275 185 rectclip
0 0 0.15 1 10 SU
198 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
216 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
234 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
252 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
270 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
288 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
306 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
324 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
342 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
360 522 T
N
0.15 L
0 nxsetgray
0 0 m
0 -36 0 -72 0 -108 c
s
grestore
0 0 0.15 1 10 SU
198 414 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 0 0.15 1 10 SU
198 432 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 0 0.15 1 10 SU
198 450 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 0 0.15 1 10 SU
198 468 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 0 0.15 1 10 SU
198 486 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 0 0.15 1 10 SU
198 504 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 0 0.15 1 10 SU
198 522 T
N
0.15 L
0 nxsetgray
0 0 m
54 0 108 0 162 0 c
s
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
/Helvetica findfont 10 scalefont [1 0 0 -1 0 0] makefont
207
exch
defineuserobject
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 809] concat
207 execuserobject setfont
0 nxsetgray
191 408 moveto (0) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 805] concat
207 execuserobject setfont
0 nxsetgray
233 406 moveto (2) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 807] concat
207 execuserobject setfont
0 nxsetgray
269 407 moveto (4) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 805] concat
207 execuserobject setfont
0 nxsetgray
306 406 moveto (6) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 805] concat
207 execuserobject setfont
0 nxsetgray
341 406 moveto (8) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 899] concat
207 execuserobject setfont
0 nxsetgray
184 453 moveto (2) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 973] concat
207 execuserobject setfont
0 nxsetgray
186 490 moveto (4) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
207 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1039] concat
207 execuserobject setfont
0 nxsetgray
185 523 moveto (6) show
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 255 396] concat
gsave
207 execuserobject setfont
19.5 6 T
-18.5 2 T
N 0 0 m
0 nxsetgray
0 0 m
(Time \(s\)) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 161 496] concat
gsave
207 execuserobject setfont
6 29.5 T
-90 R
-28.5 2 T
N 0 0 m
0 nxsetgray
0 0 m
(Distance \(m\)) show
0 0 T
grestore
grestore
0 0 2 1 10 SU
201 416 T
N
2 L
0 nxsetgray
-2 -3 m
1.666667 0.666667 13.5 12.333334 16 16 c
18.5 19.666668 23 27.833334 31 33 c
39 38.166664 59.166668 36.166668 74 40 c
88.833336 43.833332 90.166664 45.666668 98 48 c
105.833336 50.333332 113 58 123 62 c
134 66 138.666672 68.666664 156 76 c
s
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Helvetica
