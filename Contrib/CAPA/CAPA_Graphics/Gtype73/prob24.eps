%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled1.create
%%Creator: Create
%%CreationDate: Wed Mar 26 11:18:06 1997
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 130 309 484 516
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^["2&)/M
% _2DksCM/!\-Kra9_qR9q!efChP*$TLg"^@<D)4$'`EU"%mq>%-3XN,m/f+R+Z4$O=UB_mK>3
% uJP^tBB[`\MP%8E[!!)![J1EQ2+UDiSl5^N3D;DsI,FTLG.8pEm&]Y$23![5HJ"D7>EpSi#i
% 4ja"&n8(h/_\Bt.fn!2BGQ+a$tSiG6=S:^?\*esT)@5>YfDD2E8Ae3X`(^kZ_eV3L&_5l"UG
% DO1FB7P!*RPXQOl)9JLrb!F?.5cba^\H#-\stLd9i!"\MW`e#(>/6\I'l.R8:kfOk4E9\AE-
% 0&=+)c1N/l!-CPp@6Vn)R=^J'876$0J3oo6U1l@g0M2m1`#t(FJBioE9X.8&K37(t+gO\Ji,
% /IHnf*5^Lgh?EUGrJY.2]u,d<.6Y(If<`Qr;ddl)iRoHSl6DKH*\iJ4V$iOOaeAQ3=u*&,ZG
% U+CG6Dk9"(9(3UOIOK$mj>S$f]iIh21(l0hQ>nVYt3nQ?YSLqRSAW/EK\(,F&*bHGnABs>`@
% l4l+*<BYh"[E;r$j'->$4Hs-HidCe!$G#F&I:#j0X.19B`?QDJ=qUQ@%h15`[6@S:0?HtT02
% _`L)fF:c%\hE?ic+"n,c.<ZpD^+M_CAGj)G5JqA^s6c'?fp0kb3SO::bm!*7_)T\U<-Zm!F.
% CqrQ'!_l2d&lNUd<sDZ"<Y>IJY^i!/!.gdsB9oBg._r$"()U_:[fnO>0P"@AWde?p$<dFI`W
% DGIpmM`o%X&J2XIdT.R7[I3Ao&li2I9Pn#,E7@Q6H>hDum^\RbHB1?k1CqYmrt!V8JtNH9i;
% PCrcr:`GG<92`-WkLDlfs]Ad>Armig1cJD)Y?`VO^8c],1ae!i+?XTQQ&n'Xs*<B9H"3c153
% A[WlMj[tRA/a)03fNuETFQ7Co0^fi_&DgEZuiOgL33&$b_C*/TEpD"giJP*[2h?Mh0BOJ\)1
% *4[4I:qP&g5#X6_"jTE1^`hUb:r<'V*5\ach$:EDdT-hn$g0b4,u.+c3i#H[3XFLS8hRW>M:
% G@,7I*f05D@!nH`:il!6`rh!"n1M\=lqc/s$t-5@9h[k"O(Y+O8*mPe0M;,LisWh1.eMT+bZ
% hA5r7o7<>\`23$=7!@0ULqDO+&;-=L,*MXAfTZAArm(aV7_]#f,VO[L:"kEjr[;mHJfpe"=l
% /8=AN&/9q<8N12a#]\Om<H4,\Tk6d<.loCtOR)jsT^aD<4PQH:P4CA0S#G[!,E'jH6=UG*5R
% "hFk/d-j[BS%(Wq$lkJH&<c;)YcS\7.=%1ZV^lZ=:#/\#@Fe#?kND?]_ipmK`*\J'/:.c2qC
% ETBCq&hVh_1Kq.=B_WM0#L&I958@Y\F"TFZT5#W0uUIWGY-&IF[i&tXql.9)nR$96!olLBaZ
% <++m"kcl`QlAH='c56lX4u3CP$''rc,lKUB<5EQ?El=am2&SA4_,??A_kJ5]1daRcOH=`i"<
% o:na<(nB1qu`E&815c45*SM9"ZG?ikik>EY=h$"Qc1Bq*tVndZbr>$lHgYaS.!21_YZkn('J
% 6>$`P4"VZP(r.iBYEq>.eEDnuN.D9`<E0OQ8U^a:>#^n=(Q-BHk5c%&j4W+j)pUk'SEk0F#!
% AoZ8%AsPdBg#@7;/Qr(UBJKU9JU5L"WWb<Aj-JhHcBo&"Y0]rpo1S\0(59\J8#CD)9RSte"d
% <kA0?!jco1RDRA:Fp'eA"ACB!iYPuQu\Fm2;0JollJ7:9!!LsTV*'9t,&-lEIZRX9PgHLh7L
% 9``V\X4@HHK\Qo1!U*INi@tm]*GRm>8(OF^P_KRR;]t_4c;Zh>5#;D6=Je\br7P(&=iD]4,0
% ;MQH53B0SLR4=BNC@D;5NSP,T.1ZRVdR$NA@mi)f:I4Rh]`FFlFfV4o<^C\sB"a/M$OZMVG#
% 2npU-:KP1G'NVmb2K6%G$D==LP12W>X5(/ffQJ5XSE$2ZF/S8J>$9eZU0hTT:D#fN&"R'1AR
% Mj)A-!c41hJ.7lb=s4._+W#2SlW1sV4`)Mq92,%QD0WJ&4US14KWAiK`CtODq-@5_@CW_V+"
% 3Q!USH=r\.9%OB<VR('og%+Mi)d/nV/r<rgs`B2]L!M+u3$%%#DLVaPBW,8pR1LcCA?ILD%n
% U>i[nG,*[VW:C3.1%b`2!&Xs+%F;'7['n).L&_2Rx
% EndEmbeddedGraphics N 1758 6de E f5 S 30933 R 3f539333
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
130 309 354 207 rectclip
0 0 0.15 1 10 SU
177 434 T
N
0.15 L
0 nxsetgray
294 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
177 378 T
N
0.15 L
0 nxsetgray
294 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
219 434 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
149 434 T
N
3 L
0 nxsetgray
70 -70 0 70 line
0 0 T
grestore
0 0 3 1 10 SU
149 476 T
N
3 L
0 nxsetgray
28 -28 0 28 line
-45.001328 28 0 arrow
0 0 T
grestore
0 0 3 1 10 SU
219 434 T
N
0.227592 nxsetgray
56 56 0 0 line
45.001328 56 56 arrow
3 L
0.227592 nxsetgray
56 56 0 0 line
45.001328 56 56 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
247 336 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
247 322 T
N
0.400006 nxsetgray
56 -56 0 56 line
-45.001328 56 0 arrow
3 L
0.400006 nxsetgray
56 -56 0 56 line
-45.001328 56 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
303 336 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
303 322 T
N
0.455168 nxsetgray
56 -56 0 56 line
-45.001328 56 0 arrow
3 L
0.455168 nxsetgray
56 -56 0 56 line
-45.001328 56 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
275 434 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
275 434 T
N
0.337931 nxsetgray
56 56 0 0 line
45.001328 56 56 arrow
3 L
0.337931 nxsetgray
56 56 0 0 line
45.001328 56 56 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
331 434 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
331 434 T
N
3 L
0.544832 nxsetgray
56 56 0 0 line
45.001328 56 56 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
387 434 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
387 434 T
N
3 L
0.641377 nxsetgray
56 56 0 0 line
45.001328 56 56 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
359 336 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
359 322 T
N
3 L
0.599994 nxsetgray
56 -56 0 56 line
-45.001328 56 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
415 336 T
N
0.15 L
0 nxsetgray
0 42 0 0 line
0 0 T
grestore
0 0 3 1 10 SU
415 322 T
N
3 L
0.772408 nxsetgray
56 -56 0 56 line
-45.001328 56 0 arrow
0 0 T
grestore
0 0 0 1 10 SU
[1 0 0 -1 152.07254 433] concat
gsave
/Times-Roman findfont 36 scalefont [1 0 0 -1 0 0] makefont
156
exch
defineuserobject
156 execuserobject setfont
11 29.5 T
1.100856 1.824012 S
-9 8 T
N 0 0 m
0 nxsetgray
0 0 m
({) show
0 0 T
grestore
grestore
0 0 0 1 10 SU
[1 0 0 -1 135 417] concat
gsave
/Times-Italic findfont 36 scalefont [1 0 0 -1 0 0] makefont
157
exch
defineuserobject
157 execuserobject setfont
7 11.5 T
-5.5 10 T
N 0 0 m
0 nxsetgray
0 0 m
(t) show
0 0 T
grestore
grestore
0 0 1 1 10 SU
[1 0 0 -1 176 435] concat
[1 0 0 1 1 1] concat
N
0.758614 nxsetgray
0 0 294 56 rectfill
1 L
0 nxsetgray
0 0 294 56 rectstroke
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 206.500015 463] concat
gsave
/Symbol findfont 18 scalefont [1 0 0 -1 0 0] makefont
190
exch
defineuserobject
190 execuserobject setfont
6 9.5 T
-5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(f) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 189 466] concat
[1 0 0 -1 1 59] concat
N
0.15 L
0 nxsetgray
N
29 29 29 90 138.366455 arc
s
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 131 482] concat
gsave
/Times-Roman findfont 24 scalefont [1 0 0 -1 0 0] makefont
211
exch
defineuserobject
211 execuserobject setfont
14 9.5 T
-13 8 T
N 0 0 m
0 nxsetgray
0 0 m
(air) show
0 0 T
grestore
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 178 394] concat
gsave
/Times-Roman findfont 18 scalefont [1 0 0 -1 0 0] makefont
210
exch
defineuserobject
210 execuserobject setfont
19 9.5 T
-18 4 T
N 0 0 m
0 nxsetgray
0 0 m
(glass) show
0 0 T
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Symbol
%%+ Times-Italic
%%+ Times-Roman
