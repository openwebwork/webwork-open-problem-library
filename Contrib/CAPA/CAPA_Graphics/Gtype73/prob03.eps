%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled1.create
%%Creator: Create
%%CreationDate: Mon Mar 24 19:46:45 1997
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 39 230 574 542
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^"G0I$/M
% go;ksCM/!\-Kra9_qR9q!efChP*$TLg"^@<D)4$'`EU"%mq>%-3XN,nGY7R+Z5/8K]Pb(+^T
% X@#3LBAs4K3)^#-2[fG4#I7jhIg:MTb]PTa>0AM@q#&25E_+2Eu5pFSTnB%<#+J0MJj5d[&?
% ak\*j@sEuEo0Ih1^tX:7?`g!PVB?\1<A&p"[N?PfTmZ$j2d3C"`$e&!S?46gBr-T2f"lBBa>
% 93;1OaY0k9'd!g(q@EX$lsDM^*FM\&2WfGk\Q?uLW"g2h@+;ML1%UHcX5,'9e^#>JO,KjCp>
% 03l&/;&0suScR2p@"e>pRq)mb-=DCk!<>`CE.K>SBr7SYaZ?N6#+KG9f`i=H]D3,_E"N-oMK
% 6q#+rpZZ?l)ln6't!1GmU"XSpTsd+^[qIkk%=bE)797-C&PC8K_pS&4e)J\,\jF`9lZQJGrD
% ji*_6rkh(]NV6lBcg;ub37SO:gLE,b#8PoL_>i\?l7Uf9;"e&\XJ--9t'%`b+#.PJ#So'mgQ
% X3QZkZh7c)!G;f"^ka]VuRBb*Wbc0>@a4lLglW!ZIk[Jetmq*@0B-1)Z[ACe!Q&p!`01+cAc
% 6:!+a=J8L5-cEZUj%&dPG0"&eo[Tj<9G-#So0C)MP^&fO$2PA4PUVOF[Al%pei]&I`6Y]?`S
% WNrNUA?Pb2lZAC#cq4;K)D^-39g0F@#h.&=8Wl_!iZsad;@2Q]=>&kTZ3i)IV3mMRO:!/Cii
% +<0J'(4LTZ.m0/u$K<$6ccW1.lCsP[9iY".Pb6(q7D./#p*aP,g(1ke?oQXKCE\/$H\Tfk8:
% A_GtQp#]n4ka.>.,np_l;C$h`EVnDDp/qXOQK&oU1Zar*-$a1`EP3fBc;W^Wn^.JTM_nYpQD
% "3c-)dB\dati<;`-:A.F0Gba?*)g#ds\U0N.UE_ZuJfD.Fd$k=sD/,<R'=LW6WWPf'CHc6-d
% %#h<V7/$VU9AJB)K5A4Te!o\iLLnhdd'C\p*AEd^%F\65HYR*DnEqej(<Wm,_?-_8M#+B&\5
% AVq<(X_$G70!%sg%nE][`Lo,]AV"nmh_F*i)(odlMo.1?m+p7l1@CI;aud5)lg/oCfGCU%_0
% pIPi:m".+0B+VHX5-3[kc[N`HL3LT?8dq40J8%CVV/to#QQhih:3\)c3-\Q6ruK4jS5%PDn=
% tQa_g*Y&A_3h$4H*63i(fKDuTfi^d+a!BRB6kr[i"@[9*E2)')2PM`N,[l9t>c@ao)hYm`2^
% X\<^L/'O-j&G0?*/;UN$Imc?]Cn=j"YYKB1tr090b-hWCjF_*g\(uN`8&jZH?Z]e$2O;''I&
% [!+S6]g56dGk1(B*e@pJA<=N-T*%uWPd+6IGV^Wm:NIO@f$Z.<"prOHp/8J<0G!@bf5:<eY%
% Un#XEkWT6W$\D\1=W,+j_;kL3N,<'r)Z'aU9.ikjE$V-qMO6jp3\Q>8>U&H>kW]QsKmZc<,S
% _JhU/5H!GNf0<,BlVqqFRuF^Vh?)of1/BC/TeL,$?:Yq+3s=&<U'nj;&ii`NUrYQ)rKenW!X
% nJB?6+PWW%eD],EWibb%51aW3%#g@,mdtQZFUG3>sc6_#fPNXgc'lTF0;D,8!e!qNDkSU\9&
% 6,.@i[."fp_H(\MNc.E*tBU^b_g-iRU#cZ3s.dpGT&5PX/IBa;)h-N*c%Cr)j;nX(J01,[$!
% ]9+%[cc:h0o2V1jl`+XrjTMlm_BS>.DV3I8V[+uPaSm,h2?H;'PeQ%2_KjpnHgdeCijPr$[a
% 9um#7SSk[4q932DR5Mj2&s\JH^#N0')V1$_;PC/oj?q$,;5p.NWg0n?9JMu9NUkMHZR"72`H
% p1"2V"nk6RsrYeP`hBe#g?JC%1D&;i3E)#u_s;(t*@-1seN`FE.^:.T$4@fH:_8&3qA6&XU,
% d:U=HjB<r69=i*&`\%s)&>bF,]aX,<1V_t<P*\a3r<.Y1c%>6)1+GKk52m]>*XE%8&(FKj\\
% `+oR!2s\KM-ef@5+F2%\m(!tB]9DNa@BJ:;$m;nG:itWW]lW9-t54lBbgcSJ=TYIqLWaiO_q
% .B/&>LXGZOtH%E'XJie@QQ-,G1=Y^.84>c)f^M?"];!8LsjQ=>*')?sZ+G8l)Z%DbWPFb#&3
% fi-t7=K.j6EBY<[L`Z_#!(*inA*qHs!;%rVmRT\oV)b1(6=<@t!&Bdo/@sl=2l$[amT<E3j=
% ieYb+c"V.'5Tf/8P'Uls`5H3P6UT32mp9l-j3)3m\T,Q,-!lSbNW5A3U;#ci@J?8uFf7.qa.
% N?/)[fQK/,qdGnbT,IE%5I:Q#$)R2r,<2TigBo#MfX]D4'b3Y)O#O],'9=fY;joK3@@l(<0Y
% pG=[r*h#=3Y8rIF]qB610JOQep-'>Hmj#c1o3JJ@phZA"(8#1/855^qF:NJhuOMkg8>iV[&M
% eq3!`69"AT#K!'%ap.DpIP!jM<fY?F'W*[&,hYS9:T@W%5F3nToZm&?J4^P;_Gi.2a?I,fT_
% WuW<uK%$pcphPC+;8Pm*GCXseD=A@*)U3t9F-=ZAT1OGn&0[Z*+fd]TqdqhJW9pg5$a:mRJ:
% ,/`.X7X]Nc9,^G2Z&J0Ze\PF.e`&Z1k[eNcDdA#k4/\*rid7Jkkm1"1sj*=#n]3^)*,Oh/uM
% C27(\UF$49._]3$H.4c3TToZeKV*6rP;6=rNdll,7?`'?3N,c>iSA./s">0VeFY`R\gdXd/H
% 6)q.p.fAm9lI\Xf+-K5)ntT=pNu&MDYJd9h<54'42^q:Lq/T'>+<"(-k!f.\*L\497hk]+OL
% r7Pb.*:c[4rL`HTj,9)!npI/rP,E>u7?o<h)jeNM]l-"4Yg]FP,L#i>6d#@I&>?F`>E:9s15
% hauQ5HoWWMGj/%qbL@&Qos*EOhgbU&W#*)2PA^<hdsq1u=*(_2I\3NJ?ipB/x
% EndEmbeddedGraphics N 2350 92e E e7 S 461a9 R c92b223f
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
39 230 535 312 rectclip
0 0 0.15 1 10 SU
152 400 T
N
0.15 L
0 nxsetgray
0 28 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
152 400 T
N
0.15 L
0 nxsetgray
280 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
432 400 T
N
0.15 L
0 nxsetgray
0 28 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
166 246 T
N
0.15 L
0 nxsetgray
0 154 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
180 246 T
N
0.15 L
0 nxsetgray
0 154 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
166 246 T
N
0.15 L
0 nxsetgray
14 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
404 246 T
N
0.15 L
0 nxsetgray
0 154 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
418 246 T
N
0.15 L
0 nxsetgray
0 154 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
404 246 T
N
0.15 L
0 nxsetgray
14 0 0 0 line
0 0 T
grestore
0 0 7 1 10 SU
54 246 T
N
7 L
0 nxsetgray
504 0 0 0 line
0 0 T
grestore
0 0 2 1 10 SU
[1 0 0 -1 291 541] concat
[1 0 0 1 1 1] concat
N
2 L
0.4138 nxsetgray
gsave
28 28 0 0 oval 0.035714 0.035714 S s
grestore
0 0 T
grestore
0 0 1 1 10 SU
279 499 T
N
1 L
0.4138 nxsetgray
14 14 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
318 500 T
N
1 L
0.4138 nxsetgray
14 -14 0 14 line
0 0 T
grestore
0 0 1 1 10 SU
306 493 T
N
1 L
0.4138 nxsetgray
0 -14 0 14 line
0 0 T
grestore
0 0 1 1 10 SU
274 526 T
N
1 L
0.4138 nxsetgray
14 0 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
323 526 T
N
1 L
0.4138 nxsetgray
14 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
95 415 T
N
0.15 L
0 nxsetgray
0 110 0 0 line
90 0 110 arrow
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
95 249 T
N
0.15 L
0 nxsetgray
0 165 0 0 line
90 0 165 arrow
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
54 414 T
N
0.15 L
0 nxsetgray
98 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
54 526 T
N
0.15 L
0 nxsetgray
210 0 0 0 line
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 143 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 171 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 199 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 255 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 227 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 283 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 339 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 311 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 395 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 367 405] concat
0 0 0.15 1 10 SU
[4] 0 setdash
9 9 T
N
0.15 L
0 nxsetgray
0 14 m 0 0 14 0 14 0 c
s
0 0 T
grestore
0 0 0.15 1 10 SU
[4] 0 setdash
23 9 T
N
0.15 L
0 nxsetgray
0 0 m 0 14 14 14 14 14 c
s
0 0 T
grestore
grestore
grestore
0 0 0 1 10 SU
[1 0 0 -1 76 481] concat
gsave
/Helvetica-Bold findfont 12 scalefont [1 0 0 -1 0 0] makefont
158
exch
defineuserobject
158 execuserobject setfont
5.5 5.5 T
-4.5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(A) show
0 0 T
grestore
grestore
0 0 0 1 10 SU
[1 0 0 -1 76 355] concat
gsave
158 execuserobject setfont
5.5 5.5 T
-4.5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(B) show
0 0 T
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Helvetica-Bold
