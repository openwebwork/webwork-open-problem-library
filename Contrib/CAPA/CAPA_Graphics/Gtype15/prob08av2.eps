%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled9.create
%%Creator: Create
%%CreationDate: Wed Jul  3 09:44:44 1996
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 106 292 501 590
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^UliHY(d
% PZ/,ZN]XS2YTK"Ce'eciKVEi1NXtAnM*9Pp?nb@&Bok3(=#?#nUd&`Wef9C<`1m$.f.X!/)'
% pTPRa3KHP):bB?EZY\)q<NG)pcVG%kT6lZjciZ%rir,iA+$*_1//((qm&X1S<8eLPZO:X\kf
% s,&IDL.dTDHoq[nbO)-3&#'aLfmoM\U[9i4EQ)\,oR%[!)/Y#A-*.tJ`Y1JbAJ(7gbSrWGOq
% Ca:"XE]5go]E19a2:N#6'9m,9.DNYr[=_RQ"tB"OHiDWoFZ_hQ?YpN,b1S-&ga))cZ\clj<>
% 7iqn>Zk8$4B<XZ($igW*TH"1dYh^.7Yjk2,m-VS/6Sd.f!uGSa</)>0DTH-)AVB7hJ7FBI!u
% Gnb8-TlPi).B#1Vef:$o$=QK8hV<!5j[K=uX?R6/#]K%Q;TT!t6q1H,C%KfLUW'2h2\h%62.
% "@uN4hYiC(>J<pIbFg0g/H=al>!tF[X!T"[NJae<os)i@F+e8`Y).e(3i`ILOA9,HdJ[e!G!
% s/<hetQa_0H=?;I288lbqW;R@4G8d^f"Chcr_Z\e<(&<%J[s,W;np#=eq3-2d3&0_>7DYTkr
% ?:HfC0#*d[+Vk8nk[`&D%OpZ8mA)#aCLi.(th\EneV4rE73l`jl,6"GYiTnab*aMir]C3Up=
% .B_<t*%u>(,EFkQ(h8Ukg*e5/GfX8<OteH.Um"VI8Yq\s@&]u^?%*)dQs>Tl7@@f"O_1h5[e
% XO*@F2!(SUQ//7j`eg&-*ZG.V`"'WY3@P=icH.>ca:;$:(`KGm@ZYjgiEI[D0R+h]2:ALS'%
% nNN6Hn#X7!O[,atTTsY\KlYVDgI&JX,-7W4PM_5XTm^qlWkTc2^`\=4$pEmF]PPIB[jd#j<R
% H9_idV/-Z@ZkFPRVK-BL7@7%Cb`q_JD*I>9u%A3W?a]3S7a9LHKiR)_gLdoj4/N`H8rYUm*7
% a1$T,.U1M^CG6SjOkZk>!>/V[&B4#Is&<fNi2=JMoSgc4T_FhC"t9s;6#R_<XnrN]_*gB4MB
% A^1Q3bV7lblchAY0Ruu>SL4SIaVpSs&I9of*"JKD,t!!!j0(X!.s*H!.W]j"mu"ZZRL@:pYs
% 0>"CkABC><:1D8mSi*kHk[a9krOZR^fFg]5sf!DRf#d]=oUFhiTL8q)TJ0eeYKu?0Q48Rp5L
% Nf!'qS+_#ef=S8h@Z0[#K%33Op!!6#Yn<n$=E@Kf)jFY+26&pAVHQUMnf;nVpO)t(P<m['g[
% *eCS>,P#^!%ZPUD&oib,(a+1C+ufk3Uh4YdbP%O(UgR`$%mKL(Y[<92Lcb9K?8b=#j\q']/_
% E\''n9Zs-C@="@5k;!WuI%!<>PsL4"lB96#7`X-KMn!Ao'.9OpJP"uK`q":7F6c@?*[>f:&?
% Th#3QnB!G=Oq8"7JptQZS"UOM-b/CAa4;t48H@ZQM7Uo8&@ng)*G8:71X+!"ZU9qAKb+Z+$W
% jX>bICrW&cgkB)Q7\5!8t-r_'f^M"%*=t39?W)!K/qT17"c4iLFU)!!-V,J>G*aSA6C8=aWa
% WIrJ<d@i3*G!DnUXp^%\#huUk\('n-E+ID/*Atp"'91GrM;T*+2q+dX1Ad/7(**WS(")uV(!
% aqMs5fG_A16tn<PF\_0k<'\dcbQVkT=Oc1-$GB,s3q%BMb75-cNd-i653GFbR?p;ouq(RU)u
% 1=5QG]e;36ZWUl."m3X_$I=3:'//.IP2@HpWT!)s1CqZQs6i%[T"1fXtGWN1D]R#"4HU1Z&-
% a*p8gV0]5BfaR+9'++`=U/[skIAf=-n^<Kh'*9r65pkg2JH2deXJjR@07UO`XL8kB,84fshh
% '6@csqeR!6Y`=)ORF_1TDh!.U[ZcfYZ@AT/+C%@\p;.aQh9BC/p[5"63GB^m1jg2<nfVE<WS
% rJ@'WVC.V?.<RG':[9GM)9YFVd)e;8:JTq:tAq8>tjtNp=Ei:[#eQ^At2E5_/kR8mP!:D&_[
% ,OL@<1BADk@V-0>a;8t1@^#_5QUp=kjDS"gX)P[efX!RUh50.QHh[(L+EZ#HhT#I^KPcVJrT
% 26&PLpuA3p<J5_N6C?s?ss2S96Ck[fZt?:>'b@u?X^,J_`Z#qNJ9IT>ch"$9hk&iRMSV87oh
% &Ibq_TZ#aD.>fXV@btR;VaEoAMZXRO5SsSS0sL1^QTO*ThH.UMp![D;+=QScJL^"7Ub73*hF
% NLT;Q.\O!]Ymd`W-\URBT$[%#&6:.+uiomdZ/\\mQsGfVmDh+X7%r-nWK+b8,7RL3nkdl#IW
% 6+5kd2!3gtRXJ*sPBsVg9bd'OL[EpNi1rkD;'h<dc%?;baNg]4p%0'G@>m7/313&'PHjnNAq
% =CNe%;.&p(tHp%1,]gU(,j+"Y;rJ`&+"(IfCC`LQ084gS.GZ^r-HW,&N/U)?#!j_g+6)rogO
% l:$EE0^g!?h*N[;q[93(hrf]E1S_uTj"ZpDKD(A>8+/80*s)Vpl_FWcFsmK!/HhN4=QI4&lM
% 0M`LX)u+@mh>m%a$_3"5*p/Z+S*jgfH4>G@7fYLYnQC']a3_NmL1RB99I.F.C]H?n`!pa=(E
% :18Dm@F9SI%.VinY\lH!b7po.S;bg+po<-5[:"IKq&&@*q!\>G^($"9$jXB/%`f&;W(Ii9F]
% IHF.H^Bo=2O:O5'PRF,hQ6bj_(JIl?7#`5gu&#rH]$:(6Q'MYOq6n20@b2<:#x
% EndEmbeddedGraphics N 2179 883 E 4d S 3ea6b R b22a36b4
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
106 292 395 298 rectclip
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 113 300] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 7] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 -1 7 262] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 18] concat
0 0 0.15 1 10 SU
12 226 T
N
0.15 L
0 nxsetgray
321 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
9 118 T
N
0.15 L
0 nxsetgray
0 108 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
10 117 T
N
0.15 L
0 nxsetgray
111 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
226 118 T
N
0.15 L
0 nxsetgray
109 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
334 118 T
N
0.15 L
0 nxsetgray
0 108 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
119 9 T
N
0.15 L
0 nxsetgray
0 108 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
227 11 T
N
0.15 L
0 nxsetgray
0 107 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
118 9 T
N
0.15 L
0 nxsetgray
110 0 0 0 line
0 0 T
grestore
grestore
grestore
0 0 0.15 1 10 SU
10 193 T
N
0.15 L
0 nxsetgray
0 49 0 0 line
90 0 49 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
10 136 T
N
0.15 L
0 nxsetgray
0 45 0 0 line
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
79 144 T
N
0.15 L
0 nxsetgray
47 0 0 0 line
0 47 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
18 143 T
N
0.15 L
0 nxsetgray
51 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
116 82 T
N
0.15 L
0 nxsetgray
0 53 0 0 line
90 0 53 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
116 28 T
N
0.15 L
0 nxsetgray
0 43 0 0 line
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
191 10 T
N
0.15 L
0 nxsetgray
43 0 0 0 line
0 43 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
125 10 T
N
0.15 L
0 nxsetgray
53 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
299 146 T
N
0.15 L
0 nxsetgray
42 0 0 0 line
0 42 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
235 146 T
N
0.15 L
0 nxsetgray
55 0 0 0 line
180 0 0 arrow
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-120 -307 translate
gsave
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
12
exch
defineuserobject
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1119] concat
12 execuserobject setfont
0 nxsetgray
307 564 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-120 -307 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 981] concat
12 execuserobject setfont
0 nxsetgray
239 495 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-120 -307 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 853] concat
12 execuserobject setfont
0 nxsetgray
199 431 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-120 -307 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 845] concat
12 execuserobject setfont
0 nxsetgray
421 427 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-120 -307 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 763] concat
12 execuserobject setfont
0 nxsetgray
135 386 moveto (a) show
grestore
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 25 16] concat
0 nxsetgray
0 0 0.15 1 10 SU
-138 -316 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 649] concat
12 execuserobject setfont
0 nxsetgray
141 329 moveto (O) show
grestore
grestore
grestore
grestore
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Helvetica
