%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled13.create
%%Creator: Create
%%CreationDate: Wed Jul  3 09:57:39 1996
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 120 265 510 528
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^UliHY(d
% PZ/,ZN]XS2YTK"Ce'eciKVEi1NXtAnM*9Psc0-@&Bok5Ck!]#]s]/4og6S%,&dGCQ]rL!sAT
% XQ7RQmB*Aiud'^"1+_ScgSP(o9R6d8sAag:O9TY'O!-n(d.>T@fr_fmulV^3rR1#sX_*\I+:
% niMk"Mdtc6m`'C+?\"](2_a8S)U$:4-pUe]flcF*\87MV*NM6)V?5Y7Z9'-p2H-]`s`A/@GK
% 'u,M^K^2g"8>@Dg'/of74Mc2iKl$l_9>kR\30UQ5I/D8O@S_hJASoBFlMEN_Y&QoAj<&>-[H
% 3("Q@eA0$@"dS$NJ-&JI7i;SuGMX0G`4uNrlB/md*I-'f_[I@@&H`G"gsBI<2S^FYL:thS+G
% r)0J4#)Ja8gi$0]"L9%3<k>_[XXp8-9>UE/:3B1Pf_8(rrIm>TIXjnQZs`aZr49@iRF^E?IB
% ;J9d]U7*$[`Od=)i#6^40<9aHKg/qpg#(Q]QOl[p*!4\?H?FA0m(h/A&EWJnIc0uQ=%5]dC6
% "-R/"r_Sgj@1"V;,fdoN^Cl%711pa?5St;<>86!M31@2(;(3oR\dP$VeU>%ALD;>'"6t2WQf
% /2BnS20Q<.;079>tD!0@L+JRfCDWLX05=L*PkU4?1h3[N@aCnA%6)VCoQ!!+hhYZ+QR^:"gY
% B>l?i5KsNh`Yde=:rrfo&FrC=@:TFn"X]aS<h"35.VGfaM&Y3NZHhT.XT6OeQ79Pn"g"qZbQ
% :&7!T_ET!6k:\$FOo>L!$j[VBR_)(__;b@&gS<#mBeD$UuIc"9Ji/0'HMVBk[=C0Yhf<CbEO
% 0\%4B53&_gBYaGWGc,9\i;"MXDDp338+*1Y:aERJGo$;r^X>7HZ<q8]-[S/gT$9"g9Dk&lkr
% $n9b"'tQ&V\/=Y_b"Jp<RYVKXfTM^hct<F,F9?nfD_S)Z+DQBm7#I6,nL%`W:E$:cF1=LoAP
% K/:$9k4RhcggJ_2Xk,@[A)pL$lt9/Xdl(LFD`-R\n9bE[/M3<2VRYX7HFVo<iA!GBZ"kAr^i
% GOVSpDL*GLLpb+bJ5>Pelr_06p#5,g^A,j\F-1Q(!)u3Ng6Una4O7ZR4YZ8D'+arpGR$RR<1
% !f-54u$Rqmt>2)jfOALH*7ql!:gR6IJU?J-t?FG]UbBqg)j:cI"+e[mH#/IPj0B.0=u6$NU2
% .pHQN+D0lEPScK^a4"V_;$N[1n!)`e_<NV=1mQ98/jgRAKFYIOEY_lO\0LG)rAT4n9i;aHg]
% +lMDCfu#A<$W60(=[;?XMWrY#`(SaC63`6$Y&?':rOWimWnkt*S48hZGpaU&m.\n'rD$>!&S
% (?7@Va8H'Uf*qVsKE$&*>SA"D[3V`E([c?-(-*&Ctm45B?9Gf2BBnsBYFl<t3O0I\+?fEXY;
% OU`?,;\1],BKu_^:k6'K+9i"j6!Sr%KIA)N$Opf;,6F!`0LR)uFXT[/_Li8#oHF^_BLXkj;3
% #hL,<YlP80&n;OcG&>/guPa9QJRVU,4/P<%4,8$H&/Dd%u!#d0`Hd"orIY7oY>*/ph]p(7@]
% I5QX34_^WlN%*>%),Z9kc]M<Y4Yat30-TpF?AUH?1*_m?hPHb8PIR`QD;m)9KAMDI[>M5ZBb
% &Tf`MC's$WQPm=kX<:HJVnnJ9Gkm-7`MeINdSdh*!&W%);<Fo=dc'32<d]fUlq"[3R2XXif-
% f+=t0N&LN_gB2=YK_+1X?JHfC6Nqc$<TSHBm_>/ua-/Z9p,>"OE[Z98Y&k^;7Yao"hsPlJ:-
% .Q>M)"a0H'&HZYu7>fP)Kug((7$1)o3D:7"'U^[U-;Abr;eY$n8-,jT27!Tg7nQ@Oi.M+:`5
% s;Y^$uDS$\/>L\f*_DOcT+`PJO=]8:;[PX,---,/<tFJk#=(PdD]`cFQTT6M*HZ'd[*:.Nj[
% bFHmhoV+:,L93^PcY9i;l8Uia&Q5\>A02:S&SQSl5h3>*)Q)mch#pmc<o:&h0/8*)hfh+4I'
% 0g^ABcRE.e&o"K<;e%Zmb-;\_Ub?bV%.@[HJ;"<oTBSNlY\f+eqaNs58?>XEE/F"]"50OYl&
% 0Uq3oLA8iNt'>q(]7MhbfZ[)=_*-=aaTf]S!uVqCq32U.05oPV+9?CFq/11:DKYQ90r"$fiM
% 1f\i?b]BkRhq`_uLhocO*Wc&@)?#=['5DHBWb(5b)E0;rN"5oOCVpnGBj[j:[U<B7=:^`l(=
% M"l&?#t%)lDDq,@XH.h"07o^c&ABn5s^I(c,pL9]S"M$H[DeU(>ue0djkA/8Uuci9m\bfbmr
% 9#NTqPPVB*?r)h<Z))>ubXP,K=D9X&2oWTAgAS#<:DuH^m!0A$_X^SbJR!+gnPE7V?J@Q+S:
% 7eCALL29qqK&U4YGq[ZK[\%GKW^=R$*0T7.pG'XH9NI<.tNAL2'Ds_$cFpP['(S_]6LRN,GL
% I$BJpqA@^'hF<5pNS&lr4ef>_sAFcF!XN%,CQ[\$YeI?nrLL"'emTpj`,l?BFX$j$u"[$Ls^
% C"kY-Q!WLb_&#!SFF#E3-Ff-D4_d@)DrD'+it$t]k9ds4iiKK]X=8"'NI*>-L+l"C!\gK,SL
% G+ag3LuUPR49ZKdp->=9*@Ox
% EndEmbeddedGraphics N 2092 82c E 2d S 3b541 R 344cbf64
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
120 265 390 263 rectclip
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 127 273] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 7] concat
0 0 0.15 1 10 SU
9 9 T
N
0.15 L
0 nxsetgray
0 217 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
9 224 T
N
0.15 L
0 nxsetgray
324 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
333 9 T
N
0.15 L
0 nxsetgray
0 215 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
224 9 T
N
0.15 L
0 nxsetgray
109 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
9 9 T
N
0.15 L
0 nxsetgray
108 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
118 9 T
N
0.15 L
0 nxsetgray
0 108 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
225 9 T
N
0.15 L
0 nxsetgray
0 109 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
118 116 T
N
0.15 L
0 nxsetgray
108 0 0 0 line
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-134 -280 translate
gsave
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
12
exch
defineuserobject
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 605] concat
12 execuserobject setfont
0 nxsetgray
199 307 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-134 -280 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 603] concat
12 execuserobject setfont
0 nxsetgray
417 306 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-134 -280 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 815] concat
12 execuserobject setfont
0 nxsetgray
305 412 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-134 -280 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 683] concat
12 execuserobject setfont
0 nxsetgray
342 346 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-134 -280 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 895] concat
12 execuserobject setfont
0 nxsetgray
478 452 moveto (a) show
grestore
grestore
0 0 0.15 1 10 SU
348 179 T
N
0.15 L
0 nxsetgray
0 45 0 0 line
90 0 45 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
348 117 T
N
0.15 L
0 nxsetgray
0 41 0 0 line
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
295 21 T
N
0.15 L
0 nxsetgray
38 0 0 0 line
0 38 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
225 21 T
N
0.15 L
0 nxsetgray
52 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
211 73 T
N
0.15 L
0 nxsetgray
0 43 0 0 line
90 0 43 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
211 9 T
N
0.15 L
0 nxsetgray
0 40 0 0 line
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
182 128 T
N
0.15 L
0 nxsetgray
43 0 0 0 line
0 43 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
117 128 T
N
0.15 L
0 nxsetgray
46 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
80 22 T
N
0.15 L
0 nxsetgray
38 0 0 0 line
0 38 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
9 22 T
N
0.15 L
0 nxsetgray
47 0 0 0 line
180 0 0 arrow
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-127 -273 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 577] concat
12 execuserobject setfont
0 nxsetgray
139 293 moveto (O) show
grestore
grestore
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Helvetica
