%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled14.create
%%Creator: Create
%%CreationDate: Wed Jul  3 09:59:21 1996
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 112 256 515 535
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^UliHY(d
% PZ/,ZN]XS2YTK"Ce'eciKVEi1NXtAnM*9Pt2H1@&Bok4+RqG#S]"n`Wef9C<`1m$.f.X!/)'
% pTPRa3KHP):bB?EZY\)q<NG)pcVG%kT6lZjciZ%rir,iA+$*_1//((qm&Td(9.V8+r!@j=I+
% <U\=<>puk63IQ)1m'XW2X[HOV<,_YA/DG1_1`!/2I%]X1]W1;Clo;S`gAB*\B(@R"pUDJDW[
% `$DWZot3cr<EiDQ3BS3%SNJ3["eNL_hHLkaU17fer7@H<qe6N`'go]kPF<tKc')`DVh9A^n_
% To9mIE,e?5A[q8;JC;tF`e!3=2hi/(DuiITA8jg>*];.qK8"Qg!.t_>E#=3:0LU./D_hN@U(
% '$=^u5\W^`^OQ2p>Y3LG[(kK5h^UJ--3!?C9[[+]]tFEG67k#9.P?=,(iQcp6D(`f3h8#Yuj
% F?7.*4E_1,A!0G;'#6\MV<;HS;>$,:2#(Q]OM<1UL!3gWJ?F.aCQskeN@_blGf[/7t[='62+
% CG=+6j'-Bp6Js&U.2%cG.O!;@!`)YgMNVe2dCLH.E@s"cq-`uEFrIBh0.V&(Z$"hQ$6P\lch
% A(I.Pm4?[gD-_-]K=*%2q\"p2k7JdVY4+;YPX32%<,$E9_T+,5%!La@(tU5F3:^nQ`'_C-Xg
% 2WCY[O*LF*,_n`&C#"hU,g"#g9tKk*W_lMojcs7fW;r9>&41%QKk1lf#ZF_*!2F>Lj^t</::
% aVEG\2hID#S5X5c;I2B3_CY;+GB)Vcnl3*85Dq*I-Qq$X^%(h)\rHbjML'YPeW?m!rX]-nMY
% 4b1`qM'XBgf[FL.*U5@^GOJ92@^)5mhiRW6`O6>Nt@uqOBkjG]H.`nKM:eGF+Q-Agb0>IY@`
% hgN&!"ar:$TFO._f<O>EESQ-N:E__F8Y:CabAO*F!OhRlH(Kaatg%Ne&l"@0?`OMY5$iNX+*
% 2Eq_K/u#43Od6pk`Hf,fOBFLEPXc)nH,8j.(Bj^Pouf'>q$ABF>`9/"unRZ4b@0S%O=Q<b!E
% ae>p=TE`;o7fR)WF/mgcCDI"igW#h2HsGX*,&XF?WhR`&b-/h]T&d=\::#A:pU[o\!V5T`Ys
% 9fi2!N=UgGS7f]@PE;jZ9?Z/mM="f@A<7[2s2PFC4@)f]mU_3TTLBq^UImrft.MS0en>#_^'
% fG;i&iDf:#u)#!r@Z+tJm<8\FXpngDB`gtFU/X+`.-FZ0D?*7f0gJ?+JA\V[t#^"1g_6SgH^
% XH%QFTQ)Ze"4"B"6)UO<4emTb]PuPk3d^2%,8G7B!8N).r?20>F3'7L,"r"%9$\jR`No('2$
% DUel1P(0%D<Ud,ZK4BFI<Jd"EhZ,ReBH!ugBB&UPCL+pDXH,KoRI67ec9i!BKsL/J_WBLWDu
% :r!6@&:fMc0eO$dgYT*B7uNq8H?[::"5:VWX?6iN@]>$JfFWj4"Fu`-#Y&6S)&P[g^a[?H$<
% WV9VQqa!%F@cN!=0g#!\C/scr;.hb0nGJ'N5!A(]u\t:l,D[bS6<J6RJOH!>C]\Njgi<.Ub?
% B40?j`Q[5LH<-a@GhD,)B1tXA?k"Bn2'*,uC#:c)IQa*>qRakAk2S#5=_Y>?0Wu,Iq+E5UuJ
% 0>SL#Xfd8i.?/2;gS%'@@d$m;2ja\;Z-1MBE3?,CrgGn!\!;!'=q"pNom%b/:^.U\P7acoV2
% ?+-pl$i:-tWF$O44sgd\jVPKq[<&OR]l>ABOldOD'ACK!J#Ob'Li[&Q2&VEu/H;P6L$U./^f
% 2j:7=N]OQ\?8*3R!2+iBTYQdI9rV/r.bCgqcXE[7B3=%H<Z=_d&R[mj=p*5PB)WL=6A926Of
% DA5Q*[5kcmo*\&:bJq(8WAuX?F10=F,SL9k$8M@fsOUYcM6<C\=Yo0fr@d'Qp`!X_UG;?ncR
% #^]H?sl7(h_g/Sb$T<::-BbDrFfG]\S;o(j%P)J);0(ZA7m;60YHdpt+os8kuK#(7p!"6=.[
% !7M*`3rk%^j&j:YEb#g"/1P;#/HnK7&X;&gX*7927#]IW*D>5gq.=;?sO&RR8O#lXK$<Tcde
% 4PV&N(H_NqH^qScG'!L=FAQ`]1oCP(RRh77]pW?'4bKVq-EZ*^1@W,+)@=3FV@E]C*"n?@@-
% CbQG+_?L&I5RU>g>6FItZfS%LH0pL7-=l*G92_od!MJIEdC7)sh'[=]S'+016Z2W(!#l!TAB
% XC!]MMq=Gs+g^8hcsKHjr=[E,6HgH9&kZ$StJsr8BD<pT\+?6^tjfAek2D_(B9gH(0]:-!\!
% aCuDX&\kK"TCKSqj-1m9.*JcKV!jZQIFFaI3@.F)D]Q0=DB.7*m-%o.sCY!T131WP\f@M,=e
% ZYok8^gB&'!c:RF^(KN@c5BI`ck./_8=%?2JDoj]VZC9oD.GE&pp]I5d[qaSRM^dR`-221n?
% ^c"G8]X!.><p2<K/33G#goQKg3/]00uY&31<+5kJ%<:$tK?Hb>G8pRIq:c6Iut&C_0mG->b$
% 5BhG.d<0<@ru"X>N^3XX#>;n(%-M4mq8F<?W"Eo1Pr%`pb80Ph^4./>`0s-9hqmIo_,>"K%s
% ,N72Roer*U/9-ee"AXJ/\Rka$@]X?q=?[REU=2KEf4'8/Dq=UdC?G81!M&#64`(x
% EndEmbeddedGraphics N 2121 849 E a4 S 3de0c R 9aedac3c
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
112 256 403 279 rectclip
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 119 264] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 7] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 -1 7 243] concat
0 0 0.15 1 10 SU
10 10 T
N
0.15 L
0 nxsetgray
0 217 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
10 225 T
N
0.15 L
0 nxsetgray
324 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
334 10 T
N
0.15 L
0 nxsetgray
0 215 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
225 10 T
N
0.15 L
0 nxsetgray
109 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
10 10 T
N
0.15 L
0 nxsetgray
108 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
119 10 T
N
0.15 L
0 nxsetgray
0 108 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
226 10 T
N
0.15 L
0 nxsetgray
0 109 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
119 117 T
N
0.15 L
0 nxsetgray
108 0 0 0 line
0 0 T
grestore
0 0 0.15 1 10 SU
349 180 T
N
0.15 L
0 nxsetgray
0 45 0 0 line
90 0 45 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
349 118 T
N
0.15 L
0 nxsetgray
0 41 0 0 line
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
296 22 T
N
0.15 L
0 nxsetgray
38 0 0 0 line
0 38 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
226 22 T
N
0.15 L
0 nxsetgray
52 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
212 74 T
N
0.15 L
0 nxsetgray
0 43 0 0 line
90 0 43 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
212 10 T
N
0.15 L
0 nxsetgray
0 40 0 0 line
-90 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
183 129 T
N
0.15 L
0 nxsetgray
43 0 0 0 line
0 43 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
118 129 T
N
0.15 L
0 nxsetgray
46 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
81 23 T
N
0.15 L
0 nxsetgray
38 0 0 0 line
0 38 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
10 23 T
N
0.15 L
0 nxsetgray
47 0 0 0 line
180 0 0 arrow
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-126 -271 translate
gsave
/Helvetica findfont 12 scalefont [1 0 0 -1 0 0] makefont
12
exch
defineuserobject
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 983] concat
12 execuserobject setfont
0 nxsetgray
199 496 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-126 -271 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 769] concat
12 execuserobject setfont
0 nxsetgray
304 389 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-126 -271 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 905] concat
12 execuserobject setfont
0 nxsetgray
342 457 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-126 -271 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 983] concat
12 execuserobject setfont
0 nxsetgray
417 496 moveto (a) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-126 -271 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 691] concat
12 execuserobject setfont
0 nxsetgray
480 350 moveto (a) show
grestore
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
-119 -264 translate
gsave
12 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 577] concat
12 execuserobject setfont
0 nxsetgray
139 293 moveto (O) show
grestore
grestore
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Helvetica
