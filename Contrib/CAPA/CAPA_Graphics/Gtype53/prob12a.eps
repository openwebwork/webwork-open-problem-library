%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MiniCad 6.0.1
%%Title: Dipole_in_Field.eps
%%CreationDate: 9/2/1997
%%DocumentProcSets: Adobe_packedarray 1.0 0
%%DocumentSuppliedProcSets: Adobe_packedarray 1.0 0
%%DocumentProcSets: Adobe_cmykcolor 1.1 0
%%DocumentSuppliedProcSets: Adobe_cmykcolor 1.1 0
%%DocumentProcSets: Adobe_cshow 1.1 0
%%DocumentSuppliedProcSets: Adobe_cshow 1.1 0
%%DocumentProcSets: Adobe_customcolor 1.0 0
%%DocumentSuppliedProcSets: Adobe_customcolor 1.0 0
%%DocumentProcSets: Adobe_pattern 1.9 0
%%DocumentSuppliedProcSets: Adobe_pattern 1.9 0
%%DocumentProcSets: Adobe_Illustrator88 1.19 0
%%DocumentSuppliedProcSets: Adobe_Illustrator88 1.19 0
%%DocumentFonts: Times-Roman
%%+ Symbol
%%BoundingBox:212 441 524 715
%%TemplateBox:306 396 306 396
%%DocumentPreview: Header
%%EndComments

%%BeginProlog
%%BeginProcSet: Adobe_packedarray 1.0 0
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndProcSet
Adobe_packedarray /initialize get exec
%%BeginProcSet: Adobe_cmykcolor 1.1 0
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
 end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
	{
 end
	} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndProcSet
%%BeginProcSet: Adobe_cshow 1.1 0
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndProcSet
%%BeginProcSet: Adobe_customcolor 1.0 0
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndProcSet
%%BeginProcSet: Adobe_pattern 1.9 0
currentpacking true setpacking
userdict /Adobe_pattern 14 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern begin
	Adobe_pattern
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll pop pop pop pop pop pop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	pop pop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{pop pop}
			{pop pop pop true}
			{pop pop pop pop pop pop pop true}
			{pop true}
			pathforall
			} stopped
			{
			pop pop pop pop pop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		pop pop
		}
		{
		pop pop pop pop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern /patternfill get exec
			} pathforall
		pop pop	pop
		} stopped
			{
			pop pop pop pop pop
			patternclip
			Adobe_pattern /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern /patternmatrix get 4 1 roll
	} if
	{
	pop pop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	6 index 6 index 6 index
	Adobe_pattern /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
pop pop pop pop pop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	pop pop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
pop pop pop pop pop pop
} def
currentdict readonly pop end
setpacking
%%EndProcSet
%%BeginProcSet: Adobe_Illustrator88 1.19 0
currentpacking true setpacking
userdict /Adobe_Illustrator88 73 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator88_vars 31 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_a null def
/_as null def
/_tt 2 array def
/_tl 2 array def
/_tm matrix def
/t {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator88 begin
Adobe_Illustrator88 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator88 begin
Adobe_Illustrator88_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator88_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/ss
{
3 -1 roll pop
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/sp
{
exch pop
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
{
pop true setstrokeadjust
/c
{
curveto
} def
/C
/c load def
/v
{
currentpoint 6 2 roll curveto
} def
/V
/v load def
/y
{
2 copy curveto
} def
/Y
/y load def
/l
{
lineto
} def
/L
/l load def
/m
{
moveto
} def
}
{
/c
{
pl curveto
} def
/C
/c load def
/v
{
currentpoint 6 2 roll pl curveto
} def
/V
/v load def
/y
{
pl 2 copy curveto
} def
/Y
/y load def
/l
{
pl lineto
} def
/L
/l load def
/m
{
pl moveto
} def
} ifelse
/d
{
setdash
} def
/cf
currentflat def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
newpath
} def
/n
/N load def
/F
{
_pf
} def
/f
{
closepath
F
} def
/S
{
_ps
} def
/s
{
closepath
S
} def
/B
{
gsave F grestore
S
} def
/b
{
closepath
B
} def
/W
{
clip
} def
/ta
{
_as moveto
_tt aload pop 4 -2 roll
} def
/tl
{
_tl aload pop translate
} def
/as
{
{
0 0
}
{
2 copy _tt aload pop 4 -2 roll sw
exch neg 2 div exch neg 2 div
}
{
2 copy _tt aload pop 4 -2 roll sw
exch neg exch neg
}
{
0 0
}
} cvlit def
/z
{
/_a exch ddef
/_as as _a get ddef
_a 2 le
	{
	0 _tt astore pop
	0 exch neg _tl astore pop
	}
	{
	0 exch neg _tt astore pop
	neg 0 _tl astore pop
	} ifelse
exch findfont exch scalefont setfont
} def
/tm
{
_tm currentmatrix pop
concat
} def
/I
{
tm
/t
	{
	ta sp
	tl
	} ddef
} def
/o
{
tm
/t
	{
	ta 4 npop
	tl
	newpath
	} ddef
} def
/e
{
tm
/t
	{
	ta _psf
	tl
	newpath
	} ddef
} def
/r
{
tm
/t
	{
	ta _tm _pss
	tl
	newpath
	} ddef
} def
/a
{
tm
/t
	{
	2 copy
	ta _psf
	newpath
	ta _tm _pss
	tl
	newpath
	} ddef
} def
/T
{
_tm setmatrix
} def
/Z
{
pop
findfont begin
currentdict dup length 1 add dict begin
	{
	1 index /FID ne
		{
		def
		}
		{
		2 npop
		} ifelse
	} forall
/FontName exch def dup length 0 ne
	{
	/Encoding Encoding 256 array copy def
	0 exch
		{
		dup type /nametype eq
			{
			Encoding 2 index 2 index put pop
			1 add
			}
			{
			exch pop
			} ifelse
		} forall
	} if pop
currentdict dup end end
/FontName get exch definefont pop
} def
/u
{} def
/U
{} def
/q
{
gsave
} def
/Q
{
grestore
} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
exch pop
ashow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			10 copy 6 npop exch pop patternashow
			}
			{
			pop
			7 copy 3 npop exch pop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
4 npop newpath
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			11 copy 6 npop 3 -1 roll pop patternashowstroke
			}
			{
			pop
			8 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
5 npop newpath
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
%%EndProcSet
%%EndProlog

%%BeginSetup
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern /initialize get exec
Adobe_Illustrator88 /initialize get exec
%%BeginEncoding: _Times-Roman Times-Roman
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdif/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]

/_Times-Roman /Times-Roman 0 Z
%%EndEncoding
%%BeginEncoding: _Symbol Symbol
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdif/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]

/_Symbol /Symbol 0 Z
%%EndEncoding

%%EndSetup

0 A
0 O
0 R
0 g
0 G
0 i 0 J 0 j 1 w 4 M [] 0 d
u
u
449.471 671.294 m
449.471 695.294 L
420.471 695.294 L
420.471 671.294 L
449.471 671.294 L
1 g F
U
1 1 1 0 (New Color 255) 0 x
/_Times-Roman 24 24 0 0 z
[1 0 0 1 420.471 677.294 ]e
2  (+q)t
T
u
315.941 459.765 m
315.941 483.765 L
293 483.765 L
293 459.765 L
315.941 459.765 L
1 g F
U
1 1 1 0 (New Color 255) 0 x
/_Times-Roman 24 24 0 0 z
[1 0 0 1 293 465.765 ]e
2  (-q)t
T
u
391.706 579.294 m
391.941 579.176 L
392.176 579 L
392.471 578.882 L
392.706 578.706 L
392.941 578.588 L
393.176 578.412 L
393.471 578.235 L
393.706 578.059 L
393.941 577.941 L
394.176 577.765 L
394.412 577.588 L
394.647 577.412 L
394.882 577.235 L
395.118 577 L
395.353 576.824 L
395.588 576.647 L
395.765 576.471 L
396 576.235 L
396.235 576.059 L
396.471 575.882 L
396.647 575.647 L
396.882 575.471 L
397.059 575.235 L
397.294 575.059 L
397.471 574.824 L
397.706 574.588 L
397.882 574.353 L
398.059 574.176 L
398.235 573.941 L
398.471 573.706 L
398.647 573.471 L
398.824 573.235 L
399 573 L
399.176 572.765 L
399.353 572.529 L
399.529 572.294 L
399.647 572.059 L
399.824 571.765 L
400 571.529 L
400.176 571.294 L
400.294 571.059 L
400.471 570.765 L
400.588 570.529 L
400.765 570.294 L
400.882 570 L
401 569.765 L
401.118 569.471 L
401.294 569.235 L
401.412 568.941 L
401.529 568.706 L
401.647 568.412 L
401.765 568.118 L
401.882 567.882 L
402 567.588 L
402.059 567.294 L
402.176 567.059 L
402.294 566.765 L
402.353 566.471 L
402.471 566.176 L
402.529 565.941 L
402.647 565.647 L
402.706 565.353 L
402.765 565.059 L
402.824 564.765 L
402.941 564.471 L
403 564.235 L
403.059 563.941 L
403.118 563.647 L
403.118 563.353 L
403.176 563.059 L
403.235 562.765 L
403.294 562.471 L
403.294 562.176 L
403.353 561.882 L
403.353 561.588 L
403.412 561.294 L
403.412 561 L
403.412 560.706 L
403.471 560.412 L
403.471 560.118 L
403.471 559.824 L
403.471 559.529 L
381 559.529 L
391.706 579.294 L

1 g F
U
391.742 579.258 m
391.977 579.14 l
0.072 w 0 G S
391.977 579.14 m
392.212 578.964 l
0.072 w 0 G S
392.212 578.964 m
392.507 578.846 l
0.072 w 0 G S
392.507 578.846 m
392.742 578.67 l
0.072 w 0 G S
392.742 578.67 m
392.977 578.552 l
0.072 w 0 G S
392.977 578.552 m
393.212 578.376 l
0.072 w 0 G S
393.212 578.376 m
393.507 578.199 l
0.072 w 0 G S
393.507 578.199 m
393.742 578.023 l
0.072 w 0 G S
393.742 578.023 m
393.977 577.905 l
0.072 w 0 G S
393.977 577.905 m
394.212 577.729 l
0.072 w 0 G S
394.212 577.729 m
394.448 577.552 l
0.072 w 0 G S
394.448 577.552 m
394.683 577.376 l
0.072 w 0 G S
394.683 577.376 m
394.918 577.199 l
0.072 w 0 G S
394.918 577.199 m
395.154 576.964 l
0.072 w 0 G S
395.154 576.964 m
395.389 576.788 l
0.072 w 0 G S
395.389 576.788 m
395.624 576.611 l
0.072 w 0 G S
395.624 576.611 m
395.801 576.435 l
0.072 w 0 G S
395.801 576.435 m
396.036 576.199 l
0.072 w 0 G S
396.036 576.199 m
396.271 576.023 l
0.072 w 0 G S
396.271 576.023 m
396.507 575.846 l
0.072 w 0 G S
396.507 575.846 m
396.683 575.611 l
0.072 w 0 G S
396.683 575.611 m
396.918 575.435 l
0.072 w 0 G S
396.918 575.435 m
397.095 575.199 l
0.072 w 0 G S
397.095 575.199 m
397.33 575.023 l
0.072 w 0 G S
397.33 575.023 m
397.507 574.788 l
0.072 w 0 G S
397.507 574.788 m
397.742 574.552 l
0.072 w 0 G S
397.742 574.552 m
397.918 574.317 l
0.072 w 0 G S
397.918 574.317 m
398.095 574.14 l
0.072 w 0 G S
398.095 574.14 m
398.271 573.905 l
0.072 w 0 G S
398.271 573.905 m
398.507 573.67 l
0.072 w 0 G S
398.507 573.67 m
398.683 573.435 l
0.072 w 0 G S
398.683 573.435 m
398.86 573.199 l
0.072 w 0 G S
398.86 573.199 m
399.036 572.964 l
0.072 w 0 G S
399.036 572.964 m
399.212 572.729 l
0.072 w 0 G S
399.212 572.729 m
399.389 572.493 l
0.072 w 0 G S
399.389 572.493 m
399.565 572.258 l
0.072 w 0 G S
399.565 572.258 m
399.683 572.023 l
0.072 w 0 G S
399.683 572.023 m
399.86 571.729 l
0.072 w 0 G S
399.86 571.729 m
400.036 571.493 l
0.072 w 0 G S
400.036 571.493 m
400.212 571.258 l
0.072 w 0 G S
400.212 571.258 m
400.33 571.023 l
0.072 w 0 G S
400.33 571.023 m
400.507 570.729 l
0.072 w 0 G S
400.507 570.729 m
400.624 570.493 l
0.072 w 0 G S
400.624 570.493 m
400.801 570.258 l
0.072 w 0 G S
400.801 570.258 m
400.918 569.964 l
0.072 w 0 G S
400.918 569.964 m
401.036 569.729 l
0.072 w 0 G S
401.036 569.729 m
401.154 569.435 l
0.072 w 0 G S
401.154 569.435 m
401.33 569.199 l
0.072 w 0 G S
401.33 569.199 m
401.448 568.905 l
0.072 w 0 G S
401.448 568.905 m
401.565 568.67 l
0.072 w 0 G S
401.565 568.67 m
401.683 568.376 l
0.072 w 0 G S
401.683 568.376 m
401.801 568.082 l
0.072 w 0 G S
401.801 568.082 m
401.918 567.846 l
0.072 w 0 G S
401.918 567.846 m
402.036 567.552 l
0.072 w 0 G S
402.036 567.552 m
402.095 567.258 l
0.072 w 0 G S
402.095 567.258 m
402.212 567.023 l
0.072 w 0 G S
402.212 567.023 m
402.33 566.729 l
0.072 w 0 G S
402.33 566.729 m
402.389 566.435 l
0.072 w 0 G S
402.389 566.435 m
402.507 566.14 l
0.072 w 0 G S
402.507 566.14 m
402.565 565.905 l
0.072 w 0 G S
402.565 565.905 m
402.683 565.611 l
0.072 w 0 G S
402.683 565.611 m
402.742 565.317 l
0.072 w 0 G S
402.742 565.317 m
402.801 565.023 l
0.072 w 0 G S
402.801 565.023 m
402.86 564.729 l
0.072 w 0 G S
402.86 564.729 m
402.977 564.435 l
0.072 w 0 G S
402.977 564.435 m
403.036 564.199 l
0.072 w 0 G S
403.036 564.199 m
403.095 563.905 l
0.072 w 0 G S
403.095 563.905 m
403.154 563.611 l
0.072 w 0 G S
403.154 563.611 m
403.154 563.317 l
0.072 w 0 G S
403.154 563.317 m
403.212 563.023 l
0.072 w 0 G S
403.212 563.023 m
403.271 562.729 l
0.072 w 0 G S
403.271 562.729 m
403.33 562.435 l
0.072 w 0 G S
403.33 562.435 m
403.33 562.14 l
0.072 w 0 G S
403.33 562.14 m
403.389 561.846 l
0.072 w 0 G S
403.389 561.846 m
403.389 561.552 l
0.072 w 0 G S
403.389 561.552 m
403.448 561.258 l
0.072 w 0 G S
403.448 561.258 m
403.448 560.964 l
0.072 w 0 G S
403.448 560.964 m
403.448 560.67 l
0.072 w 0 G S
403.448 560.67 m
403.507 560.376 l
0.072 w 0 G S
403.507 560.376 m
403.507 560.082 l
0.072 w 0 G S
403.507 560.082 m
403.507 559.788 l
0.072 w 0 G S
403.507 559.788 m
403.507 559.493 l
0.072 w 0 G S
u
u
511.471 631.529 m
502.471 626.294 L
502.471 636.765 L
511.471 631.529 L

0 g F
U
u
511.507 631.493 m
502.507 626.258 L
502.507 636.729 L
511.507 631.493 L

0.072 w 0 G s
U
223.507 631.493 m
503.683 631.493 l
0.072 w 0 G S
u
511.471 595.529 m
502.471 590.294 L
502.471 600.765 L
511.471 595.529 L

0 g F
U
u
511.507 595.493 m
502.507 590.258 L
502.507 600.729 L
511.507 595.493 L

0.072 w 0 G s
U
223.507 595.493 m
503.683 595.493 l
0.072 w 0 G S
u
511.471 559.529 m
502.471 554.294 L
502.471 564.765 L
511.471 559.529 L

0 g F
U
u
511.507 559.493 m
502.507 554.258 L
502.507 564.729 L
511.507 559.493 L

0.072 w 0 G s
U
223.507 559.493 m
503.683 559.493 l
0.072 w 0 G S
u
511.471 523.529 m
502.471 518.294 L
502.471 528.765 L
511.471 523.529 L

0 g F
U
u
511.507 523.493 m
502.507 518.258 L
502.507 528.729 L
511.507 523.493 L

0.072 w 0 G s
U
223.507 523.493 m
503.683 523.493 l
0.072 w 0 G S
u
511.471 487.529 m
502.471 482.294 L
502.471 492.765 L
511.471 487.529 L

0 g F
U
u
511.507 487.493 m
502.507 482.258 L
502.507 492.729 L
511.507 487.493 L

0.072 w 0 G s
U
223.507 487.493 m
503.683 487.493 l
0.072 w 0 G S
u
511.471 451.529 m
502.471 446.294 L
502.471 456.765 L
511.471 451.529 L

0 g F
U
u
511.507 451.493 m
502.507 446.258 L
502.507 456.729 L
511.507 451.493 L

0.072 w 0 G s
U
223.507 451.493 m
503.683 451.493 l
0.072 w 0 G S
u
511.471 667.529 m
502.471 662.294 L
502.471 672.765 L
511.471 667.529 L

0 g F
U
u
511.507 667.493 m
502.507 662.258 L
502.507 672.729 L
511.507 667.493 L

0.072 w 0 G s
U
223.507 667.493 m
503.683 667.493 l
0.072 w 0 G S
u
513.706 703.529 m
504.706 698.294 L
504.706 708.765 L
513.706 703.529 L

0 g F
U
u
513.742 703.493 m
504.742 698.258 L
504.742 708.729 L
513.742 703.493 L

0.072 w 0 G s
U
225.742 703.493 m
505.918 703.493 l
0.072 w 0 G S
U
u
u
300.118 493 m
408.118 680.059 L
439.294 662.059 L
331.294 475 L
300.118 493 L

1 g F
U
u
300.154 492.964 m
408.154 680.023 L
439.33 662.023 L
331.33 474.964 L
300.154 492.964 L

0.072 w 0 G s
U
u
329.294 499.529 m
329.294 497.028 327.266 495 324.765 495 c
322.263 495 320.235 497.028 320.235 499.529 c
320.235 502.031 322.263 504.059 324.765 504.059 c
327.266 504.059 329.294 502.031 329.294 499.529 c
0 g F
U
u
329.258 499.529 m
329.258 497.048 327.246 495.036 324.765 495.036 c
322.283 495.036 320.271 497.048 320.271 499.529 c
320.271 502.011 322.283 504.023 324.765 504.023 c
327.246 504.023 329.258 502.011 329.258 499.529 c
0.072 w 0 G S
U
u
419.294 655.471 m
419.294 652.969 417.266 650.941 414.765 650.941 c
412.263 650.941 410.235 652.969 410.235 655.471 c
410.235 657.972 412.263 660 414.765 660 c
417.266 660 419.294 657.972 419.294 655.471 c
0 g F
U
u
419.258 655.471 m
419.258 652.989 417.246 650.977 414.765 650.977 c
412.283 650.977 410.271 652.989 410.271 655.471 c
410.271 657.952 412.283 659.964 414.765 659.964 c
417.246 659.964 419.258 657.952 419.258 655.471 c
0.072 w 0 G S
U
U
u
420.471 562 m
420.471 593.059 L
404.471 593.059 L
404.471 562 L
420.471 562 L
1 g F
U
1 1 1 0 (New Color 255) 0 x
/_Symbol 24 24 0 0 z
[1 0 0 1 404.471 570.059 ]e
1  (q)t
T
u
500.471 563.529 m
500.471 587.529 L
482.471 587.529 L
482.471 563.529 L
500.471 563.529 L
1 g F
U
1 1 1 0 (New Color 255) 0 x
/_Times-Roman 24 24 0 0 z
[1 0 0 1 482.471 569.529 ]e
1  (E)t
T
U

%%Trailer
Adobe_Illustrator88 /terminate get exec
Adobe_pattern /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
