%!PS-Adobe-2.0 EPSF-2.0
%%Title: Untitled3.create
%%Creator: Create
%%CreationDate: Fri Mar  7 09:24:52 1997
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: -98 391 669 530
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^,_-GW/M
% _iuTh),t&NOdp^^7qG,G>2u_n\R%AdlucPU`5DBr7kt5jn[U65C]*.f_pB2&O3</(Z%<^'4i
% CJ8A?gB[K/"i3f]A+_\onSP(o9R6af$Sad;39TY'O!-n(d.>T@fr_fmMi,VI"R5>RR#nh>nd
% 6KU;/ne.;:700lNV::ia\4#l'OFJ[F>g8S\XVTmVE:-n+AJ7ZpaCN70Q4n7C!W&;Q4S\X?b$
% M^%A4>a9S5SAckg4(N#A[rTA(/LaR)ZPK)G<_CbR"9:=D9FbFYe<QYGHW+[A9s@f^)ZT^;l4
% WI,"c):4`[@s!8g$m;Wk7LFeW^d`^'#S:&=N4i1XJQ/Gm7N$7a6HCLMAWfPuX"e62>/A=g>[
% "SpVV??K)$\lRZCN;aEj%J.*<Lf=j5"k2%C08`hh;;F-ft.[8peLM71+J:Q*MJ3V>pmP!N-p
% )i.@mq3+2ieA@Q''KNqDH)4?Eu#V,lX_4#^jd?Yu'1q&e+DDM'SVa%W+nNeinfQN;YRf&g\,
% nRaH"(Z!FO_+SMM"#"lZ_:JGN<%W,igqhF3e/\:*RM_9Bui"5)eC#.8L6;Xl@8u#RT1d:F(1
% U&GFS:AUTUlHlIp#4Sg^Y"!XQRA"%XK!XHH8o$,Dbt<S18u!>)IWVhY"'R$7U?kM[hjAl:qq
% YJqJ.?+".A.A",ff^"DE!YB1E_`h^bZ,i6_D3@OIfc%6kYu9tsm:NutPTE_u5SI%GjI$s"TW
% 2`Q0r3KQ$l#(U,-@3_M(?2o\\%C8C!B:P]pT/a!"9Jc]C0/+[eDG>"UJp]\(D16E4724dRaG
% "7d=iYQ2H_8&!554nZ:u$llsMsl?]CZ0A->n.@'CaaTO+RJABU9=^%,pFKM$K+RpEq1>-cDA
% b'e[kstg_$lIpnZ8'gB(;Md<r%cPYqnqgJ=R2&?"!qXMoi\STc10GpRU'5B8_C:+Nq'jNGQ9
% cc?igOUl\ftn1Il6PI\Ic435U>VNC,#tHsjhNcG!mkdjn&Y8Kb`DEOg%*bBr[>3[+P*$)&lm
% 0Bmi4Hog1/X$6;MKRhhB\E,J0Hs4$5B6MQVOq"tVgJb-4]uT!C]YD^\me;jlZYmIWY\LpmpV
% M>c0Wu^FXSKDsHVUio-bAumXF1+r?d?$d3hCU&CD@5m`A2$iVKFG6++k[8`0\%*ThK#K;]j5
% Nk9T4>E.8:dSfrIc1o/NL#)'%1$o3AgYCR-g(\D#<_)Ia*@BO-#MVE2a:k?37OBLp#U&/`)_
% %\)PKo]D9Rt_-A,\3VX(O3^t-KVbE$ikdad9lP@8#%C7M`*SAc6*Z0!+pH\!)se)FZf2S-WD
% GrYRlD23+Y@g.5=FnW`!(?'8$?tTh?"J$\cHn+V&c'6qB:B(:RtO8prFLq:jm-AlM5ZSag6)
% dEs(eJ,h9&#EEgE"<Hkh#X%DB8:>=&ZY26[6'gUI=?tr6(ceH.ncq9SR7^J^15)?hM%#e#73
% EXK'mL!L%%<9S-0HO;["pGOLp>2ee1h=uW<?(k1=I(JGCVq(5QFcnTbkOI2GK2D0o$Bl-&<l
% PfPM`BqZq]\e>X4,f#F95*)&KX8Wa36@1!,D6Q47##!-#-%B8V!71.CpLIO*#X&;82+HV+=@
% &#:N"Mc>(kHm<bOH[I)l2T!%*$>CD(fgBF!03F*=n6EUQ%4C?bQNPT0d%&'#XA\_qRCcYn7a
% 6bkVj+#(`Ydf(R94GGg[1S%2^2f7.hpc!4o6#_$a?d'I%d8+Fl]_,61fA.1'Xt7"UEGM*.iW
% "$?]d(B?5k#m^O).OZZ<L68OO"!1Qu-.Y?FTWG@79?RZ%_BcEEJP9>,cM3T%\lPO/;[pME!l
% 0>fqR)kbje4nd-s.T)[OaHH"Bbh8Mm;>9H&XuF+8ZgV'Mc(s3[Fo.=ceICjE7Z6lRPPfC/WH
% B(6*sCQWU3uLrARYXcDMto9spYb3HDJ/*O*8Z-$,f%TeFZh..&nVp_fDp,U>[CK_U67+jbi[
% Vh'C>Uc.HW2^sR>3)bt^RN@7^2pq,9J.a>RgC[Nf!WkIYB3S8f':hq&h3$]8'NcSr>HE``>.
% iTakOY\"u$_79l(q#4B(t)e6*0^D1`cu?d##@^CLU'2CdKffR3CbrXJ(G")M0&'%k"%Q17rh
% m)Siq=0aBsXY57F=eH,P>>RGt4nC*).TXClRA^2h-pYW%9_68.c#Hh*gIW=f&M9_F!%Z^\*H
% 7+U!nHh[-PTFK&Sr[(HYcb7;,#.u@N[;,&:uMLR=N<<TKl$r!upURRA,@CalG9+3empi-%JJ
% o!E_W1/-40;pCkd%"RM_?HSPW>NPL+$a@iSNkn:nB]g\6i!)tLV#=#L,70&B!1s9G_Q>`Q8m
% Vdj[]AYN/jccT[NZ&)*MJEW/&9*`H+Q>NH3o;sD+kq)&!6I#qr:uXE(c5P40T/=P]$Y#4[*P
% >=9P+LGR::\%x
% EndEmbeddedGraphics N 1968 7b0 E c8 S 376fa R 39fdc0f9
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
-98 391 767 139 rectclip
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 -91 399] concat
[1.405608 0 0 1 0 0] concat
0 0 0 1 10 SU
gsave
/Helvetica-Bold findfont 24 scalefont [1 0 0 -1 0 0] makefont
636
exch
defineuserobject
636 execuserobject setfont
430 15 T
20 flipV
10 10 T
-9 9 T
N 0 0 m
0 nxsetgray
0 0 m
(A) show
0 0 T
grestore
grestore
0 0 2 1 10 SU
354 43 T
N
2 L
0 nxsetgray
150 0 0 0 line
0 150 0 arrow
180 0 0 arrow
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 7] concat
0 0 0 1 10 SU
gsave
636 execuserobject setfont
117 8 T
20 flipV
10 10 T
-9 9 T
N 0 0 m
0 nxsetgray
0 0 m
(B) show
0 0 T
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 27] concat
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 1 12] concat
0 0 1 1 10 SU
15 15 T
N
1 L
0 nxsetgray
474 0 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
9 9 T
N
1 L
0 nxsetgray
486 0 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
15 15 T
N
1 L
0 nxsetgray
0 12 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
9 27 T
N
1 L
0 nxsetgray
6 0 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
9 9 T
N
1 L
0 nxsetgray
0 18 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
489 15 T
N
1 L
0 nxsetgray
0 12 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
495 9 T
N
1 L
0 nxsetgray
0 18 0 0 line
0 0 T
grestore
0 0 1 1 10 SU
489 27 T
N
1 L
0 nxsetgray
6 0 0 0 line
0 0 T
grestore
grestore
grestore
0 0 0 1 10 SU
16 9 T
N
0 nxsetgray
216 0 0 0 line
0 216 0 arrow
180 0 0 arrow
0 0 T
grestore
grestore
grestore
grestore
grestore
grestore
grestore
0 nxsetgray
0 0 0.226316 1 10 SU
gsave
[1 0 0 1 239 456] concat
0 0 0 1 10 SU
gsave
/Times-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
637
exch
defineuserobject
637 execuserobject setfont
13 23 T
15 flipV
7.5 7.5 T
-6.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(X) show
0 0 T
grestore
grestore
0 0 0 1 10 SU
gsave
637 execuserobject setfont
101 23 T
15 flipV
7.5 7.5 T
-6.5 6 T
N 0 0 m
0 nxsetgray
0 0 m
(Y) show
0 0 T
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 1 1] concat
[1.508772 0 0 1.203704 0 0] concat
0 0 1 1 10 SU
[1 0 0 -1 51 27] concat
N
1 L
0 nxsetgray
0 0 12 6 rectstroke
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 61 1] concat
0 0 1 1 10 SU
[1 0 0 -1 2 32] concat
N
1 L
0 nxsetgray
0 0 48 18 rectstroke
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 2 14] concat
N
1 L
0 nxsetgray
gsave
12 12 0 0 oval 0.083333 0.083333 S s
grestore
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 38 14] concat
N
1 L
0 nxsetgray
gsave
12 12 0 0 oval 0.083333 0.083333 S s
grestore
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 8 38] concat
N
0.331034 nxsetgray
0 0 36 6 rectfill
1 L
0 nxsetgray
0 0 36 6 rectstroke
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 14 44] concat
N
0.462065 nxsetgray
0 0 24 6 rectfill
1 L
0 nxsetgray
0 0 24 6 rectstroke
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 20 50] concat
N
0.531037 nxsetgray
0 0 12 6 rectfill
1 L
0 nxsetgray
0 0 12 6 rectstroke
0 0 T
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 1 1] concat
0 0 1 1 10 SU
[1 0 0 -1 2 32] concat
N
1 L
0 nxsetgray
0 0 48 18 rectstroke
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 38 14] concat
N
1 L
0 nxsetgray
gsave
12 12 0 0 oval 0.083333 0.083333 S s
grestore
0 0 T
grestore
0 0 1 1 10 SU
[1 0 0 -1 2 14] concat
N
1 L
0 nxsetgray
gsave
12 12 0 0 oval 0.083333 0.083333 S s
grestore
0 0 T
grestore
grestore
grestore
grestore
grestore
0 0 0.15 1 10 SU
gsave
637 execuserobject setfont
121 20 T
19 flipV
23.5 9.5 T
-22.5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(\(1 kg\)) show
0 0 T
grestore
grestore
0 0 0 1 10 SU
gsave
637 execuserobject setfont
30 20 T
19 flipV
23.5 9.5 T
-22.5 4 T
N 0 0 m
0 nxsetgray
0 0 m
(\(1 kg\)) show
0 0 T
grestore
grestore
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-Bold
%%+ Helvetica-Bold
