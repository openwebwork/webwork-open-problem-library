%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MiniCad+ 4.0
%%Title: Pend_block.eps
%%CreationDate: 5/20/1996
%%Pages: 0
%%BoundingBox:203 507 401 660
%%EndComments

save
% Basic Definitions
/gs {gsave} def
/gr {grestore} def
/t {translate} def
/sc {scale} def
/sg {setgray} def
/srgb {setrgbcolor} def
/ff {findfont} def
/mf {makefont} def
/sf {setfont} def
/slw {setlinewidth} def
/str {stroke} def
/slc {setlinecap} def

% Polyline operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{curveto} def
	/C /c load def
	/v				% x2 y2 x3 y3 v -
	{currentpoint 6 2 roll curveto} def
	/V /v load def
	/y				% x1 y1 x2 y2 y -
	{2 copy curveto} def
	/Y /y load def
	/l				% x y l -
	{lineto} def
	/L /l load def
	/m				% x y m -
	{moveto} def
	/dot
	{currentpoint transform exch 1 add exch itransform lineto} def
	}
	{%else
	/c
	{pl curveto} def
	/C /c load def
	/v
	{currentpoint 6 2 roll pl curveto} def
	/V /v load def
	/y
	{pl 2 copy curveto} def
	/Y /y load def
	/l
	{pl lineto} def
	/L /l load def
	/m
	{pl moveto} def
	/dot
	{currentpoint transform exch 1 add exch itransform lineto} def
}ifelse

% Rectangle: left top right bottom R -
/rectangleDict 4 dict def
/R
	{rectangleDict begin
		/bottom exch def
		/right exch def
		/top exch def
		/left exch def
		right bottom m
		right top L
		left top L
		left bottom L
		right bottom L
		closepath
	end}
bind def

% Oval: left top right bottom OV -
/ovalDict 10 dict def
/OV
	{ovalDict begin
		/bottom exch def 
		/right exch def
		/top exch def
		/left exch def
		/yrad bottom top sub 2 div def
		/xrad right left sub 2 div def
		/y yrad top add def
		/x xrad left add def
		x y t xrad yrad sc
		newpath 0 0 1 0 360 arc closepath
		1 xrad div 1 yrad div sc	% Reverse scaling.
	end}
bind def

% Rounded Rectangle: left top right bottom ovalwidth ovalheight RR -
/rRectangleDict 10 dict def
/RR {
	rRectangleDict begin
	2 div /hvy exch def
	2 div /hvx exch def
	/bottom exch def
	/right exch def
	/top exch def
	/left exch def
	/nleft hvx left add hvx div def
	/ntop hvy top add hvy div def
	/nright right hvx sub hvx div def
	/nbottom bottom hvy sub hvy div def
	hvx hvy sc
	newpath
	nright nbottom 1 90 0 arcn
	nright ntop 1 360 270 arcn
	nleft ntop 1 270 180 arcn
	nleft nbottom 1 180 90 arcn
	closepath
	1 hvx div 1 hvy div sc
	end
}
bind def

% Arc: left top right bottom startangle endangle A -
/arcDict 12 dict def
/A {
	arcDict begin
	/endangle exch def
	/startangle exch def
	/bottom exch def
	/right exch def
	/top exch def
	/left exch def
	/yrad bottom top sub 2 div def
	/y yrad top add def
	/xrad right left sub 2 div def
	/x xrad left add def
	x y t xrad yrad neg sc
	0 0 1 startangle endangle arc
	1 xrad div 1 yrad neg div sc	% Reverse scaling.
	end
}
bind def

% Polygon: xn yn ... x1 y1 n-1 P -
/polyDict 1 dict def
/P {
	polyDict begin
	/numOfPoints exch def
	m numOfPoints {L} repeat
	end
}
bind def

% Pattern fill: fR fG fB bR bG bB [p0 ... p7] patfill -
/fillDict 11 dict def
/patfill {
	fillDict begin
	gs
	/fa exch def				% Grab pattern.
	srgb						% Set background color.
	17.3611 17.3611 sc		% Scale back to 72 dpi from 1250.
	flattenpath pathbbox		% Get path bounding box.
	/ury exch def
	/urx exch def
	/lly exch def
	/llx exch def			% Get edges.
	clip
	newpath
	llx lly m
	llx ury L
	urx ury L
	urx lly L
	closepath fill			% Fill in background color.
	srgb						% Set foreground color.
	/w urx llx sub ceiling cvi def
	/h ury lly sub ceiling cvi def
	/bytes w 8 div ceiling cvi def
	/patstr bytes 8 mul string def
	/row 0 def
	/patproc {
		0 1 7 {
			/row exch def
			row bytes mul 1 row 1 add bytes mul 1 sub
			{patstr exch fa row 8 mod get put} for
		} for
		patstr
	} def
	llx lly t
	w h sc
	w h true [w 0 0 h 0 0] patproc imagemask
	gr
	end
}
bind def

% Outline string show: string olshow -
/outlinedict 1 dict def
/olshow {
	outlinedict begin
	/cs 1 string def
	{
		cs 0 3 -1 roll put	% Stuff the char into the string cs.
		gs 1 sg cs show gr	% Paint the char white and move back.
		cs true charpath
		currentpoint str m	% Draw char outline.
	} forall
	end
}
bind def

% Shadow string show: string shadow-x shadow-y shshow -
/shadowdict 3 dict def
/shshow {
	shadowdict begin
	/shady exch def
	/shadx exch def
	/cs 1 string def
	{
		cs 0 3 -1 roll put	% Stuff the char into the string cs.
		currentpoint
		shadx shady rmoveto	% Draw shadow.
		cs show m
		gs 1 sg cs show gr	% Paint char white.
		cs true charpath
		currentpoint str m	% Draw char outline.
		shadx 0 rmoveto		% Move to next char position.
	} forall
	end
}
bind def

% Text Encoding Procedure
/Z					% array literal literal direction Z -
{
pop
findfont begin
currentdict dup length 1 add dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall
/FontName exch def dup length 0 ne
{
	/Encoding Encoding 256 array copy def
	0 exch
	{
		dup type /nametype eq
		{Encoding 2 index 2 index put pop 1 add}
		{exch pop} ifelse
	} forall
} if pop
currentdict dup end end
/FontName get exch definefont pop
} def
%%EndProlog

gs
0 792 t
0.058 -0.058 sc
2 slc
gs
3767 4731 6892 4887 R
0 0 0 1 1 1 [76 210 83 45 150 89 70 179] patfill
gr
gs
3767.625 4731.625 6892.375 4887.375 R
1.25 slw 0 sg str
gr
gs
5955 4106 6736 4731 R
0.75 sg fill
gr
gs
5955.625 4106.625 6736.375 4731.375 R
1.25 slw 0 sg str
gr
gs
3767 2543 4079 2856 OV
0.5 sg fill
gr
gs
3767.625 2543.625 4079.375 2856.375 OV
1.25 slw 0 sg str
gr
gs
5798 4575 5781 4574 5763 4571 5747 4566 5731 4559 5715 4551 5701 4541 5688 4529 
5676 4516 5666 4502 5658 4486 5651 4470 5646 4453 5643 4436 5642 4419 5643 4401 
5646 4384 5651 4367 5658 4351 5666 4335 5676 4321 5688 4308 5701 4296 5715 4286 
5731 4278 5747 4271 5763 4266 5781 4263 5798 4262 5816 4263 5833 4266 5850 4271 
5866 4278 5881 4286 5896 4296 5909 4308 5920 4321 5931 4335 5939 4351 5946 4367 
5951 4384 5954 4401 5955 4419 5954 4436 5951 4453 5946 4470 5939 4486 5931 4502 
5920 4516 5909 4529 5896 4541 5881 4551 5866 4559 5850 4566 5833 4571 5816 4574 
5798 4575 56 P closepath
1 sg fill
gr
gs
5798.625 4575.625 m
5781.625 4574.625 L
1.25 slw 0 sg str
gr
gs
5781.625 4574.625 m
5763.625 4571.625 L
1.25 slw 0 sg str
gr
gs
5763.625 4571.625 m
5748.625 4566.625 L
1.25 slw 0 sg str
gr
gs
5747.625 4566.625 m
5731.625 4559.625 L
1.25 slw 0 sg str
gr
gs
5701.625 4541.625 m
5688.625 4529.625 L
1.25 slw 0 sg str
gr
gs
5688.625 4529.625 m
5676.625 4516.625 L
1.25 slw 0 sg str
gr
gs
5676.625 4516.625 m
5667.625 4503.625 L
1.25 slw 0 sg str
gr
gs
5646.625 4454.625 m
5646.625 4453.625 L
1.25 slw 0 sg str
gr
gs
5646.625 4453.625 m
5643.625 4436.625 L
1.25 slw 0 sg str
gr
gs
5643.625 4436.625 m
5642.625 4419.625 L
1.25 slw 0 sg str
gr
gs
5642.625 4419.625 m
5643.625 4404.625 L
1.25 slw 0 sg str
gr
gs
5657.625 4353.625 m
5658.625 4351.625 L
1.25 slw 0 sg str
gr
gs
5658.625 4351.625 m
5666.625 4335.625 L
1.25 slw 0 sg str
gr
gs
5666.625 4335.625 m
5676.625 4321.625 L
1.25 slw 0 sg str
gr
gs
5676.625 4321.625 m
5685.625 4311.625 L
1.25 slw 0 sg str
gr
gs
5728.625 4280.625 m
5731.625 4278.625 L
1.25 slw 0 sg str
gr
gs
5731.625 4278.625 m
5747.625 4271.625 L
1.25 slw 0 sg str
gr
gs
5747.625 4271.625 m
5763.625 4266.625 L
1.25 slw 0 sg str
gr
gs
5763.625 4266.625 m
5776.625 4264.625 L
1.25 slw 0 sg str
gr
gs
5829.625 4265.625 m
5833.625 4266.625 L
1.25 slw 0 sg str
gr
gs
5833.625 4266.625 m
5850.625 4271.625 L
1.25 slw 0 sg str
gr
gs
5850.625 4271.625 m
5866.625 4278.625 L
1.25 slw 0 sg str
gr
gs
5866.625 4278.625 m
5876.625 4283.625 L
1.25 slw 0 sg str
gr
gs
5917.625 4317.625 m
5920.625 4321.625 L
1.25 slw 0 sg str
gr
gs
5920.625 4321.625 m
5931.625 4335.625 L
1.25 slw 0 sg str
gr
gs
5931.625 4335.625 m
5939.625 4351.625 L
1.25 slw 0 sg str
gr
gs
5939.625 4351.625 m
5943.625 4361.625 L
1.25 slw 0 sg str
gr
gs
5955.625 4412.625 m
5955.625 4419.625 L
1.25 slw 0 sg str
gr
gs
5955.625 4419.625 m
5954.625 4436.625 L
1.25 slw 0 sg str
gr
gs
5954.625 4436.625 m
5951.625 4453.625 L
1.25 slw 0 sg str
gr
gs
5951.625 4453.625 m
5948.625 4462.625 L
1.25 slw 0 sg str
gr
gs
5925.625 4510.625 m
5920.625 4516.625 L
1.25 slw 0 sg str
gr
gs
5920.625 4516.625 m
5909.625 4529.625 L
1.25 slw 0 sg str
gr
gs
5909.625 4529.625 m
5896.625 4541.625 L
1.25 slw 0 sg str
gr
gs
5896.625 4541.625 m
5889.625 4546.625 L
1.25 slw 0 sg str
gr
gs
5841.625 4569.625 m
5833.625 4571.625 L
1.25 slw 0 sg str
gr
gs
5833.625 4571.625 m
5816.625 4574.625 L
1.25 slw 0 sg str
gr
gs
5816.625 4574.625 m
5798.625 4575.625 L
1.25 slw 0 sg str
gr
gs
5746 2648 5850 2752 OV
0 sg fill
gr
gs
5798.625 2700.625 m
4079.625 2700.625 L
1.25 slw 0 sg str
gr
gs
5798.625 2700.625 m
5798.625 2751.625 L
1.25 slw 0 sg str
gr
gs
5798.625 2804.625 m
5798.625 2855.625 L
1.25 slw 0 sg str
gr
gs
5798.625 2908.625 m
5798.625 2959.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3012.625 m
5798.625 3064.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3117.625 m
5798.625 3168.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3221.625 m
5798.625 3272.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3325.625 m
5798.625 3376.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3429.625 m
5798.625 3480.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3533.625 m
5798.625 3584.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3637.625 m
5798.625 3689.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3742.625 m
5798.625 3793.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3846.625 m
5798.625 3897.625 L
1.25 slw 0 sg str
gr
gs
5798.625 3950.625 m
5798.625 4001.625 L
1.25 slw 0 sg str
gr
gs
5798.625 4054.625 m
5798.625 4105.625 L
1.25 slw 0 sg str
gr
gs
5798.625 4158.625 m
5798.625 4209.625 L
1.25 slw 0 sg str
gr
gr
%%Trailer
restore
