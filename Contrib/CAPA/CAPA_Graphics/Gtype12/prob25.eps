%!PS-Adobe-2.0 EPSF-2.0
%%Title: 
%%Creator: AppsoftDraw
%%CreationDate: Mon Sep 26 11:54:33 1994
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 0 0 263 350
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.0
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{_NXDoImageOp}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
_NXLevel2{/_NXsethsb where{pop}{/_NXsethsb /sethsbcolor load def}ifelse /sethsbcolor{_NXsethsb currentrgbcolor nxsetrgbcolor}def /setrgbcolor{nxsetrgbcolor}bind def /setgray{nxsetgray}bind def
}if
gsave
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/TopDrawDict 250 dict def
TopDrawDict begin /prt_stack {
    (***Top of Stack\012) print pstack (---Bottom of Stack\012) print flush
} def /prt_top {
    (top item of stack) == dup == flush
} def /prtmat matrix def /prt_ctm {
    (current transformation matrix: ) print prtmat currentmatrix == flush
} def /tmmat matrix def /obmat matrix def /strmat matrix def /pgmat matrix def /idmat matrix def /sc1mt matrix def /sc2mt matrix def /sc3mt matrix def /sc4mt matrix def /sc5mt matrix def /sc6mt matrix def /sc7mt matrix def /inmat matrix def /ctmmt matrix
def /octmmt matrix def /clpmt matrix def /weglet_mat matrix def /crlinw 1 def crlinw setlinewidth /crlinjn 0 def crlinjn setlinejoin /crlincp 0 def crlincp setlinecap /crmtrlmt currentmiterlimit def /crstrpat 0 def /crfilpat 0 def /crflat currentflat def
/dftflat currentflat def /strinclr false def /crlingry 0 def /crlinred 0 def /crlingrn 0 def /crlinblu 0 def /crlinalph 1 def /filinclr false def /crfilgry 0 def /crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /crfilalph 1 def /crfilstyl 0 def /txtdraw
true def /txtinclr false def /txtwpat false def /txtwittrans false def /crtxtgry 0 def /crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /crtxtalph 1 def /crtxtpat 0 def /txlndraw true def /txlninclr false def /txlnwpat false def /txlnwittrans false def
/crtxlngry 0 def /crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /crtxlnalph 1 def /crtxlnpat 0 def /hilittxt false def /strdsh [2 2] def /dshpatoff 0 def /usedash false def /filwpat false def /strwpat false def /filwittrans false def /strwittrans
false def /crfrtarw false def /crendarw false def /rsave 0 def /esave 0 def /sslsave 0 def /lsave 0 def /clpsave 0 def /pathsave 0 def /tpatstr 10 string def /ptdist {
    sub dup mul 3 1 roll sub dup mul add sqrt
} bind def /dodrawctm {
    octmmt currentmatrix pop idmat obmat concatmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawctm {
    obmat inmat invertmatrix ctmmt currentmatrix sc1mt concatmatrix setmatrix
} bind def /undrawmat {
    obmat aload pop 7 -1 roll astore
} bind def /unpagectm {
    octmmt setmatrix
} bind def /unpagemat {
    pgmat aload pop 7 -1 roll astore
} bind def /drtan {
    gsave 1 setalpha 0 setlinewidth 0.333333 setgray moveto lineto stroke grestore
} bind def /drdgrdln {
    gsave 1 setalpha 0 setlinewidth [1 2] 0 setdash setgray moveto lineto stroke grestore
} bind def /drgrdln {
    gsave 1 setalpha 0 setlinewidth setgray moveto lineto stroke grestore
} bind def end
TopDrawDict begin /rpath {
    newpath moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} bind def /rfpath {
    /rad3 exch def /hh3 exch def /ww3 exch def /yy1 exch def /xx1 exch def /xx2 xx1 ww3 add def /yy2 yy1 hh3 add def newpath xx1 yy1 rad3 hh3 0 gt {
        add
    } {
        sub
    } ifelse moveto xx1 yy1 xx2 yy1 rad3 arcto 4 {
        pop
    } repeat xx2 yy1 xx2 yy2 rad3 arcto 4 {
        pop
    } repeat xx2 yy2 xx1 yy2 rad3 arcto 4 {
        pop
    } repeat xx1 yy2 xx1 yy1 rad3 arcto 4 {
        pop
    } repeat closepath
} bind def /rfill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        4 2 roll rpath crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        rectfill pop
    } ifelse grestore
} bind def /rstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse 4 2 roll rpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /rffill {
    gsave dodrawctm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse rfpath filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /rfstroke {
    gsave dodrawctm crlinalph setalpha crlinw setlinewidth crlincp setlinecap crlinjn setlinejoin crmtrlmt setmiterlimit usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse rfpath unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /mkrpath {
    dodrawctm rpath unpagectm
} bind def end
TopDrawDict begin /p1x 0 def /p1y 0 def /p2x 0 def /p2y 0 def /ssl {
    gsave dodrawctm crfrtarw crendarw or {
        /p1y 1 index def /p1x 2 index def /p2y 1 index 4 index add def /p2x 2 index 5 index add def newpath moveto rlineto
    } {
        newpath moveto rlineto
    } ifelse crlinalph setalpha crlinw setlinewidth crlincp setlinecap usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse crfrtarw {
        2 copy currentlinewidth exch p2x p2y p1x p1y arow
    } if crendarw {
        2 copy currentlinewidth exch p1x p1y p2x p2y arow
    } if unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def end
TopDrawDict begin /estroke {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /efill {
    gsave dodrawctm translate scale newpath dup dup 0 360 arc closepath unpagectm crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /apstroke {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc pie chord or {
        closepath
    } if crlinalph setalpha pie not chord not and {
        crfrtarw {
            2 copy crlinw exch gsave newpath angle1 1 add cos radius mul radius add angle1 1 add sin radius mul radius add moveto angle1 cos radius mul radius add angle1 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if crendarw {
            2 copy crlinw exch gsave newpath angle2 1 sub cos radius mul radius add angle2 1 sub sin radius mul radius add moveto angle2 cos radius mul radius add angle2 sin radius mul radius add lineto unpagectm {
                
            } {
                
            } {
                
            } {
                
            } pathforall arow grestore
        } if
    } if crlincp setlinecap crlinalph setalpha crlinw setlinewidth usedash {
        strdsh dshpatoff setdash
    } if strinclr {
        crlinred crlingrn crlinblu setrgbcolor
    } {
        crlingry setgray
    } ifelse unpagectm concat strwpat {
        crstrpat findfont exch strwittrans {
            trpatstrk
        } {
            oppatstrk
        } ifelse
    } {
        stroke pop
    } ifelse grestore
} bind def /apfill {
    gsave dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup 5 -2 roll arc pie chord or {
        closepath
    } if 1 xscale div 1 yscale div scale crfilalph setalpha filinclr {
        crfilred crfilgrn crfilblu setrgbcolor
    } {
        crfilgry setgray
    } ifelse filwpat {
        crfilpat findfont exch filwittrans {
            trpatfil
        } {
            oppatfil
        } ifelse
    } {
        fill pop
    } ifelse grestore
} bind def /mkepath {
    dodrawctm /chord exch def /pie exch def /radius exch def /yscale exch def /xscale exch def /yy exch def /xx exch def /angle2 exch def /angle1 exch def /closed exch def xx yy translate xscale yscale scale newpath pie {
        radius dup moveto
    } if radius dup dup angle1 angle2 arc closed pie or chord or {
        closepath
    } if unpagectm
} bind def end
TopDrawDict begin /closedspl false def /nspans 0 def /sstrt {
    gsave dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sstrtpath {
    dodrawctm /closedspl exch def /nspans 0 def newpath
} bind def /sadd {
    nspans 0 eq {
        moveto
    } {
        pop pop
    } ifelse curveto /nspans nspans 1 add def
} bind def /splstroke {
    nspans 0 gt {
        unpagectm concat closedspl {
            closepath
        } if crlincp setlinecap crlinjn setlinejoin crlinalph setalpha crlinw setlinewidth crmtrlmt setmiterlimit usedash {
            strdsh dshpatoff setdash
        } if strinclr {
            crlinred crlingrn crlinblu setrgbcolor
        } {
            crlingry setgray
        } ifelse strwpat {
            flattenpath crstrpat findfont exch strwittrans {
                trpatstrk
            } {
                oppatstrk
            } ifelse
        } {
            stroke pop
        } ifelse
    } {
        pop pop
    } ifelse grestore
} bind def /splfill {
    nspans 0 gt {
        closedspl {
            closepath
        } if crfilalph setalpha filinclr {
            crfilred crfilgrn crfilblu setrgbcolor
        } {
            crfilgry setgray
        } ifelse filwpat {
            flattenpath crfilpat findfont exch crfilstyl 0 eq {
                filwittrans {
                    trpateofil
                } {
                    oppateofil
                } ifelse
            } {
                filwittrans {
                    trpatfil
                } {
                    oppatfil
                } ifelse
            } ifelse
        } {
            crfilstyl 0 eq {
                eofill
            } {
                fill
            } ifelse pop
        } ifelse
    } if grestore
} bind def /mksplpath {
    nspans 0 gt {
        closedspl {
            closepath
        } if
    } if
} bind def end
TopDrawDict begin /defpat {
    7 dict begin /FontDict 9 dict def FontDict begin /cache exch def /key exch def /proc exch cvx def /mtx exch matrix invertmatrix def /height exch def /width exch def /ctm matrix currentmatrix def /ptm matrix identmatrix def /str
(12345678901234567890123456789012) def end /FontBBox [ 0 0 FontDict /width get FontDict /height get ] def /FontMatrix FontDict /mtx get def /Encoding StandardEncoding def /FontType 3 def /BuildChar {
        pop begin FontDict begin width 0 cache {
            0 0 width height setcachedevice
        } {
            setcharwidth
        } ifelse 0 0 moveto width 0 lineto width height lineto 0 height lineto closepath clip newpath gsave proc grestore end end
    } def FontDict /key get currentdict definefont end
} bind def /patpath {
    dup type /dicttype eq {
        begin unpagectm
    } {
        exch begin unpagectm concat
    } ifelse currentdict setfont FontDict begin FontMatrix concat width 0 dtransform round width div exch round dup 0 eq {
        pop 1
    } if width div exch 0 height dtransform round dup 0 eq {
        pop 1
    } if height div exch round height div exch 0 0 transform round exch round exch ptm astore setmatrix pathbbox height div ceiling height mul 4 1 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1 roll width div floor width mul 4
1
roll 2 index sub height div ceiling cvi exch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptm invertmatrix pop {
        gsave ptm concat dup str length idiv {
            str show
        } repeat dup str length mod str exch 0 exch getinterval show grestore 0 height rmoveto
    } repeat pop end end
} bind def /patfil {
    gsave clip patpath grestore newpath
} bind def /trpatfil {
    patfil
} bind def /oppatfil {
    gsave 1 setgray 1 setalpha fill grestore patfil
} bind def /trpateofil {
    pateofil
} bind def /oppateofil {
    gsave 1 setgray 1 setalpha fill grestore pateofil
} bind def /pateofil {
    gsave eoclip patpath grestore newpath
} bind def /patstrk {
    gsave strokepath clip patpath grestore newpath
} bind def /trpatstrk {
    patstrk
} bind def /oppatstrk {
    gsave 1 setgray 1 setalpha stroke grestore patstrk
} bind def /patashow {
    (0) exch {
        2 copy 0 exch put pop dup false charpath currentpoint 5 index type /dicttype eq {
            5 index patfil
        } {
            6 index 6 index patfil
        } ifelse moveto 3 copy pop rmoveto
    } forall pop pop pop dup type /dicttype ne {
        pop
    } if pop
} bind def /patshow {
    0 exch 0 exch patashow
} bind def /rpatfil {
    gsave setalpha pop setrgbcolor rpath tpatstr cvs cvn invpats {
        piddict exch get
    } {
        ipiddict exch get
    } ifelse findfont oppatfil grestore
} bind def /tpatstr 10 string def /getpat {
    tpatstr cvs cvn invpats {
        piddict exch get
    } {
        ipiddict exch get
    } ifelse
} bind def end
TopDrawDict begin 8 8 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 8 2 rectfill
} bind /hline1 true defpat pop 16 16 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 16 8 rectfill
} bind /hline2 true defpat pop 32 32 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 32 16 rectfill
} bind /hline3 true defpat pop 8 8 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 2 8 rectfill
} bind /vline1 true defpat pop 16 16 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 8 16 rectfill
} bind /vline2 true defpat pop 32 32 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 16 32 rectfill
} bind /vline3 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 1 setlinewidth stroke
} bind /rdline1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 3 setlinewidth stroke
} bind /rdline2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 4 setlinewidth stroke
} bind /rdline3 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 1 setlinewidth stroke
} bind /ldline1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 3 setlinewidth stroke
} bind /ldline2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 4 setlinewidth stroke
} bind /ldline3 true defpat pop 7 7 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 4 0 moveto 4 7 lineto 0 4 moveto 7 4 lineto 0.5 setlinewidth stroke
} bind /gray1 true defpat pop 11 11 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 6 0 moveto 6 11 lineto 0 6 moveto 11 6 lineto 0.5 setlinewidth stroke
} bind /gray2 true defpat pop 15 15 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 8 0 moveto 8 15 lineto 0 8 moveto 15 8 lineto 0.5 setlinewidth stroke
} bind /gray3 true defpat pop 19 19 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 10 0 moveto 10 19 lineto 0 10 moveto 19 10 lineto 0.5 setlinewidth stroke
} bind /gray4 true defpat pop 23 23 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 12 0 moveto 12 23 lineto 0 12 moveto 23 12 lineto 0.5 setlinewidth stroke
} bind /gray5 true defpat pop 31 31 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 16 0 moveto 16 31 lineto 0 16 moveto 31 16 lineto 0.5 setlinewidth stroke
} bind /gray6 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 10 0 moveto 20 10 lineto 0 10 moveto 10 20 lineto 10 0 moveto 0 10 lineto 20 10 moveto 10 20 lineto 0.25 setlinewidth stroke
} bind /xhatch1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 2 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 0.5 setlinewidth stroke
} bind /xhatch2 true defpat pop 60 60 [ 300 72 div 0 0 300 72 div 0 0 ] {
    4 4 scale 2 setlinecap 7.5 0 moveto 15 7.5 lineto 0 7.5 moveto 7.5 15 lineto 7.5 0 moveto 0 7.5 lineto 15 7.5 moveto 7.5 15 lineto 2 setlinewidth stroke
} bind /xhatch3 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 10 10 4 0 360 arc closepath fill
} bind /dots1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 15 15 8 0 360 arc closepath fill
} bind /dots2 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 25 25 20 0 360 arc closepath fill
} bind /dots3 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 26 moveto 50 0 rlineto 0 1 moveto 50 0 rlineto 26 50 moveto 0 -25 rlineto 1 25 moveto 0 -25 rlineto 1 setlinewidth stroke
} bind /bricks true defpat pop 25 25 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0.5 0.5 scale 0 0 25 25 rectfill 25 25 25 25 rectfill
} bind /check1 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 25 25 rectfill 25 25 25 25 rectfill
} bind /check2 true defpat pop 80 80 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 0 40 40 rectfill 40 40 40 40 rectfill
} bind /check3 true defpat pop 20 20 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 10 0 moveto 20 10 lineto 10 20 lineto 0 10 lineto closepath fill
} bind /diamond1 true defpat pop 30 30 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 15 0 moveto 30 15 lineto 15 30 lineto 0 15 lineto closepath fill
} bind /diamond2 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    newpath 25 0 moveto 50 25 lineto 25 50 lineto 0 25 lineto closepath fill
} bind /diamond3 true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 10 10 30 30 rectfill 0 0 moveto 50 50 lineto 0 50 moveto 50 0 lineto 1 setlinewidth stroke
} bind /weave true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 25 25 22 0 360 arc closepath 1 setlinewidth stroke
} bind /donut true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap -20 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 5 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 30 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 55 0 moveto 25 25 rlineto
-25 25 rlineto 25 25 rlineto -25 25 rlineto 80 0 moveto 25 25 rlineto -25 25 rlineto 25 25 rlineto -25 25 rlineto 1 setlinewidth stroke
} bind /ziggy true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 -20 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 5 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 30 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 0 55 moveto 25 25 rlineto
25
-25 rlineto 25 25 rlineto 25 -25 rlineto 0 80 moveto 25 25 rlineto 25 -25 rlineto 25 25 rlineto 25 -25 rlineto 1 setlinewidth stroke
} bind /zaggy true defpat pop 80 80 [ 300 72 div 0 0 300 72 div 0 0 ] {
    2 setlinecap 0 0 moveto 0 40 lineto 40 40 lineto 40 80 lineto 80 80 lineto 0 60 moveto 20 60 lineto 20 80 lineto 20 0 moveto 20 20 lineto 60 20 lineto 60 60 lineto 80 60 lineto 1 setlinewidth stroke
} bind /zaggyd true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 12.5 moveto 6.25 0 rlineto 0 37.5 moveto 31.25 0 rlineto 50 12.5 moveto -31.25 0 rlineto 50 37.5 moveto -6.25 0 rlineto 12.5 0 moveto 0 6.25 rlineto 37.5 0 moveto 0 31.25 rlineto 12.5 50 moveto 0 -31.25 rlineto 37.5 50 moveto 0 -6.25
rlineto 1 setlinewidth stroke
} bind /plusses true defpat pop 50 50 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 0 10 moveto 10 0 rlineto 0 -10 rlineto 0 40 moveto 10 0 rlineto 0 10 rlineto 50 10 moveto -10 0 rlineto 0 -10 rlineto 50 40 moveto -10 0 rlineto 0 10 rlineto 7 7 moveto 36 0 rlineto 0 36 rlineto -36 0 rlineto closepath 1 setlinewidth
stroke
} bind /boxes true defpat pop 100 100 [ 300 72 div 0 0 300 72 div 0 0 ] {
    0 setlinecap 50 50 40 0 360 arc closepath 40 60 moveto 0 8 rlineto 60 60 moveto 0 8 rlineto 50 45 moveto 0 8 rlineto 35 35 moveto 35 21 65 21 65 35 curveto 1 setlinewidth stroke
} bind /smiley true defpat pop /piddict 256 dict def piddict begin /1 /gray3 def /2 /gray2 def /3 /gray1 def /4 /gray6 def /5 /gray5 def /6 /gray4 def /7 /hline3 def /8 /hline2 def /9 /hline1 def /10 /vline3 def /11 /vline2 def /12 /vline1 def /13
/rdline3 def /14 /rdline2 def /15 /rdline1 def /16 /ldline3 def /17 /ldline2 def /18 /ldline1 def /19 /check3 def /20 /check2 def /21 /check1 def /22 /xhatch3 def /23 /xhatch2 def /24 /xhatch1 def /25 /dots3 def /26 /dots2 def /27 /dots1 def /28 /zaggyd
def /29 /zaggy def /30 /ziggy def /31 /diamond3 def /32 /diamond2 def /33 /diamond1 def /34 /donut def /35 /weave def /36 /bricks def /37 /plusses def /38 /boxes def /39 /smiley def end /invpats true def end
TopDrawDict begin /dotx {
    gsave txtdraw {
        concat selectfont txtinclr {
            crtxtred crtxtgrn crtxtblu setrgbcolor
        } {
            crtxtgry setgray
        } ifelse crtxtalph setalpha moveto xyshow
    } {
        pop pop pop pop pop pop pop
    } ifelse grestore
} bind def /txtlin {
    gsave txlndraw {
        concat txlninclr {
            crtxlnred crtxlngrn crtxlnblu setrgbcolor
        } {
            crtxlngry setgray
        } ifelse crtxlnalph setalpha setlinewidth 0 setlinecap newpath moveto 0 rlineto stroke
    } {
        pop pop pop pop pop
    } ifelse grestore
} bind def end
%%EndSetup
gsave
0 0 263 351 rectclip
-90.07579 -227.19046 translate
90.07579 227.19046 262.015869 349.832001 rectclip
gsave
TopDrawDict begin
/invpats true def
/crlincp 0 def
/crlinjn 0 def
/crmtrlmt 10 def
/crlinw 2.1 def
/crlinalph 1 def
/crlinred 0 def /crlingrn 0 def /crlinblu 0 def /strinclr true def
/crfilalph 1 def
/crfilred 1 def /crfilgrn 1 def /crfilblu 1 def /filinclr true def
/filwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    5 getpat /crfilpat exch def
} if
/filwittrans false def
/strwpat false def
TopDrawDict /piddict known TopDrawDict /ipiddict known or {
    1 getpat /crstrpat exch def
} if
/strwittrans false def
/usedash false def
/strdsh [2 2] def /dshpatoff 0 def
/crendarw false def
/crfrtarw false def
/txtdraw false def
/crtxtalph 1 def
/crtxtred 0 def /crtxtgrn 0 def /crtxtblu 0 def /txtinclr true def
/txtwpat false def
/txtwittrans false def
/txlndraw false def
/crtxlnalph 1 def
/crtxlnred 0 def /crtxlngrn 0 def /crtxlnblu 0 def /txlninclr true def
/txlnwpat false def
/txlnwittrans false def
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
/filwpat true def
1 0 0 1 0 0 sc6mt astore 16.800293 1 -1 173 647 4.25974 0 0 1 -568.064758 -71.04895 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 16.800293 1 -1 173 647 4.25974 0 0 1 -568.064758 -71.04895 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 214 289 76 -55 1 0 0 1 61 -4 sc6mt astore rstroke
/crlinw 4.2 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 90 0 67 492 1 0 0 1 59 -1 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -36 -18 67 492 1 0 0 1 60 -1 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 36 -18 156 492 1 0 0 1 58 -0.5 sc6mt astore ssl
/crlinw 2.3 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 40 -58.5 108 472.5 1 0 0 1 0 0 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -42 -60 235 473 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1 def
/crfilred 0.432005 def /crfilgrn 0.432005 def /crfilblu 0.432005 def /filinclr true def
/filwpat false def
1 0 0 1 0 0 sc5mt astore 84.999969 420 54 -90 18 1 0 0 1 59 -1 sc6mt astore rffill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 84.999969 420 54 -90 18 1 0 0 1 59 -1 sc6mt astore rfstroke
/crfilred 0.320002 def /crfilgrn 0.320002 def /crfilblu 0.320002 def /filinclr true def
1 0 0 1 0 0 sc5mt astore 85 347 0 -9 1 0 0 1 59 -1 sc6mt astore rfill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 85 347 0 -9 1 0 0 1 59 -1 sc6mt astore rstroke
/crfilred 0.996002 def /crfilgrn 0.996002 def /crfilblu 0.996002 def /filinclr true def
1 0 0 1 0 0 sc5mt astore 78 348 65 -46 1 0 0 1 59 -1 sc6mt astore rfill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 78 348 65 -46 1 0 0 1 59 -1 sc6mt astore rstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -15 111 316 1 0 0 1 59 -1 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -2 -71 95 301 1 0 0 1 59 -1 sc6mt astore ssl
/crlinw 3.5 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -23 0 94 229 1 0 0 1 60 0 sc6mt astore ssl
/crlinw 1 def
/crfilred 0.492004 def /crfilgrn 0.492004 def /crfilblu 0.492004 def /filinclr true def
1 0 0 1 0 0 sc6mt astore 24.233246 1 -1 97 381 1 0 0 1 47 99 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 24.233246 1 -1 97 381 1 0 0 1 47 99 sc5mt astore estroke
/crfilred 0.432005 def /crfilgrn 0.432005 def /crfilblu 0.432005 def /filinclr true def
/esave save def 1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 8.695502 180 92 422 1.733333 -1 7.5 false false 1 0 0 1 63 32 sc5mt astore apstroke esave restore
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
1 0 0 1 0 0 sc6mt astore 3.5 1 -2.142857 94 389 1 0 0 1 77 78.5 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 3.5 1 -2.142857 94 389 1 0 0 1 77 78.5 sc5mt astore estroke
1 0 0 1 0 0 sc6mt astore 3.5 1 -2.142857 94 389 1 0 0 1 64.5 78 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 3.5 1 -2.142857 94 389 1 0 0 1 64.5 78 sc5mt astore estroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -11 110 432 1 0 0 1 59 -1 sc6mt astore ssl
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore -5 -8 140 422 1 0 0 1 59 -1 sc6mt astore ssl
/crfilred 0.333293 def /crfilgrn 0.333293 def /crfilblu 0.333293 def /filinclr true def
true 1 0 0 1 -234 77 sc5mt astore sstrt
systemdict
begin
332 397 345 408 setbbox
343 405 moveto
343 405 342 397 342 397 curveto
342 397 332 399 332 399 curveto
332 399 343 405 343 405 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore splfill
true 1 0 0 1 -234 77 sc5mt astore sstrt
systemdict
begin
332 397 345 408 setbbox
343 405 moveto
343 405 342 397 342 397 curveto
342 397 332 399 332 399 curveto
332 399 343 405 343 405 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
true 1 0 0 1 -234.5 76.5 sc5mt astore sstrt
systemdict
begin
464 390.5 477 406 setbbox
465 406 moveto
465 406 468.5 395.5 468.5 395.5 curveto
468.5 395.5 477 399 477 399 curveto
477 399 465 406 465 406 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore splfill
true 1 0 0 1 -234.5 76.5 sc5mt astore sstrt
systemdict
begin
464 390.5 477 406 setbbox
465 406 moveto
465 406 468.5 395.5 468.5 395.5 curveto
468.5 395.5 477 399 477 399 curveto
477 399 465 406 465 406 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
/crfilred 0 def /crfilgrn 0 def /crfilblu 0 def /filinclr true def
1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 1 0 0 1 98 -7 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 1 0 0 1 98 -7 sc5mt astore estroke
1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 1 0 0 1 70 -6 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 1 0 0 1 70 -6 sc5mt astore estroke
1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 1 0 0 1 76 -28 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 1 0 0 1 76 -28 sc5mt astore estroke
1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 0.902986 0 0 1.018649 118.791 -32.527191 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 10.307762 1 -1.000001 70 350 0.902986 0 0 1.018649 118.791 -32.527191 sc5mt astore estroke
/crlinw 1.8 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -68 107 561 1 0 0 1 61 -1 sc6mt astore ssl
/txtdraw true def
/txlndraw true def
(M ) [29.988007 0 0 0] 233 260 /Helvetica-Bold [ 36 1 mul 0 0 36 0 0 ] [1 0 0 1.121944 63 -47.705467] dotx
/crlinw 1 def
1 0 0 1 0 0 sc6mt astore 4.609772 1 -1 106 681 1 0 0 1 72 -117 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 4.609772 1 -1 106 681 1 0 0 1 72 -117 sc5mt astore estroke
1 0 0 1 0 0 sc6mt astore 4.609772 1 -1 106 681 1 0 0 1 185 -117 sc5mt astore efill
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 4.609772 1 -1 106 681 1 0 0 1 185 -117 sc5mt astore estroke
/crlinw 5.8 def
/esave save def 1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc6mt astore 344.208801 192.43956 127 649 2.941176 1 8.5 false false 1 0 0 1 16.5 -191.5 sc5mt astore apstroke esave restore
/crlinw 1.8 def
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0 -275 312 560 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1.1 def
true 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
141.5 461.5 146 465 setbbox
142.5 464 moveto
142.5 464 144 461.5 144 461.5 curveto
144 461.5 146 465 146 465 curveto
146 465 142.5 464 142.5 464 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore splfill
true 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
141.5 461.5 146 465 setbbox
142.5 464 moveto
142.5 464 144 461.5 144 461.5 curveto
144 461.5 146 465 146 465 curveto
146 465 142.5 464 142.5 464 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
true 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
191 460.5 195 466 setbbox
194.5 463.5 moveto
194.5 463.5 192 460.5 192 460.5 curveto
192 460.5 191 466 191 466 curveto
191 466 194.5 463.5 194.5 463.5 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore splfill
true 1 0 0 1 0 0 sc5mt astore sstrt
systemdict
begin
191 460.5 195 466 setbbox
194.5 463.5 moveto
194.5 463.5 192 460.5 192 460.5 curveto
192 460.5 191 466 191 466 curveto
191 466 194.5 463.5 194.5 463.5 curveto
end
/nspans 3 def 1 0 0 1 0 0 sc5mt astore 1 0 0 1 0 0 sc6mt astore splstroke
1 0 0 1 0 0 sc4mt astore 1 0 0 1 0 0 sc5mt astore 0.5 -1.5 148 415 1 0 0 1 0 0 sc6mt astore ssl
/crlinw 1 def
-1 0 0 1 373 0 sc4mt astore -1 0 0 1 373 0 sc5mt astore -2 -71 95 301 -1 0 0 1 277 -1 sc6mt astore ssl
/crlinw 3.5 def
-1 0 0 1 373 0 sc4mt astore -1 0 0 1 373 0 sc5mt astore -23 0 94 229 -1 0 0 1 276 0 sc6mt astore ssl
end
grestore
grestore
%%Trailer
%%DocumentFonts: Helvetica-Bold
