%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MiniCad+ 4.0
%%Title: induced-uhura.eps
%%CreationDate: 7/23/1996
%%Pages: 0
%%BoundingBox:61 514 300 679
%%EndComments

save
% Basic Definitions
/gs {gsave} def
/gr {grestore} def
/t {translate} def
/sc {scale} def
/sg {setgray} def
/srgb {setrgbcolor} def
/ff {findfont} def
/mf {makefont} def
/sf {setfont} def
/slw {setlinewidth} def
/str {stroke} def
/slc {setlinecap} def

% Polyline operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{curveto} def
	/C /c load def
	/v				% x2 y2 x3 y3 v -
	{currentpoint 6 2 roll curveto} def
	/V /v load def
	/y				% x1 y1 x2 y2 y -
	{2 copy curveto} def
	/Y /y load def
	/l				% x y l -
	{lineto} def
	/L /l load def
	/m				% x y m -
	{moveto} def
	/dot
	{currentpoint transform exch 1 add exch itransform lineto} def
	}
	{%else
	/c
	{pl curveto} def
	/C /c load def
	/v
	{currentpoint 6 2 roll pl curveto} def
	/V /v load def
	/y
	{pl 2 copy curveto} def
	/Y /y load def
	/l
	{pl lineto} def
	/L /l load def
	/m
	{pl moveto} def
	/dot
	{currentpoint transform exch 1 add exch itransform lineto} def
}ifelse

% Rectangle: left top right bottom R -
/rectangleDict 4 dict def
/R
	{rectangleDict begin
		/bottom exch def
		/right exch def
		/top exch def
		/left exch def
		right bottom m
		right top L
		left top L
		left bottom L
		right bottom L
		closepath
	end}
bind def

% Oval: left top right bottom OV -
/ovalDict 10 dict def
/OV
	{ovalDict begin
		/bottom exch def 
		/right exch def
		/top exch def
		/left exch def
		/yrad bottom top sub 2 div def
		/xrad right left sub 2 div def
		/y yrad top add def
		/x xrad left add def
		x y t xrad yrad sc
		newpath 0 0 1 0 360 arc closepath
		1 xrad div 1 yrad div sc	% Reverse scaling.
	end}
bind def

% Rounded Rectangle: left top right bottom ovalwidth ovalheight RR -
/rRectangleDict 10 dict def
/RR {
	rRectangleDict begin
	2 div /hvy exch def
	2 div /hvx exch def
	/bottom exch def
	/right exch def
	/top exch def
	/left exch def
	/nleft hvx left add hvx div def
	/ntop hvy top add hvy div def
	/nright right hvx sub hvx div def
	/nbottom bottom hvy sub hvy div def
	hvx hvy sc
	newpath
	nright nbottom 1 90 0 arcn
	nright ntop 1 360 270 arcn
	nleft ntop 1 270 180 arcn
	nleft nbottom 1 180 90 arcn
	closepath
	1 hvx div 1 hvy div sc
	end
}
bind def

% Arc: left top right bottom startangle endangle A -
/arcDict 12 dict def
/A {
	arcDict begin
	/endangle exch def
	/startangle exch def
	/bottom exch def
	/right exch def
	/top exch def
	/left exch def
	/yrad bottom top sub 2 div def
	/y yrad top add def
	/xrad right left sub 2 div def
	/x xrad left add def
	x y t xrad yrad neg sc
	0 0 1 startangle endangle arc
	1 xrad div 1 yrad neg div sc	% Reverse scaling.
	end
}
bind def

% Polygon: xn yn ... x1 y1 n-1 P -
/polyDict 1 dict def
/P {
	polyDict begin
	/numOfPoints exch def
	m numOfPoints {L} repeat
	end
}
bind def

% Pattern fill: fR fG fB bR bG bB [p0 ... p7] patfill -
/fillDict 11 dict def
/patfill {
	fillDict begin
	gs
	/fa exch def				% Grab pattern.
	srgb						% Set background color.
	17.3611 17.3611 sc		% Scale back to 72 dpi from 1250.
	flattenpath pathbbox		% Get path bounding box.
	/ury exch def
	/urx exch def
	/lly exch def
	/llx exch def			% Get edges.
	clip
	newpath
	llx lly m
	llx ury L
	urx ury L
	urx lly L
	closepath fill			% Fill in background color.
	srgb						% Set foreground color.
	/w urx llx sub ceiling cvi def
	/h ury lly sub ceiling cvi def
	/bytes w 8 div ceiling cvi def
	/patstr bytes 8 mul string def
	/row 0 def
	/patproc {
		0 1 7 {
			/row exch def
			row bytes mul 1 row 1 add bytes mul 1 sub
			{patstr exch fa row 8 mod get put} for
		} for
		patstr
	} def
	llx lly t
	w h sc
	w h true [w 0 0 h 0 0] patproc imagemask
	gr
	end
}
bind def

% Outline string show: string olshow -
/outlinedict 1 dict def
/olshow {
	outlinedict begin
	/cs 1 string def
	{
		cs 0 3 -1 roll put	% Stuff the char into the string cs.
		gs 1 sg cs show gr	% Paint the char white and move back.
		cs true charpath
		currentpoint str m	% Draw char outline.
	} forall
	end
}
bind def

% Shadow string show: string shadow-x shadow-y shshow -
/shadowdict 3 dict def
/shshow {
	shadowdict begin
	/shady exch def
	/shadx exch def
	/cs 1 string def
	{
		cs 0 3 -1 roll put	% Stuff the char into the string cs.
		currentpoint
		shadx shady rmoveto	% Draw shadow.
		cs show m
		gs 1 sg cs show gr	% Paint char white.
		cs true charpath
		currentpoint str m	% Draw char outline.
		shadx 0 rmoveto		% Move to next char position.
	} forall
	end
}
bind def

% Text Encoding Procedure
/Z					% array literal literal direction Z -
{
pop
findfont begin
currentdict dup length 1 add dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall
/FontName exch def dup length 0 ne
{
	/Encoding Encoding 256 array copy def
	0 exch
	{
		dup type /nametype eq
		{Encoding 2 index 2 index put pop 1 add}
		{exch pop} ifelse
	} forall
} if pop
currentdict dup end end
/FontName get exch definefont pop
} def
%%EndProlog

gs
0 792 t
0.058 -0.058 sc
2 slc
gs
3750 3308 3802 3360 3750 3290 3715 3221 3680 3186 3663 3134 3629 3082 3594 3047 
3542 2960 3507 2926 3490 2874 3437 2856 3420 2804 3385 2769 3333 2718 3299 2665 
3264 2631 3229 2596 3195 2561 3142 2509 3108 2474 3055 2440 3004 2405 2969 2370 
2899 2318 2865 2284 2830 2249 2778 2214 2708 2179 2656 2144 2570 2110 2517 2093 
2465 2075 2396 2058 2292 2058 2205 2058 2153 2075 2083 2075 2014 2093 1962 2110 
1858 2127 1805 2144 1736 2162 1667 2197 1615 2231 1545 2284 1493 2318 1458 2353 
1424 2405 1389 2457 1354 2526 1320 2613 1285 2665 1267 2752 1233 2822 1215 2891 
1198 2995 1180 3047 1180 3117 1163 3169 1163 3238 1146 3290 1146 3360 1146 3447 
1146 3516 1146 3585 1163 3638 1180 3707 1198 3794 1215 3863 1233 3950 1267 4019 
1285 4089 1320 4141 1337 4210 1371 4280 1406 4349 1441 4419 1476 4454 1528 4506 
1580 4558 1632 4593 1684 4627 1754 4644 1805 4662 1858 4679 1945 4697 2031 4697 
2083 4714 2153 4714 2240 4697 2309 4697 2396 4697 2483 4679 2570 4662 2639 4644 
2726 4627 2795 4593 2865 4575 2934 4558 3004 4523 3055 4488 3125 4471 3177 4454 
3212 4419 3264 4384 3316 4349 3351 4315 3403 4280 3437 4228 3472 4193 3524 4141 
3542 4089 3576 4054 3611 4019 3646 3968 3680 3898 3698 3846 3733 3794 3767 3742 
3785 3690 3820 3638 3837 3585 3871 3534 3906 3464 3941 3412 3976 3360 4010 3308 
4045 3256 4080 3204 4115 3151 4149 3117 4184 3082 4236 3065 4288 3030 4340 3013 
4410 3013 4479 3030 4549 3047 4601 3082 4653 3099 4687 3134 4740 3151 4774 3204 
4826 3238 4861 3273 4913 3308 4948 3360 4983 3412 5017 3447 5035 3499 5052 3551 
5070 3603 5070 3690 5087 3742 5070 3811 5035 3863 5017 3915 4983 3950 4948 3985 
4913 4019 4879 4054 4826 4089 4774 4124 4722 4141 4601 4141 4496 4141 4410 4141 
4375 4106 4305 4072 4236 4054 4184 4037 4115 4002 4062 3950 4028 3915 3993 3881 
3958 3846 3941 3794 3924 3724 3906 3672 3941 3620 3976 3585 3993 3534 4010 3481 
4028 3429 4010 3377 3958 3343 3889 3325 3785 3343 188 P
35 slw 0 sg str
gr
gr
%%Trailer
restore
