%!PS-Adobe-2.0 EPSF-2.0
%%Title: set13.q9.create
%%Creator: Create
%%CreationDate: Thu Jun 29 13:36:46 1995
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 152 306 517 708
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^oRKbh/M
% Uu?ksCNZ!\.dNcoE9t$lh*<`WQ@;OjF-#5(O&P&V*cU(PE']R;+(13rjic"e\\C:kKp!_h(U
% GA1W62!7IH=RoUa:Z#J_5;2^aBh6[d=%+:@hK9(guJjc+2^luN*JYW;hA71=S(bisOfu$5g*
% A]CZKQ/dq%:q>6gsD`>L(+qT0i#>P_Zg7/1i:CZBd)S4S'=%k.,],Mc5AMs@-m<07S[n+PfL
% FFo>Yh8*L.MbW)81?nM4\29Wqd6:7:L[GE3?")GV,0A@U"&F$iFZoeC+_=-)OLNVE*ci4qS;
% 5(4D+\49m80[."4%6*'4T+*XD7pgTsA;2!=@W7H!Ap(?:7VHA'2Fi7pNKMm2R"=a[!kNMp&g
% <T@i^+uCE"P>XT*0*:#F___QX'W.ZK#56EO&YQ5'.Ej-\WQV#RD>+-A-c1;.^\XRW7KCBq^M
% eg1dOSZ!(qH`AUq;\%*(lDs.(B*1FSZ-X:]82+JQ(ckSsgG1ICm*M2)88)9TnQ$6P\lTn'KH
% j8.<K7`DPl/6md77\MN!ZkGdIL%]d#D8)CkFR@+<HoZ')/eY-LLtpI6\ltQ#fU[l\.Keg1;N
% /Z$m;4I>8eXBZ!45(EY7W=[<`*fXLPQta00Oe4"LiJ14/Ai+KuuYKt+"1U&le__I=fC^rX<M
% 9*bM$N]OVfUQ=[Aad/$9q.1h7L*6cI@SR+DAS%3>[TR78AN;-)Wj1\)CpMH#)fE6lWTLV,\V
% V:Bat`'!S^H7b?(T\_[rJ%u2&n"\k+VNWV0F,?T7&6Ua.IjF#)MN?""&gGVt`O`.YZN<WZd/
% ;Y%i]I'YA,GX>/@bX0*4i!/%[1+L,^jgNNHG$SW2Jj#d>rcp<\7[7_=Jl+.6&]L:&7,\#0Zl
% PL$jloV&Y<X(,/^_;$.E0prqama7`!XE_6'#SGRS97H5nTB2-b_C<bMani1K@6*=VD7.^ZD7
% ?VOD'90*bb.sL)+MkV`6AdhrU"r.&tUjU,kesX;6e2)HEuniX.A[K2jU2IpI6MD37Q*]4fB7
% jP#0Tj0f@P`#s9=<<A-@h-9%?jhYCU>UFPlVKrJ:F+Ad/)/Rr&"s$!`E@,[W"5`0[L<KBt`c
% s9,0mA]U=Tb=\.iG&M^q)mIY%=/mJ`m$=+&%Z34Z4]/HVT?ge0Tup3ti?`IWh`aeW*&,bFQ+
% GU]MCp""U#U^]T6[]]8\K7qOj;OH`6g-+-G];PN$_Xoo[0R7;OM6eIbAAu:=!DbUh=+3!5]Z
% ,C@X3r7l8rust<!*3u#"bb2&l,,OX..D9eXI5q0Lp@/W:3DkTRHlC,4.rF-G!g$[Y4NjRDl!
% G'=pY<l!WW6:ZGhO;Md]eP=/=s..hFY`+dI4a2_G!49AAL]&AMkr^`ehZ9!"EY0P76\l"PV]
% Rc9r-Ajqnl&T_/mPfp_L^e'5WFCUQ.)(UN_;mn;XCb1hjB8;*MQ=sDMdTn.q!2E=t70`jLJ0
% /3%4D#dUL4u]PgAlakIP%jCf5i4RoEHWcHLGb^Mk@lo\&?2?YEOnAU_Ft29$%C^PQXD9k#Me
% f<iu[L%ZFs:.7bNgY"jtd9LBa\pr6X[d<<4',=N*hKH[-W%V&m6)$7VgMCbD,lO*emIM*?P"
% oo=%0L7#i6%XL^@0hFgJcH:"!3k\nOE:fEnU^m<[2DG)5R<,\INYFV(deNm+IfuRWYRoT5V?
% OIM]`$s#lopkUaJn$8e9:*?m)GKL*;3OW5;Q7$mMT2*J@4>.T<(m,q<V"CDmID!#ZK$&-<]d
% (t)m$:kTNP:RD_C!l.^#echpf+fa3$BiBKe.3*Z,!`-f3e"@%GYQ-ArA"/?W^%.Gg<WrJ(rG
% d]\+BGb+-#6Y+KF50!2&14=&OdVbKIIHX$u%[')X).&;gFTO"_^5>-d!-#<2'L?m/\9&0SDa
% %5R,C[/dHb("<e2*'5i>S&H"#dir'Ut5U%I$!g/:g'NRb]Yf.(f)rC,]BVmLaMe($)8'2<.\
% AU6WEg=gQk<`7]=OjKQ3BN&frh.$crBXT6;O>h?orV+H6Wsj_!4j)s+7o&Y@8O"-VF&(&V>)
% X$&hp))bU='9Te:Zq&4f)"p;,oL)e@QYhQp$:&0)15LUhbtr,23B"#apu%.%"q0\F3!N:;L!
% b7Y4b63JO06j$algh7+H'u`U11/?e5A&&0K6P/eX8:95/%hb>cmI#0'Oc)jH@BjB-F,G_k2A
% QhR]h2o-+Iil%5tIEdK<R+sD7ncOVYRuV*\_;&>6%\hZb`)YY`SfL@20NF&/drX+9^'M)2TT
% VC\b#:8F4ReeeH*irF;<EldSL-3Y7Vf!1s^QiuAU+^kRl9%hN%!75rr;7LfHX-liS<a>=I5!
% .^Bee`j]9\;"c'dY^W0lP]ME7_rCgB6-c)*>:Kb7&%)`O!J.''DVZ`0E_@Ux
% EndEmbeddedGraphics N 1946 79a E b1 S 35d79 R 357ed65f
gsave
-39 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
152 306 365 402 rectclip
0 0 0.15 1 10 SU
258 496 T
N
0.15 L
0 nxsetgray
0 177 0 0 line
90 0 177 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
258 495 T
N
0.15 L
0 nxsetgray
226 0 0 0 line
0 226 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
175.05304 344.029816 T
N
0.15 L
0 nxsetgray
83.89386 152.940521 0 0 line
241.25531 0 0 arrow
0 0 T
grestore
0 0 5 1 10 SU
265 495 T
N
5 L
0 nxsetgray
137 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 0 5 1 10 SU
209.469681 406.392029 T
N
5 L
0 nxsetgray
48.060654 88.216034 0 0 line
241.419983 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
[1 0 0 -1 335 427] concat
[0.83 0 0 0.729592 0.595 0.946427] concat
N
0 nxsetgray
gsave
7 7 0 0 oval fill
grestore
0 0 T
grestore
0 0 0 1 10 SU
[1 0 0 -1 255.973206 605] concat
[0.855 0 0 0.729592 0.507502 0.946427] concat
N
0 nxsetgray
gsave
7 7 0 0 oval fill
grestore
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
/Times-Bold findfont 18 scalefont [1 0 0 -1 0 0] makefont
591
exch
defineuserobject
591 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 657] concat
/Times-BoldItalic findfont 24 scalefont [1 0 0 -1 0 0] makefont
402
exch
defineuserobject
402 execuserobject setfont
0 nxsetgray
161 337 moveto (x) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
402 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 997] concat
402 execuserobject setfont
0 nxsetgray
495 507 moveto (y) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
402 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1373] concat
402 execuserobject setfont
0 nxsetgray
251 695 moveto (z) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
402 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 927] concat
591 execuserobject setfont
0 nxsetgray
222 466 moveto (i) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
591 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1027] concat
402 execuserobject setfont
0 nxsetgray
326 522 moveto (i) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
402 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1202] concat
591 execuserobject setfont
0 nxsetgray
270 604 moveto (P) show
0 7 rmoveto
(1) show
0 -7 rmoveto
(\() show
/Times-BoldItalic findfont 18 scalefont [1 0 0 -1 0 0] makefont
353
exch
defineuserobject
353 execuserobject setfont
(0,0,H) show
591 execuserobject setfont
(\)) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
591 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 858] concat
591 execuserobject setfont
0 nxsetgray
350 432 moveto (P) show
0 7 rmoveto
(2) show
0 -7 rmoveto
(\() show
353 execuserobject setfont
(x) show
/Times-BoldItalic findfont 14 scalefont [1 0 0 -1 0 0] makefont
592
exch
defineuserobject
592 execuserobject setfont
0 7 rmoveto
(2) show
0 -7 rmoveto
353 execuserobject setfont
(,y) show
592 execuserobject setfont
0 7 rmoveto
(2) show
0 -7 rmoveto
353 execuserobject setfont
(,0) show
591 execuserobject setfont
(\)) show
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
591 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1007] concat
591 execuserobject setfont
0 nxsetgray
240 510 moveto (O) show
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-Bold
%%+ Times-BoldItalic
