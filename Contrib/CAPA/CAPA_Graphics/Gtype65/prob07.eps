%!PS-Adobe-2.0 EPSF-2.0
%%Title: set14.q5.create
%%Creator: Create
%%CreationDate: Fri Jul  7 10:44:10 1995
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 65 417 398 682
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^1kAJS/M
% V8GksCNZ!\.dNcoE9t$lh*<`WQ@;OjF-#5(O&P&V*b*$%rSOR;+&[N<"M<#dD[,:kKp!_h(U
% GA1W62!7IH5M`*.1#\)i:*Q#7eg:M)ERMhnM;[+<U`rq5Y#Cn1OSUu)Am&s<[BE/;UfHLDeN
% \Oi5E03N.$k+asgrr?bfutBoFQeNh_o6\42egopTTZ0HR5ljp]P/%*7iqn>Gfr+bL'A(E_U$
% :XY!DTG2f.>i?G0i)6Q%arE)Br=N#V-;=4\l'hDapY@Ua;-'1NHL/p-UDYjj`&bf]GFaM<A%
% 5+WWO(mc<RrV9O4%J8ap_[ZC[LL>W-iF%:gn]_<VB<I*-72fF\_1io,Q-n;*"L^5.B4H/jJe
% /:ef#^L:>Z+,rR05hV<n@JiPpU:GeWsL1e:lM9!-#fA?ToaDfO7B-jqqX$BZ?HUToE+,BrS5
% c)MYK<7[n8)l,K23jos?XEQjh2giCFq#G#t:Yu+dmA:V-p6/L9D*dQG(M4T%[\X/qBq;(5kI
% LsL(+GG%OG[Z%+-5bWl%H?oNIhFMO+blV'aJ"A3\fmdc,iW2UMCPpq,)e9D:ua2/"QG.9$;A
% 71>s/6<,a!9gg"0S*19$Y)Nr]gRAt=?N-#'Ji)<[<h`AUq;\)k&&Dni9.k&K+\fc1gS75pd-
% f%$2ES_\^<m[iNOqr`:m]f.C81$n(qU%r+El$nuo\#=d53!sB5"sW9gKTB`T@>>qZ38t?%S-
% lEVCp^.VMh]/PM5u3S''f_.g=dcU,c;C<=h+%f/!@^m2XFjJ)CoC)TS^[iBrF2\RMfC+$`:=
% AQC1utga;3dS)VFJkB5s.QfkqrN7[KCl+nn6]_C,aBF^<mlYjQ6rB$[fn^TlYU]r>_*2d%db
% &F;Sc2k2g.Dc'O`N*T%irb\T&Vq2(b[JAjGQ"JkaT822jN>9Pm.-=!"VOUAPK?'W%%,:5V9N
% *(XQ@_jIp&n@fHPMddAF+h*7Ae(=0A)hWuGBpI+I4geUbl$#Ju10D'.Abf!$gGO")%j^guJ6
% G,:<B]Jd-+I$VcbTK5d3gh*'9Z/&?s;+GtEJFK)9DjUQW'3lqN7icW+#"&,.glY&l(1XGN"#
% Y[\<>bl1+>U*S1YJpUPnq@ca`/nRN&E(SR2Fj)F3*(*Q($epeppM!U'oGXaHWg#V9*DO"4s$
% ^[5;r=-['g1h:05o]6L;,CPfn1^>e1\Y^t&DN!`YqQWLD>+cL9cgCX#r-E;hi/:4>$Rr7F$#
% !/R=2"b?Y,oTUT#%5C_!a*A?$<Jt_+AQoD1189<(^P+8:^/\Z!<f<r/C%*H9,?S$#-"H8TQT
% aG+$A$"7$og_d0Xu@P$QgAfI(mNn7oS1Qg\Gj]R1%SCW61sn]&#TZ^!+Z=9G;iL'T^_dS3.r
% ^]R'_B0J>gJVd-T@btitJ0nMh<.SEa72F7'1,':h57'q5"+Z5#0VCn7LfFHYYQGmW/q@[S^_
% cO83&)W(EBsZd!"$Jl\Vp\C""[\'!!#]$&lT%+#f^>jGo/jrJ1BcY9&eEYQF91-%Id$n!=0g
% #!^pTLn3#-+#`ogB!^K?V.&R'b0SY#X?t1&VKeI4pMHDapS&al)>*PFLQ0ImjOD@uU$(*][P
% X;+ujCTMQ)Mj.ae">^nLFLm/dC,QST(PLj7JZaTEW/lk!VJr:s*7EHA;h]7#_F%^&qEeX633
% Jk"=4m>L`m0n$&64q&M.=@Lj$.EbN'jRS=*5fNbh6f"i*V7R$MS9PnFKJKN".D%&m-T![ne]
% 8m0ln[(MWp"[IbABSo]X*bM<'MFrc'&c`)[+:sihO[9XV,9I%r&E(oi!Jo*S6"#3W1_@MYl^
% Fkc9!a$a*M_YR"GT,0i<L=`<ER9[erVf`Z&tSnAM9P+\/o7YK.-,$g"E.4`cRgN'PAP?+U<P
% seY&0E5XI!;fKbr/!/(&8%E'uSfj\!gCM@M)!oR4eEg8@2,HYZWqc.7^Ksb:sJ6AEN?0P8=]
% !\q[8o^od+7RjX0[2+eC[-c8(>#`N7BUZHU4=R]!@1?\"*)Jf9;<Q$7]_E2<rCm2M!!uAmJO
% %h%*48@L_b$1-.6PMHC"42,?>cqJ/"eegUXVs\+rIH!VlN8_]5#@b;DPEp(=?*?mQDi!j[NB
% R8r^1[`4740j)b+;#un`Uc]-?NroDn.eB"A0#"Mp@iPIeGLa\6js`V'Thla7_A'6fJ,lZejW
% SiQa9;FDYWuIM_D)p>G]C$87>g4mW0tmqDXg>+N*j5lU<EM:ED?Phe)`Jh!frW74fW;NlYcF
% 5BBa<(O8NS/M"e8K2QoV$b*M]e3k@291jk!"kf;7Ub5h%6IebHuiYjc"01p-%:f3&SB*Bg!#
% _3!si9$/=,/^Mlj$c'-@8@E.!JkDZ%u^X.BntEfUF,;uCIF1b*IGbWIWi)F+Dto2>1PJ-Pn1
% M9?2ud-f=e=a(U-4,!=ZTm5XMo63UC0"+,8M0#.V),m%ZX`FM0cOMECq?DY_H*']gZc[<ll\
% (sb%d?XC**iU(Ct@-&BF-?aRAMd_hrH`P?XGGkH]EImlBg',gr_+!VhX;$<G/9^f*,9HB4)u
% APQc1m8QAdAA:x
% EndEmbeddedGraphics N 2082 822 E 3e S 3d200 R b23374c4
gsave
-39 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
65 417 333 265 rectclip
0 1 0.15 1 10 SU
[1 0 0 -1 304 501] concat
[0.082012 -0.082012 0.082012 0.082012 0.275035 7] concat
N
0.15 L
0 nxsetgray
0 0 82 82 rectstroke
0 0 T
grestore
0 1 0.15 1 10 SU
[1 0 0 -1 349 546] concat
[0.082012 -0.082012 0.082012 0.082012 0.275035 7] concat
N
0.15 L
0 nxsetgray
0 0 82 82 rectstroke
0 0 T
grestore
0 1 0.15 1 10 SU
[1 0 0 -1 262 459] concat
[0.082012 -0.082012 0.082012 0.082012 0.275035 7] concat
N
0.15 L
0 nxsetgray
0 0 82 82 rectstroke
0 0 T
grestore
0 1 4 1 10 SU
274 494.419891 T
N
4 L
0.448271 nxsetgray
45 -45.160248 0 45.160248 line
134.896835 0 45.160248 arrow
0 0 T
grestore
0 1 1 1 10 SU
[4] 0 setdash
166 514 T
N
1 L
0 nxsetgray
137 137 0 0 line
0 0 T
grestore
0 1 1 1 10 SU
[4] 0 setdash
251 427 T
N
1 L
0 nxsetgray
137 137 0 0 line
0 0 T
grestore
0 1 6 1 10 SU
[1 0 0 -1 172 644] concat
[0.707107 -0.707107 0.707107 0.707107 5.017245 63] concat
N
6 L
0 nxsetgray
0 0 82 82 rectstroke
0 0 T
grestore
0 1 4 1 10 SU
231 452.419891 T
N
4 L
0.448271 nxsetgray
45 -45.160248 0 45.160248 line
134.896835 0 45.160248 arrow
0 0 T
grestore
0 1 4 1 10 SU
318 539.419922 T
N
4 L
0.448271 nxsetgray
45 -45.160248 0 45.160248 line
134.896835 0 45.160248 arrow
0 0 T
grestore
0 0 2 1 10 SU
[1 0 0 -1 263.098267 632.098267] concat
[1 0 0 -1 1 21] concat
N
2 L
0 nxsetgray
N
10 10 10 30 150 arcn
s
120 18.660254 15 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
168 589 T
N
0.15 L
0 nxsetgray
59 58 0 0 line
44.511616 59 58 arrow
224.511612 0 0 arrow
0 0 T
grestore
0 0 0.15 1 10 SU
169 517 T
58 flipV
N
0.15 L
0 nxsetgray
59 58 0 0 line
44.511616 59 58 arrow
224.511612 0 0 arrow
0 0 T
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
/Times-BoldItalic findfont 16 scalefont [1 0 0 -1 0 0] makefont
128
exch
defineuserobject
128 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1343] concat
/Times-Roman findfont 16 scalefont [1 0 0 -1 0 0] makefont
600
exch
defineuserobject
600 execuserobject setfont
0 nxsetgray
271 677 moveto (Axis of rotation) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
600 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1245] concat
600 execuserobject setfont
0 nxsetgray
290 628 moveto (Rotation) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
600 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1242] concat
600 execuserobject setfont
0 nxsetgray
68 617 moveto (Square coil of N) show
68 636 moveto (turns of wire) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
600 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1089] concat
128 execuserobject setfont
0 nxsetgray
182 550 moveto (l) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
128 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1263] concat
128 execuserobject setfont
0 nxsetgray
193 637 moveto (l) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
128 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 971] concat
/Times-BoldItalic findfont 24 scalefont [1 0 0 -1 0 0] makefont
156
exch
defineuserobject
156 execuserobject setfont
0 nxsetgray
262 494 moveto (B) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
156 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1065] concat
156 execuserobject setfont
0 nxsetgray
310 541 moveto (B) show
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-BoldItalic
%%+ Times-Roman
