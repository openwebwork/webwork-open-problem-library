%!PS-Adobe-2.0 EPSF-2.0
%%Title: set14.q6.create
%%Creator: Create
%%CreationDate: Wed Jul 12 10:55:59 1995
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 153 386 423 715
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^<.Rks/M
% ^c8ksCNZ!\.dNcoE9t$lh*<`WQ@;OjF-#5(O&P&V*cU%YP+TR;+(1KE-Qc#l"J/_2tj.^EuM
% r(-hj"B[*87$U=\8#[uc9*Kl_*g:M&DRMhnM;[+<U`rq5Y#Cn1OPl_EBBOK!l))K9Sfu$5g*
% A]CZKQ/dq%:q>6gsD`>L(+sCVqn.W"+j.62J)$XORf9njrL@0S>HB$%>ZHYg5($l#.GHfVru
% jO3!TSL12Q<ATbB9,N]mf[fTpT5%1O0-\"AfS>lj%A`8=ZLNOp;N))Z/J).08")u/tsf-u@P
% HM0(&kQXNoEfe*@*I-?^6Y6VD5f7dNiXq@`$qc<X%Md8S@>-O#<acFk5_reW2c(?b%5_H0Tn
% 4t/L7/raUqoJ?Cq('\)9L,g_eEUk2?mb9aO,V[fpORM$oW&jL)Vk_!!7C*m^T'V.)`>VOh-C
% 3=W1%i;.O8mV?$`=737k-*H3tDJdc5U3$TD<VP!p4SHN=++dZ0F5ph.2"$dua#iIuSR]'6<>
% %e5Hae<r:apDF(q9V\ESf!2a+QNMf87OErJ:hBs=bbXBSUD:-BVh9^U2$d?#+KG9g#e$=g(D
% tCH*qZ_*dHkE[pF'>0neG3"kbi9If./T.t@[6BHVmeR+PdV$V'?ZM?qLXK8=cJfOBLZ8rJH6
% /?WXg[Wp_\@YN3YqdPL?ep(\F.Iu[IO@!KUAW/7enX,J5b4+J^$Ij?6Sf@/:bb'c#<=/^@'P
% `u.CamM?UN\lTf3a_BH<=Y>BZfQJ0n<H\AXS\GfkI@IAf>DrYhIfHZ-?>(D:mrr/!T&\C*"2
% TZ([c4m0O^RZ1Zps1p[)AbUaP4(:[h]%6dnQKNDNJiJ%qf82VG2EZ8nM.&+nZMdUFj)3$PcJ
% YS>Gg']a!/V&q9)e;pg>B;e6aB9FT&Ss.mQ"[r\4b)#q5Sk"OMQ!3a5E9_e)FrMdV291:1/&
% (E/8E=WRjslMWi!5Ybcf_O/$7fVa0Vm3pF>g=7DF%'IE!na`dUY^(Eh5Q:0jQGggY-&ee)Zl
% /V7;Y(ug;sP3oC@BQLF3QgqN_[_GD&dGs"W$3As%GCUf))K)&g\=J:c^ume/^*3OoNDIc!`J
% [>P3<5=c9I]+Td$uLNKego+Nb+tY(!L4NWg^m6BAp+\lQW:.o#P]^lj9!FjF]Ojj_&eZWkku
% i(U[m%k\J,K=q&>lXfX1Y>93jto=u*S'29!'B.Mg2eg<&Zjf!O`qiR(o0HB>E%t3`<'Dj3+J
% 0ms@+CRgY):1X(Mmt>M9VFuXRUF)i@'M*fBYnl.J<ZZ/jboM)"9pV9LhV[\#t#QJ)`A6-+q+
% M]V-$%q"p'N(L`m$:UY+T@F[*MA?t0%de6b2_K$,0H;2Dm.+nNR$\VT>tCPeii.KKN-\e0sC
% Un\t#W(0&J0aO<U7\s".(d]X$.^5_k+_Q'9[R;DN\4cu*#U"a$6tIjX)up#d_TG,C@LjLN7k
% 4`sL+s5Q!0r)MSNNT85+1D+PR,&-!YEF>68!bJgL't+otO"Odu\a`VHG_n!)?]2S(\8N.fmF
% XJ"2+VP@P%NG1k&<#a:XU1aXt,V+cB;igJ2aAgK(F-TGMQ)M\_h0`]SFa5QJri`%0`4m!8Gm
% Ve8%;("mDl-;OR1_:5;b!bDqc[4[#;#B<b!E)dF@FA)>oH`X/%SBN18s9h9A8!)&nBctd[%`
% .g$TL##QZ5'lUZ[kP3\uVtG'7o)79/SH=/ef=ij4qaM.o1i$IDf<e=[*G.7F`nKH[-W%V&n!
% (RY>^8m$V'"L*D$L(K.[#iG[e5cQaDYgeeEbc0^ra.n<=%3YT.;14hL!.Fpnac08j<CMg-#E
% dWO#,2<O/Jq5e3XE_dFqBe,/1k;QcN<UC'.4sA-Wn6`%q%g2!iQ,,"=q$ZmZ2B,IB#dh44SH
% lEg'S4D'3eu>F'H_V5r-ZCK$p(Rm&]t4&,%38l:EOn7`\g>(?VL"Fr)neoCLAm,X\j<T3q#Q
% >+1:AP3Be5_tc>>B'"=TF5,kb4N*HjfWe0@>d>f@(ath5T.j_QbkKm/VrNPUW`^l6N#b=bco
% &1./R6/L:"j!rGHl#l_jZ@p:5gKY_<=Ei=/:9XK;Z16J!'1LBW87!n\iP'BS!/Ah:HK*H"l8
% X5:7KeAaK)VLH5T;ZHI^T3E$YG1#$mKEAQMJAR0SEm.7cGk7[+>;)'u.ca')QE"OLkomFXjX
% 'LWT.lS15HPmO@nmoW<i.4'5nJQ4r8S=aLne)QnUj+m!!&AdUmJpoc,""6@m8h(.GXgY1OGL
% b=66c\!A3L8&DGKe7cfL$qc24i)9Tq*o3(TGJ/QrS.r#X2+9l-86RTI7N5hKbUH2.A;u37WA
% nO]#)s^XR]%3QuF/b]m;cM@oTSLX,Q!8[u2%IJ7;Lh1U9`U+[fF\[#fYJU0i/T`E3nK#>`3'
% WO;,5'ff>NY%RPE&VChnA/h"EWJ_`dF.Mjg]BDK;8>9P7-lH.CWN2B2OdK7!&r$NTtq(IG>r
% E'PNWk;KJ%#oR>u6^e\+JG5/eI;)8jQJi=/\ATg[#`E1tf`DD/=IWUcK1DERYcS&9ouomTd%
% RRonAPV(%14en*!@)(31LrDEC[G6%O*iQYcG?<T*&B_6oXr`OoFoK1\o!FT<>L0Y3MM:R/mX
% 0l72dt;Me:nko9*]D^0(t18C&o77Jo%erEY'DKW!en*e&)9%Lc7=hBCgx
% EndEmbeddedGraphics N 2176 880 E be S 3e9f2 R 170e5490
gsave
-20 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
153 386 270 329 rectclip
0 1 5 1 10 SU
171 470 T
N
5 L
0 nxsetgray
0 197 0 0 line
90 0 197 arrow
0 0 T
grestore
0 1 3 1 10 SU
205.457001 604.433472 T
N
3 L
0.482757 nxsetgray
10.08609 -16.132874 0 16.132874 line
122.011444 0 16.132874 arrow
0 0 T
grestore
0 1 3 1 10 SU
352.45694 513.433289 T
N
3 L
0.482757 nxsetgray
10.085815 -16.13324 0 16.13324 line
-57.989838 10.085815 0 arrow
0 0 T
grestore
0 1 3 1 10 SU
352.644714 607.002319 T
N
3 L
0.482757 nxsetgray
11.710327 14.995605 0 0 line
52.014645 11.710327 14.995605 arrow
0 0 T
grestore
0 1 3 1 10 SU
287 618 T
19.000031 flipV
N
3 L
0.482757 nxsetgray
1.000031 -19.000031 0 19.000031 line
-86.989693 1.000031 0 arrow
0 0 T
grestore
0 1 3 1 10 SU
288 500.999969 T
N
3 L
0.482757 nxsetgray
1.000031 -19.000031 0 19.000031 line
-86.989693 1.000031 0 arrow
0 0 T
grestore
0 1 3 1 10 SU
391 574 T
N
3 L
0.482757 nxsetgray
19 0 0 0 line
0 19 0 arrow
0 0 T
grestore
0 1 3 1 10 SU
165 572 T
19 flipH
N
3 L
0.482757 nxsetgray
19 0 0 0 line
0 19 0 arrow
0 0 T
grestore
0 1 0 1 10 SU
[1 0 0 -1 182 619] concat
[1.041516 0 0 1.091516 0.806877 0.836021] concat
N
0 nxsetgray
gsave
202 91 0 0 oval fill
grestore
0 0 T
grestore
0 1 0 1 10 SU
[1 0 0 -1 187 614] concat
[1 0 0 1 0 0] concat
N
1 nxsetgray
gsave
202 91 0 0 oval fill
grestore
0 0 T
grestore
0 1 0.15 1 10 SU
[2] 0 setdash
287 570 T
N
0.15 L
0 nxsetgray
53 40 0 0 line
0 0 T
grestore
0 1 0 1 10 SU
[2] 0 setdash
[1 0 0 -1 284.171997 573] concat
[-0.753307 0 0 0.513481 6.136576 0.432595] concat
N
0 nxsetgray
gsave
7 10 0 0 oval fill
grestore
0 0 T
grestore
0 1 5 1 10 SU
268 470 T
N
5 L
0 nxsetgray
0 197 0 0 line
90 0 197 arrow
0 0 T
grestore
0 1 5 1 10 SU
368 470 T
N
5 L
0 nxsetgray
0 197 0 0 line
90 0 197 arrow
0 0 T
grestore
0 1 3 1 10 SU
166 404 T
N
3 L
0.482757 nxsetgray
19 0 0 0 line
0 19 0 arrow
0 0 T
grestore
0 1 3 1 10 SU
206.136032 516.42865 T
12.727875 flipH
14.141968 flipV
N
3 L
0.482757 nxsetgray
12.727875 14.141968 0 0 line
48.013969 12.727875 14.141968 arrow
0 0 T
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
/Times-Roman findfont 16 scalefont [1 0 0 -1 0 0] makefont
134
exch
defineuserobject
134 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1395] concat
/Times-Roman findfont 18 scalefont [1 0 0 -1 0 0] makefont
168
exch
defineuserobject
168 execuserobject setfont
0 nxsetgray
241 704 moveto (Above Ring) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
168 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 895] concat
168 execuserobject setfont
0 nxsetgray
246 454 moveto (Below Ring) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
168 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 809] concat
168 execuserobject setfont
0 nxsetgray
195 411 moveto (- Indicates expansion) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
168 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1327] concat
/Times-BoldItalic findfont 24 scalefont [1 0 0 -1 0 0] makefont
133
exch
defineuserobject
133 execuserobject setfont
0 nxsetgray
204 670 moveto (B) show
134 execuserobject setfont
0 6 rmoveto
(0) show
0 -6 rmoveto
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
134 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1113] concat
/Times-BoldItalic findfont 17 scalefont [1 0 0 -1 0 0] makefont
135
exch
defineuserobject
135 execuserobject setfont
0 nxsetgray
276 561 moveto (r=r) show
/Times-BoldItalic findfont 13 scalefont [1 0 0 -1 0 0] makefont
136
exch
defineuserobject
136 execuserobject setfont
0 5 rmoveto
(0) show
0 -5 rmoveto
135 execuserobject setfont
(\(1+) show
/Symbol findfont 17 scalefont [1 0 0 -1 0 0] makefont
137
exch
defineuserobject
137 execuserobject setfont
(a) show
135 execuserobject setfont
(t) show
136 execuserobject setfont
0 -7 rmoveto
(2) show
0 7 rmoveto
135 execuserobject setfont
(\)) show
grestore
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Symbol
%%+ Times-BoldItalic
%%+ Times-Roman
