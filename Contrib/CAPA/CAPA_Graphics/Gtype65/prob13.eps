%!PS-Adobe-2.0 EPSF-2.0
%%Title: set13.q13.create
%%Creator: Create
%%CreationDate: Thu Jun 29 14:52:17 1995
%%For: teacher
%%DocumentFonts: (atend)
%%Pages: 0 0
%%BoundingBox: 34 455 536 699
%%NXNextStepVersion: 3.0
%%EndComments
%%BeginProcSet: /usr/lib/NextStep/printPackage.ps 3.0
%!
% NeXT Printing Package
% Version: 3.1
% Copyright: 1988, NeXT, Inc.
/__NXdef{1 index where{pop pop pop}{def}ifelse}bind def
/__NXbdef{1 index where{pop pop pop}{bind def}ifelse}bind def
/UserObjects 10 array __NXdef
/defineuserobject{
	exch dup 1 add dup UserObjects length gt{
		array dup 0 UserObjects putinterval
		/UserObjects exch def
	}{pop}ifelse UserObjects exch 3 -1 roll put
}__NXbdef
/undefineuserobject{UserObjects exch null put}__NXbdef
/execuserobject{UserObjects exch get exec}__NXbdef
/__NXRectPath{4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath}__NXbdef
/__NXProcessRectArgs{
	1 index type /arraytype eq{
		exch 0 4 2 index length 1 sub{
			dup 3 add 1 exch{1 index exch get exch}for
			5 1 roll 5 index exec
		}for pop pop
	}{exec}ifelse
}__NXbdef
/rectfill{gsave newpath {__NXRectPath fill} __NXProcessRectArgs grestore}__NXbdef
/rectclip{newpath {__NXRectPath} __NXProcessRectArgs clip newpath}__NXbdef
/rectstroke{
	gsave newpath dup type /arraytype eq{dup length 6 eq}{false}ifelse{
		{gsave __NXRectPath null concat stroke grestore}
		dup length array cvx copy dup 2 4 -1 roll put __NXProcessRectArgs
	}{{__NXRectPath stroke} __NXProcessRectArgs}ifelse grestore
}__NXbdef
/_NXLevel2 systemdict /languagelevel known {languagelevel 2 ge}{false}ifelse __NXdef
/xyshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index 2 mul 1 add get add exch
		3 index	3 index 2 mul get add exch moveto pop
	}for pop pop
}__NXbdef
/xshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		exch 3 index 3 index get add exch moveto pop
	}for pop pop
}__NXbdef
/yshow{
	0 1 3 index length 1 sub{
		currentpoint 4 index 3 index 1 getinterval show
		3 index 3 index get add moveto pop
	}for pop pop
}__NXbdef
/arct{arcto pop pop pop pop}__NXbdef
/setbbox{pop pop pop pop}__NXbdef
/ucache{}__NXbdef
/ucachestatus{mark 0 0 0 0 0}__NXbdef
/setucacheparams{cleartomark}__NXbdef
/uappend{systemdict begin cvx exec end}__NXbdef
/ueofill{gsave newpath uappend eofill grestore}__NXbdef
/ufill{gsave newpath uappend fill grestore}__NXbdef
/ustroke{
	gsave newpath dup length 6 eq
	{exch uappend concat}{uappend}ifelse
	stroke grestore
}__NXbdef
/__NXustrokepathMatrix dup where {pop pop}{matrix def}ifelse
/ustrokepath{
	newpath dup length 6 eq{
		exch uappend __NXustrokepathMatrix currentmatrix exch concat
		strokepath setmatrix
	}{uappend strokepath}ifelse
} __NXbdef
/upath{
	[exch {/ucache cvx}if pathbbox /setbbox cvx
	 {/moveto cvx}{/lineto cvx}{/curveto cvx}{/closepath cvx}pathforall]cvx
} __NXbdef
/setstrokeadjust{pop}__NXbdef
/currentstrokeadjust{false}__NXbdef
/selectfont{exch findfont exch
dup type /arraytype eq {makefont}{scalefont}ifelse setfont}__NXbdef
/_NXCombineArrays{
	counttomark dup 2 add index dup length 3 -1 roll {
		2 index length sub dup 4 1 roll 1 index exch 4 -1 roll putinterval exch
	}repeat pop pop pop
}__NXbdef
/flushgraphics{}def
/setwindowtype{pop pop}def
/currentwindowtype{pop 0}def
/setalpha{pop}def
/currentalpha{1.0}def
/hidecursor{}def
/obscurecursor{}def
/revealcursor{}def
/setcursor{4 {pop}repeat}bind def
/showcursor{}def
/NextStepEncoding where not{
/NextStepEncoding StandardEncoding 256 array copy def
0 [129/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/Ccedilla/Egrave
/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/Ugrave/Uacute
/Ucircumflex/Udieresis/Yacute/Thorn/mu/multiply/divide/copyright
176/registered 181/brokenbar 190/logicalnot 192/onesuperior 201/twosuperior
204/threesuperior 209/plusminus/onequarter/onehalf/threequarters/agrave
/aacute/acircumflex/atilde/adieresis/aring/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave 226/iacute 228/icircumflex/idieresis/eth
/ntilde 236/ograve/oacute/ocircumflex/otilde/odieresis 242/ugrave/uacute
/ucircumflex 246/udieresis/yacute 252/thorn/ydieresis]
{dup type /nametype eq
 {NextStepEncoding 2 index 2 index put pop 1 add}{exch pop}ifelse
}forall pop
/NextStepEncoding NextStepEncoding readonly def
/_NXfstr 128 string dup 0 (_NX) putinterval def
/_NXfindfont /findfont load def
/findfont{
 % Because we can never let NextStepEncoding get into
 % SharedFontDirectory, we cannot reencode a font to NextStepEncoding
 % if we are in shared mode.  So if currentshared is true,
 % we call the normal findfont and return that
 /currentshared where {pop currentshared} {false} ifelse
 {_NXfindfont}
 {dup _NXfstr 3 125 getinterval cvs length 3 add _NXfstr 0 3 -1 roll
  getinterval cvn exch FontDirectory 2 index known 
  {pop FontDirectory exch get}
  {_NXfindfont dup /Encoding get StandardEncoding eq
   {	dup length dict exch
	{1 index /FID ne {2 index 3 1 roll put}{pop pop}ifelse}forall
	 dup /Encoding NextStepEncoding put definefont
	}{exch pop} ifelse
   }ifelse
 }ifelse
}bind def
}{pop}ifelse
/_NXImageString {/__NXImageString where{pop}{/__NXImageString 4000 string __NXdef}ifelse __NXImageString}__NXbdef
/_NXDoImageOp{
	3 dict begin /parr 5 array def 1 index{dup}{1}ifelse /chans exch def
	chans 2 add 2 roll parr 0 chans getinterval astore pop
	5 index 4 index mul 2 index{1 sub 8 idiv 1 add mul}{mul 1 sub 8 idiv 1 add}ifelse
	4 index mul /totbytes exch def pop exch pop
	gsave matrix invertmatrix concat 0.5 setgray 0 0 4 2 roll rectfill grestore
	{0 1 chans 1 sub{parr exch get exec length totbytes exch sub /totbytes exch def}for totbytes 0 le{exit}if}loop end
}__NXbdef
/alphaimage{1 add _NXDoImageOp}def
_NXLevel2{ 
	/NXCalibratedRGBColorSpace where{pop}{
		/NXCalibratedRGBColorSpace
		{mark /NXCalibratedRGB /ColorSpace findresource exch pop}stopped
		{cleartomark /NXCalibratedRGB[/CIEBasedABC 2 dict dup begin 
		/MatrixLMN[.4124 .2126 .0193 .3576 .7152 .1192 .1805 .0722 .9505]def
		/WhitePoint[.9505 1 1.089] def end] /ColorSpace defineresource}if def}ifelse
	/nxsetrgbcolor{NXCalibratedRGBColorSpace setcolorspace setcolor}__NXbdef
	/nxsetgray{dup dup nxsetrgbcolor}__NXbdef
	/_NXCalibratedImage{exch{array astore dup length true}{false}ifelse
		8 -1 roll{NXCalibratedRGBColorSpace setcolorspace}if
		8 dict dup 9 1 roll begin /ImageType 1 def /MultipleDataSources exch def
		currentcolorspace 0 get /Indexed eq{pop /Decode[0 2 6 index exp 1 sub]def}
		{2 mul dup array /Decode exch def 1 sub 0 1 3 -1 roll{Decode exch dup 2 mod put}for}ifelse
		/DataSource exch def /ImageMatrix exch def 
		/BitsPerComponent exch def /Height exch def /Width exch def end image}__NXbdef
} {
	/setcmykcolor{
		1.0 exch sub dup dup 6 -1 roll sub dup 0 lt{pop 0}if 5 1 roll
		4 -1 roll sub dup 0 lt{pop 0}if 3 1 roll exch sub dup 0 lt{pop 0}if setrgbcolor}__NXbdef
	/currentcmykcolor{currentrgbcolor 3{1.0 exch sub 3 1 roll}repeat 0}__NXbdef
	/colorimage{2 copy 3 ne or{_NXDoImageOp}{4 index dup 8 ne exch 4 ne and{_NXDoImageOp}{
		pop pop save 6 1 roll 12 dict begin/Proc exch def/Res 0 string def
		/Alloc{2 index length mul 2 add dup 2 index load length gt{1.2 mul round cvi string def}{pop pop}ifelse}def
		1 index 8 eq{/Unpack{.34 Alloc}def}{
			/Wid 4 index 3 mul def exch pop 8 exch/Str1 0 string def/Lim Wid def
			/Unpack{.67 Alloc/Str1 2 Alloc 0 exch Lim exch
				{dup -4 bitshift 17 mul Str1 exch 4 index exch put 15 and 17 mul Str1 exch 3 index 1 add exch put
				2 sub dup 0 le{0 lt Wid exch{exch 1 sub exch}if}if exch 2 add exch
				}forall/Lim exch def Str1 exch 0 exch getinterval
			}def
		}ifelse
		/Ops[{.3 mul add 1}{.59 mul add 2}{.11 mul add round cvi Res exch 2 index exch put 1 add 0.0 0}]def/Val 0.0 def/Phase 0 def
		{0 Val Phase Proc/Res Unpack{exch Ops exch get exec}forall/Phase exch def/Val exch def Res exch 0 exch getinterval}
		image end restore}ifelse}ifelse
	}__NXbdef
	/nxsetrgbcolor{setrgbcolor}__NXbdef /nxsetgray{setgray}__NXbdef
	/setpattern{pop .5 setgray}__NXbdef
	/_NXCalibratedImage{dup 1 eq {pop pop image}{colorimage}ifelse pop}__NXbdef
} ifelse
/_NXSetCMYKOrRGB where{pop}{
	mark{systemdict /currentwindow get exec}stopped
	{{pop pop pop setcmykcolor}}{{nxsetrgbcolor pop pop pop pop}}ifelse /_NXSetCMYKOrRGB exch def cleartomark
}ifelse
%%EndProcSet
% Create(TM) Embedded Graphics
% +.\Jr(<iHsVbEI9FRm3r6RInn!JCLS+[hFmP;E@D:c.Z0N1)M3kQ!"F0b"+MOpFd^e::AH/M
% Ui;ksCNZJL3b4a;Mmm9HY)h#q]ggL/+*\El,UXP@i%bTEgQ.Aa0sXV+Otu&MV,Q9V;[m!r3C
% HhuKGT6dhu/Rj8;E!!2!ZO@pAi+UDlTl5_VrDLf6F"4)s?Arrl`)14gl'-uQW!2'13)RN%=N
% usS'W#>)WPMjc:q\!ABQYkI&I0IEg"@,m.$"8#`8C5.NYYP787jb%)X7*3U/cQZ`RIf=_J@2
% 7WSq[4G)$L9P(c,d,VirtS:aq$PNmsn"!s&^iWR;R6"i>-gn=[[r\o[rTn2sc9lFE)h-h\5W
% GN;AI6t;Pa>K?e3%V'Uc#8_F-@0R-FK]0ojBe3r;)fF"gLDXiH@7CYH\rd19+Ae1i)eI7@Je
% W.1+lNoZ.):OpEh'rM%5>joiu)mqW5+!p]YVT,%<Ar\K+,ju6Od;i=@O0G.*3`iFd+$qN&$D
% :#)I5O+U8lid"+[s2F&[&$oo.A-6=r#J:j87b^]eUCXV]!S2K(uk*e3`TVe*&^:>R#2UEm"R
% 4po$+W"U,OTlVEYi,e@AU$1iSK<dli><)W+GU"Q?=sNeRoH,9CE%pqLB&+"#9R@Ed0JQWq'"
% l&J,]6GTR`jif\hAo:0=3F(i%-cLEN$/,)IY@W$7-P\q/t%?J=Tf[5IZF,EP5)\KMn^(.<nA
% 9bmjX\PubCjKr*2kp;^PmWiE5E4.3oQuX+&LRj:)RA[]Bo_BjUJ\k!W^5+6G@\\uR3iO'`RW
% 0bdR;U`X'VHouC/"jgE=p,b@8]Z4Y$DT>&-CY6`HuU@>$kXBg./2P[c.X^5G#t:=D2c,EZY:
% ]"i+<`-`>aRDRnTc:FO7(8!bXL6)PH!b6:.]FoC-TX$;`+@N>H65VOZV%5]dC6"-R/"r_T2l
% k<3e<.]g>(514g!!1H^EdTOd(%]b"e[f,=OlcKscN*aqGA=1d(.d84gmpCP\h2_pEcXPF>QL
% a)NHMC.GPuY1%ua6(!(#rcE[=AgQ3mVC:_T-OYg^=1b:`\JQd\/,IOjB?%Dp14EaU4VnX[q9
% Z[@W45'.pE^`H3PfYCfVj[t;KI.>tkd.GdaF7.iH>5-(F5@3Mb(BL%H"TTJ_"O[R!'GZ/J)g
% /sd<-_MXP!U;j#YPd3Y^tO\DCu!`&)qn*Zb_2&GUZdP!45XsR1KE6Q'd.MPgBC9"MfP8"5;W
% 4#6<Z7XDl>:*V0aXTB?@ZFs[KF#I,'_VHj[ZRleUaEW`u$Tl5$^]3lqXTSWk0+:p4$$OCg?^
% tk-WKFRibXpfLr`&1=EYSnDl!YIdFre6)m]-1Q=#9=gkNJA%'N9Jb-2FA>@3rT5S!"$.i;H0
% @tXq=$'mL^49!$DG<'MK2=njF/b&:uC2KE,+?#WkpM'4hK'cO)(egndJk3r=jZds/2)<^J#6
% J;FFa."ridd1C7',g[)^6GRI/AlM0X'qIlgTfI!%@Hi=C!eJJoJC0,/)e8Ze8A<1?0R_Peiu
% 8(#aTG'H!#sQ-"uTK`$@#C4J/Ml)"nP>#B!OTNS5g=FpP?'G6&*+d:"!d$\X$fEQodF(5E6%
% <2o79\H40ou"6%9782Gm?$VMuQE6V#K/XrkQTRN[BbA@ltB.Vioo,p!=)61#`^iZ#!Eu<4jW
% ptj\%,s*LPCTlB".e)G:I8^&:jL%n1u\A0/P0\TFT/S:3%SQ0ds+&eJh;eQW.Ygh'>6Z\,6/
% o!JH:$3.p=tkE)C_V6YB!-kFhs#I.VpoDCWYMEqG=]Uo4&g&V(+"!?7n75SKpn&u2tQ7W/Zb
% aI(nS=25:f"JhhTl(T*P4k,`o<LQkf8(GL?c`Vi7lNX)/dHoh6UX8PqW.Na75eJ]\dg-=?@(
% 4gc>&pH#lR'oS)G]HUDABCV#5,(,c?4jrQsS;l=?YBeYGpN0iWt2Uro$<Hx
% EndEmbeddedGraphics N 1543 607 E ce S 29b1c R 5fc5a572
gsave
-39 -28 translate
 /__NXbasematrix matrix currentmatrix def
grestore
%%EndProlog
%%BeginSetup
/acsRect {
    moveto dup 0 exch rlineto exch 0 rlineto 0 exch neg rlineto closepath
} def /oval {
    translate scale newpath 0.5 0.5 0.5 0 360 arc
} def /ovalPath {
    4 copy oval closepath neg exch neg exch 4 -1 roll 1 exch div 4 -1 roll 1 exch div scale translate
} def /ff02 {
    oval gsave eofill grestore setgray matrix defaultmatrix setmatrix stroke
} def /ffr2 {
    4 copy rectfill 5 -1 roll setgray rectstroke
} def /line {
    moveto rlineto stroke
} def /SU {
    setmiterlimit setflat setlinewidth setlinecap setlinejoin gsave
} def /arrow {
    newpath moveto dup rotate -10 3 rlineto 3 -3 rlineto -3 -3 rlineto closepath gsave 0 setlinejoin stroke grestore fill neg rotate
} def /plainarrow {
    gsave /y2 exch def /x2 exch def /y1 exch def /x1 exch def /y0 exch def /x0 exch def newpath x0 y0 translate 0 0 moveto dup rotate x1 y1 lineto x2 y2 lineto x1 y1 neg lineto closepath gsave 0 setlinejoin stroke grestore fill grestore
} def /frrb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath stroke -0.5 -0.5 translate
} def /firb {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def 0.5 0.5 translate exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg
rlineto 0 rad neg 0 rad neg rad neg rad neg rcurveto closepath fill -0.5 -0.5 translate
} def /rbp {
    /rad exch def /IV exch rad 2 mul sub def /IH exch rad 2 mul sub def exch rad add exch moveto rad neg 0 rad neg 0 rad neg rad rcurveto 0 IV rlineto 0 rad 0 rad rad rad rcurveto IH 0 rlineto rad 0 rad 0 rad rad neg rcurveto 0 IV neg rlineto 0 rad neg 0
rad neg rad neg rad neg rcurveto closepath
} def /pieceOfRadius {
    exch 0 exch rlineto 0 exch 2 copy dup dup rcurveto -90 rotate
} def /strokedRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath stroke
} def /filledRoundBox {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath fill
} def /roundBoxPath {
    dup 0 exch moveto 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop 3 copy pieceOfRadius pop 3 copy 3 -1 roll exch pieceOfRadius pop closepath
} def /ffrb {
    5 copy firb 6 -1 roll setgray frrb
} def /rbox {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectstroke
} def /rboxfilled {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w 2 div neg h 2 div neg w h rectfill
} def /rffb {
    5 copy gsave rboxfilled grestore 6 -1 roll setgray rbox
} def /roval {
    /h exch def /w exch def h 2 div add exch w 2 div add exch translate rotate w h w 2 div neg h 2 div neg gsave oval
} def /rovalstroke {
    roval matrix defaultmatrix setmatrix stroke grestore
} def /rovalfill {
    roval matrix defaultmatrix setmatrix fill grestore
} def /rofs {
    5 copy gsave rovalfill grestore 6 -1 roll setgray rovalstroke
} def /flipH {
    0 translate -1 1 scale
} def /flipV {
    0 exch translate 1 -1 scale
} def /pathtextdict 28 dict def /pathtext {
    pathtextdict begin /offset exch def /str exch def /pathdist 0 def /setdist offset def /charcount 0 def gsave flattenpath {
        movetoproc
    } {
        linetoproc
    } {
        curvetoproc
    } {
        closepathproc
    } pathforall grestore newpath end
} def pathtextdict begin /movetoproc {
    /newy exch def /newx exch def /firstx newx def /firsty newy def /ovr 0 def newx newy transform /cpy exch /cpx exch def
} def /linetoproc {
    /oldx newx def /oldy newy def /newy exch def /newx exch def /dx newx oldx sub def /dy newy oldy sub def /dist dx dup mul dy dup mul add sqrt def dist 0 ne {
        /dsx dx dist div ovr mul def /dsy dy dist div ovr mul def oldx dsx add oldy dsy add transform /cpy exch def /cpx exch def /pathdist pathdist dist add def {
            getNextWidth setdist nextCharHalfWidth add pathdist le {
                charcount str length lt {
                    setchar
                } {
                    exit
                } ifelse
            } {
                /ovr setdist pathdist sub def exit
            } ifelse
        } loop
    } if
} def /curvetoproc {
    (Error) print
} def /closepathproc {
    firstx firsty linetoproc firstx firsty movetoproc
} def /getNextWidth {
    charcount 1 add str length lt {
        /nextCharHalfWidth str charcount 1 add 1 getinterval stringwidth pop 2 div def
    } if
} def /setchar {
    /char str charcount 1 getinterval def /charcount charcount 1 add def /charwidth char stringwidth pop def gsave cpx cpy itransform translate dy dx atan rotate 0 0 moveto char show currentpoint transform /cpy exch def /cpx exch def grestore /setdist
setdist charwidth add def
} def end /c /curveto load def /l /lineto load def /m /moveto load def /s /stroke load def /f /fill load def /S /scale load def /R /rotate load def /T /translate load def /L /setlinewidth load def /N /newpath load def /C /closepath load def
%%EndSetup
gsave
34 455 502 244 rectclip
0 1 4 1 10 SU
[1 0 0 -1 169 687] concat
[1 0 0 -1 2 218] concat
N
4 L
0 nxsetgray
N
108 108 108 -30 -150 arc
s
0 0 T
grestore
0 2 4 1 10 SU
[1 0 0 -1 175 531] concat
[1 0 0 1 0 0] concat
N
1 nxsetgray
0 0 27 27 rectfill
0 0 T
grestore
0 1 4 1 10 SU
[1 0 0 -1 166 535] concat
[1 0 0 -1 2 32] concat
N
4 L
0 nxsetgray
N
15 15 15 90 -40 arcn
s
0 0 T
grestore
0 1 4 1 10 SU
265 471 T
N
4 L
0 nxsetgray
16 0 0 0 line
180 0 0 arrow
0 0 T
grestore
0 1 4 1 10 SU
278 685 T
N
4 L
0 nxsetgray
16 0 0 0 line
0 16 0 arrow
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 354 503] concat
0 1 4 1 10 SU
21 20 T
N
4 L
0 nxsetgray
16 0 0 0 line
0 16 0 arrow
0 0 T
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 7 7] concat
0 2 4 1 10 SU
13 13 T
N
4 L
0 nxsetgray
134 0 0 0 line
0 134 0 arrow
0 0 T
grestore
grestore
grestore
grestore
grestore
0 nxsetgray
0 0 0.15 1 10 SU
gsave
[1 0 0 1 41 510] concat
0 1 4 1 10 SU
13 13 T
N
4 L
0 nxsetgray
303 0 0 0 line
0 303 0 arrow
0 0 T
grestore
0 1 4 1 10 SU
74 13 T
N
4 L
0 nxsetgray
16 0 0 0 line
0 16 0 arrow
0 0 T
grestore
grestore
grestore
0 1 4 1 10 SU
[1 0 0 -1 169 678] concat
[0.947625 0 0 0.947625 2.656508 2.656508] concat
N
4 L
0 nxsetgray
N
108 108 108 30 141 arc
s
0 0 T
grestore
0 1 1 1 10 SU
[4] 0 setdash
278 525 T
N
1 L
0 nxsetgray
0 52 0 0 line
0 0 T
grestore
0 1 1 1 10 SU
[4] 0 setdash
279 577 T
N
1 L
0 nxsetgray
55 93 0 0 line
0 0 T
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
/Times-BoldItalic findfont 24 scalefont [1 0 0 -1 0 0] makefont
402
exch
defineuserobject
402 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1285] concat
402 execuserobject setfont
0 nxsetgray
285 651 moveto (R) show
grestore
grestore
0 nxsetgray
0 1 0.15 1 10 SU
gsave
402 execuserobject setfont
0 nxsetgray
[1 0 0 -1 0 1107] concat
402 execuserobject setfont
0 nxsetgray
263 562 moveto (r) show
grestore
grestore
0 1 0.15 1 10 SU
[4] 0 setdash
[1 0 0 -1 275 581] concat
[0.741494 0 0 0.513342 0.163278 0.163277] concat
N
0 nxsetgray
gsave
9 13 0 0 oval fill
grestore
0 0 T
grestore
gsave
0 0 612 792 rectclip
[1 0 0 -1 0 792] concat
grestore
grestore
showpage
%%Trailer
%%DocumentFonts: Times-BoldItalic
