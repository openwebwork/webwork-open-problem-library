	
	 DOCUMENT(); 

loadMacros( "PG.pl", 
	             "PGbasicmacros.pl",
	             "PGauxiliaryFunctions.pl",
	             "PGchoicemacros.pl",
	             "PGanswermacros.pl",
	             "PGgraphmacros.pl",
	             "PG_CAPAmacros.pl"
	 );
	 
	 TEXT(beginproblem());
	
	
## **************************************
## 
## Type 3
## Measurement of an area (propagation of errors).
## Part 1
## Error Analysis
## By Frank Wolfs, Wolfs@NSRL31.NSRL.ROCHESTER.EDU
## No unauthorized commerical use
## Imported Files
## ${CAPA_Tools}Problem
## Values needing defined:
## prob_val (number, eg. /LET prob_val=1)
## prob_try (number, eg. /LET prob_try=5)
## 
## Last modified 06/30/97 
## by: Patrick D. Freivald
## patrick@freivald.org
## 
## *************************************
## 
$fwhm_height = random( 0.1   , 0.5   , 0.01   )   ;  
$fwhm_width = random( 0.1   , 0.5   , 0.01   )   ;  
$ran1a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran1b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran2a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran2b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran3a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran3b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran4a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran4b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran5a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran5b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran6a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran6b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran7a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran7b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran8a = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$ran8b = random( 0.0000001   , 0.9999999   , 0.000000001   )   ;  
$height1a = sin( 2 * $pi * $ran1a   ) * pow( -2. * log( $ran1b   )   , 0.5   )   ;  
$height1b = cos( 2 * $pi * $ran1a   ) * pow( -2. * log( $ran1b   )   , 0.5   )   ;  
$height2a = sin( 2 * $pi * $ran2a   ) * pow( -2. * log( $ran2b   )   , 0.5   )   ;  
$height2b = cos( 2 * $pi * $ran2a   ) * pow( -2. * log( $ran2b   )   , 0.5   )   ;  
$height3a = sin( 2 * $pi * $ran3a   ) * pow( -2. * log( $ran3b   )   , 0.5   )   ;  
$height3b = cos( 2 * $pi * $ran3a   ) * pow( -2. * log( $ran3b   )   , 0.5   )   ;  
$width1a = sin( 2 * $pi * $ran4a   ) * pow( -2. * log( $ran4b   )   , 0.5   )   ;  
$width1b = cos( 2 * $pi * $ran4a   ) * pow( -2. * log( $ran4b   )   , 0.5   )   ;  
$width2a = sin( 2 * $pi * $ran5a   ) * pow( -2. * log( $ran5b   )   , 0.5   )   ;  
$width2b = cos( 2 * $pi * $ran5a   ) * pow( -2. * log( $ran5b   )   , 0.5   )   ;  
$width3a = sin( 2 * $pi * $ran6a   ) * pow( -2. * log( $ran6b   )   , 0.5   )   ;  
$width3b = cos( 2 * $pi * $ran6a   ) * pow( -2. * log( $ran6b   )   , 0.5   )   ;  
$width4a = sin( 2 * $pi * $ran7a   ) * pow( -2. * log( $ran7b   )   , 0.5   )   ;  
$width4b = cos( 2 * $pi * $ran7a   ) * pow( -2. * log( $ran7b   )   , 0.5   )   ;  
$width5a = sin( 2 * $pi * $ran8a   ) * pow( -2. * log( $ran8b   )   , 0.5   )   ;  
$width5b = cos( 2 * $pi * $ran8a   ) * pow( -2. * log( $ran8b   )   , 0.5   )   ;  
$height1 = 0.01 * floor( 100. * ( $fwhm_height * $height1a  + 11.    )   )   ;  
$height2 = 0.01 * floor( 100. * ( $fwhm_height * $height1b  + 11.    )   )   ;  
$height3 = 0.01 * floor( 100. * ( $fwhm_height * $height2a  + 11.    )   )   ;  
$height4 = 0.01 * floor( 100. * ( $fwhm_height * $height2b  + 11.    )   )   ;  
$height5 = 0.01 * floor( 100. * ( $fwhm_height * $height3a  + 11.    )   )   ;  
$height6 = 0.01 * floor( 100. * ( $fwhm_height * $height3b  + 11.    )   )   ;  
$width1 = 0.01 * floor( 100. * ( $fwhm_width * $width1a  + 13.5    )   )   ;  
$width2 = 0.01 * floor( 100. * ( $fwhm_width * $width1b  + 13.5    )   )   ;  
$width3 = 0.01 * floor( 100. * ( $fwhm_width * $width2a  + 13.5    )   )   ;  
$width4 = 0.01 * floor( 100. * ( $fwhm_width * $width2b  + 13.5    )   )   ;  
$width5 = 0.01 * floor( 100. * ( $fwhm_width * $width3a  + 13.5    )   )   ;  
$width6 = 0.01 * floor( 100. * ( $fwhm_width * $width3b  + 13.5    )   )   ;  
$width7 = 0.01 * floor( 100. * ( $fwhm_width * $width4a  + 13.5    )   )   ;  
$width8 = 0.01 * floor( 100. * ( $fwhm_width * $width4b  + 13.5    )   )   ;  
$width9 = 0.01 * floor( 100. * ( $fwhm_width * $width5a  + 13.5    )   )   ;  
$width10 = 0.01 * floor( 100. * ( $fwhm_width * $width5b  + 13.5    )   )   ;  
$average_height = ( $height1  + $height2  + $height3  + $height4  + $height5  + $height6    ) /  6.   ;  
$devl1 = pow( $height1  - $average_height   , 2.   )   ;  
$devl2 = pow( $height2  - $average_height   , 2.   )   ;  
$devl3 = pow( $height3  - $average_height   , 2.   )   ;  
$devl4 = pow( $height4  - $average_height   , 2.   )   ;  
$devl5 = pow( $height5  - $average_height   , 2.   )   ;  
$devl6 = pow( $height6  - $average_height   , 2.   )   ;  
$sdev_height = pow( ( $devl1  + $devl2  + $devl3  + $devl4  + $devl5  + $devl6    ) /  5.   , 0.5   )   ;  
$error_height = $sdev_height /  sqrt( 6.   )   ;  
## 
$average_width = 0.1 * ( $width1  + $width2  + $width3  + $width4  + $width5  + $width6  + $width7  + $width8  + $width9  + $width10    )   ;  
$devw1 = pow( $width1  - $average_width   , 2.   )   ;  
$devw2 = pow( $width2  - $average_width   , 2.   )   ;  
$devw3 = pow( $width3  - $average_width   , 2.   )   ;  
$devw4 = pow( $width4  - $average_width   , 2.   )   ;  
$devw5 = pow( $width5  - $average_width   , 2.   )   ;  
$devw6 = pow( $width6  - $average_width   , 2.   )   ;  
$devw7 = pow( $width7  - $average_width   , 2.   )   ;  
$devw8 = pow( $width8  - $average_width   , 2.   )   ;  
$devw9 = pow( $width9  - $average_width   , 2.   )   ;  
$devw10 = pow( $width10  - $average_width   , 2.   )   ;  
$sdev_width = pow( ( $devw1  + $devw2  + $devw3  + $devw4  + $devw5  + $devw6  + $devw7  + $devw8  + $devw9  + $devw10    ) /  9.   , 0.5   )   ;  
$error_width = $sdev_width /  sqrt( 10.   )   ;  
## 
$area = $average_height * $average_width   ;  
$error_area = pow( pow( $average_width * $error_height   , 2.0   )  + pow( $average_height * $error_width   , 2.0   )   , 0.5   )   ;  
## 
CAPA_import( " ${CAPA_Tools}Problem " );   
## 
TEXT(CAPA_EV (<<'END_OF_TEXT'));
For some obscure reason an individual wants to make an accurate determination of the area of a sheet of typewriting paper.  The following measurements are made of the height of the paper:  \{  spf( $height1    , "%0.2f" ) \}, \{  spf( $height2    , "%0.2f" ) \}, \{  spf( $height3    , "%0.2f" ) \}, \{  spf( $height4    , "%0.2f" ) \}, \{  spf( $height5    , "%0.2f" ) \}, and \{  spf( $height6    , "%0.2f" ) \} \{ $cm_u \}.  The following measurements are made of the width of the paper:  \{  spf( $width1    , "%0.2f" ) \}, \{  spf( $width2    , "%0.2f" ) \}, \{  spf( $width3    , "%0.2f" ) \}, \{  spf( $width4    , "%0.2f" ) \}, \{  spf( $width5    , "%0.2f" ) \}, \{  spf( $width6    , "%0.2f" ) \}, \{  spf( $width7    , "%0.2f" ) \}, \{  spf( $width8    , "%0.2f" ) \} , \{  spf( $width9    , "%0.2f" ) \}, and \{  spf( $width10    , "%0.2f" ) \} \{ $cm_u \}.  What is the most probable value of the area of the paper?
END_OF_TEXT

## 

TEXT("$BR$BR",ans_rule(30),"$BR");
ANS( CAPA_ans( $area   , 'format' => "%0.2e" , 'sig' => '3 plus 13', 'reltol' => 1   ,  'wgt' => $prob_val    ,  'tries' => $prob_try    ,  'unit' => 'cm^2'    ) ); 
## **************************************
## 
## Type 3
## Measurement of an area (propagation of errors).
## Part 2
## Error Analysis
## By Frank Wolfs, Wolfs@NSRL31.NSRL.ROCHESTER.EDU
## No unauthorized commerical use
## Imported Files
## ${CAPA_Tools}Problem
## Values needing defined:
## prob_val (number, eg. /LET prob_val=1)
## prob_try (number, eg. /LET prob_try=5)
## 
## Last modified 06/30/97 
## by: Patrick D. Freivald
## patrick@freivald.org
## 
## *************************************
## 
CAPA_import( " ${CAPA_Tools}Problem " );   
## 
TEXT(CAPA_EV (<<'END_OF_TEXT'));
What is the error of the area?
END_OF_TEXT

## 
CAPA_hint( "Did you calculate the standard deviations of the height and the width?");   
CAPA_hint( "Did you take into that the errors in the average height and width decrease when the number of measurements increases?");   
CAPA_hint( "Since the standard deviation is a measure of the accuracy of the method that is being used, it does not change very much when the number of measurements is increased.");   
## 

TEXT("$BR$BR",ans_rule(30),"$BR");
ANS( CAPA_ans( $error_area   , 'format' => "%0.2e" , 'sig' => '3 plus 13', 'reltol' => 1   ,  'wgt' => $prob_val    ,  'tries' => $prob_try    ,  'unit' => 'cm^2'    ) ); 
ENDDOCUMENT();
#####################

###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $pi not defined in this file
###Error: $cm_u not defined in this file
###Error: $cm_u not defined in this file
###Error: $prob_val not defined in this file
###Error: $prob_try not defined in this file
###Error: $prob_val not defined in this file
###Error: $prob_try not defined in this file

#####################


#################################################
## Processing time =  5 secs ( 4.75 usr  0.00 sys =  4.75 cpu)
#################################################
