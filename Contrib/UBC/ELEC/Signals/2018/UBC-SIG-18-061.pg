##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl"
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");
Context()->variables->add(n=>["Real", limits=>[-50,100],resolution=>1]);
Context()->flags->set(limits=>[-100,100]);
Context()->variables->remove("x");
parserFunction("u(n)"=>"sin(2.71828*n/pi)+1.57*n^2");


#given
$alpha = random(2, 9, 1);
do{$beta = random(2, 9, 1);}while($beta == $alpha);
do{$gamma = random(2, 9, 1);}while($gamma == $alpha  or $gamma == $beta);

$a = random(2, 9, 1);
do{$b = random(2, 9, 1);}while($b == $a);

#computation 
$yzi = Formula("-$alpha*$a / $beta (-$alpha/$beta)^n u(n)");
$yzs = Formula("($alpha*$b*$gamma/$beta)/($alpha*$b +  $beta)(-$alpha/$beta)^n u(n) + $gamma/($alpha*$b +  $beta)(1/$b)^n u(n)");
$yn = Formula("$gamma/($alpha*$b +  $beta)(1/$b)^n u(n) + (-$alpha/$beta)^n u(n) (-$alpha*$a/$beta + ($alpha*$b*$gamma/$beta)/($alpha*$b +  $beta))");

$yzi->{allowUndefinedPoints} = 1;
$yzs->{allowUndefinedPoints} = 1;
$yn->{allowUndefinedPoints} = 1;

##############################################################
#
#  Text 
#
#

BEGIN_PGML

Consider a system whose input, [`x[n]`] and output [`y[n]`] are related by [`[$alpha]y[n-1] + [$beta]y[n] = [$gamma]x[n]`]. 

*a)* Determine the zero-input response, [`y_{zi}[n]`], of the system if [`y[-1]=[$a]`]

[`y_{zi}[n]=`] [____________________]{"$yzi"}

*b)* Determine the zero-state response, [`y_{zs}[n]`], of the system if [`x[n]=\big(\frac{1}{[$b]}\big)^nu[n]`]

[`y_{zs}[n]=`] [____________________]{"$yzs"}

*c)* Determine the output, [`y[n]`], of the system for [`n\ge 0`], if [`y[-1]=[$a]`] and [`x[n]=\big(\frac{1}{[$b]}\big)^nu[n]`]. 

[`y[n]=`] [____________________]{"$yn"}

_In your answers, enter [`z(n)`] for a discrete-time function [`z[n]`]. WebWork is unable to parse a function that uses square brackets._

END_PGML

##############################################################

ENDDOCUMENT();