##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl",
	"PGauxiliaryFunctions.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Interval");

Context()->variables->add(n=>["Real", limits=>[1,100],resolution=>1]);
Context()->variables->add(z=>"Real");
Context()->variables->remove("x");
parserFunction("u(n)"=>"sin(2.71828*n/pi)+1.57*n^2");
parserFunction("D(n)"=>"sin(4*2.71828*n/pi)+3.14*n^4");

#given
$p = random(2, 9, 1);
do{$q = random(2, 9, 1);}while($p==$q);
$alpha = -(1/$p)-(1/$q);
$beta = (1/$p)*(1/$q);
$eta = random(2, 9, 1);
$numer2 = $p + $q;

#computation 
$hz = Formula("$eta z^2/((z-1/$p)(z-1/$q))");
$denom = min($p,$q);
$roc = Interval(1/$denom,infinity);
$hn = Formula("$eta u(n) (1/($q - $p)) ($q(1/$p)^n - $p(1/$q)^n)");
$sn = Formula("$eta u(n)($p*$q/(($p-1)*($q-1)) + $q*(1/$p)^n/((1-$p)*($q-$p)) + $p(1/$q)^n/((1-$q)*($p-$q)))");
$sn->{allowUndefinedPoints} = 1;

#set tolerance
Context()->flags->set(
tolerance=>.02);

##############################################################
#
#  Text 
#
#

BEGIN_PGML

A causal discrete-time LTI system is described by the difference equation, [`y[n]-\frac{[$numer2]}{[$p*$q]}y[n-1]+\frac{1}{[$p*$q]}y[n-2]=[$eta]x[n]`], where   and   are the input and output of the system respectively.

*a)* Find the system transfer function [`H(z)`], and indicate the region of convergence in interval notation (e.g. (-INF,a), (a,b) or (b, INF)).

[`H(z)=`] [____________________]{"$hz"} [`RoC:`] [_____]{"$roc"}

*b)* Find the impulse response, [`h[n]`], of the system.

[`h[n]=`] [____________________]{"$hn"}

*c)* Find the step response, [`s[n]`], of the system.

[`s[n]=`] [____________________]{"$sn"}

_In your answers, enter [`z(n)`] for a discrete-time function [`z[n]`] and enter [`D(n)`] instead of [`\delta[n]`]. WebWork is unable to parse a function that uses square brackets._

END_PGML

##############################################################

ENDDOCUMENT();