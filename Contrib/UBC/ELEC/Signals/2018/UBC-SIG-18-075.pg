##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Complex");
Context()->constants->add(j => i);
Context()->variables->add(n=>"Real");
Context()->variables->add(O=>"Real");
parserFunction("u(n)"=>"sin(2.71828*n/pi)+1.57*n^2");
#given
$a = random(2,9,1);
$p = random(2,9,1);
do{$q = random(2,9,1);}while($q==$p);
$alpha = 1/$p;
$beta = 1/$q;
$gamma = random(11,33,1);
$e=2.7182818284590452353602874713527;

#computation 
$ho = Formula("($gamma + $beta*$e^(-i O))/(1 - $alpha*$e^(-i O))");
$hn = Formula("$gamma*$alpha^n u(n) + $beta*$alpha^(n - 1)u(n-1)");

$complex = Compute("($gamma + $beta*$e^(-i *pi/$a))/(1 - $alpha*$e^(-i *pi/$a))");
$theta = $complex->arg;
$r = $complex->mod;
$yn = Formula("$r cos(n pi/$a + $theta)");

##############################################################
#
#  Text 
#
#

BEGIN_PGML


A causal discrete-time LTI system is described by the difference equation [`y[n]-\frac{1}{[$p]}y[n-1] = [$gamma]x[n] + \frac{1}{[$q]}x[n-1]`], where [`x[n]`] is the input and [`y[n]`] is the output signal.

*a)* Determine the frequency response, [`H(\Omega)`], of the system. _Enter [`\Omega`] as "O"._

[`H(\Omega)=`] [_____] 

*b)* Find the impulse response, [`h[n]`], of the system.

[`h[n]=`] [_____]  

*c)* Determine the response of the system, [`y[n]`] to the input [`x[n]=cos\big(\frac{n\pi}{[$a]}\big)`].

[`y[n]=`] [_____]  

_In your answers, enter [`z(n)`] for a discrete-time function [`z[n]`]. WebWork is unable to parse a function that uses square brackets._

END_PGML

ANS($ho->cmp);
ANS($hn->cmp);
ANS($yn->cmp);

##############################################################

ENDDOCUMENT();