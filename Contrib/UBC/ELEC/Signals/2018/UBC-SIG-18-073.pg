##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl",
	"niceTables.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Complex");

#given
$a = random(3, 6, 1);
$alpha = random(2, 9, 1);


#computation 
$length = Formula("2*$a");
$a0 = Formula("$alpha");
$a1 = Formula("2*$alpha");
$a2 = Formula("3*$alpha");

if($a == 6){
	$a3 = Formula("4*$alpha");
	$a4 = Formula("5*$alpha");
	$a5 = Formula("6*$alpha");
	$a6 = Formula("6*$alpha");
	$a7 = Formula("5*$alpha");
	$a8 = Formula("4*$alpha");
	$a9 = Formula("3*$alpha");
	$a10 = Formula("2*$alpha");
	$a11 = Formula("$alpha");
}
elsif($a == 5){
	$a3 = Formula("4*$alpha");
	$a4 = Formula("5*$alpha");
	$a5 = Formula("5*$alpha");
	$a6 = Formula("4*$alpha");
	$a7 = Formula("3*$alpha");
	$a8 = Formula("2*$alpha");
	$a9 = Formula("$alpha");
	$a10 = Formula("0");
	$a11 = Formula("0");
}
elsif($a == 4){
	$a3 = Formula("4*$alpha");
	$a4 = Formula("4*$alpha");
	$a5 = Formula("3*$alpha");
	$a6 = Formula("2*$alpha");
	$a7 = Formula("$alpha");
	$a8 = Formula("0");
	$a9 = Formula("0");
	$a10 = Formula("0");
	$a11 = Formula("0");
}
else{
	$a3 = Formula("3*$alpha");
	$a4 = Formula("2*$alpha");
	$a5 = Formula("$alpha");
	$a6 = Formula("0");
	$a7 = Formula("0");
	$a8 = Formula("0");
	$a9 = Formula("0");
	$a10 = Formula("0");
	$a11 = Formula("0");
}

$a12 = Formula("0");
$a13 = Formula("0");


##############################################################
#
#  Text 
#
#

BEGIN_PGML

The impulse response of a discrete-time LTI system is given by [`h[n]=u[n]-u[n-[$a]]`]. Given that the input to the system is given by [`x[n]=[$alpha](u[n]-u[n-(N+1)])`] for a positive integer [`N`]:

*a)* If [`N=[$a]`] what is the length of the output [`y[n]`]? [______]

*b)* Find the output, [`y[n]`] of the system for [`N=[$a]`] and enter it in the table below. 

END_PGML

BEGIN_TEXT
$PAR
\{
	DataTable(
		[
			['n','\(0\)','\(1\)','\(2\)','\(3\)','\(4\)','\(5\)','\(6\)'],
			['\(y[n]\)',ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),],
		],
		center => 0,
		allcellcss=>'padding-left:10px; padding-right:10px; border: solid thin #CCCCCC;',
		);
\}

$PAR

\{
	DataTable(
		[
			['n','\(7\)','\(8\)','\(9\)','\(10\)','\(11\)','\(12\)','\(13\)'],
			['\(y[n]\)',ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),ans_rule(5),],
		],
		center => 0,
		allcellcss=>'padding-left:10px; padding-right:10px; border: solid thin #CCCCCC;',
		);
\}

$PAR
END_TEXT

ANS($length->cmp);

ANS($a0->cmp);
ANS($a1->cmp);
ANS($a2->cmp);
ANS($a3->cmp);
ANS($a4->cmp);
ANS($a5->cmp);
ANS($a6->cmp);
ANS($a7->cmp);
ANS($a8->cmp);
ANS($a9->cmp);
ANS($a10->cmp);
ANS($a11->cmp);
ANS($a12->cmp);
ANS($a13->cmp);

##############################################################

ENDDOCUMENT();