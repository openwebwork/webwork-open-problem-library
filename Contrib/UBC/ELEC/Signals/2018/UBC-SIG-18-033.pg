##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"PGauxiliaryFunctions.pl",
	"niceTables.pl",
	"parserOneOf.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Complex");
Context()->variables->add(T=>"Real");
Context()->strings->add(NA=>{});
Context()->variables->add(Xk=>"Real");
Context()->variables->add(X0=>"Real");
Context()->variables->add(k=>"Real");
Context()->variables->add(w=>"Real");
Context()->constants->add(j => i);

#given
$a_1 = random(2, 9, 1);
$a_2 = random(2, 9, 1);
$a_3 = random(2, 9, 1);
$alpha_1 = random(2, 9, 1);
$alpha_2 = random(2, 9, 1);
$alpha_3 = random(2, 9, 1);
$mcPeriodic = PopUp(["?","Periodic","Aperiodic"], "Periodic");
$mcAperiodic = PopUp(["?","Periodic","Aperiodic"], "Aperiodic");

#computation 
$ans2 =  OneOf(Formula("T"),Formula("2 pi / w"));
$ans3 = Formula("$alpha_1 X0 - $a_1");
$ans4 = Formula("$alpha_1 Xk");
$ans10 = OneOf(Formula("T"),Formula("2 pi / w"));
$ans11 = Formula("($alpha_2+1)*X0");
$ans12 = OneOf(Formula("($alpha_2 + e^(-$a_2 i k 2 pi / T))Xk"),Formula("($alpha_2 + e^(-$a_2 i k w))Xk"));

##############################################################
#
#  Text 
#
#

BEGIN_PGML

Let [`x(t)`] be a periodic signal of fundamental frequency [`\omega_0 = \frac{2\pi}{T_0}`] that has Fourier series coefficients, [`X_k`]. For each of the signals [`y(t)`] given in the table below, first determine if they are periodic or not. Then, for the periodic signals, determine their period in terms of [`T_0`], and calculate their Fourier coefficients [`Y_0`] and [`Y_k`] in terms of [`X_0`] and[`X_k`], the corresponding Fourier coefficients of [`x(t)`]. 

In your answers, enter "Xk" for [`X_k`] and "X0" for [`X_0`], "w" for [`\omega_0`], and "T" for [`T_0`]. Enter "NA" for the aperiodic signals.

END_PGML

BEGIN_TEXT

$PAR
\{
	DataTable(
		[
			['$BBOLD Signal, \(y(t)\) $EBOLD','$BBOLD Periodic/Aperiodic $EBOLD','$BBOLD Period $EBOLD','$BBOLD \(Y_0\) $EBOLD','$BBOLD \(Y_k\) $EBOLD'],
			['\($alpha_1 x(t)- $a_1\)',$mcPeriodic->menu(),ans_rule(5),ans_rule(15),ans_rule(15)],
			['\(x(\pi t) + $alpha_3 x(t - $a_3))\)',$mcAperiodic->menu(),ans_rule(5),ans_rule(15),ans_rule(15)],
			['\(x(t - $a_2)+ $alpha_2 x(t)\)',$mcPeriodic->menu(),ans_rule(5),ans_rule(15),ans_rule(15)],
		],
		center => 0,
		allcellcss=>'padding-left:20px; padding-right:20px; border: solid thin #CCCCCC;',
		);

\}
END_TEXT

ANS($mcPeriodic->cmp);
ANS($ans2->cmp);
ANS($ans3->cmp);
ANS($ans4->cmp);

ANS($mcAperiodic->cmp);
ANS(String("NA")->cmp);
ANS(String("NA")->cmp);
ANS(String("NA")->cmp);

ANS($mcPeriodic->cmp);
ANS($ans10->cmp);
ANS($ans11->cmp);
ANS($ans12->cmp);


##############################################################

ENDDOCUMENT();