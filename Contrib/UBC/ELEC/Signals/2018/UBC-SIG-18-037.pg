##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"niceTables.pl",
	"parserFunction.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Complex");
Context()->constants->add(j => i);
Context()->variables->add(t=>"Real");
parserFunction("u(t)"=>"sin(2.71828*t/pi)+1.57*t^2");

#given
$p = random(2, 6, 1);
do{$q = random(2, 6, 1);}while($p==$q);

$notA = 2*$p*$q-4+$p**2+$q**2;
$notB = $p*$q-1;
$a = sqrt($notA);
$b = sqrt($notB);

$mc = PopUp(["?","High-pass","Low-pass", "Band-pass","Band-rejection"], "Band-pass");        

#computation 
$ansA1 = List("-$b - j","-$b + j");
$ansA2 = Formula("0");

$ansB1 = Formula("0");
$ansB2 = Formula("0");
$ansB3 = Formula("$a/sqrt($b*$b*$b*$b + 4*$b*$b)");

$complex = $a * i/($b**2 + 2*$b*i);
$theta = ($complex->arg)*180/pi;
$ansB4 = Formula("$theta");

$ansB5 = Formula("0");
$ansB6 = Formula("0");

$ansD = Formula("$a e^(-$b t)(cos(t)- $b sin(t))u(t)");

$ansE = List("$p","$q");

##############################################################
#
#  Text 
#
#

BEGIN_PGML

The transfer function of a filter is [``H(s)=\frac{\sqrt{[$notA]}s}{s^2 + (2\sqrt{[$notB]})s + [$notB + 1]}``].

*a)* Find the poles, [`s_1`] and [`s_2`], and the zero, [`s_0`], of the system.

[`s_{1,2}=`] [_______]  
[`s_{0}=`] [_______]

_Enter the poles as a list, seperated by commas_

*b)* Find the magnetude and phase (in degrees) of the frequency response at each of the frequencies given in the table below:

END_PGML

BEGIN_TEXT
$PAR
\{
	DataTable(
		[
			['\(\omega\)','\(|H(\omega)|\)','\(\angle H(\omega)\) (degrees)'],
			['\(0\)',ans_rule(10),ans_rule(10)],
			['\(1\)',ans_rule(10),ans_rule(10)],
			['\(\infty\)',ans_rule(10),ans_rule(10)],
		],
		center => 0,
		allcellcss=>'padding-left:20px; padding-right:20px; border: solid thin #CCCCCC;',
		);

\}
$PAR
END_TEXT

BEGIN_PGML
*c)* What type of filter is this? [@$mc->menu()@]*

*d)* Find the impulse response, [`h(t)`], of the filter.

[`h(t)=`] [__________________]

*e)* This filter is connected in series with a sinusoidal signal generator which generates biased sinusoids [`x(t)=B+Acos(\omega t)`] as the input to the filter. Find the frequency (or frequencies) [`\omega_0`] where the filter's output is [`y(t)=Acos(\omega_0 t + \theta)`], i.e, the amplitude of the sinusoid remains the same. If there are multiple frequencies where this occurs, enter the positive frequencies only as a list, separated by commas in decreasing order.

[`\omega_{0}=`] [_______]  

END_PGML

ANS($ansA1->cmp);
ANS($ansA2->cmp);

ANS($ansB1->cmp);
ANS($ansB2->cmp);
ANS($ansB3->cmp);
ANS($ansB4->cmp);
ANS($ansB5->cmp);
ANS($ansB6->cmp);

ANS($mc->cmp);

ANS($ansD->cmp);

ANS($ansE->cmp);

##############################################################

ENDDOCUMENT();