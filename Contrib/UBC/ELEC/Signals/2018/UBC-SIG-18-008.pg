##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## RESOURCES('UBC-SIG-18-008a.png', 'UBC-SIG-18-008b.png')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"niceTables.pl",
	"parserFunction.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");
Context()->variables->add(t=>"Real");
Context()->variables->add(B=>"Real");
Context()->variables->remove("x");
parserFunction("x(t)"=>"sin(4*2.71828*t/pi)+3.14*t^4");
parserFunction("x1(t)"=>"sin(2.71828*t/pi)+1.57*t^2");
parserFunction("x2(t)"=>"sin(t/pi/2.71828)+6.92*t^6");

#image
$imgScaleA = .2;
$imgScaleB = .2;
$widthA = $imgScaleA*1751;
$heightA = $imgScaleA*721;
$widthB = $imgScaleB*1349;
$heightB = $imgScaleB*1430;

#given
$mcYes = PopUp(["?","Yes","No"], "Yes");
$mcNo = PopUp(["?","Yes","No"], "No");
$alpha = random(2,9,1);
$beta = random(2,9,1);
$a = random(2,9,1);
$b = random(2,9,1);

#computation 
$y1 = Formula("$alpha (x(t))^2 / ($beta x($a t - $b))");
$y2 = Formula("$alpha (x(t))^2 / ($beta x($a t - $b))");
$y3 = Formula("(x1(t)+x2(t))^2/($beta (x1($a t - $b)+x2($a t - $b)))");
$y4 = Formula("(x1(t))^2/($beta(x1($a t - $b)))+(x2(t))^2/($beta(x2($a t - $b)))");

##############################################################
#
#  PGML 
#
#

BEGIN_PGML

The continuous time system [`S`] is described by [``y(t)=\frac{[x(t)]^2}{[$beta]x([$a]t-[$b])}``], where [`x(t)`] is the input and [`y(t)`] is the output of the system.

*a)* In the two diagrams below, find the outputs [`y_1`] and [`y_2`] in terms of the input [`x`] if [`\alpha = [$alpha]`]:

[@ image( "UBC-SIG-18-008a.png", width=>[$widthA], height=>[$heightA], tex_size=>500) @]*

[`y_1=`] [____________________________]  
[`y_2=`] [____________________________] 

END_PGML

ANS($y1->cmp);
ANS($y2->cmp);
$ans_hash1 = $y1->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(1)});
$a1Correct= $ans_hash1->{score};
$ans_hash2 = $y2->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(2)});
$a2Correct= $ans_hash2->{score};

BEGIN_TEXT

$PAR

END_TEXT

BEGIN_PGML

END_PGML


BEGIN_TEXT

$PAR

END_TEXT

BEGIN_PGML

*b)* In the two diagrams below, find the outputs [`y_3`] and [`y_4`] in terms of the inputs [`x_1`] and [`x_2`]:

[@ image( "UBC-SIG-18-008b.png", width=>[$widthB], height=>[$heightB], tex_size=>500) @]*

[`y_3=`] [____________________________]  
[`y_4=`] [____________________________] 

_Enter "x1" for [`x_1`] and "x2" for [`x_2`]._


END_PGML

ANS($y3->cmp);
ANS($y4->cmp);
$ans_hash3 = $y3->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(3)});
$c1Correct= $ans_hash3->{score};
$ans_hash4 = $y4->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(4)});
$c2Correct= $ans_hash4->{score};

BEGIN_TEXT

$PAR

END_TEXT

BEGIN_PGML

*c)* Is the system [`S`] additive? [@ $mcNo->menu() @]*

*d)* Is the system [`S`] linear? [@ $mcNo->menu() @]*

*e)* Is the system [`S`] causal? [@ $mcNo->menu() @]*

*f)* Is the system [`S`] memoryless? [@ $mcNo->menu() @]*

Part *c* will only be marked correct if part *b* is correct. Parts *d* to *f* will only be marked correct if parts *a* and *b* are both correct._

END_PGML

ANS($mcNo->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct) && ($c1Correct==1) && ($c2Correct==1)) {
			return 1;
		}else {
			return 0;
		}	
	}));

ANS($mcNo->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct) && ($a1Correct==1) && ($a2Correct==1) && ($c1Correct==1) && ($c2Correct==1)) {
			return 1;
		}else {
			return 0;
		}	
	}));

ANS($mcNo->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct) && ($a1Correct==1) && ($a2Correct==1) && ($c1Correct==1) && ($c2Correct==1)) {
			return 1;
		}else {
			return 0;
		}	
	}));

ANS($mcNo->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct) && ($a1Correct==1) && ($a2Correct==1) && ($c1Correct==1) && ($c2Correct==1)) {
			return 1;
		}else {
			return 0;
		}	
	}));

##############################################################

ENDDOCUMENT();