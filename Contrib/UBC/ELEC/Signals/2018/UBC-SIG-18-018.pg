##DESCRIPTION
##
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi, 
## with support from Paul Lucina and Joseph Yan.
##              
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from the UBC Department of
## Electrical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people.
##
##ENDDESCRIPTION

## DBsubject(Engineering Signals and Systems)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"PGauxiliaryFunctions.pl",
	"niceTables.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Interval");
Context()->variables->add(s=>"Real");
Context()->variables->add(t=>"Real");
Context()->variables->remove("x");

#given
$mcYes = PopUp(["?","Yes","No"], "Yes");
$mcNo = PopUp(["?","Yes","No"], "No");
$mcCausal = PopUp(["?","Causal","Anti-Causal","Two-Sided"], "Causal");
$mcACausal = PopUp(["?","Causal","Anti-Causal","Two-Sided"], "Anti-Causal");
$mcNCausal = PopUp(["?","Causal","Anti-Causal","Two-Sided"], "Two-Sided");

$a_0 = random(2, 9,1);
$b_0 = random(2, 9,1);
$alpha_0 = random(5, 20,1);
$beta_0 = random(5, 20,1);

$a_1 = random(2, 9,1);
$b_1 = random(2, 9,1);
$alpha_1 = random(5, 20,1);
$beta_1 = random(5, 20,1);

$a_2 = random(2, 9,1);
$b_2 = random(2, 9,1);
$alpha_2 = random(5, 20,1);
$beta_2 = random(5, 20,1);


#computation 
$lt1 = Formula("$alpha_0/(s+$a_0)+$beta_0/(s-$b_0)");
$lt2 = Formula("$alpha_1/(s+$a_1)-$beta_1/(-s+$b_1)");
$lt3 = Formula("$alpha_2/(s+$a_2)-$beta_2/(-s+$b_2)");

$roc1 = Interval($b_0,infinity);
$roc2 = Interval(-infinity,-$a_1);
$roc3 = Interval(-$a_2,$b_2);

##############################################################
#
#  Text 
#
#

BEGIN_TEXT
For each of the following impulse responses, determine the Laplace transform as well as the region of convergence, if the system is causal, anti-causal or two-sided, and if it is BIBO stable or not. Use "s" to represent \(\sigma\).
$PAR
\{
	DataTable(
		[
			['$BBOLD Impulse Response $EBOLD','$BBOLD Laplace Transform $EBOLD','$BBOLD Region of Convergence* $BR for $EBOLD \(\sigma = Re(s)\) ', '$BBOLD Causality $EBOLD', '$BBOLD BIBO stable $EBOLD'],
			['\(h_0(t) = $alpha_0 e^{-$a_0 t}u(t) + $beta_0 e^{$b_0 t}u(t)\)',ans_rule(10),ans_rule(10),$mcCausal->menu(),$mcNo->menu()],
			['\(h_1(t) = - $alpha_1 e^{-$a_1 t}u(-t) - $beta_1 e^{$b_1 t}u(-t)\)',ans_rule(10),ans_rule(10),$mcACausal->menu(),$mcNo->menu()],
			['\(h_2(t) = $alpha_2 e^{-$a_2 t}u(t) - $beta_2 e^{$b_2 t}u(-t)\)',ans_rule(10),ans_rule(10),$mcNCausal->menu(),$mcYes->menu()],
		],
		center => 0,
		allcellcss=>'padding-left:10px; padding-right:10px; border: solid thin #CCCCCC;',
		);

\}
$PAR
$BITALIC*For regions of convergence, answer in interval notation e.g. (-INF,a), (a,b) or (b, INF). $EITALIC

$PAR
$BITALIC Answers to Causality and BIBO stability will only be marked correct if their corresponding Laplace transforms are correct. $EITALIC
END_TEXT

ANS($lt1->cmp());
$ans_hash1 = $lt1->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(1)});
$aCorrect= $ans_hash1->{score};
ANS($roc1->cmp());
ANS($mcCausal->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct)&& $aCorrect==1) {
			return 1;
		}else {
			return 0;
		}	
	}));
ANS($mcNo->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct)&& $aCorrect==1) {
			return 1;
		}else {
			return 0;
		}	
	}));

ANS($lt2->cmp());
$ans_hash5 = $lt2->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(5)});
$bCorrect= $ans_hash5->{score};
ANS($roc2->cmp());
ANS($mcACausal->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct)&& $bCorrect==1) {
			return 1;
		}else {
			return 0;
		}	
	}));
ANS($mcNo->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct)&& $bCorrect==1) {
			return 1;
		}else {
			return 0;
		}	
	}));

ANS($lt3->cmp());
$ans_hash9 = $lt3->cmp->evaluate($inputs_ref->{ANS_NUM_TO_NAME(9)});
$cCorrect= $ans_hash9->{score};
ANS($roc3->cmp());
ANS($mcNCausal->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct)&& $cCorrect==1) {
			return 1;
		}else {
			return 0;
		}	
	}));
ANS($mcYes->cmp(checker=>sub{
		my ($correct,$student) = @_; 
		if (($student == $correct)&& $cCorrect==1) {
			return 1;
		}else {
			return 0;
		}	
	}));
##############################################################

ENDDOCUMENT();