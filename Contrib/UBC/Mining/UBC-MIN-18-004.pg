##DESCRIPTION
##
## Created by the UBC Department of Mechanical Engineering. Project led by Agnes d'Entremont.
##
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this 
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from BCcampus, the UBC Department of
## Mechanical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people. 
##
##ENDDESCRIPTION

## DBsubject(Mining Engineering)
## DBchapter(Stripping Ratio and Pit Limits)
## DBsection(Stripping Ratio)
## Date()
## Author()
## Level()
## KEYWORDS('')
## RESOURCES('')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################

DOCUMENT();

$refreshCachedImages = 1; 

#image scale
$imgScale = .2;

#image aspect ratio
$width = $imgScale*3798;
$height = $imgScale*2027;

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl",
	"PGauxiliaryFunctions.pl",
    "compoundProblem5.pl",
    "niceTables.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);


Context("Numeric");

TEXT(beginproblem());

sub no_decimal_place
{
    # body of method or subroutine
    $count_increments = Real("0");
    $value_to_process = $_[0];
    while ($value_to_process > Real("1")){
      $value_to_process = $value_to_process - Real("1");
      $count_increments = $count_increments + Real("1");
    }

    
    if ($value_to_process < Real("0.5") ){
      $value_to_process= $count_increments;
    }
    else{
      $value_to_process = $count_increments + Real("1");
    }
    return $value_to_process
   
}

sub one_decimal_place
{
    # body of method or subroutine
    $count_increments = Real("0");
    $value_to_process = $_[0];
    while ($value_to_process > Real("0.1")){
      $value_to_process = $value_to_process - Real("0.1");
      $count_increments = $count_increments + Real("0.1");
    }

    if ($value_to_process < Real("0.05") ){
      $value_to_process= $count_increments;
    }
    else{
      $value_to_process = $count_increments + Real("0.1");
    }
    return $value_to_process
}

sub two_decimal_place
{
    # body of method or subroutine
    $count_increments = Real("0");
    $value_to_process = $_[0];
    while ($value_to_process > Real("0.01")){
      $value_to_process = $value_to_process - Real("0.01");
      $count_increments = $count_increments + Real("0.01");
    }

    if ($value_to_process < Real("0.005") ){
      $value_to_process= $count_increments;
    }
    else{
      $value_to_process = $count_increments + Real("0.01");
    }
    return $value_to_process
}




# variables are here:
Context("Numeric");

# Leach Costs
$Precipitate_costs = 0.3;# random(0.20,0.40,0.05);#0.29;      # per lb Cu recovered (to be randomized)
$Leach_precipitate = 82;        # % Cu
$Leach_discount_rate = 7;      # %

# Mill Costs
$Mill_operating_costs = 10;#random(10,12,0.5);#10.0;       # $ per ton of ore (to be randomized)
$G_A_percent_milling = 15;             # %
$Mill_recovery = 78.0;              # %
$Mill_concentrate = 25;             # %
$Concentrate_shipping_cost = 65;  # $

# Smelting/Refining/Other
$Smelting_costs = 70.0;                # $ per ton
$Smelter_Recovery = 97.0;              # %
$Freight_cost_smelter_refinery = 68.0; # $ per ton
$Refining_costs = 190.0;               # $ per ton
$Refining_recovery = 99.3;             # %
$Selling_Delivery_costs = 0.05;        # $ per lb
$General_plant_cost = 0.09;            # $

$Cu_selling_price = 2.5;# random(2.5,3.00,0.5);#0.80;       # $ (to be randomized)
$Value_situ_Cu = 2.50; # $ obtained from Excel 


# Cutoffs:
$Dump_Leach_cutoff = 0.3 ;              # % obtained from excel
$Dump_Leach_cutoff_answer = Real($Dump_Leach_cutoff);
$Leach_relationship_max_cutoff = 1.20 ; # % obtained from excel

$ton_to_lb = 2000;

# All these are percentages for now
$head_grade1 = 0.30;
$head_grade2 = 0.60;
$head_grade3 = 0.90;
$head_grade4 = 1.20;
$head_grade5 = 1.50;
$head_grade6 = 1.80;
$head_grade7 = 2.10;
$head_grade8 = 2.40;
$head_grade9 = 2.70;
$head_grade10 = 3.00;
# $head_grade11 = 1.50;
# $head_grade12 = 1.60;
# $head_grade13 = 1.70;
# $head_grade14 = 1.80;

$Net_Value_Precipitate1 = 0;
$Net_Value_Precipitate2 = 0;
$Net_Value_Precipitate3 = 0;
$Net_Value_Precipitate4 = 0;
$Net_Value_Precipitate5 = 0;
$Net_Value_Precipitate6 = 0;
$Net_Value_Precipitate7 = 0;
$Net_Value_Precipitate8 = 0;
$Net_Value_Precipitate9 = 0;
$Net_Value_Precipitate10 =0;
$Net_Value_Precipitate11 =0;
$Net_Value_Precipitate12 =0;
$Net_Value_Precipitate13 =0;
$Net_Value_Precipitate14 =0;

$Net_Value_Concentrate1 = 0;
$Net_Value_Concentrate2 = 0;
$Net_Value_Concentrate3 = 0;
$Net_Value_Concentrate4 = 0;
$Net_Value_Concentrate5 = 0;
$Net_Value_Concentrate6 = 0;
$Net_Value_Concentrate7 = 0;
$Net_Value_Concentrate8 = 0;
$Net_Value_Concentrate9 = 0;
$Net_Value_Concentrate10 =0;
$Net_Value_Concentrate11 =0;
$Net_Value_Concentrate12 =0;
$Net_Value_Concentrate13 =0;
$Net_Value_Concentrate14 =0;

$count_iterations = 0; # used to loop and and know which results correspond to which.

$sentinel_B_1 = 0; #will be set to one after the answer is already found
$mill_cutoff_grade = 0;

while ($count_iterations < 10){

  
  if ($count_iterations == 0){
    $Head_grade = $head_grade1;
  }
  
  if ($count_iterations == 1){
    $Head_grade = $head_grade2;
  }
  
  if ($count_iterations == 2){
    $Head_grade = $head_grade3;
  }
  
  if ($count_iterations == 3){
    $Head_grade = $head_grade4;
  }
  
  if ($count_iterations == 4){
    $Head_grade = $head_grade5;
  }
  
  if ($count_iterations == 5){
    $Head_grade = $head_grade6;
  }
  
  if ($count_iterations == 6){
    $Head_grade = $head_grade7;
  }
  
  if ($count_iterations == 7){
    $Head_grade = $head_grade8;
  }
  
  if ($count_iterations == 8){
    $Head_grade = $head_grade9;
  }
  
  if ($count_iterations == 9){
    $Head_grade = $head_grade10;
  }
  
  # if ($count_iterations == 10){
  #   $Head_grade = $head_grade11;
  # }
  
  # if ($count_iterations == 11){
  #   $Head_grade = $head_grade12;
  # }
  
  # if ($count_iterations == 12){
  #   $Head_grade = $head_grade13;
  # }
  
  # if ($count_iterations == 13){
  #   $Head_grade = $head_grade14;
  # }


  # Calculation of the recovery (lb per ton) using the head grade
  if ($Head_grade > $Leach_relationship_max_cutoff){
      $recovery = 0.75; # %
  }
  elsif($Head_grade < $Dump_Leach_cutoff){
      $recovery = 0.0;
  }
  else{
      $recovery = (($Head_grade-$Dump_Leach_cutoff)/$Head_grade); # %
  }

  $recovery = no_decimal_place($recovery* 100.0);

  $recovered_lb_per_ton = ($recovery/100) * $ton_to_lb * ($Head_grade/100);
  $recovered_lb_per_ton = one_decimal_place($recovered_lb_per_ton);



  # per year lbs per ton recovery calculations:
  $recovery_factor_year_1 = 0.4;
  $recovery_factor_year_2 = 0.3;
  $recovery_factor_year_3 = 0.14;
  $recovery_factor_year_4 = 0.1;
  $recovery_factor_year_5 = 0.06;

  $recovered_lb_per_ton_year_1 = $recovered_lb_per_ton * $recovery_factor_year_1;
  $recovered_lb_per_ton_year_2 = $recovered_lb_per_ton * $recovery_factor_year_2;
  $recovered_lb_per_ton_year_3 = $recovered_lb_per_ton * $recovery_factor_year_3;
  $recovered_lb_per_ton_year_4 = $recovered_lb_per_ton * $recovery_factor_year_4;
  $recovered_lb_per_ton_year_5 = $recovered_lb_per_ton * $recovery_factor_year_5;

  $recovered_lb_per_ton_year_1 = two_decimal_place($recovered_lb_per_ton_year_1);
  $recovered_lb_per_ton_year_2 = two_decimal_place($recovered_lb_per_ton_year_2);
  $recovered_lb_per_ton_year_3 = two_decimal_place($recovered_lb_per_ton_year_3);
  $recovered_lb_per_ton_year_4 = two_decimal_place($recovered_lb_per_ton_year_4);
  $recovered_lb_per_ton_year_5 = two_decimal_place($recovered_lb_per_ton_year_5);

  $recovered_lb_per_ton_year_total = $recovered_lb_per_ton_year_1 + $recovered_lb_per_ton_year_2 + $recovered_lb_per_ton_year_3 + $recovered_lb_per_ton_year_4 + $recovered_lb_per_ton_year_5;
  $recovered_lb_per_ton_year_total = one_decimal_place($recovered_lb_per_ton_year_total);

  # precipitation costs
  $precipitation_costs = $Precipitate_costs * $recovered_lb_per_ton_year_total;

  if ($recovered_lb_per_ton_year_total == 0.0){
      $ratio_concentration_precipitate = 0.0;
  }
  else{
      $ratio_concentration_precipitate = (($Leach_precipitate/100)*$ton_to_lb)/$recovered_lb_per_ton_year_total;
  }

  # milling costs
  $G_A_cost_milling = $Mill_operating_costs * ($G_A_percent_milling/100);
  $lbs_Cu_recovered_mill = ($Head_grade/100) * ($Mill_recovery/100) * $ton_to_lb;
  $Rate_concentration = ($ton_to_lb*($Mill_concentrate/100))/$lbs_Cu_recovered_mill;
  $freight_cost_milling = $Concentrate_shipping_cost/$Rate_concentration;
  $freight_cost_milling = ($freight_cost_milling);

  # Treatment costs (precipitate)
  if($ratio_concentration_precipitate == 0.0){
    $smelting_cost_leach_material = 0;
  }
  else{
    $smelting_cost_leach_material = $Smelting_costs/$ratio_concentration_precipitate;
  }
  
  $freight_cost_per_ton_leach_material = ($recovered_lb_per_ton_year_total*($Smelter_Recovery/100))/$ton_to_lb*$Freight_cost_smelter_refinery;
  $refining_cost_ton_leach_material =  ($recovered_lb_per_ton_year_total*($Smelter_Recovery/100))*$Refining_costs/$ton_to_lb;
  $Selling_cost_ton_leach_material = ($recovered_lb_per_ton_year_total*($Smelter_Recovery/100) * ($Refining_recovery/100) * $Selling_Delivery_costs);
  $General_plant_ton_leach_material = ($recovered_lb_per_ton_year_total*($Smelter_Recovery/100) * ($Refining_recovery/100) * $General_plant_cost);
  $Total_production_costs_precipitate = $General_plant_ton_leach_material + $Selling_cost_ton_leach_material + $refining_cost_ton_leach_material + $freight_cost_per_ton_leach_material + $smelting_cost_leach_material + $precipitation_costs;

  # Treatment costs (contentrate)
  $smelting_cost_milled_material = $Smelting_costs/$Rate_concentration;
  $freight_cost_per_ton_milled_material = ($lbs_Cu_recovered_mill*($Smelter_Recovery/100))/$ton_to_lb*$Freight_cost_smelter_refinery;
  $refining_cost_ton_milled_material =  ($lbs_Cu_recovered_mill*($Smelter_Recovery/100))*$Refining_costs/$ton_to_lb;
  $Selling_cost_ton_milled_material = ($lbs_Cu_recovered_mill*($Smelter_Recovery/100) * ($Refining_recovery/100) * $Selling_Delivery_costs);
  $General_plant_ton_milled_material = ($lbs_Cu_recovered_mill*($Smelter_Recovery/100) * ($Refining_recovery/100) * $General_plant_cost);
  $Total_production_costs_concentrate = $Mill_operating_costs + $G_A_cost_milling + $freight_cost_milling + $freight_cost_per_ton_milled_material + $refining_cost_ton_milled_material + $General_plant_ton_milled_material + $smelting_cost_milled_material + $Selling_cost_ton_milled_material;


  # Revenue (precipitate)
  $Current_value_precipitate =  ($Value_situ_Cu * $recovered_lb_per_ton_year_total * ($Smelter_Recovery/100) * ($Refining_recovery/100));
  # Revenue (contentrate)
  $Current_value_concentrate =  ($lbs_Cu_recovered_mill * ($Smelter_Recovery/100)* ($Refining_recovery/100) * $Value_situ_Cu);

  $Discount_leaching = 7; # %

  $recovered_lbs_Cu_year1 =  (($Smelter_Recovery/100)* ($Refining_recovery/100) * $recovered_lb_per_ton_year_1);
  $recovered_lbs_Cu_year2 =  (($Smelter_Recovery/100)* ($Refining_recovery/100) * $recovered_lb_per_ton_year_2);
  $recovered_lbs_Cu_year3 =  (($Smelter_Recovery/100)* ($Refining_recovery/100) * $recovered_lb_per_ton_year_3);
  $recovered_lbs_Cu_year4 =  (($Smelter_Recovery/100)* ($Refining_recovery/100) * $recovered_lb_per_ton_year_4);
  $recovered_lbs_Cu_year5 =  (($Smelter_Recovery/100)* ($Refining_recovery/100) * $recovered_lb_per_ton_year_5);

  $value_year1 = $recovered_lbs_Cu_year1*$Value_situ_Cu/((1.0 + ($Discount_leaching/100))**1);
  $value_year2 = $recovered_lbs_Cu_year2*$Value_situ_Cu/((1.0 + ($Discount_leaching/100))**2);
  $value_year3 = $recovered_lbs_Cu_year3*$Value_situ_Cu/((1.0 + ($Discount_leaching/100))**3);
  $value_year4 = $recovered_lbs_Cu_year4*$Value_situ_Cu/((1.0 + ($Discount_leaching/100))**4);
  $value_year5 = $recovered_lbs_Cu_year5*$Value_situ_Cu/((1.0 + ($Discount_leaching/100))**5);

  $Total_value = $value_year1 + $value_year2 + $value_year3 + $value_year4 + $value_year5; 

  $Net_Value_Precipitate = $Total_value - $Total_production_costs_precipitate;
  $Net_Value_Concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;

  if ($sentinel_B_1 == 0 ){
    if ($Net_Value_Concentrate > $Net_Value_Precipitate){
      $mill_cutoff_grade = Real($Head_grade);
      $sentinel_B_1 = 1;
    }
  }
  

  # $Net_Value_Concentrate_backup = 0;

  if ($count_iterations == 0){
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate1 = Real($test_net_precipitate);
    $Net_Value_Concentrate1 = Real($test_net_concentrate); #two_decimal_place($test_net_concentrate);
    
  }
  
  if ($count_iterations == 1){
    # $Net_Value_Precipitate2 = two_decimal_place($Net_Value_Precipitate);
    # $Net_Value_Concentrate2 = two_decimal_place($Net_Value_Concentrate);
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate2 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate2 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
    
  }
  
  if ($count_iterations == 2){
    # $Net_Value_Precipitate3 = two_decimal_place($Net_Value_Precipitate);
    # $Net_Value_Concentrate3 = two_decimal_place($Net_Value_Concentrate);
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate3 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate3 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
    
  }
  
  if ($count_iterations == 3){
    # $Net_Value_Precipitate4 = two_decimal_place($Net_Value_Precipitate);
    # $Net_Value_Concentrate4 = two_decimal_place($Net_Value_Concentrate);
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate4 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate4 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
    
  }
  
  if ($count_iterations == 4){
    # $Net_Value_Precipitate5 = two_decimal_place($Net_Value_Precipitate);
    # $Net_Value_Concentrate5 = two_decimal_place($Net_Value_Concentrate);
    $recovered_lbs_Cu_year1_backup = $recovered_lbs_Cu_year1;
    $recovered_lbs_Cu_year2_backup = $recovered_lbs_Cu_year2;
    $recovered_lbs_Cu_year3_backup = $recovered_lbs_Cu_year3;
    $recovered_lbs_Cu_year4_backup = $recovered_lbs_Cu_year4;
    $recovered_lbs_Cu_year5_backup = $recovered_lbs_Cu_year5;

    $value_year1_backup = $value_year1;
    $value_year2_backup = $value_year2;
    $value_year3_backup = $value_year3;
    $value_year4_backup = $value_year4;
    $value_year5_backup = $value_year5;
    $Total_value_backup = $Total_value;
    $Total_production_costs_precipitate_backup = $Total_production_costs_precipitate;
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate5 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate5 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);

    $Net_Value_Precipitate_backup = $Net_Value_Precipitate;
    $Net_Value_Concentrate_backup = $Net_Value_Concentrate;

    $General_plant_ton_leach_material_backup = $General_plant_ton_leach_material;
    $Selling_cost_ton_leach_material_backup = $Selling_cost_ton_leach_material;
    $refining_cost_ton_leach_material_backup = $refining_cost_ton_leach_material;
    $freight_cost_per_ton_leach_material_backup = $freight_cost_per_ton_leach_material;
    $smelting_cost_leach_material_backup = $smelting_cost_leach_material;
    $precipitation_costs_backup = $precipitation_costs;
    $recovered_lb_per_ton_year_total_backup = $recovered_lb_per_ton_year_total;

    $recovered_lb_per_ton_year_1_backup = $recovered_lb_per_ton_year_1;
    $recovered_lb_per_ton_year_2_backup = $recovered_lb_per_ton_year_2;
    $recovered_lb_per_ton_year_3_backup = $recovered_lb_per_ton_year_3;
    $recovered_lb_per_ton_year_4_backup = $recovered_lb_per_ton_year_4;
    $recovered_lb_per_ton_year_5_backup = $recovered_lb_per_ton_year_5;
    $recovered_lb_per_ton_year_total_backup = $recovered_lb_per_ton_year_total;
    
  }
  
  if ($count_iterations == 5){
    # $Net_Value_Precipitate6 = two_decimal_place($Net_Value_Precipitate);
    # $Net_Value_Concentrate6 = two_decimal_place($Net_Value_Concentrate);
    
    # $recovered_lbs_Cu_year1_backup = $recovered_lbs_Cu_year1;
    # $recovered_lbs_Cu_year2_backup = $recovered_lbs_Cu_year2;
    # $recovered_lbs_Cu_year3_backup = $recovered_lbs_Cu_year3;
    # $recovered_lbs_Cu_year4_backup = $recovered_lbs_Cu_year4;
    # $recovered_lbs_Cu_year5_backup = $recovered_lbs_Cu_year5;

    # $value_year1_backup = $value_year1;
    # $value_year2_backup = $value_year2;
    # $value_year3_backup = $value_year3;
    # $value_year4_backup = $value_year4;
    # $value_year5_backup = $value_year5;
    # $Total_value_backup = $Total_value;
    # $Total_production_costs_precipitate_backup = $Total_production_costs_precipitate;
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate6 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate6 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
  }
  
  if ($count_iterations == 6){
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate7 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate7 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
  }
  
  if ($count_iterations == 7){
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate8 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate8 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
  }
  
  if ($count_iterations == 8){
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate9 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate9 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
  }
  
  if ($count_iterations == 9){
    $test_net_concentrate = $Current_value_concentrate - $Total_production_costs_concentrate;
    $test_net_precipitate = $Total_value - $Total_production_costs_precipitate;
    $Net_Value_Precipitate10 = two_decimal_place($test_net_precipitate);
    $Net_Value_Concentrate10 = two_decimal_place($test_net_concentrate); #two_decimal_place($test_net_concentrate);
  }
  
  # if ($count_iterations == 10){
  #   $Net_Value_Precipitate11 = two_decimal_place($Net_Value_Precipitate);
  #   $Net_Value_Concentrate11 = two_decimal_place($Net_Value_Concentrate);
  # }
  
  # if ($count_iterations == 11){
  #   $Net_Value_Precipitate12 = two_decimal_place($Net_Value_Precipitate);
  #   $Net_Value_Concentrate12 = two_decimal_place($Net_Value_Concentrate);
  # }
  
  # if ($count_iterations == 12){
  #   $Net_Value_Precipitate13 = two_decimal_place($Net_Value_Precipitate);
  #   $Net_Value_Concentrate13 = two_decimal_place($Net_Value_Concentrate);
  # }
  
  # if ($count_iterations == 13){
  #   $Net_Value_Precipitate14 = two_decimal_place($Net_Value_Precipitate);
  #   $Net_Value_Concentrate14 = two_decimal_place($Net_Value_Concentrate);
  # }

  $count_iterations = $count_iterations + 1;

}





#Calculations are fine for now. Now looking in a way to do this iteratively and ask in a table.
# Display starts here
BEGIN_PGML

*Material Destination*  


*Leach Costs*  
[@
  DataTable(
    [
      ["Precipitate Costs",[$Precipitate_costs], "`\$` per lb `C u` recovered"],
      ["Leach precipitate runs at",[$Leach_precipitate],"`%` `C u`"],
      ["Leach discount rate",[$Leach_discount_rate],"`%`"],
    ],
    center => 1,
    midrules=>1,
    align => '|p{2.0in}|p{0.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  )
@]***    


*Mill Costs*  
[@
  DataTable(
    [
      ["Mill Operating Costs",[$Mill_operating_costs], "`\$` per ton"],
      ["G&A cost (milling)",[$G_A_percent_milling],"`%`"],
      ["Mill Recovery",[$Mill_recovery],"`%` `C u`"],
      ["Mill concentrate runs at",[$Mill_concentrate],"`%` `C u`"],
      ["Concentrate shipping costs",[$Concentrate_shipping_cost],"`\$` per ton"],
    ],
    center => 1,
    midrules=>1,
    align => '|p{2.0in}|p{0.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  )
@]***    


*Smelting/Refining/Other Costs*  
[@
  DataTable(
    [
      ["Smelting Costs",[$Smelting_costs], "`\$` per ton"],
      ["Smelter Recovery",[$Smelter_Recovery],"`%` `C u`"],
      ["Freight Cost (smelter to refinery)",[$Freight_cost_smelter_refinery],"`\$` per ton"],
      ["Refining Costs",[$Refining_costs],"`\$` per ton"],
      ["Refining Recovery",[$Refining_recovery],"`%` `C u`"],
      ["Selling and Delivery Cost",[$Selling_Delivery_costs],"`\$` per lb"],
      ["General Plant Cost",[$General_plant_cost],"`\$` per lb"],
      ["`C u` Selling Price",[$Cu_selling_price],"`\$` per lb"],
    ],
    center => 1,
    midrules=>1,
    align => '|p{2.0in}|p{0.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  )
@]***    


*Leach Grade-Recovery Relationship*  
[@
  DataTable(
    [
      ["Dump/Leach cutoff",[$Dump_Leach_cutoff], "`%` `C u`"],
      ["Leach relationship max cutoff",[$Leach_relationship_max_cutoff],"`%` `C u`"],
    ],
    center => 1,
    midrules=>1,
    align => '|p{2.0in}|p{0.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  )
@]***  

If head grade `<``=` [`[$Dump_Leach_cutoff]`] then recovery = `0 %`  

If head grade `>` [`[$Dump_Leach_cutoff]`]  and `<` [`[$Leach_relationship_max_cutoff]`] then recovery = (head grade - `0.30 %`)/head grade  

If head grade `>``=` [`[$Leach_relationship_max_cutoff]`] then recovery = `75 %`  


*Leach Recovery Factors*  
[@
  DataTable(
    [
      ["Year","Recovery Factor"],
      ["1",[$recovery_factor_year_1]],
      ["2",[$recovery_factor_year_2]],
      ["3",[$recovery_factor_year_3]],
      ["4",[$recovery_factor_year_4]],
      ["5",[$recovery_factor_year_5]],
    ],
    center => 1,
    midrules=>1,
    align => '|p{1.0in}|p{0.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  )
@]***    

Given the data above, complete the following table:  

[@
  DataTable(
    [
      ["Percent `Cu` (`%`)", "Leach Net Value", "Mill Net Value"],
      [[$head_grade1], ans_rule(7), ans_rule(7)],
      [[$head_grade2], ans_rule(7), ans_rule(7)],
      [[$head_grade3], ans_rule(7), ans_rule(7)],
      [[$head_grade4], ans_rule(7), ans_rule(7)],
      [[$head_grade5], ans_rule(7), ans_rule(7)],
      [[$head_grade6], ans_rule(7), ans_rule(7)],
      [[$head_grade7], ans_rule(7), ans_rule(7)],
      [[$head_grade8], ans_rule(7), ans_rule(7)],
      [[$head_grade9], ans_rule(7), ans_rule(7)],
      [[$head_grade10], ans_rule(7), ans_rule(7)],
    ],
    center => 1,
    midrules=>1,
    align => '|p{1.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
  )
@]***    


*Part B*  
At which cutoff grade (of those provided) will the material be sent to the mill (i.e. mill cutoff grade)  
Mill Cutoff grade = [@ ans_rule(5) @]***  

At which cutoff grades (of those provided) will the material be sent to the leach pad?  
[@ ans_rule(5) @]*** < `%``C u` < [@ ans_rule(5) @]***  

END_PGML


Context("Numeric");

ANS($Net_Value_Precipitate1->cmp);
ANS($Net_Value_Concentrate1->cmp);

ANS($Net_Value_Precipitate2->cmp);
ANS($Net_Value_Concentrate2->cmp);

ANS($Net_Value_Precipitate3->cmp);
ANS($Net_Value_Concentrate3->cmp);

ANS($Net_Value_Precipitate4->cmp);
ANS($Net_Value_Concentrate4->cmp);

ANS($Net_Value_Precipitate5->cmp);
ANS($Net_Value_Concentrate5->cmp);

ANS($Net_Value_Precipitate6->cmp);
ANS($Net_Value_Concentrate6->cmp);

ANS($Net_Value_Precipitate7->cmp);
ANS($Net_Value_Concentrate7->cmp);

ANS($Net_Value_Precipitate8->cmp);
ANS($Net_Value_Concentrate8->cmp);

ANS($Net_Value_Precipitate9->cmp);
ANS($Net_Value_Concentrate9->cmp);

ANS($Net_Value_Precipitate10->cmp);
ANS($Net_Value_Concentrate10->cmp);

ANS($mill_cutoff_grade->cmp());
ANS($Dump_Leach_cutoff_answer->cmp());
ANS($mill_cutoff_grade->cmp());


# ANS($Net_Value_Precipitate11->cmp);
# ANS($Net_Value_Concentrate11->cmp);

# ANS($Net_Value_Precipitate12->cmp);
# ANS($Net_Value_Concentrate12->cmp);

# ANS($Net_Value_Precipitate13->cmp);
# ANS($Net_Value_Concentrate13->cmp);

# ANS($Net_Value_Precipitate14->cmp);
# ANS($Net_Value_Concentrate14->cmp);
ENDDOCUMENT();      

#trying without the rounding off in the beginning  RESULTS SEEM MORE ACCURATE


# [@
#   DataTable(
#     [
#       ["Percent `Cu` (`%`)", "Leach Net Value", "Mill Net Value"],
#       [[$head_grade1],[$Net_Value_Precipitate1],[$Net_Value_Concentrate1]],
#       [[$head_grade2],[$Net_Value_Precipitate2],[$Net_Value_Concentrate2]],
#       [[$head_grade3],[$Net_Value_Precipitate3],[$Net_Value_Concentrate3]],
#       [[$head_grade4],[$Net_Value_Precipitate4],[$Net_Value_Concentrate4]],
#       [[$head_grade5],[$Net_Value_Precipitate5],[$Net_Value_Concentrate5]],
#       [[$head_grade6],[$Net_Value_Precipitate6],[$Net_Value_Concentrate6]],
#       [[$head_grade7],[$Net_Value_Precipitate7],[$Net_Value_Concentrate7]],
#       [[$head_grade8],[$Net_Value_Precipitate8],[$Net_Value_Concentrate8]],
#       [[$head_grade9],[$Net_Value_Precipitate9],[$Net_Value_Concentrate9]],
#       [[$head_grade10],[$Net_Value_Precipitate10],[$Net_Value_Concentrate10]],
#     ],
#     center => 1,
#     midrules=>1,
#     align => '|p{1.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.5in}|p{1.7in}|p{1.8in}|p{1.5in}|',
# 	tablecss => "border:solid thin; border-spacing:5px; border-radius: 5px; border-collapse:collapse;",
#   )
# @]***    




# value_year1_backup = [`[$value_year1_backup]`]  
# value_year2_backup = [`[$value_year2_backup]`]  
# value_year3_backup = [`[$value_year3_backup]`]  
# value_year4_backup = [`[$value_year4_backup]`]  
# value_year5_backup = [`[$value_year5_backup]`]  

# General_plant_ton_leach_material_backup = [`[$General_plant_ton_leach_material_backup]`]  
# Selling_cost_ton_leach_material_backup = [`[$Selling_cost_ton_leach_material_backup]`]  
# refining_cost_ton_leach_material_backup = [`[$refining_cost_ton_leach_material_backup]`]  
# freight_cost_per_ton_leach_material_backup = [`[$freight_cost_per_ton_leach_material_backup]`]  
# smelting_cost_leach_material_backup = [`[$smelting_cost_leach_material_backup]`]  
# precipitation_costs_backup = [`[$precipitation_costs_backup]`]  

# Total_production_costs_precipitate_backup = [`[$Total_production_costs_precipitate_backup]`]  
# Total_value_backup = [`[$Total_value_backup]`]  

# Net_Value_Precipitate_backup = [`[$Net_Value_Precipitate_backup]`]  
# Net_Value_Concentrate_backup = [`[$Net_Value_Concentrate_backup]`]  

# recovered_lb_per_ton_year_total_backup = [`[$recovered_lb_per_ton_year_total_backup]`]  

# recovered_lb_per_ton_year_1_backup = [`[$recovered_lb_per_ton_year_1_backup]`];  
# recovered_lb_per_ton_year_2_backup = [`[$recovered_lb_per_ton_year_2_backup]`];  
# recovered_lb_per_ton_year_3_backup = [`[$recovered_lb_per_ton_year_3_backup]`];  
# recovered_lb_per_ton_year_4_backup = [`[$recovered_lb_per_ton_year_4_backup]`];  
# recovered_lb_per_ton_year_5_backup = [`[$recovered_lb_per_ton_year_5_backup]`];  
# recovered_lb_per_ton_year_total_backup = [`[$recovered_lb_per_ton_year_total_backup]`];  
