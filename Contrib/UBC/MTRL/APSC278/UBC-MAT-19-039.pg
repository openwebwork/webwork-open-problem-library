# set of questions for Materials Engineering (Dr. Gabrielle Lam)

##DESCRIPTION
##
## Created by the UBC Department of Mechanical Engineering. Project led by Agnes d'Entremont.
##
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this 
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from BCcampus, the UBC Department of
## Mechanical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people. 
##
##ENDDESCRIPTION

## DBsubject(Materials Engineering)
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('')
## RESOURCES('')
## Institution('UBC')
## TitleText('')
## EditionText('')
## AuthorText('')
## Section('')
## Problem('')
##############################################################

DOCUMENT();

# #image scale
# $imgScale = .5;

# #image aspect ratio
# $width = $imgScale*586;
# $height = $imgScale*649;

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"parserFunction.pl",
	"PGauxiliaryFunctions.pl",
    "compoundProblem5.pl",
    "PGchoicemacros.pl",
    "PGanswermacros.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);


Context("Numeric");
$silver_part3 = random(20, 44, 3); 
$copper_part3 = (100-$silver_part3);

$silver_part4 = random(76, 90, 2); 
$copper_part4 = (100-$silver_part4);


$scaffold = Scaffold();
#$isInstructor =  ($envir{effectivePermissionLevel} >= $envir{ALWAYS_SHOW_SOLUTION_PERMISSION_LEVEL});
$isInstructor=0;   # This variable changes what the user can see.
INITIALIZE_SCAFFOLD('$scaffold');

TEXT(beginproblem());
$showPartialCorrectAnswers = 1; #normal initialization


BEGIN_PGML

>>[@ image("UBC-MAT-19-039.png", width=>[$width], height=>[$height]) @]*<<  
Considering a copper-silver metal alloy, determine:  

END_PGML

##############
#  Section 1
##############
Context("Numeric");

Context()->flags->set(
tolerance=>.05,
tolType => "relative");


$mc1 = new_checkbox_multiple_choice();
$mc1 -> qa (
" ", 
"Liquid",
);
$mc1 -> extra(
"\( \alpha \) Solid ", 
"\( \beta \) Solid ", 
"None of the above"
);
$mc1 -> makeLast("None of the above");


# $mc1 = RadioButtons(
#     [ "Liquid", "Solid (alpha)", "Solid (beta)", "None of the above"],
#     "Liquid",
#     last => ["None of the above"],
#     );
# $mc1 = new_multiple_choice();
# # $mc1->qa(
# "Aluminum alloy 2117 and magnesium ", 
# "Corrosion is likely to occur"
# );
# $mc1->extra(
# "Corrosion is unlikely to occur",
# );


Context()->texStrings;
DISPLAY_SECTION(  {  name=>"Part 1", 
             canshow =>1,  #always true
             iscorrect=>$scaffold->requireCorrect(1), 
             section=>1 #designates that this is the first section
} , <<'END_SECTION'); 

The equilibrium phases present at `850` \( ^{o}C \) for an alloy of composition `20` \( w t % \) \( Cu \) - `80` \( w t % \) \( Ag \) (choose all that apply): 
$PAR   

\{ $mc1 -> print_a() \}

END_SECTION
# SECTION_ANS(radio_cmp( $mc1->correct_ans() ));
#\{ $mc1->buttons() \}  
SECTION_ANS(checkbox_cmp( $mc1->correct_ans() ));



###############
#  Section 2
###############
Context("Numeric");

Context()->flags->set(
tolerance=>.05,
tolType => "relative");


$mc2 = new_checkbox_multiple_choice();
$mc2 -> qa (
" ", 
"Liquid",
"\( \beta \) Solid",
);
$mc2 -> extra(
"\( \alpha \) Solid",  
"None of the above"
);
$mc2 -> makeLast("None of the above");

Context()->texStrings;
DISPLAY_SECTION( { name=>"Part 2", 
             canshow =>$scaffold->requireCorrect(1). " or $isInstructor",
             iscorrect=>$scaffold->requireCorrect(2), 
             section=>2
},   <<'END_SECTION'); 
The equilibrium phases present at `800` \( ^{o}C \) for an alloy of composition `20` \( w t % \) \( Cu \) - `80` \( w t % \) \( Ag \) (choose all that apply):
$PAR   
\{ $mc2 -> print_a() \}



END_SECTION
SECTION_ANS(checkbox_cmp( $mc2->correct_ans() ));


##############
#  Section 3
##############
Context("Numeric");

Context()->flags->set(
tolerance=>.05,
tolType => "relative");


$fraction_part3 = Real(($silver_part3 - 8) /( 71.9-8) * 100);
$mc3 = RadioButtons(
    [ "Corrosion is likely to occur", "Corrosion is unlikely to occur"],
    "Corrosion is likely to occur",
    last => ["Corrosion is unlikely to occur"],
    );

Context()->texStrings;
DISPLAY_SECTION(
{	name=>"Part 3", 
    canshow =>$scaffold->requireCorrect(1,2). " or $isInstructor",
    iscorrect=>$scaffold->requireCorrect(3), 
    section=>3
},   <<'END_SECTION'); 

When a copper-silver alloy of composition \( `$copper_part3` \)\( wt% \) - \( `$silver_part3` \)\( wt% \) is cooled under equilibrium conditions to just below `779` \( ^{o}C \), what is the mass fraction of pearlite produced?   

$PAR   
Answer is: \{$fraction_part3->ans_rule(15)\}  \( % \)
END_SECTION
SECTION_ANS($fraction_part3->cmp);


##############
#  Section 4
##############
Context("Numeric");

Context()->flags->set(
tolerance=>.05,
tolType => "relative");

$fraction_part4 = Real((91.2 - $silver_part4)/(91.2-8)*100);

Context()->texStrings;
DISPLAY_SECTION(
{	name=>"Part 4", 
    canshow =>$scaffold->requireCorrect(1,2,3). " or $isInstructor",
    iscorrect=>$scaffold->requireCorrect(4), 
    section=>4
},   <<'END_SECTION'); 
When a copper-silver alloy of composition \( `$copper_part4` \)\( wt% \) - \( `$silver_part4` \)\( wt% \) is cooled under equilibrium conditions to just below `779` \( ^{o}C \), what is the mass fraction of total \( \alpha \) solid  in the system?
$PAR   
Answer is: \{$fraction_part4->ans_rule(15)\}  \( % \)
END_SECTION
SECTION_ANS($fraction_part4->cmp);


Context()->normalStrings;




PROCESS_ANSWERS();

$last_correct_section = PROCESS_SECTIONS();

$opensection = $last_correct_section + 1;
$scaffold->openSections($opensection);

TEXT($END_ONE_COLUMN);
ENDDOCUMENT();      
