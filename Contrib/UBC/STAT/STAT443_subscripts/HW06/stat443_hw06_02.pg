## DBsubject('Statistics')
## DBchapter('Time Series')
## DBsection('Spectral Analysis') 
## level(4)

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)

Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
# warn("seed: " . $seed);

rserve_eval("set.seed($seed)");
## need to download data
my ($remote_file, @problem_data) = rserve_eval(<<CODE);
# this is R code
x <- round(runif(1, min=0, max=4),0)
lynx <- ts(lynx, start = c(1821, 1934), frequency = 1)
num = length(lynx)
lynx1 <- lynx[x:num]
loglynx <- log(lynx1)
n <- round(runif(1, min=6, max=10),0)

problem_file <- tempfile(fileext = '.csv')
write.csv(lynx1, problem_file)
list(problem_file, lynx1)
CODE



@data = rserve_eval('


# b)
spec1 <- spec.pgram(loglynx)
ans.b = spec1$freq[which.max(spec1$spec)]

spec2 <- spec.pgram(loglynx, spans=c(n,n+2))
ans.c <- spec2$freq[which.max(spec2$spec)]

ans.d <- 1/ans.c

ans.b = round(ans.b, 4)
ans.c = round(ans.c, 4)
ans.d = round(ans.d, 3)

n1= x + 1821 
n2 = n + 2;
c(ans.b, ans.c, ans.d, n1, n, n2)
');
my $local_file = rserve_get_file($remote_file);
($local_url = $local_file) =~ s|$tempDirectory|$tempURL|;

$n1 = $data[3];
$n = $data[4];
$n2 = $data[5];

$mp = MultiAnswer(10)->with(
        singleResult => 0,
        checker => sub {
            my ($correct,$student,$self) = @_;  # get the parameters
            my ($x1) = @{$student};      # extract the student answers
            return $x1 == 9 || $x1 == 10 || $x1 == 11 ;
        },
    );



#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;

BEGIN_TEXT
$BBOLD LINK for DATA SET (\{ htmlLink($local_url, "Download the csv file here") \}) $EBOLD
$BR
The data file \({lynx}\) linked below gives annual numbers of lynx trappings for $n1 to 1934 in the MacKenzie river area. Use the \(\log\) function in R to transform to the logarithms of the original counts. Plot the new time series.
$BR
$BR
$BBOLD Part (a)  $EBOLD
$BR
The time series exhibits a clear cyclical component. Based on the plot, make an estimate of the period of this cyclical effect, giving your answer to the nearest whole year.
$BR
\{$mp->ans_rule(7)\}
$BR
$BR
$BBOLD Part (b) $EBOLD
Use the R command \({spec.pgram}\) to compute and plot the raw periodogram of the time series. At which frequency does the raw periodogram attain its maximum value? Give your answer to three decimal places. Note that the command \({which.max }\) may help here.
$BR
\{ans_rule(7)\}
$BR
$BR
$BBOLD Part (c) $EBOLD
To improve the estimate of the underlying spectrum, we can smooth the raw periodogram. The option \({spans}\) applies one or more (Daniell) smoother(s) to the periodogram. Smooth your periodogram by setting \({spans=c($n,$n2)}\), which applies two filters in turn. At which frequency does the smoothed periodogram attain its maximum value? Give your answer to three decimal places.
$BR
\{ans_rule(7)\}
$BR
$BR
$BBOLD Part (d) $EBOLD
Using your smoothed periodogram, provide an estimate of the period of the underlying cyclical component. Give your answer to two decimal places.
$BR
\{ans_rule(7)\}
$BR
$BR


END_TEXT

#########################################################
## Answers evaluation (Required)
ANS( $mp->cmp()  ); 
ANS( num_cmp($data[0], tol=> 0.01) );
ANS( num_cmp($data[1], tol=> 0.01) );
ANS( num_cmp($data[2], tol=> 0.1) );

#########################################################
## Solution (Optional but recommended)
Context()->texStrings;

BEGIN_SOLUTION
$BBOLD Part (a)  $EBOLD
$BR
The plot suggests a seasonal component of period approximately 10 years. One of 9, 10, and 11 is acceptable.
$BR
$BR
$BBOLD Part (b)  $EBOLD
$BR
As instructed, we find the raw periodogram via
\[
spec1 <- spec.pgram(loglynx).
\]
The maximum value can be found via \( max(spec1\)$\(spec)\),
and the location of the maximum at \(which.max(spec1\)$\(spec)\).
So the corresponding frequency is $BCENTER 
\(
spec1\)$\(freq[which.max(spec1\)$\(spec)] = $data[0]
\)
$ECENTER
$BR
$BBOLD Part (c)  $EBOLD
$BR
As suggested, create
\[spec2 <- spec.pgram(loglynx, spans=c($n,$n+2)) \]
This attains its maximum at frequency  $BCENTER 
\(
spec2\)$\(freq[which.max(spec2\)$\(spec)] = $data[1]
\)
$ECENTER 
$BR
$BR
$BBOLD Part (d)  $EBOLD
The estimate of the period is the reciprocal of the frequency found in (c).
$BR
END_SOLUTION

ENDDOCUMENT();
