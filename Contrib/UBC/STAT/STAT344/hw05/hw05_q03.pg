#########################################################
##KEYWORDS('Sampling theory'; 'estimating population size',
##'capture-recapture method'; 'determine an estimate of a population size using
##the capture-recapture method', 'find the standard error of the estimate', 'find
##a 95% confidence interval for the estimate based on a chi-squared test for
##independence'.) 
# DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Sample survey methods')
## DBsection('Capture-recapture method')
## Date('2015/11/22')
## Author('Nelson Chen')
## Institution('University of British Columbia')
## level('5')
## 3 Attempts. 


#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)


###Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
##warn("seed: " . $seed);

####Call R server
rserve_eval("set.seed($seed)"); ## can not combine with the rest


@dat=rserve_eval('
n2 <- sample(120:160, size=1)
x2 <- rbinom(1, size=n2, prob=0.15)
### needed for soln
p2.hat <-x2/n2
est <- 400/p2.hat
se <- 400*sqrt(p2.hat*(1-p2.hat)/n2)/(p2.hat^2)

chisqstat <- function(z) {
obs <- matrix(c(x2,n2-x2, 400-x2, z),2,2)
xpc <- ( apply(obs,1,sum) %*% t(apply(obs,2,sum)) )/sum(obs)
sum((obs-xpc)^2/xpc)}

zval <- 0:round(est+5*se)
chival <- lapply(zval,chisqstat)
z.0 <- min(zval[chival<3.84])
z.1 <- max(zval[chival<3.84])

m1<-matrix(c(x2,n2-x2,400-x2,z.1),2,2)
tem_m1<-c(m1[1,1], m1[1, 2], m1[2,1], m1[2,2])

m2<-(apply(matrix(c(x2,n2-x2,400-x2,z.1),2,2),1,sum) %*% t(apply(matrix(c(x2,n2-x2,400-x2,z.1),2,2),2,sum))) /(400+n2-x2+z.1)

tem_m2<-c(m2[1,1], m2[1, 2], m2[2,1], m2[2,2])
');


@n2=rserve_eval('
n2
');

@x2=rserve_eval('
x2
');

@p2_hat=rserve_eval('
round(p2.hat, 3)
');

@est=rserve_eval('
est <- 400/p2.hat
');

@z_0=rserve_eval('
z.0
');

@n2x2=rserve_eval('
n2-x2
');


@z_1=rserve_eval('
z.1
');

@z_1_1=rserve_eval('
z.1+1
');

@tem1_m1=rserve_eval('
tem_m1[1]
');

@tem2_m1=rserve_eval('
tem_m1[2]
');

@tem3_m1=rserve_eval('
tem_m1[3]
');

@tem4_m1=rserve_eval('
tem_m1[4]
');


@tem1_m2=rserve_eval('
round(tem_m2[1], 3)
');

@tem2_m2=rserve_eval('
round(tem_m2[2], 3)
');

@tem3_m2=rserve_eval('
round(tem_m2[3], 3)
');

@tem4_m2=rserve_eval('
round(tem_m2[4], 3)
');


#######answers_q1 and q2
@q1=rserve_eval('
round(est)
');

@q2=rserve_eval('
p_hat<-x2/n2
tem<- 400*(1/p_hat)^2*sqrt(p_hat*(1-p_hat)/n2)
round(tem)
');


#####Q3
@q3=rserve_eval('
400+n2-x2+z.0
');

@q4=rserve_eval('
400+n2-x2+z.1
');

#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT
A capture-recapture experiment designed to estimate the size of a fish
population in a lake was carried out in two phases. In the first phase, 400
fish were captured, tagged, and released. In the second phase, @n2[0]
fish were captured, of which @x2[0] were found to be tagged. Provide
answers to the following to the nearest integer.
$BR
$BR

$BBOLD (a) $EBOLD Making the necessary assumptions about independent sampling, give an estimate of the size of the fish population. \{  ans_rule(7) \} 
$BR
$BR
$BBOLD (b) $EBOLD Give a standard error for your estimate in (a). \{  ans_rule(7) \} 
$BR
$BR

$BBOLD (c) $EBOLD
Using a more accurate method than simply finding the estimate
plus/minus 1.96 SE, give a 95% confidence interval for the population size.
$BR
( \{  ans_rule(7) \}, \{  ans_rule(7) \} ) 
END_TEXT

#########################################################
## Answers evaluation (Required)
ANS( num_cmp(@q1[0], tol=> 1.101) );
ANS( num_cmp(@q2[0], tol=> 1.101) );
ANS( num_cmp(@q3[0], tol=> 1.101) );
ANS( num_cmp(@q4[0], tol=> 1.101) );

#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION
$BBOLD (a) $EBOLD
The second-phase results give an estimated proportion of
tagged fish as \( \hat{p}=@x2[0]/@n2[0]=@p2_hat[0]\). Hence we estimate that
there are \( 400/\hat{p}= @q1[0] \) fish in the lake.
$BR
$BR


$BBOLD (b) $EBOLD
We need
$BR
$BR
$BCENTER
\begin{eqnarray*}
SE\left[ 400/\hat{p}\right]  &=&400SE\left[ 1/\hat{p}\right]  \\
&\approx &400(1/\hat{p})^{2}SE\left[ \hat{p}\right]  \\
&=&400(1/\hat{p})^{2}\sqrt{\frac{\hat{p}(1-\hat{p})}{@n2[0]}} \\
&=& @q2[0],
\end{eqnarray*}
$ECENTER
$BR
$BR
where the second step arises from the delta method.
$BR
$BR

$BBOLD (c) $EBOLD
Let \(Z\) be the unobserved number of fish that are caught in
neither phase. So the two-by-two table categorizing each population member
according to both phase 1 and phase 2 capture status is a function of \(Z\). By trial-and-error we find that the chi-squared test statistic concerning independence of the row and column variables crosses the threshold from non-significance to significance at the 5% level when \(Z\) moves from @z_1[0] to @z_1_1[0]. For instance, with \(Z=@z_1[0]\) the two-by-two table would be
$BR
$BR
$BCENTER
\begin{bmatrix}
@tem1_m1[0] & @tem2_m1[0] \\
@tem3_m1[0] & @tem4_m1[0]
\end{bmatrix}
$ECENTER
$BR
$BR
which yields expected cell counts under independence of
$BR
$BR
$BCENTER
\begin{bmatrix}
@tem1_m2[0] & @tem2_m2[0] \\
@tem3_m2[0] & @tem4_m2[0]
\end{bmatrix}
$ECENTER
$BR
$BR
and the test-statistic arising from these observed and expected counts
lies just below 3.84, whereas \(Z=@z_1+1 \) puts the
test-statistic just above. Similarly, the test-statistic transitions to
rejecting the null when we move from \(Z=@z_0[0] \)  to \(Z=@z_0[0]-1\). Hence \((@z_0[0], @z_1[0])\) is a 95% confidence interval for \(Z\). Since the whole population size
is \(400+@n2x2[0]+Z\), we have (\(@q3[0], @q4[0]\)) as our desired answer.

END_SOLUTION
ENDDOCUMENT();