#########################################################
##KEYWORDS('Sampling theory'; 'two-stage cluster sampling', 'estimating the
##population mean', 'proportional allocation'; 'compute the estimate of a
##population mean from a two--stage cluster sampling scheme with proportional
##allocation and replacement at stage one', 'find the standard error of the
##estimate') 
# DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Sample survey methods')
## DBsection('Cluster sampling')
## Date('2015/11/09')
## Author('Nelson Chen')
## Institution('University of British Columbia')
## level('5')
## 3 Attempts. 


#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)


###Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
##warn("seed: " . $seed);

####Call R server
rserve_eval("set.seed($seed)"); ## can not combine with the rest


my ($remote_file_a, @problem_data_a) = rserve_eval(<<CODE);
# this is R code
x <- sample(15:100, size=1)
set.seed(13)
m <- round(exp(rnorm(50, log(5000), log(3))))
m[m<100] < - 100
tmp <- data.frame(District=1:50, Num.Residents=m)
problem_data_a<-tmp
problem_file_a <- tempfile("PopSizes", fileext = '.csv')
write.csv(problem_data_a, problem_file_a, row.names=F)
list(problem_file_a, problem_data_a)
CODE


my ($remote_file_b, @problem_data_b) = rserve_eval(<<CODE);
# this is R code
####
mdn.dstrct <- exp(rnorm(50, log(60), log(70)-log(60)))
y <- list()
for (i in 1:50) {
  y[[i]] <- round(exp(rnorm(m[i], log(mdn.dstrct[i]), log(1.8))),1)
}
set.seed(x)
dta <- matrix(NA,10,15); dst <- rep(NA,10)
for (i in 1:10) {
  dst[i] <- sample(1:50, prob=m/sum(m), size=1)
  dta[i,] <- sample(y[[dst[i]]], size=15, replace=F)
}

tmp <- data.frame(District=dst, Incomes=dta)
problem_data_b<-tmp
problem_file_b <- tempfile("IncomeData", fileext = '.csv')
write.csv(problem_data_b, problem_file_b, row.names=F)
list(problem_file_b, problem_data_b)
CODE


my $local_file_a = rserve_get_file($remote_file_a);
($local_url_a = $local_file_a) =~ s|$tempDirectory|$tempURL|;

my $local_file_b = rserve_get_file($remote_file_b);
($local_url_b = $local_file_b) =~ s|$tempDirectory|$tempURL|;


@ests=rserve_eval('
ests <- (apply(dta,1,mean)*m[dst]) / (m[dst]/sum(m))
');

@mdst=rserve_eval('
m[dst]
');

@dtamean=rserve_eval('
round(apply(dta,1,mean),2)
');


@dta_dst=rserve_eval('
round(apply(dta,1,mean)*m[dst])
');

@tem1=rserve_eval('
round(m[dst]/sum(m), 4)
');

@tem2=rserve_eval('
round(sum(m)*apply(dta,1,mean))
');

@tem3=rserve_eval('
round((mean(ests)))
');

@tem4=rserve_eval('
round(sqrt(var(ests)/10))
');

@tem5=rserve_eval('
sum(m)
');

#######answers_q1
@q1=rserve_eval('
round(mean(ests)/sum(m),1)
');

@q2=rserve_eval('
round(sqrt(var(ests)/10)/sum(m),1)
');

#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT
There are two files linked below. The first gives the number of
residents living in each of the 50 districts that comprise a city. (The
districts are just referenced by number, 1 through 50.) Interest lies in
estimating the annual income of the city's residents. A survey was conducted
by randomly selecting 10 of the districts with replacement, where on each
random draw the districts' selection probabilities were proportional to
their population sizes, these being given in \(PopSizes.csv\). Each
time a district was selected, incomes of 15 randomly selected residents were
collected. (If a district has already been selected, a "fresh" sample of 15
residents is obtained each time it is picked subsequently). The resulting
data (in units of $1000's) are provided in the second file, \(IncomeData.csv\). (Note this file has 16 columns, the first indicates which district was selected, while the remaining 15 give the incomes of those sampled.) 
$BR
$BR
$BBOLD 
LINK for PopSizes.csv (\{ htmlLink($local_url_a, "Download the csv file here") \}) 
$EBOLD
$BR
$BR
$BBOLD 
LINK for IncomeData.csv (\{ htmlLink($local_url_b, "Download the csv file here") \}) 
$EBOLD
$BR
$BR
$BBOLD (a) $EBOLD Give an estimate of the average income in this city (in units of
$1000's, to one decimal place). \{  ans_rule(7) \} 
$BR
$BR
$BBOLD (b) $EBOLD Give a standard error for your estimate (again in units of $1000's,
to one decimal place). \{  ans_rule(7) \} 

END_TEXT
#########################################################
## Answers evaluation (Required)
ANS( num_cmp(@q1[0], tol=> 0.201) );
ANS( num_cmp(@q2[0], tol=> 0.201) );

#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION
The 10 selected clusters have sizes @mdst[0], @mdst[1], @mdst[2], @mdst[3], @mdst[4], @mdst[5], @mdst[6], @mdst[7], @mdst[8], @mdst[9] and the mean incomes of the corresponding second-stage samples are @dtamean[0], @dtamean[1], @dtamean[2], @dtamean[3], @dtamean[4], @dtamean[5], @dtamean[6], @dtamean[7], @dtamean[8], @dtamean[9]. Scaling up the latter by the former gives the estimated cluster totals as @dta_dst[0], @dta_dst[1], @dta_dst[2], @dta_dst[3], @dta_dst[4], @dta_dst[5], @dta_dst[6], @dta_dst[7], @dta_dst[8], @dta_dst[9]. Now the selection probabilities 
(\(m_{i}/m_{\ast }\)) for the 10 chosen clusters are @tem1[0], @tem1[1], @tem1[2], @tem1[3], @tem1[4], @tem1[5], @tem1[6], @tem1[7], @tem1[8], @tem1[9]. Reciprocating these to get sampling weights and then applying them to the estimated cluster totals
yields the 10 "individual" estimates (of total income) as @tem2[0], @tem2[1], @tem2[2], @tem2[3], @tem2[4], @tem2[5], @tem2[6], @tem2[7], @tem2[8], @tem2[9]. Upon averaging the 10 estimates we obtain the estimate and SE of total income as @tem3[0] and @tem4[0] respectively. As a final step, knowing the total population size 
(\(m_{\ast }=\sum_{i=1}^{50}m_{i}= @tem5[0]\)), we convert these to an estimate and SE of mean
income, namely @q1[0] and @q2[0]. 
END_SOLUTION
ENDDOCUMENT();