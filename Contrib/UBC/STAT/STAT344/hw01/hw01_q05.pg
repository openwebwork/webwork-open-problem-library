#########################################################
##KEYWORDS('Sample surveys'; 'sampling for a proportion', 'sample size
##selection'; 'find a sample size when estimating a population proportion to a
##specified accuracy with information on the upper and lower bounds on the
##counts in the population with the characteristic of interest and bounds on
##the population size', 'find a sample size when estimating a population
##proportion to a specified accuracy with no prior information'. ) 
# DESCRIPTION
## DBsubject('Statistics')
## DBchapter('Sample survey methods')
## DBsection('Sampling for a proportion')
## Date('2015/08/30')
## Author('Nelson Chen')
## Institution('University of British Columbia')
## level('5')

#########################################################
DOCUMENT();
## Initializations: (Required)
loadMacros(
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "parserRadioButtons.pl",
  "MathObjects.pl",
  "parserMultiAnswer.pl",
  "RserveClient.pl",
  "answerHints.pl",
  "PGcourse.pl"
);

#########################################################
## Setup: this is where we use Perl and PG objects (Required)


###Random number generator seed based on student's login. No need to change.
Context("Numeric");
# warn("Student name: $studentName, login: $studentLogin, id: $studentID");
my $hash = crypt($studentLogin, 'a1');
# warn("crypt: $hash");
@nums = (0..9,'a'..'z','A'..'Z');
my %nums = map { $nums[$_] => $_ } 0..$#nums;
my $seed = 0;
$seed = $seed * 62 + $nums{$_} foreach split(//, substr($hash, -5, 5));
##warn("seed: " . $seed);

####Call R server
rserve_eval("set.seed($seed)"); ## can not combine with the rest


@A=rserve_eval('
A <- sample(seq(from=25, to=40, by=5), size=1)
');

@B=rserve_eval('
B <- sample(seq(from=10, to=20, by=5), size=1)
');

@AB=rserve_eval('
A - B
');

@C=rserve_eval('
C <- sample(seq(from=2000, to=2500, by=100), size=1)
');

@D=rserve_eval('
D <- sample(seq(from=800, to=1200, by=100), size=1)
');

@CD=rserve_eval('
C - D
');

@n0=rserve_eval('
n0<-((A/100)*(1-A/100)*1.96^2)/0.04^2
round(n0, 4)
');

@q1pre=rserve_eval('
round(n0*(C/(C+n0)), 4)
');

@q1=rserve_eval('
ceiling(n0*(C/(C+n0)))
');

####
@q1_tolLB=rserve_eval('
ceiling(n0*(C/(C+n0)))-1
');

@q1_tolUB=rserve_eval('
ceiling(n0*(C/(C+n0)))+1
');

@q2pre=rserve_eval('
tem<-(0.5^2*1.96^2)/0.04^2
round(tem, 4)
');

@q2=rserve_eval('
tem<-(0.5^2*1.96^2)/0.04^2
ceiling(tem)
');

@q2_tolLB=rserve_eval('
ceiling(tem)-1
');

@q2_tolUB=rserve_eval('
ceiling(tem)+1
');


$q1ans =List(Real(@q1_tolLB[0]), Real(@q1[0]), Real(@q1_tolUB));
$q2ans =List(Real(@q2_tolLB[0]), Real(@q2[0]), Real(@q2_tolUB));

#########################################################
## Main Text: where all text goes (Required)
Context()->texStrings;
BEGIN_TEXT
Two wildlife biologists are planning a study to estimate the proportion
of Roosevelt elk in British Columbia that are infected with brucella (a
bacterial pathogen). They have come up with a nifty scheme to obtain
blood samples from a simple random sample of animals in the target
population. The two agree in wanting an estimate of the percent infected that is accurate to within plus or minus four percentage points
(or less), nineteen times out of twenty. The first biologist, Amy, is wedded to the notion that the sample size determination should incorporate
generally accepted belief in the research community. In particular, it
is believed that somewhere between @AB[0]% and @A[0]% of this elk population are infected. And it is believed that the size of this population
is between @CD[0] and @C[0]. The second biologist, Stan, is wedded to the
notion that the present study should stand alone,without drawing
upon any of the generally accepted wisdom in the research community.
That is, he wants to proceed as he would if nothing at all was known
about this population in advance of this study.
$BR
$BR
$BBOLD(a) $EBOLD What sample size should Amy recommend for this study? 
\{  ans_rule(7) \} 
$BR
$BR
$BBOLD(b) $EBOLD What sample size should Stan recommend for this study? 
\{  ans_rule(7) \} 
$BR
NOTES: Give your answers as integers. You are not being asked
to take sides here, since it is really impossible to say which of Amy
and Stan is right or wrong. It is really on open area for discussion
- to what extent should current belief about a topic should play a
strong role in planning the next study concerning this topic?

END_TEXT
#########################################################
## Answers evaluation (Required)

ANS($q1ans->cmp(list_checker => sub {
   my ($correct, $student, $ansHash) = @_;
   my $score = 0;
   my @errors; # stores error messages
   if (scalar(@{$student} == 1)) {
      my $answer = ${$student}[0];

      # iterate through correct values and compare them to
      # the student's answer
      foreach my $value (@{$correct}) {
         # this uses the currently active tolerance value 
         # (e.g., as set for the context or the specific Real MathObject)
         if (($value <=> $answer) == 0) {
            # WebWork interprets "score" as the number of correct
            # values in the student's answer. In this case, getting
            # one value correct should be treated as getting all of
            # them correct:
            $score = scalar(@{$correct});
            last;
         }
      }
      # if we get to here and the score is still 0, the
      # student's answer didn't match any of the correct values
      if ($score == 0 && ! $ansHash->{isPreview}) {
         push @errors, "Not correct";
      }
   }
   elsif (! $ansHash->{isPreview}) {
      push @errors, "You have to enter a single number";
   }
   return ($score, @errors);
}));


ANS($q2ans->cmp(list_checker => sub {
   my ($correct, $student, $ansHash) = @_;
   my $score = 0;
   my @errors; # stores error messages
   if (scalar(@{$student} == 1)) {
      my $answer = ${$student}[0];

      # iterate through correct values and compare them to
      # the student's answer
      foreach my $value (@{$correct}) {
         # this uses the currently active tolerance value 
         # (e.g., as set for the context or the specific Real MathObject)
         if (($value <=> $answer) == 0) {
            # WebWork interprets "score" as the number of correct
            # values in the student's answer. In this case, getting
            # one value correct should be treated as getting all of
            # them correct:
            $score = scalar(@{$correct});
            last;
         }
      }
      # if we get to here and the score is still 0, the
      # student's answer didn't match any of the correct values
      if ($score == 0 && ! $ansHash->{isPreview}) {
         push @errors, "Not correct";
      }
   }
   elsif (! $ansHash->{isPreview}) {
      push @errors, "You have to enter a single number";
   }
   return ($score, @errors);
}));

#########################################################
## Solution (Optional but recommended)
Context()->texStrings;
BEGIN_SOLUTION
$BBOLD (a) $EBOLD For Amy, the worst-case (that with the widest confidence interval) informed guess is @A[0]% infected. So if she assumed
an infinite population size she would recommend a sample size of \(n_0\) where 
$BR
$BR
$BCENTER
\(
n_0=\frac{ (@A[0]/100) \times (1-@A[0]/100) \times 1.96^2}{0.04^2}=@n0[0]
\)
$ECENTER
$BR
$BR
But in fact she is assuming the population size is no more than @C[0]
(again this is the worst-case for confidence interval width, a size
of @CD[0] is the best-case). So her proposed sample size is
$BR
$BR
$BCENTER
\(
n_0(\frac{@C[0]}{@C[0]+n_0})=@q1pre[0]
\)
$ECENTER
$BR
and suggests sampling @q1[0] elks. 
$BR
$BR

$BBOLD (b) $EBOLD Stan, who is not willing to use the background information,
has to go with the worst-cases of 50% infected and an infinite
population size. So he goes with
$BR
$BR
$BCENTER
\(
\frac{0.5^2 \times 1.96^2}{0.04^2}=@q2pre[0]
\)
$ECENTER
$BR
and proposes a sample size of @q2[0]. 


END_SOLUTION
ENDDOCUMENT();