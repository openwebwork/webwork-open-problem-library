##DESCRIPTION
## 
## Created by the UBC Faculty of Applied Science.  
## Project led by Agnes d'Entremont, Jonathan Verrett, and Negar M. Harandi. 
##
## Contact: agnes.dentremont@mech.ubc.ca
##
## This work is licensed under the Creative Commons
## Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
## <https://creativecommons.org/licenses/by-sa/4.0/>
##
## We gratefully acknowledge the financial support for this 
## project provided by UBC Vancouver students via the Teaching
## and Learning Enhancement Fund. We also gratefully acknowledge
## additional funding support from BCcampus, the UBC Department of
## Mechanical Engineering, and the UBC Applied Science Deanâ€™s Office.  
##
## This work was completed on the traditional, ancestral, and unceded
## territory of the Musqueam people. 
##
##ENDDESCRIPTION

## DBsubject(Engineering Electric Circuit Analysis)
## DBchapter()
## DBsection()
## Institution('University of British Columbia')
## Author(UBC Engineering)
## Date()
## Level()
## KEYWORDS('Magnitude Plot', 'Transfer Function')
## RESOURCES('UBC-CIR-18-028.png')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
## Beginner


DOCUMENT();

#image scale
$imgScale = .2;

#image aspect ratio
$width = $imgScale*2819;
$height = $imgScale*1738;


loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"PGauxiliaryFunctions.pl",
	"niceTables.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");
Context()->variables->add(s=>"Real");
Context()->variables->remove("x");

#given
$k_1 = random(50, 100, 25);
$k_2 = $k_1-40;
$w_1 = 15;
$w_2 = 150;
$w_3 = random(200, 250, 10);
$w_4 = $w_3*10**($k_2/20);
$w_4disp = sprintf("%d",$w_4);

#computation 
$transfer_function = Formula("$k_1*(s+$w_2)^2/((s+$w_1)^2*(s+$w_3))");

#set tolerance
Context()->flags->set(
tolerance=>.02,
);

##############################################################
#
#  Text 
#
#

BEGIN_PGML

Find the transfer function of the given bode plot if [`K = [$k_2]`], [`\omega_1 = [$w_1]`], [`\omega_2 = [$w_2]`], [`\omega_3 = [$w_3]`], and [`\omega_4 = [$w_4disp]`]. All units are in rad/s. Note: The horizental axis is not linear.

[@ image("UBC-CIR-18-028.png", width=>[$width], height=>[$height]) @]*

[`H(s)=`] [____________________]{"$transfer_function"}

END_PGML

##############################################################

ENDDOCUMENT();